{"root":"0:0:1967","crate_version":"0.1.45","includes_private":true,"index":{"0:267:1692":{"id":"0:267:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and\n`other`. The result is always non-negative.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,16],"end":[352,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:233:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:688:23694":{"id":"5:688:23694","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:1697":{"id":"0:400:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:1704":{"id":"0:318:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u128"},"items":["0:408:1661","0:409:1673","0:410:1683","0:411:1692","0:412:1726","0:413:1697","0:414:1704","0:415:1728","0:416:1732","0:417:1736","0:418:1740","0:419:1751"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:105:1807":{"id":"0:105:1807","crate_id":0,"name":"n","span":{"filename":"src/lib.rs","begin":[1062,4],"end":[1062,8]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:36:2144":{"id":"0:36:2144","crate_id":0,"name":"unsigned_roots","span":{"filename":"src/roots.rs","begin":[202,0],"end":[383,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"macro":"macro_rules! unsigned_roots {\n    ($T:ident) => { ... };\n}"}},"1:12119:33627":{"id":"1:12119:33627","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:1732":{"id":"0:320:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:1736":{"id":"0:273:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:1736":{"id":"0:257:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:1697":{"id":"0:317:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and\n`other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:1640":{"id":"0:128:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[166,0],"end":[166,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:1751":{"id":"0:275:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5399:34286":{"id":"5:5399:34286","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2875","`String`":"5:7241:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2875","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[168,0],"end":[168,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i64"},"items":["0:134:1641","0:135:1642","0:136:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:206:1640":{"id":"0:206:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[390,0],"end":[390,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:1704":{"id":"0:72:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[142,4],"end":[144,5]},"visibility":"default","docs":"Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) together.\n\nPotentially more efficient than calling `gcd` and `lcm`\nindividually for identical inputs.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(10.gcd_lcm(&4), (2, 20));\nassert_eq!(8.gcd_lcm(&9), (1, 72));\n~~~","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:1728":{"id":"0:255:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:359:1692":{"id":"0:359:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and `other`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:1683":{"id":"0:298:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341:1784":{"id":"0:341:1784","crate_id":0,"name":"prev_multiple_of","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Rounds down to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:2411-0:223:1719":{"id":"a:1:8250:2411-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:2411","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:2411","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:325:1784":{"id":"0:325:1784","crate_id":0,"name":"prev_multiple_of","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Rounds down to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:1641":{"id":"0:122:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[165,0],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:1912":{"id":"0:114:1912","crate_id":0,"name":"multiply_and_divide","span":{"filename":"src/lib.rs","begin":[1124,0],"end":[1128,1]},"visibility":"crate","docs":"Calculate r * a / b, avoiding overflows and fractions.\n\nAssumes that b divides r * a evenly.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["r",{"generic":"T"}],["a",{"generic":"T"}],["b",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12020:33609":{"id":"1:12020:33609","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12063:26286":{"id":"1:12063:26286","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:11535:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[386,0],"end":[386,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u16"},"items":["0:159:1641","0:163:1642","0:167:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:396:1673":{"id":"0:396:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Unsigned integer modulo operation. Returns the same result as `rem` (`%`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:1726":{"id":"0:373:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413:1697":{"id":"0:413:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"isize"},"items":["0:311:1661","0:312:1673","0:313:1686","0:314:1683","0:315:1692","0:316:1726","0:317:1697","0:318:1704","0:319:1728","0:320:1732","0:321:1736","0:322:1740","0:323:1751","0:324:1772","0:325:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:176:1642":{"id":"0:176:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[387,0],"end":[387,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408:1661":{"id":"0:408:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Unsigned integer division. Returns the same result as `div` (`/`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12025:26972":{"id":"1:12025:26972","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12103:33622":{"id":"1:12103:33622","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:1784":{"id":"0:83:1784","crate_id":0,"name":"prev_multiple_of","span":{"filename":"src/lib.rs","begin":[338,4],"end":[343,5]},"visibility":"default","docs":"Rounds down to nearest multiple of argument.\n\n# Notes\n\nFor signed types, `a.prev_multiple_of(b) = a.next_multiple_of(b.neg())`.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(( 16).prev_multiple_of(& 8),  16);\nassert_eq!(( 23).prev_multiple_of(& 8),  16);\nassert_eq!(( 16).prev_multiple_of(&-8),  16);\nassert_eq!(( 23).prev_multiple_of(&-8),  24);\nassert_eq!((-16).prev_multiple_of(& 8), -16);\nassert_eq!((-23).prev_multiple_of(& 8), -24);\nassert_eq!((-16).prev_multiple_of(&-8), -16);\nassert_eq!((-23).prev_multiple_of(&-8), -16);\n~~~","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1967":{"id":"0:0:1967","crate_id":0,"name":"num_integer","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1386,1]},"visibility":"public","docs":"Integer trait and functions.\n\n## Compatibility\n\nThe `num-integer` crate is tested for rustc 1.8 and greater.","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/num-integer/0.1\")]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:12:1638","0:42:1643","0:37-0:18:1639","0:39-0:24:1640","0:40-0:26:1641","0:41-0:22:1642","0:62-0:49:1644","0:64-0:60:1645","0:65-0:58:1646","0:66:1647","0:223:1719","0:84:1751","0:86:1661","0:88:1673","0:90:1686","0:92:1683","0:94:1692","0:96:1697","0:98:1704","0:100:1801","0:101:1876","0:102:1894","0:114:1912","0:116:1921","0:118:1923"],"is_stripped":false}}},"1:12116:31424":{"id":"1:12116:31424","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:1726":{"id":"0:284:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:223:1719":{"id":"b:5:684-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["5:686:4869","5:687:23693","5:688:23694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[166,0],"end":[166,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i16"},"items":["0:126:1641","0:127:1642","0:128:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[171,0],"end":[171,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"isize"},"items":["0:142:1641","0:143:1642","0:144:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139:1642":{"id":"0:139:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[170,0],"end":[170,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41-0:22:1642":{"id":"0:41-0:22:1642","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[31,32],"end":[31,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"roots::sqrt","name":"sqrt","id":"0:22:1642","glob":false}}},"0:356:1661":{"id":"0:356:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Unsigned integer division. Returns the same result as `div` (`/`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290:1740":{"id":"0:290:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:2411-0:102:1894":{"id":"a:1:8250:2411-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:2411","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:2411","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:353:1740":{"id":"0:353:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:344:1673":{"id":"0:344:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Unsigned integer modulo operation. Returns the same result as `rem` (`%`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:1704":{"id":"0:334:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39-0:24:1640":{"id":"0:39-0:24:1640","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[31,16],"end":[31,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"roots::cbrt","name":"cbrt","id":"0:24:1640","glob":false}}},"0:140:1640":{"id":"0:140:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[170,0],"end":[170,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372:1692":{"id":"0:372:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and `other`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3321:1491":{"id":"1:3321:1491","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39341:5280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12019:31288":{"id":"1:12019:31288","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:11279:7558"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2551:128":{"id":"1:2551:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"1:12072:33614":{"id":"1:12072:33614","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:11712:7551","str::split":"1:12060:30446","prim@char":"4:11888:419","str::split_terminator":"1:12069:33613"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:43425:5500","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:1772":{"id":"0:340:1772","crate_id":0,"name":"next_multiple_of","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Rounds up to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12099:33620":{"id":"1:12099:33620","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:34285":{"id":"5:5398:34285","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:347:1726":{"id":"0:347:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352:1736":{"id":"0:352:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12131:31291":{"id":"1:12131:31291","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:39552:24531","Self::is_ascii":"1:12130:30802"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:39552:24531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:1751":{"id":"0:259:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:4869":{"id":"5:686:4869","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:261:1784":{"id":"0:261:1784","crate_id":0,"name":"prev_multiple_of","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Rounds down to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42:1643":{"id":"0:42:1643","crate_id":0,"name":"average","span":{"filename":"src/average.rs","begin":[1,0],"end":[78,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:49:1644","0:58:1646","0:60:1645"],"is_stripped":false}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[170,0],"end":[170,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i128"},"items":["0:138:1641","0:139:1642","0:140:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:410:1683":{"id":"0:410:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:350:1728":{"id":"0:350:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2544:694":{"id":"1:2544:694","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:2412-0:102:1894":{"id":"a:1:8249:2412-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:399:1726":{"id":"0:399:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404:1736":{"id":"0:404:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7209:2510":{"id":"1:7209:2510","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"1:12133:30799":{"id":"1:12133:30799","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377:1732":{"id":"0:377:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12060:30446":{"id":"1:12060:30446","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:11712:7551","`DoubleEndedIterator`":"1:7240:121","prim@char":"4:11888:419","str::split_whitespace":"1:12038:26291","str::rsplit":"1:12066:31418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:43357:5060","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:223:1719":{"id":"a:1:2684:220-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12137:7398":{"id":"1:12137:7398","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:4536:7398"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:43665:5160","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:1692":{"id":"0:331:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and\n`other`. The result is always non-negative.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365:1736":{"id":"0:365:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:383:1673":{"id":"0:383:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Unsigned integer modulo operation. Returns the same result as `rem` (`%`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:1640":{"id":"0:21:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":"Returns the truncated principal cube root of an integer --\n`if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`\n\nThis is solving for `r` in `r³ = x`, rounding toward zero.\nIf `x` is positive, the result will satisfy `r³ ≤ x < (r+1)³`.\nIf `x` is negative, then `(r-1)³ < x ≤ r³`.\n\n# Examples\n\n```\nuse num_integer::Roots;\n\nlet x: i32 = 1234;\nassert_eq!((x * x * x).cbrt(), x);\nassert_eq!((x * x * x + 1).cbrt(), x);\nassert_eq!((x * x * x - 1).cbrt(), x - 1);\n\nassert_eq!((-(x * x * x)).cbrt(), -x);\nassert_eq!((-(x * x * x + 1)).cbrt(), -x);\nassert_eq!((-(x * x * x - 1)).cbrt(), -(x - 1));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384:1683":{"id":"0:384:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i8"},"items":["0:247:1661","0:248:1673","0:249:1686","0:250:1683","0:251:1692","0:252:1726","0:253:1697","0:254:1704","0:255:1728","0:256:1732","0:257:1736","0:258:1740","0:259:1751","0:260:1772","0:261:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:136:1640":{"id":"0:136:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[168,0],"end":[168,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296:1673":{"id":"0:296:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Floored integer modulo","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:1732":{"id":"0:288:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[165,0],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i8"},"items":["0:122:1641","0:123:1642","0:124:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[385,0],"end":[385,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u8"},"items":["0:146:1641","0:150:1642","0:154:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:102:1894":{"id":"b:1:2538-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:319:1728":{"id":"0:319:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:1728":{"id":"0:363:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u8"},"items":["0:343:1661","0:344:1673","0:345:1683","0:346:1692","0:347:1726","0:348:1697","0:349:1704","0:350:1728","0:351:1732","0:352:1736","0:353:1740","0:354:1751"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:12:1638":{"id":"0:12:1638","crate_id":0,"name":"roots","span":{"filename":"src/roots.rs","begin":[1,0],"end":[391,23]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:18:1639","0:22:1642","0:24:1640","0:26:1641","0:28:2131","0:29:2136","0:32:2140","0:34:2141","0:36:2144"],"is_stripped":false}}},"0:180:1640":{"id":"0:180:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[387,0],"end":[387,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:361:1697":{"id":"0:361:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:1911":{"id":"0:112:1911","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1101,4],"end":[1101,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:360:1726":{"id":"0:360:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:1642":{"id":"0:123:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[165,0],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:1704":{"id":"0:254:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134:1641":{"id":"0:134:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[168,0],"end":[168,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390:1732":{"id":"0:390:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:1751":{"id":"0:84:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[361,0],"end":[363,1]},"visibility":"public","docs":"Simultaneous integer division and modulus","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"tuple":[{"generic":"T"},{"generic":"T"}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291:1751":{"id":"0:291:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:1704":{"id":"0:375:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:380:1751":{"id":"0:380:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330:1683":{"id":"0:330:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:1876":{"id":"0:101:1876","crate_id":0,"name":"impl_integer_for_usize","span":{"filename":"src/lib.rs","begin":[833,0],"end":[1049,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"macro":"macro_rules! impl_integer_for_usize {\n    ($T:ty, $test_mod:ident) => { ... };\n}"}},"0:124:1640":{"id":"0:124:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[165,0],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:1642":{"id":"0:189:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[388,0],"end":[388,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:382:1661":{"id":"0:382:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Unsigned integer division. Returns the same result as `div` (`/`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2253:23689":{"id":"1:2253:23689","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:1641":{"id":"0:138:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[170,0],"end":[170,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1704":{"id":"0:286:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:1683":{"id":"0:69:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[96,4],"end":[103,5]},"visibility":"default","docs":"Ceiled integer division.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(( 8).div_ceil( &3),  3);\nassert_eq!(( 8).div_ceil(&-3), -2);\nassert_eq!((-8).div_ceil( &3), -2);\nassert_eq!((-8).div_ceil(&-3),  3);\n\nassert_eq!(( 1).div_ceil( &2), 1);\nassert_eq!(( 1).div_ceil(&-2), 0);\nassert_eq!((-1).div_ceil( &2), 0);\nassert_eq!((-1).div_ceil(&-2), 1);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:1683":{"id":"0:250:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90:1686":{"id":"0:90:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":"Simultaneous floored integer division and modulus","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"tuple":[{"generic":"T"},{"generic":"T"}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12042:26296":{"id":"1:12042:26296","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:43649:5234","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:687:23693":{"id":"5:687:23693","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:327:1661":{"id":"0:327:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Floored integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:223:1719":{"id":"b:1:3319-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:416:1732":{"id":"0:416:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12138:33632":{"id":"1:12138:33632","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:4533:33632"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:43674:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40-0:26:1641":{"id":"0:40-0:26:1641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[31,22],"end":[31,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"roots::nth_root","name":"nth_root","id":"0:26:1641","glob":false}}},"0:308:1772":{"id":"0:308:1772","crate_id":0,"name":"next_multiple_of","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Rounds up to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88:1673":{"id":"0:88:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[371,0],"end":[373,1]},"visibility":"public","docs":"Floored integer modulus","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12066:31418":{"id":"1:12066:31418","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:11712:7551","`DoubleEndedIterator`":"1:7240:121","prim@char":"4:11888:419","str::split":"1:12060:30446"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:43375:5217","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:1692":{"id":"0:385:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and `other`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:1751":{"id":"0:367:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:374:1697":{"id":"0:374:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:1923":{"id":"0:118:1923","crate_id":0,"name":"multinomial","span":{"filename":"src/lib.rs","begin":[1170,0],"end":[1181,1]},"visibility":"public","docs":"Calculate the multinomial coefficient.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"1:2753:1634","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282:1683":{"id":"0:282:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:369:1661":{"id":"0:369:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Unsigned integer division. Returns the same result as `div` (`/`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i16"},"items":["0:263:1661","0:264:1673","0:265:1686","0:266:1683","0:267:1692","0:268:1726","0:269:1697","0:270:1704","0:271:1728","0:272:1732","0:273:1736","0:274:1740","0:275:1751","0:276:1772","0:277:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:1692":{"id":"0:94:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[388,0],"end":[390,1]},"visibility":"public","docs":"Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always non-negative.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12135:33631":{"id":"1:12135:33631","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:4535:33631"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:43656:5418","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:415:1728":{"id":"0:415:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12049:30955":{"id":"1:12049:30955","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:102:1894":{"id":"b:1:2553-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12090:33617":{"id":"1:12090:33617","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:11712:7551","`DoubleEndedIterator`":"1:7240:121","prim@char":"4:11888:419","str::matches":"1:12087:2237"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:43579:5504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:2136":{"id":"0:29:2136","crate_id":0,"name":"fixpoint","span":{"filename":"src/roots.rs","begin":[174,0],"end":[189,1]},"visibility":{"restricted":{"parent":"0:12:1638","path":"::roots"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["f",{"generic":"F"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2138","args":{"parenthesized":{"inputs":[{"generic":"T"}],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:1726":{"id":"0:75:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[202,4],"end":[207,5]},"visibility":"default","docs":"Greatest common divisor, least common multiple, and Bézout coefficients.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Signed","id":"20:627:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:1732":{"id":"0:256:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276:1772":{"id":"0:276:1772","crate_id":0,"name":"next_multiple_of","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Rounds up to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:1642":{"id":"0:215:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[391,0],"end":[391,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[390,0],"end":[390,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u128"},"items":["0:198:1641","0:202:1642","0:206:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:223:1719":{"id":"b:1:2548-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:287:1728":{"id":"0:287:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163:1642":{"id":"0:163:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[386,0],"end":[386,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:1646":{"id":"0:56:1646","crate_id":0,"name":"average_floor","span":{"filename":"src/average.rs","begin":[56,4],"end":[58,5]},"visibility":"default","docs":"Returns the floor value of the average of `self` and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"I"}}}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:395:1661":{"id":"0:395:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Unsigned integer division. Returns the same result as `div` (`/`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:1751":{"id":"0:307:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:1661":{"id":"0:67:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[54,4],"end":[54,46]},"visibility":"default","docs":"Floored integer division.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert!(( 8).div_floor(& 3) ==  2);\nassert!(( 8).div_floor(&-3) == -3);\nassert!((-8).div_floor(& 3) == -3);\nassert!((-8).div_floor(&-3) ==  2);\n\nassert!(( 1).div_floor(& 2) ==  0);\nassert!(( 1).div_floor(&-2) == -1);\nassert!((-1).div_floor(& 2) == -1);\nassert!((-1).div_floor(&-2) ==  0);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:419:1751":{"id":"0:419:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:268:1726":{"id":"0:268:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:668":{"id":"0:230:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[352,9],"end":[352,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/average.rs","begin":[45,0],"end":[65,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shr","id":"1:2833:2163","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"I"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"I"}}},"bounds":[{"trait_bound":{"trait":{"name":"BitAnd","id":"1:2812:2160","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"I"}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"I"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BitOr","id":"1:2817:2161","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"I"}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"I"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BitXor","id":"1:2822:2162","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"I"}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"I"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}]}}]},"provided_trait_methods":[],"trait":{"name":"Average","id":"0:49:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"I"},"items":["0:56:1646","0:57:1645"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2684:220-0:102:1894":{"id":"a:1:2684:220-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:379:1740":{"id":"0:379:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:223:1719":{"id":"b:1:2248-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:2195"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12081:33615":{"id":"1:12081:33615","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12052:2541":{"id":"1:12052:2541","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:41396:179","prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346:1692":{"id":"0:346:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and `other`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:1661":{"id":"0:247:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Floored integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:1736":{"id":"0:391:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1772":{"id":"0:82:1772","crate_id":0,"name":"next_multiple_of","span":{"filename":"src/lib.rs","begin":[305,4],"end":[316,5]},"visibility":"default","docs":"Rounds up to nearest multiple of argument.\n\n# Notes\n\nFor signed types, `a.next_multiple_of(b) = a.prev_multiple_of(b.neg())`.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(( 16).next_multiple_of(& 8),  16);\nassert_eq!(( 23).next_multiple_of(& 8),  24);\nassert_eq!(( 16).next_multiple_of(&-8),  16);\nassert_eq!(( 23).next_multiple_of(&-8),  16);\nassert_eq!((-16).next_multiple_of(& 8), -16);\nassert_eq!((-23).next_multiple_of(& 8), -16);\nassert_eq!((-16).next_multiple_of(&-8), -16);\nassert_eq!((-23).next_multiple_of(&-8), -24);\n~~~","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:393:1751":{"id":"0:393:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:1697":{"id":"0:301:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and\n`other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:1683":{"id":"0:371:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335:1728":{"id":"0:335:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:1740":{"id":"0:338:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,9],"end":[352,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:230:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:252:1726":{"id":"0:252:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:1686":{"id":"0:249:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Calculates `div_floor` and `mod_floor` simultaneously","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:1692":{"id":"0:283:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and\n`other`. The result is always non-negative.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:1647":{"id":"0:66:1647","crate_id":0,"name":"Integer","span":{"filename":"src/lib.rs","begin":[37,0],"end":[344,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:67:1661","0:68:1673","0:69:1683","0:70:1692","0:71:1697","0:72:1704","0:73:1718","0:75:1726","0:76:1728","0:77:1732","0:78:1736","0:79:1740","0:80:1751","0:81:1686","0:82:1772","0:83:1784"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Num","id":"20:652:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2354:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Ord","id":"1:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:381","0:368","0:310","0:246","0:407","0:278","0:394","0:262","0:355","0:294","0:342","0:326"]}}},"0:271:1728":{"id":"0:271:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:1683":{"id":"0:92:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[381,0],"end":[383,1]},"visibility":"public","docs":"Ceiled integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:102:1894":{"id":"b:1:2251-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:23689"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:401:1704":{"id":"0:401:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60:1645":{"id":"0:60:1645","crate_id":0,"name":"average_ceil","span":{"filename":"src/average.rs","begin":[76,0],"end":[78,1]},"visibility":"public","docs":"Returns the ceiling value of the average of `x` and `y` --\nsee [Average::average_ceil](trait.Average.html#tymethod.average_ceil).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Average","id":"0:49:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12040:7170":{"id":"1:12040:7170","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:43611:5062","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12110:33626":{"id":"1:12110:33626","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:1692":{"id":"0:251:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and\n`other`. The result is always non-negative.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:1751":{"id":"0:339:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:306:1740":{"id":"0:306:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:2440-0:102:1894":{"id":"a:1:2741:2440-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193:1640":{"id":"0:193:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[388,0],"end":[388,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1640":{"id":"0:154:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[385,0],"end":[385,19]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12125:33629":{"id":"1:12125:33629","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:1751":{"id":"0:406:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:1726":{"id":"0:412:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:1732":{"id":"0:351:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:1640":{"id":"0:219:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[391,0],"end":[391,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272:1732":{"id":"0:272:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12069:33613":{"id":"1:12069:33613","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:11712:7551","str::split":"1:12060:30446","prim@char":"4:11888:419","`DoubleEndedIterator`":"1:7240:121","str::rsplit_terminator":"1:12072:33614"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:43407:5499","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12096:33619":{"id":"1:12096:33619","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:11712:7551","`DoubleEndedIterator`":"1:7240:121","prim@char":"4:11888:419","str::match_indices":"1:12093:33618"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:43525:5502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:357:1673":{"id":"0:357:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Unsigned integer modulo operation. Returns the same result as `rem` (`%`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:1697":{"id":"0:269:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and\n`other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321:1736":{"id":"0:321:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305:1736":{"id":"0:305:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:1751":{"id":"0:323:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349:1704":{"id":"0:349:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:953":{"id":"0:113:953","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1103,4],"end":[1118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12034:31409":{"id":"1:12034:31409","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:12033:31408"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264:1673":{"id":"0:264:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Floored integer modulo","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2141":{"id":"0:34:2141","crate_id":0,"name":"log2","span":{"filename":"src/roots.rs","begin":[197,0],"end":[200,1]},"visibility":{"restricted":{"parent":"0:12:1638","path":"::roots"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"PrimInt","id":"20:352:2076","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u64"},"items":["0:382:1661","0:383:1673","0:384:1683","0:385:1692","0:386:1726","0:387:1697","0:388:1704","0:389:1728","0:390:1732","0:391:1736","0:392:1740","0:393:1751"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12107:33625":{"id":"1:12107:33625","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:11737:7556","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5383:34282":{"id":"5:5383:34282","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2875","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2875","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:65-0:58:1646":{"id":"0:65-0:58:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[35,32],"end":[35,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"average::average_floor","name":"average_floor","id":"0:58:1646","glob":false}}},"0:378:1736":{"id":"0:378:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1645":{"id":"0:50:1645","crate_id":0,"name":"average_ceil","span":{"filename":"src/average.rs","begin":[23,4],"end":[23,49]},"visibility":"default","docs":"Returns the ceiling value of the average of `self` and `other`.\n-- `⌈(self + other)/2⌉`\n\n# Examples\n\n```\nuse num_integer::Average;\n\nassert_eq!(( 3).average_ceil(&10),  7);\nassert_eq!((-2).average_ceil(&-5), -3);\nassert_eq!(( 4).average_ceil(& 4),  4);\n\nassert_eq!(u8::max_value().average_ceil(&2), 129);\nassert_eq!(i8::min_value().average_ceil(&-1), -64);\nassert_eq!(i8::min_value().average_ceil(&i8::max_value()), 0);\n```\n","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:293:1784":{"id":"0:293:1784","crate_id":0,"name":"prev_multiple_of","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Rounds down to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:1718":{"id":"0:73:1718","crate_id":0,"name":"extended_gcd","span":{"filename":"src/lib.rs","begin":[165,4],"end":[198,5]},"visibility":"default","docs":"Greatest common divisor and Bézout coefficients.\n\n# Examples\n\n~~~\n# extern crate num_integer;\n# extern crate num_traits;\n# fn main() {\n# use num_integer::{ExtendedGcd, Integer};\n# use num_traits::NumAssign;\nfn check<A: Copy + Integer + NumAssign>(a: A, b: A) -> bool {\n    let ExtendedGcd { gcd, x, y, .. } = a.extended_gcd(&b);\n    gcd == x * a + y * b\n}\nassert!(check(10isize, 4isize));\nassert!(check(8isize,  9isize));\n# }\n~~~","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:1772":{"id":"0:260:1772","crate_id":0,"name":"next_multiple_of","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Rounds up to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:1784":{"id":"0:277:1784","crate_id":0,"name":"prev_multiple_of","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Rounds down to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:1673":{"id":"0:370:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Unsigned integer modulo operation. Returns the same result as `rem` (`%`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:1640":{"id":"0:144:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[171,0],"end":[171,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:411:1692":{"id":"0:411:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and `other`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:1686":{"id":"0:281:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Calculates `div_floor` and `mod_floor` simultaneously","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:1641":{"id":"0:172:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[387,0],"end":[387,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:1740":{"id":"0:274:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:1686":{"id":"0:265:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Calculates `div_floor` and `mod_floor` simultaneously","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:1728":{"id":"0:303:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:223:1719":{"id":"a:1:2701:228-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:130:1641":{"id":"0:130:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[167,0],"end":[167,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:1751":{"id":"0:80:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[262,4],"end":[262,52]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(( 8).div_rem( &3), ( 2,  2));\nassert_eq!(( 8).div_rem(&-3), (-2,  2));\nassert_eq!((-8).div_rem( &3), (-2, -2));\nassert_eq!((-8).div_rem(&-3), ( 2, -2));\n\nassert_eq!(( 1).div_rem( &2), ( 0,  1));\nassert_eq!(( 1).div_rem(&-2), ( 0,  1));\nassert_eq!((-1).div_rem( &2), ( 0, -1));\nassert_eq!((-1).div_rem(&-2), ( 0, -1));\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:100:1801":{"id":"0:100:1801","crate_id":0,"name":"impl_integer_for_isize","span":{"filename":"src/lib.rs","begin":[404,0],"end":[823,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"macro":"macro_rules! impl_integer_for_isize {\n    ($T:ty, $test_mod:ident) => { ... };\n}"}},"0:102:1894":{"id":"0:102:1894","crate_id":0,"name":"IterBinomial","span":{"filename":"src/lib.rs","begin":[1060,0],"end":[1064,1]},"visibility":"public","docs":"An iterator over binomial coefficients.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:104:1861","0:105:1807","0:106:1895"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:107","a:1:2701:228-0:102:1894","a:1:8249:2412-0:102:1894","a:1:8250:2411-0:102:1894","a:1:2684:220-0:102:1894","a:1:2741:2440-0:102:1894","b:1:2542-0:102:1894","b:1:2248-0:102:1894","b:1:2553-0:102:1894","b:1:2251-0:102:1894","b:1:7206-0:102:1894","b:1:2538-0:102:1894","b:1:3319-0:102:1894","b:1:2548-0:102:1894","0:110"]}}},"1:12075:31420":{"id":"1:12075:31420","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551","str::rsplitn":"1:12078:31422"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:43461:5219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12101:33621":{"id":"1:12101:33621","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5390:34284":{"id":"5:5390:34284","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:414:1704":{"id":"0:414:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:1639":{"id":"0:18:1639","crate_id":0,"name":"Roots","span":{"filename":"src/roots.rs","begin":[9,0],"end":[111,1]},"visibility":"public","docs":"Provides methods to compute an integer's square root, cube root,\nand arbitrary `n`th root.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:19:1641","0:20:1642","0:21:1640"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:184","0:121","0:210","0:158","0:171","0:141","0:137","0:129","0:125","0:133","0:145","0:197"]}}},"0:64-0:60:1645":{"id":"0:64-0:60:1645","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[35,18],"end":[35,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"average::average_ceil","name":"average_ceil","id":"0:60:1645","glob":false}}},"1:12128:33630":{"id":"1:12128:33630","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:11673:127","`FromStr`":"1:11672:7221"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:11672:7221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:11672:7221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12041:33612":{"id":"1:12041:33612","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:43621:5505","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1704":{"id":"0:98:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[400,0],"end":[402,1]},"visibility":"public","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"tuple":[{"generic":"T"},{"generic":"T"}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,29],"end":[352,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12014:33607":{"id":"1:12014:33607","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[388,0],"end":[388,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u64"},"items":["0:185:1641","0:189:1642","0:193:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12027:26973":{"id":"1:12027:26973","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:362:1704":{"id":"0:362:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312:1673":{"id":"0:312:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Floored integer modulo","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:223:1719":{"id":"b:1:2251-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:23689"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12035:5235":{"id":"1:12035:5235","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:43327:5227","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376:1728":{"id":"0:376:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:1740":{"id":"0:322:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,40],"end":[352,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1053,0],"end":[1053,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u32"},"items":["0:369:1661","0:370:1673","0:371:1683","0:372:1692","0:373:1726","0:374:1697","0:375:1704","0:376:1728","0:377:1732","0:378:1736","0:379:1740","0:380:1751"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12036:5516":{"id":"1:12036:5516","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:43333:5497","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12039:26282":{"id":"1:12039:26282","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:12038:26291"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:43640:5507","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5384:2575":{"id":"5:5384:2575","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:1642":{"id":"0:135:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[168,0],"end":[168,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:2440-0:223:1719":{"id":"a:1:2741:2440-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5387:34283":{"id":"5:5387:34283","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:1673":{"id":"0:248:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Floored integer modulo","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12029:26974":{"id":"1:12029:26974","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12122:33628":{"id":"1:12122:33628","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12105:33623":{"id":"1:12105:33623","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12130:30802":{"id":"1:12130:30802","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5402:30800":{"id":"5:5402:30800","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:12134:30798"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:1719":{"id":"0:223:1719","crate_id":0,"name":"ExtendedGcd","span":{"filename":"src/lib.rs","begin":[353,0],"end":[357,1]},"visibility":"public","docs":"Greatest common divisor and Bézout coefficients\n\n```no_build\nlet e = isize::extended_gcd(a, b);\nassert_eq!(e.gcd, e.x*a + e.y*b);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:225:1692","0:226:1723","0:227:1724"],"fields_stripped":false}},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:223:1719","a:1:8249:2412-0:223:1719","a:1:8250:2411-0:223:1719","a:1:2684:220-0:223:1719","a:1:2741:2440-0:223:1719","b:1:2542-0:223:1719","b:1:2248-0:223:1719","b:1:2553-0:223:1719","b:1:2251-0:223:1719","b:1:2538-0:223:1719","b:1:3319-0:223:1719","b:1:2548-0:223:1719","b:5:684-0:223:1719","0:231","0:243","0:238","0:236","0:234","0:241","0:228"]}}},"0:132:1640":{"id":"0:132:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[167,0],"end":[167,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79:1740":{"id":"0:79:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[243,4],"end":[243,29]},"visibility":"default","docs":"Returns `true` if the number is odd.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(3.is_odd(), true);\nassert_eq!(4.is_odd(), false);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[391,0],"end":[391,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"usize"},"items":["0:211:1641","0:215:1642","0:219:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,23],"end":[352,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:1641":{"id":"0:146:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[385,0],"end":[385,19]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[167,0],"end":[167,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i32"},"items":["0:130:1641","0:131:1642","0:132:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,29],"end":[352,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"1:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:240:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185:1641":{"id":"0:185:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[388,0],"end":[388,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:1686":{"id":"0:313:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Calculates `div_floor` and `mod_floor` simultaneously","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270:1704":{"id":"0:270:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22:1642":{"id":"0:22:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[116,0],"end":[118,1]},"visibility":"public","docs":"Returns the truncated principal square root of an integer --\nsee [Roots::sqrt](trait.Roots.html#method.sqrt).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:1728":{"id":"0:402:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77:1732":{"id":"0:77:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[221,4],"end":[221,51]},"visibility":"default","docs":"Returns `true` if `self` is a multiple of `other`.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(9.is_multiple_of(&3), true);\nassert_eq!(3.is_multiple_of(&9), false);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:345:1683":{"id":"0:345:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,40],"end":[352,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"1:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:102:1894":{"id":"b:1:3319-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:389:1728":{"id":"0:389:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:102:1894":{"id":"b:1:2248-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2195"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37-0:18:1639":{"id":"0:37-0:18:1639","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[30,0],"end":[30,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"roots::Roots","name":"Roots","id":"0:18:1639","glob":false}}},"1:12012:2506":{"id":"1:12012:2506","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12013:33606":{"id":"1:12013:33606","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:2131":{"id":"0:28:2131","crate_id":0,"name":"signed_roots","span":{"filename":"src/roots.rs","begin":[134,0],"end":[163,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"macro":"macro_rules! signed_roots {\n    ($T:ty, $U:ty) => { ... };\n}"}},"0:109:939":{"id":"0:109:939","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1088,4],"end":[1094,5]},"visibility":"public","docs":"For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.\n\nNote that this might overflow, depending on `T`. For the primitive\ninteger types, the following n are the largest ones for which there will\nbe no overflow:\n\ntype | n\n-----|---\nu8   | 10\ni8   |  9\nu16  | 18\ni16  | 17\nu32  | 34\ni32  | 33\nu64  | 67\ni64  | 66\n\nFor larger n, `T` should be a bigint type.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"generic":"T"}]],"output":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2556:128":{"id":"1:2556:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32020:5772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:62-0:49:1644":{"id":"0:62-0:49:1644","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[34,0],"end":[34,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"average::Average","name":"Average","id":"0:49:1644","glob":false}}},"1:12093:33618":{"id":"1:12093:33618","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:11712:7551","`DoubleEndedIterator`":"1:7240:121","prim@char":"4:11888:419","str::rmatch_indices":"1:12096:33619"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:43507:5501","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:1642":{"id":"0:127:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[166,0],"end":[166,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:1697":{"id":"0:333:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and\n`other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328:1673":{"id":"0:328:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Floored integer modulo","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:223:1719":{"id":"b:1:2553-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336:1732":{"id":"0:336:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:1921":{"id":"0:116:1921","crate_id":0,"name":"binomial","span":{"filename":"src/lib.rs","begin":[1148,0],"end":[1167,1]},"visibility":"public","docs":"Calculate the binomial coefficient.\n\nNote that this might overflow, depending on `T`. For the primitive integer\ntypes, the following n are the largest ones possible such that there will\nbe no overflow for any k:\n\ntype | n\n-----|---\nu8   | 10\ni8   |  9\nu16  | 18\ni16  | 17\nu32  | 34\ni32  | 33\nu64  | 67\ni64  | 66\n\nFor larger n, consider using a bigint type for `T`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"generic":"T"}],["k",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:223:1719":{"id":"b:1:2542-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:240:613":{"id":"0:240:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[352,29],"end":[352,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:1640":{"id":"0:167:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[386,0],"end":[386,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24:1640":{"id":"0:24:1640","crate_id":0,"name":"cbrt","span":{"filename":"src/roots.rs","begin":[123,0],"end":[125,1]},"visibility":"public","docs":"Returns the truncated principal cube root of an integer --\nsee [Roots::cbrt](trait.Roots.html#method.cbrt).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7206-0:102:1894":{"id":"b:1:7206-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:7208:1911","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:202:1642":{"id":"0:202:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[390,0],"end":[390,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:1736":{"id":"0:78:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[232,4],"end":[232,30]},"visibility":"default","docs":"Returns `true` if the number is even.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(3.is_even(), false);\nassert_eq!(4.is_even(), true);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:324:1772":{"id":"0:324:1772","crate_id":0,"name":"next_multiple_of","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Rounds up to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:1895":{"id":"0:106:1895","crate_id":0,"name":"k","span":{"filename":"src/lib.rs","begin":[1063,4],"end":[1063,8]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"1:12033:31408":{"id":"1:12033:31408","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:12034:31409"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12046:30953":{"id":"1:12046:30953","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5400:7461":{"id":"5:5400:7461","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:34282","5:5384:2575","5:5387:34283","5:5390:34284","5:5398:34285","5:5399:34286","5:5400:7461","5:5401:30801","5:5402:30800"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:314:1683":{"id":"0:314:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:358:1683":{"id":"0:358:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:1642":{"id":"0:150:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[385,0],"end":[385,19]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:1697":{"id":"0:71:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[126,4],"end":[126,40]},"visibility":"default","docs":"Lowest Common Multiple (LCM).\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(7.lcm(&3), 21);\nassert_eq!(2.lcm(&4), 4);\nassert_eq!(0.lcm(&0), 0);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:329:1686":{"id":"0:329:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Calculates `div_floor` and `mod_floor` simultaneously","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302:1704":{"id":"0:302:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2250:2195":{"id":"1:2250:2195","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i32"},"items":["0:279:1661","0:280:1673","0:281:1686","0:282:1683","0:283:1692","0:284:1726","0:285:1697","0:286:1704","0:287:1728","0:288:1732","0:289:1736","0:290:1740","0:291:1751","0:292:1772","0:293:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2552:1478":{"id":"1:2552:1478","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:1861":{"id":"0:104:1861","crate_id":0,"name":"a","span":{"filename":"src/lib.rs","begin":[1061,4],"end":[1061,8]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:86:1661":{"id":"0:86:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[366,0],"end":[368,1]},"visibility":"public","docs":"Floored integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7208:1911":{"id":"1:7208:1911","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:309:1784":{"id":"0:309:1784","crate_id":0,"name":"prev_multiple_of","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Rounds down to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:1723":{"id":"0:226:1723","crate_id":0,"name":"x","span":{"filename":"src/lib.rs","begin":[355,4],"end":[355,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"A"}}},"1:2557:1477":{"id":"1:2557:1477","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366:1740":{"id":"0:366:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/roots.rs","begin":[387,0],"end":[387,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cbrt","sqrt"],"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u32"},"items":["0:172:1641","0:176:1642","0:180:1640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12078:31422":{"id":"1:12078:31422","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"4:11888:419","str::splitn":"1:12075:31420","self::pattern":"1:11712:7551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:43479:5220","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12106:33624":{"id":"1:12106:33624","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:1673":{"id":"0:409:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Unsigned integer modulo operation. Returns the same result as `rem` (`%`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12113:29985":{"id":"1:12113:29985","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1097,0],"end":[1119,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["eq_by","cycle","find_map","is_partitioned","inspect","skip_while","zip","intersperse_with","skip","size_hint","collect","gt","flat_map","is_sorted","array_chunks","try_find","min_by","try_fold","rev","by_ref","take_while","for_each","last","ge","is_sorted_by","sum","rposition","min_by_key","try_for_each","try_collect","map_while","filter","advance_by","lt","is_sorted_by_key","product","unzip","max_by","reduce","fold","collect_into","cmp","scan","position","filter_map","eq","nth","__iterator_get_unchecked","count","min","copied","max_by_key","try_reduce","cmp_by","partition","flatten","all","enumerate","ne","step_by","partial_cmp","chain","partial_cmp_by","max","cloned","any","find","le","partition_in_place","fuse","map","peekable","intersperse","next_chunk","take"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:112:1911","0:113:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12132:30803":{"id":"1:12132:30803","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57:1645":{"id":"0:57:1645","crate_id":0,"name":"average_ceil","span":{"filename":"src/average.rs","begin":[62,4],"end":[64,5]},"visibility":"default","docs":"Returns the ceil value of the average of `self` and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"I"}}}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1728":{"id":"0:76:1728","crate_id":0,"name":"divides","span":{"filename":"src/lib.rs","begin":[210,4],"end":[210,44]},"visibility":"default","docs":"Deprecated, use `is_multiple_of` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"usize"},"items":["0:395:1661","0:396:1673","0:397:1683","0:398:1692","0:399:1726","0:400:1697","0:401:1704","0:402:1728","0:403:1732","0:404:1736","0:405:1740","0:406:1751"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:364:1732":{"id":"0:364:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:1697":{"id":"0:253:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and\n`other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:1661":{"id":"0:295:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Floored integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:1661":{"id":"0:279:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Floored integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12032:33611":{"id":"1:12032:33611","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:11894:1397","crate::ops::IndexMut":"1:2985:2300","str::slice_unchecked":"1:12031:33610"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5401:30801":{"id":"5:5401:30801","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:12133:30799"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12011:811":{"id":"1:12011:811","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:11888:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:1673":{"id":"0:68:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,46]},"visibility":"default","docs":"Floored integer modulo, satisfying:\n\n~~~\n# use num_integer::Integer;\n# let n = 1; let d = 1;\nassert!(n.div_floor(&d) * d + n.mod_floor(&d) == n)\n~~~\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert!(( 8).mod_floor(& 3) ==  2);\nassert!(( 8).mod_floor(&-3) == -1);\nassert!((-8).mod_floor(& 3) ==  1);\nassert!((-8).mod_floor(&-3) == -2);\n\nassert!(( 1).mod_floor(& 2) ==  1);\nassert!(( 1).mod_floor(&-2) == -1);\nassert!((-1).mod_floor(& 2) ==  1);\nassert!((-1).mod_floor(&-2) == -1);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:386:1726":{"id":"0:386:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355":{"id":"0:355","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1052,0],"end":[1052,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"u16"},"items":["0:356:1661","0:357:1673","0:358:1683","0:359:1692","0:360:1726","0:361:1697","0:362:1704","0:363:1728","0:364:1732","0:365:1736","0:366:1740","0:367:1751"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12031:33610":{"id":"1:12031:33610","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:11894:1397","str::slice_mut_unchecked":"1:12032:33611","crate::ops::Index":"1:2981:2299"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:102:1894":{"id":"b:1:2542-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:403:1732":{"id":"0:403:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:1641":{"id":"0:26:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[130,0],"end":[132,1]},"visibility":"public","docs":"Returns the truncated principal `n`th root of an integer --\nsee [Roots::nth_root](trait.Roots.html#tymethod.nth_root).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["n",{"primitive":"u32"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Roots","id":"0:18:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:1642":{"id":"0:143:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[171,0],"end":[171,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:1740":{"id":"0:392:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:1724":{"id":"0:227:1724","crate_id":0,"name":"y","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"A"}}},"0:159:1641":{"id":"0:159:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[386,0],"end":[386,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:1692":{"id":"0:70:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[114,4],"end":[114,40]},"visibility":"default","docs":"Greatest Common Divisor (GCD).\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(6.gcd(&8), 2);\nassert_eq!(7.gcd(&3), 1);\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:263:1661":{"id":"0:263:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":"Floored integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:418:1740":{"id":"0:418:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:1736":{"id":"0:289:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:1641":{"id":"0:198:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[390,0],"end":[390,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7210:784":{"id":"1:7210:784","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58:1646":{"id":"0:58:1646","crate_id":0,"name":"average_floor","span":{"filename":"src/average.rs","begin":[70,0],"end":[72,1]},"visibility":"public","docs":"Returns the floor value of the average of `x` and `y` --\nsee [Average::average_floor](trait.Average.html#tymethod.average_floor).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Average","id":"0:49:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:1641":{"id":"0:211:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[391,0],"end":[391,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:2140":{"id":"0:32:2140","crate_id":0,"name":"bits","span":{"filename":"src/roots.rs","begin":[192,0],"end":[194,1]},"visibility":{"restricted":{"parent":"0:12:1638","path":"::roots"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304:1732":{"id":"0:304:1732","crate_id":0,"name":"is_multiple_of","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Returns `true` if the number is a multiple of `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12022:31389":{"id":"1:12022:31389","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12038:26291":{"id":"1:12038:26291","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:12039:26282"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:43631:5506","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354:1751":{"id":"0:354:1751","crate_id":0,"name":"div_rem","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Simultaneous truncated integer division and modulus.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343:1661":{"id":"0:343:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Unsigned integer division. Returns the same result as `div` (`/`).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12043:24178":{"id":"1:12043:24178","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12010":{"id":"1:12010","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:12011:811","1:12012:2506","1:12013:33606","1:12014:33607","1:12016:33608","1:12019:31288","1:12020:33609","1:12021:314","1:12022:31389","1:12023:26971","1:12025:26972","1:12027:26973","1:12029:26974","1:12031:33610","1:12032:33611","1:12033:31408","1:12034:31409","1:12035:5235","1:12036:5516","1:12037:4899","1:12038:26291","1:12039:26282","1:12040:7170","1:12041:33612","1:12042:26296","1:12043:24178","1:12046:30953","1:12049:30955","1:12052:2541","1:12056:2505","1:12060:30446","1:12063:26286","1:12066:31418","1:12069:33613","1:12072:33614","1:12075:31420","1:12078:31422","1:12081:33615","1:12084:33616","1:12087:2237","1:12090:33617","1:12093:33618","1:12096:33619","1:12099:33620","1:12101:33621","1:12103:33622","1:12105:33623","1:12106:33624","1:12107:33625","1:12110:33626","1:12113:29985","1:12116:31424","1:12119:33627","1:12122:33628","1:12125:33629","1:12128:33630","1:12130:30802","1:12131:31291","1:12132:30803","1:12133:30799","1:12134:30798","1:12135:33631","1:12137:7398","1:12138:33632"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397:1683":{"id":"0:397:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1066,0],"end":[1095,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:109:939"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:348:1697":{"id":"0:348:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[1051,0],"end":[1051,44]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337:1736":{"id":"0:337:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:285:1697":{"id":"0:285:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and\n`other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i64"},"items":["0:295:1661","0:296:1673","0:297:1686","0:298:1683","0:299:1692","0:300:1726","0:301:1697","0:302:1704","0:303:1728","0:304:1732","0:305:1736","0:306:1740","0:307:1751","0:308:1772","0:309:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12037:4899":{"id":"1:12037:4899","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:43343:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12087:2237":{"id":"1:12087:2237","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:11712:7551","`DoubleEndedIterator`":"1:7240:121","prim@char":"4:11888:419","str::matches":"1:12087:2237"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:43561:5503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332:1726":{"id":"0:332:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:1726":{"id":"0:316:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:1692":{"id":"0:225:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"A"}}},"b:1:2538-0:223:1719":{"id":"b:1:2538-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:2499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:102:1894":{"id":"a:1:2701:228-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:131:1642":{"id":"0:131:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[167,0],"end":[167,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:1641":{"id":"0:126:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[166,0],"end":[166,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:1641":{"id":"0:142:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[171,0],"end":[171,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388:1704":{"id":"0:388:1704","crate_id":0,"name":"gcd_lcm","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:102:1894":{"id":"b:1:2548-0:102:1894","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterBinomial","id":"0:102:1894","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12056:2505":{"id":"1:12056:2505","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:41396:179","prim@char":"4:11888:419","self::pattern":"1:11712:7551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12084:33616":{"id":"1:12084:33616","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:5207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:7557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:1692":{"id":"0:315:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and\n`other`. The result is always non-negative.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:423":{"id":"0:233:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[352,16],"end":[352,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[831,0],"end":[831,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gcd_lcm","extended_gcd_lcm","div_mod_floor","prev_multiple_of","next_multiple_of","extended_gcd","div_ceil"],"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"i128"},"items":["0:327:1661","0:328:1673","0:329:1686","0:330:1683","0:331:1692","0:332:1726","0:333:1697","0:334:1704","0:335:1728","0:336:1732","0:337:1736","0:338:1740","0:339:1751","0:340:1772","0:341:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:311:1661":{"id":"0:311:1661","crate_id":0,"name":"div_floor","span":{"filename":"src/lib.rs","begin":[829,0],"end":[829,50]},"visibility":"default","docs":"Floored integer division","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:1692":{"id":"0:398:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and `other`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:1642":{"id":"0:20:1642","crate_id":0,"name":"sqrt","span":{"filename":"src/roots.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":"Returns the truncated principal square root of an integer -- `⌊√x⌋`\n\nThis is solving for `r` in `r² = x`, rounding toward zero.\nThe result will satisfy `r² ≤ x < (r+1)²`.\n\n# Panics\n\nPanics if `self` is less than zero:\n\n```should_panic\n# use num_integer::Roots;\nprintln!(\"no imaginary numbers... {}\", (-1).sqrt());\n```\n\n# Examples\n\n```\nuse num_integer::Roots;\n\nlet x: i32 = 12345;\nassert_eq!((x * x).sqrt(), x);\nassert_eq!((x * x + 1).sqrt(), x);\nassert_eq!((x * x - 1).sqrt(), x - 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:1686":{"id":"0:81:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[281,4],"end":[283,5]},"visibility":"default","docs":"Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.\n\n# Examples\n\n~~~\n# use num_integer::Integer;\nassert_eq!(( 8).div_mod_floor( &3), ( 2,  2));\nassert_eq!(( 8).div_mod_floor(&-3), (-3, -1));\nassert_eq!((-8).div_mod_floor( &3), (-3,  1));\nassert_eq!((-8).div_mod_floor(&-3), ( 2, -2));\n\nassert_eq!(( 1).div_mod_floor( &2), ( 0,  1));\nassert_eq!(( 1).div_mod_floor(&-2), (-1, -1));\nassert_eq!((-1).div_mod_floor( &2), (-1,  1));\nassert_eq!((-1).div_mod_floor(&-2), ( 0, -1));\n~~~","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:1697":{"id":"0:387:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,46]},"visibility":"default","docs":"Calculates the Lowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:1646":{"id":"0:51:1646","crate_id":0,"name":"average_floor","span":{"filename":"src/average.rs","begin":[42,4],"end":[42,50]},"visibility":"default","docs":"Returns the floor value of the average of `self` and `other`.\n-- `⌊(self + other)/2⌋`\n\n# Examples\n\n```\nuse num_integer::Average;\n\nassert_eq!(( 3).average_floor(&10),  6);\nassert_eq!((-2).average_floor(&-5), -4);\nassert_eq!(( 4).average_floor(& 4),  4);\n\nassert_eq!(u8::max_value().average_floor(&2), 128);\nassert_eq!(i8::min_value().average_floor(&-1), -65);\nassert_eq!(i8::min_value().average_floor(&i8::max_value()), -1);\n```\n","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:292:1772":{"id":"0:292:1772","crate_id":0,"name":"next_multiple_of","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Rounds up to nearest multiple of argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:1641":{"id":"0:19:1641","crate_id":0,"name":"nth_root","span":{"filename":"src/roots.rs","begin":[55,4],"end":[55,39]},"visibility":"default","docs":"Returns the truncated principal `n`th root of an integer\n-- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`\n\nThis is solving for `r` in `rⁿ = x`, rounding toward zero.\nIf `x` is positive, the result will satisfy `rⁿ ≤ x < (r+1)ⁿ`.\nIf `x` is negative and `n` is odd, then `(r-1)ⁿ < x ≤ rⁿ`.\n\n# Panics\n\nPanics if `n` is zero:\n\n```should_panic\n# use num_integer::Roots;\nprintln!(\"can't compute ⁰√x : {}\", 123.nth_root(0));\n```\n\nor if `n` is even and `self` is negative:\n\n```should_panic\n# use num_integer::Roots;\nprintln!(\"no imaginary numbers... {}\", (-1).nth_root(10));\n```\n\n# Examples\n\n```\nuse num_integer::Roots;\n\nlet x: i32 = 12345;\nassert_eq!(x.nth_root(1), x);\nassert_eq!(x.nth_root(2), x.sqrt());\nassert_eq!(x.nth_root(3), x.cbrt());\nassert_eq!(x.nth_root(4), 10);\nassert_eq!(x.nth_root(13), 2);\nassert_eq!(x.nth_root(14), 1);\nassert_eq!(x.nth_root(std::u32::MAX), 1);\n\nassert_eq!(std::i32::MAX.nth_root(30), 2);\nassert_eq!(std::i32::MAX.nth_root(31), 1);\nassert_eq!(std::i32::MIN.nth_root(31), -2);\nassert_eq!((std::i32::MIN + 1).nth_root(31), -1);\n\nassert_eq!(std::u32::MAX.nth_root(31), 2);\nassert_eq!(std::u32::MAX.nth_root(32), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:405:1740":{"id":"0:405:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1055,50]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266:1683":{"id":"0:266:1683","crate_id":0,"name":"div_ceil","span":{"filename":"src/lib.rs","begin":[826,0],"end":[826,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:1686":{"id":"0:297:1686","crate_id":0,"name":"div_mod_floor","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Calculates `div_floor` and `mod_floor` simultaneously","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"generic":"Self"},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:417:1736":{"id":"0:417:1736","crate_id":0,"name":"is_even","span":{"filename":"src/lib.rs","begin":[1057,0],"end":[1057,48]},"visibility":"default","docs":"Returns `true` if the number is divisible by `2`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300:1726":{"id":"0:300:1726","crate_id":0,"name":"extended_gcd_lcm","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},{"generic":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:2412-0:223:1719":{"id":"a:1:8249:2412-0:223:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtendedGcd","id":"0:223:1719","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96:1697":{"id":"0:96:1697","crate_id":0,"name":"lcm","span":{"filename":"src/lib.rs","begin":[393,0],"end":[395,1]},"visibility":"public","docs":"Calculates the Lowest Common Multiple (LCM) of the number and `other`.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["x",{"generic":"T"}],["y",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:1692":{"id":"0:299:1692","crate_id":0,"name":"gcd","span":{"filename":"src/lib.rs","begin":[828,0],"end":[828,46]},"visibility":"default","docs":"Calculates the Greatest Common Divisor (GCD) of the number and\n`other`. The result is always non-negative.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12023:26971":{"id":"1:12023:26971","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:1673":{"id":"0:280:1673","crate_id":0,"name":"mod_floor","span":{"filename":"src/lib.rs","begin":[827,0],"end":[827,46]},"visibility":"default","docs":"Floored integer modulo","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12016:33608":{"id":"1:12016:33608","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:12014:33607"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12021:314":{"id":"1:12021:314","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:12022:31389","`u8`":"4:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12134:30798":{"id":"1:12134:30798","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:1644":{"id":"0:49:1644","crate_id":0,"name":"Average","span":{"filename":"src/average.rs","begin":[5,0],"end":[43,1]},"visibility":"public","docs":"Provides methods to compute the average of two integers, without overflows.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:50:1645","0:51:1646"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"0:66:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:52"]}}},"0:258:1740":{"id":"0:258:1740","crate_id":0,"name":"is_odd","span":{"filename":"src/lib.rs","begin":[825,0],"end":[825,44]},"visibility":"default","docs":"Returns `true` if the number is not divisible by `2`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2541:2499":{"id":"1:2541:2499","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"20:655:2319":{"crate_id":20,"path":["num_traits","NumOps"],"kind":"trait"},"4:10712:4942":{"crate_id":4,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:5677:19553":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"4:5719:4972":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:44283:211":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:9813:222":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:20760:12630":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"17:13257:3984":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"4:480:2930":{"crate_id":4,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:11800:3620":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:13689:4116":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"4:5370:4963":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"6:5995:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"4:8479:4772":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"17:11532:3551":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"4:10226:29882":{"crate_id":4,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:11813:3622":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:420:3142":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:21559:12966":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"4:8806:4966":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:13564:4090":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:2931:18696":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"4:8918:5105":{"crate_id":4,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:4377:6069":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13639:4103":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:21718:5249":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:3995:5161":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:12293:3713":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"4:10647:6785":{"crate_id":4,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:532:5823":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:6821:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"5:7148:12910":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"4:8154:5062":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"5:6578:2912":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:5468:2902":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"6:579:5848":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"11:97:5763":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"4:7616:2965":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"4:643:12897":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:4969:4277":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"4:2477:4926":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:44164:7578":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:7544:6760":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6327:4410":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:39982:24652":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:6442:4422":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:8142:4679":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:8953:3258":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:7588:4611":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"18:80:7157":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:3234:2312":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:636:3102":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:12522:3752":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:43265:5492":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:5239:13141":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:11535:5214":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:6768:7458":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"5:5235:13140":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:3152:234":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:2319:4192":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:45543:5549":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:247:3137":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:4761:389":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"17:13865:4161":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:2515:133":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"5:5818:2910":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:45681:5555":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:6717:4472":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:62:13199":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:47072:5620":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:1995:4877":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:30288:68":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:46189:5572":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:7366:19562":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"4:930:4777":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:10615:3424":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:10272:5221":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:10771:5223":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"18:491:3079":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"11:359:2859":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:6535:2853":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:46212:5573":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:3163:33399":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:1546:5875":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:7859:19565":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:21854:5256":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:42153:2695":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:10286:5222":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:43163:5484":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:11726:3115":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:47800:5639":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11090:3464":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:1525:5867":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:7669:4242":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:39341:5280":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:21787:6805":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:1916:5156":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"4:11900:745":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"1:3510:2897":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"6:4743:6201":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:11037:19627":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:41538:210":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:43763:5509":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:10743:3441":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:12959:3919":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:10721:3436":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:11615:3576":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:5998:19555":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:45699:5556":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:11902:3636":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:4336:2904":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:13265:3986":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:1539:5872":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:5773:6411":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:525:2359":{"crate_id":20,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"1:12295:136":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"17:11653:3584":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:2758:2282":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:2684:220":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"17:8788:3131":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11628:3580":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:41521:2564":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:32020:5772":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:40022:5416":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:11234:3487":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:9098:3266":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:11556:3553":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"0:60:1645":{"crate_id":0,"path":["num_integer","average","average_ceil"],"kind":"function"},"6:4416:6089":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"4:11911:1553":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"5:6607:2924":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"20:423:2349":{"crate_id":20,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"1:41911:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:41479:2408":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:42666:5469":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:3644:2510":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:7568:6765":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:20841:12637":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:11573:3561":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"4:8047:5051":{"crate_id":4,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:7572:34746":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"18:727:3122":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:6919:34744":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"18:652:3080":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"0:34:2141":{"crate_id":0,"path":["num_integer","roots","log2"],"kind":"function"},"6:6545:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:13678:4115":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4509:6133":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:9161:2699":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:554:5835":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:45521:5548":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:13469:4040":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:4757:4270":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:10798:19625":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:11502:3547":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:12634:3767":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"4:1768:610":{"crate_id":4,"path":["std","env"],"kind":"module"},"16:5655:4229":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"11:665:2510":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:7557:4608":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:2701:228":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"16:6361:4415":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:9370:145":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"16:8072:4670":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"20:103:23481":{"crate_id":20,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"1:42421:110":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:42160:2694":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:1667:1087":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"4:4903:13060":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"17:10015:3342":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:2694:4214":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:9142:112":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"5:6990:4874":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:265:2872":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:9946:3334":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:23037:2352":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:43640:5507":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"4:5021:4956":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"0:223:1719":{"crate_id":0,"path":["num_integer","ExtendedGcd"],"kind":"struct"},"16:8214:4573":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:9265:3270":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:7437:4593":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:5857:6447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:8389:19616":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:10165:5217":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:6506:4431":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:13041:3931":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:1747:6802":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:5643:4295":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"4:4681:13019":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:4386:2706":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"16:6990:4512":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:12915:3889":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"4:10682:5007":{"crate_id":4,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"4:8960:5111":{"crate_id":4,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:10885:3450":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"20:325:2338":{"crate_id":20,"path":["num_traits","identities","One"],"kind":"trait"},"14:160:4764":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"4:7791:5006":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:42658:5467":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:13135:3956":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:482:5792":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:11520:3548":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:41309:27311":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:7509:6752":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:46370:5586":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"11:1144:4790":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:2242:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"5:5035:2910":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:11319:3515":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:40726:5195":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"4:6332:4975":{"crate_id":4,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"4:6485:13096":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:6569:6603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:12483:3749":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:22590:5272":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"6:5717:6371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12902:3882":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:3047:18698":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"4:5910:2942":{"crate_id":4,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:6605:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:47572:5626":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:7164:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"14:165:18639":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:42674:5470":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"4:922:4773":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10936:3454":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"4:731:142":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:13477:4041":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:9839:3318":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:22227:178":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:6767:4485":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:12259:3710":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:4932:6298":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"4:11910:789":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"5:2407:6774":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"20:519:2357":{"crate_id":20,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"0:58:1646":{"crate_id":0,"path":["num_integer","average","average_floor"],"kind":"function"},"11:2060:4522":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:1034:3146":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:2906:33213":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"4:1577:4795":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:13316:3999":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:154:2851":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:9155:2697":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:44273:205":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"17:8667:3257":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:39365:5281":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"4:4854:13054":{"crate_id":4,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:42683:145":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:4431:6095":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:7498:4606":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:20804:12636":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:20990:12628":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:11060:3429":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:5809:6424":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:7022:2885":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:1715:5988":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:13233:3979":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:40226:5428":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:40438:5184":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:7244:34748":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"4:8912:107":{"crate_id":4,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:41581:4772":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"17:10527:19730":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:2742:4216":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:7626:4612":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:40163:7432":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"typedef"},"17:9443:3281":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:10092:3352":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"11:638:4772":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"4:11003:5095":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:2470:4205":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"9:52:18570":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:40133:27310":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:21900:24649":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"4:9374:129":{"crate_id":4,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:41589:4791":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:46292:5574":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7103:5112":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:10203:5218":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:10598:3455":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:7485:6748":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:47823:5640":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:4007:5162":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"4:6236:206":{"crate_id":4,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"4:10416:4932":{"crate_id":4,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"4:2869:128":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"1:46682:5592":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"0:0:1967":{"crate_id":0,"path":["num_integer"],"kind":"module"},"1:2746:106":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"5:4366:2902":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"4:3615:13000":{"crate_id":4,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"4:8242:5072":{"crate_id":4,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"16:535:4181":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"18:690:3112":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:30302:24661":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:13453:4037":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:9577:3296":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:13803:4148":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:4911:6283":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:5959:6509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:39998:5414":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"18:719:3119":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:41260:7478":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"5:3673:4875":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:5870:6453":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13082:3944":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:5058:6359":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"4:1048:4522":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:6520:4433":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:595:5858":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"4:4176:4947":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:1213:4786":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:47214:5621":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"16:4327:4259":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:1692:5978":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:6755:6686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:3975:2897":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"4:8925:29986":{"crate_id":4,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:47785:5638":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:6848:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"4:11913:13":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"1:43245:5490":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:45561:5550":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:562:3144":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"4:10847:30003":{"crate_id":4,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:5797:4309":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:14:2238":{"crate_id":1,"path":["core","write"],"kind":"macro"},"16:7509:4239":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:44100:6890":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"11:731:4775":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"18:564:3089":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"4:5320:4957":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"7:79:18545":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:5708:4299":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"4:8226:5070":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:43809:5518":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:13791:4146":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:3157:135":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:45437:5545":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"4:8286:4950":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:10257:3387":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:12433:3732":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:4845:6248":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:9670:3306":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:8909:3134":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:4478:6115":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:1228:4784":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:41512:2409":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"4:8171:12999":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"16:3300:4250":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:11500:5233":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:30232:2580":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:9683:3307":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:46446:5588":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"4:11449:5141":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"1:9153:2696":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:3622:2872":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:8753:3130":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:7165:7468":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"4:5334:4961":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"1:45662:5554":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"4:2360:12955":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"17:9959:3335":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"4:6133:4974":{"crate_id":4,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"11:60:7174":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"4:7659:12900":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"20:352:2076":{"crate_id":20,"path":["num_traits","int","PrimInt"],"kind":"trait"},"1:12308:151":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:39358:4573":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"5:7266:4902":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:47648:5628":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"11:393:7175":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:13219:3976":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:12550:3756":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"4:635:4908":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"4:8870:13103":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"9:388:18553":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:7837:4629":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"4:3135:30410":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:3775:2872":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"4:11906:1496":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"17:8256:19600":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"4:3680:4944":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:21803:5251":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:487:3143":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:4920:6289":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:1609:5917":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"18:644:3080":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:4167:2902":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"4:4578:6634":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:7077:19561":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:9973:3336":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"4:10657:5006":{"crate_id":4,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"5:3534:4772":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:7449:4594":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"4:7798:5007":{"crate_id":4,"path":["std","fs","FileTimes"],"kind":"struct"},"6:6024:6533":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:47706:5633":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:45592:5551":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:41368:5202":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:1919:19663":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:43343:3134":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:40268:5431":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:8632:19601":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:10840:3448":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:43956:5525":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"4:11870:30002":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:43184:5486":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:43935:7572":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:32147:2473":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:10402:3397":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:4865:6257":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"4:8141:3134":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"1:46652:5591":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:1058:33216":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:40246:5430":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"11:1843:2510":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"4:3449:30251":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:2786:4218":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:1700:5979":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:9917:3330":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"4:9120:30651":{"crate_id":4,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"6:4784:6224":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:0:2268":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:11484:5232":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"4:6865:32710":{"crate_id":4,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"4:4564:13006":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:6800:6710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:47695:5632":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:30266:2581":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:13667:4110":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:12113:3669":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:4331:6035":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:44080:6885":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:2985:2300":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"14:221:4770":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"20:572:23491":{"crate_id":20,"path":["num_traits","real","Real"],"kind":"trait"},"5:7224:4900":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"20:163:2335":{"crate_id":20,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"1:8838:27258":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"20:682:2323":{"crate_id":20,"path":["num_traits","NumAssignRef"],"kind":"trait"},"4:1589:4797":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:4653:6171":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:42695:5472":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"20:392:2341":{"crate_id":20,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"14:187:18646":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"4:11907:1497":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"4:11243:6792":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:44096:6889":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"4:8166:5065":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:8598:19623":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"4:959:4783":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:2312:188":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:9478:3284":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:4399:2904":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:9961:4772":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:8090:4672":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:547:5832":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:7491:6749":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:42167:2696":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"11:867:4783":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"4:8893:5101":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:41711:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:6474:4244":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"20:401:2344":{"crate_id":20,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"17:12126:3670":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"4:7571:12966":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"1:43153:5483":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:10857:19626":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:7632:27259":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"4:6409:2954":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"11:2198:5770":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"11:2219:4893":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:44152:5531":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"4:3383:5066":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"4:7846:5010":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"11:0:2264":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:11249:7520":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:12542:140":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"4:936:12911":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:4898:6273":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"5:7136:4893":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:3276:2861":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:13763:4137":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13879:4164":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:44347:161":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"4:11886:371":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"16:6218:4391":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:43255:5491":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:8573:19622":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:47747:5636":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"11:783:2865":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:44076:6884":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"5:1463:4873":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"4:844:4772":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"0:49:1644":{"crate_id":0,"path":["num_integer","average","Average"],"kind":"trait"},"16:7488:4605":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:8931:3138":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"5:1432:4773":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:9218:3269":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:20770:7359":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"6:4851:6249":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12236:3701":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:2357:4200":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:653:13611":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:9409:19635":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"4:3875:13002":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:1668:5961":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"18:755:3127":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"4:10692:130":{"crate_id":4,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:10967:3455":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"4:10702:119":{"crate_id":4,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:8651:3256":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:13443:4034":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:8025:4666":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:4371:6068":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:5920:4176":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:45347:5541":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"4:5563:2942":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"4:9081:5114":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:5779:4305":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:9148:34756":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:1404:4775":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:6628:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:39192:198":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:2800:2286":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:1382:2510":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"4:11894:1397":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"17:3142:3157":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:10505:3408":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:13385:4016":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:7005:4891":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:2087:4786":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:2169:34362":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:2151:589":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:45792:5560":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:9117:132":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"4:585:12895":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:10465:3405":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:4307:6017":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:5693:4296":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:2812:2160":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"4:5385:4964":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"1:2317:125":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"20:213:23482":{"crate_id":20,"path":["num_traits","float","FloatCore"],"kind":"trait"},"5:5712:2897":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:2843:2291":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:20564:28629":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"16:7635:4613":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:21952:5266":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:8443:19618":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"4:11393:4945":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"20:652:1635":{"crate_id":20,"path":["num_traits","Num"],"kind":"trait"},"4:4328:4949":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"11:1839:4772":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:10039:3346":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"11:828:12911":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"4:11908:1498":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"16:5724:4301":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:6164:4367":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:9596:3297":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:46111:5570":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:10334:3269":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:7578:6767":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"4:11027:30000":{"crate_id":4,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"4:7942:12992":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:13857:4158":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:4875:6263":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:13309:3998":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:1422:4792":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:6917:3075":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9748:3269":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"20:494:2352":{"crate_id":20,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"17:12894:3879":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"18:582:2480":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:40356:5440":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"4:7509:2959":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:43741:7571":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:9853:3319":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"13:226:5762":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:7555:6764":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:8310:19614":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:2426:4203":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:488:5795":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:2116:6769":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"18:681:3110":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:6700:6649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:11732:7557":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:7161:7469":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"4:2550:2934":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"20:517:2361":{"crate_id":20,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"17:12358:3720":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:13488:4045":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"4:4414:13028":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:6999:2510":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:8180:19566":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:6097:13106":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"18:707:3115":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"4:10722:30007":{"crate_id":4,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:39955:5160":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"4:1583:4796":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"5:3158:4795":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:43525:5502":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:1637:2577":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:44326:5534":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:9488:3287":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"4:3973:13007":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:9108:34753":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:6390:4418":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"4:501:2890":{"crate_id":4,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:6151:6579":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"4:11859:12901":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:1588:5903":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"4:3881:13001":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:6336:4411":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:8195:19602":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:1622:5924":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:45892:5563":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"4:4639:13055":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:6201:4384":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:5798:6416":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:12501:107":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"6:7258:6737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"4:8264:6619":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:6904:4495":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:32060:5274":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:41631:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"18:660:3103":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:4688:6174":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"7:0:1543":{"crate_id":7,"path":["unwind"],"kind":"module"},"4:7937:5013":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"16:7683:4243":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:7240:121":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"4:5693:4971":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:8420:19617":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"11:1071:34735":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4398:6077":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:44291:195":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"16:2594:4210":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:8490:19619":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:13292:3990":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:500:5800":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:10452:3404":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"4:11468:6794":{"crate_id":4,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"10:0:2263":{"crate_id":10,"path":["adler"],"kind":"module"},"1:6674:7472":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:41831:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:7697:4233":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:5908:2902":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"20:404:2345":{"crate_id":20,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"17:12496:3750":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"11:1091:4788":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:12770:3776":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"4:11500:4992":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:22392:5271":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:10670:3431":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:41470:2510":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"20:4733:2328":{"crate_id":20,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"6:1614:5919":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:13015:3925":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:11717:5207":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:2792:2285":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:11785:3615":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:1197:4522":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:4486:6120":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:4260:5166":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"4:8103:12965":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"11:399:7176":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:21665:5248":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:2879:4222":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:11424:5228":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:11821:3624":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:21088:12625":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"20:396:2343":{"crate_id":20,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"1:43407:5499":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:10258:5220":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:9617:3299":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:4602:7415":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"4:5556:206":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"4:7670:5000":{"crate_id":4,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"5:6446:2872":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"4:11903:744":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"1:2695:225":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"20:522:2358":{"crate_id":20,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"6:7497:6750":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:1657:5953":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:4404:6080":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"20:515:2356":{"crate_id":20,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"1:2898:117":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:6876:4234":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:2518:238":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"6:5843:6446":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:2817:2161":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:2922:2296":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"4:2362:12956":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"5:880:4772":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"4:7665:4915":{"crate_id":4,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"4:7572:4905":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:7317:34745":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"20:441:2350":{"crate_id":20,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"1:8249:2412":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:6728:4473":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"11:279:5764":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:11969:3649":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:9410:5211":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:13053:3936":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:20879:7359":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"4:9981:4920":{"crate_id":4,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"0:32:2140":{"crate_id":0,"path":["num_integer","roots","bits"],"kind":"function"},"20:4740:2329":{"crate_id":20,"path":["num_traits","ParseFloatError"],"kind":"struct"},"6:5974:6511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:11258:3501":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:4377:2981":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:6764:2928":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:7241:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:21771:5250":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"4:7590:4993":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"4:3911:13003":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"4:8784:4772":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:3370:7379":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"17:8683:3128":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"9:325:5776":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:21879:24644":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:8356:5207":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:3640:3170":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"4:2387:2599":{"crate_id":4,"path":["std","io"],"kind":"module"},"6:4790:6227":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:42498:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"16:6376:4226":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:2546:4208":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:12563:3757":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:2502:4206":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:11946:3644":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:21114:12632":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"0:36:2144":{"crate_id":0,"path":["num_integer","roots","unsigned_roots"],"kind":"macro"},"6:4980:6321":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:12597:7602":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"17:13516:4053":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"4:8082:4940":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"1:40448:5443":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:7016:4513":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"20:527:2360":{"crate_id":20,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"16:5594:4230":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:9933:3332":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:21431:5245":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:4499:6126":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:7503:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"4:926:4774":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"0:114:1912":{"crate_id":0,"path":["num_integer","multiply_and_divide"],"kind":"function"},"4:4104:7184":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:9157:194":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"17:10649:3427":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:20729:12633":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:4751:6205":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:43333:5497":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:11737:7556":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"13:0:2260":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:42433:4644":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:1576:5895":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"4:4125:7185":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:2696:109":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:21839:2328":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"11:991:4522":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"20:0:1631":{"crate_id":20,"path":["num_traits"],"kind":"module"},"6:4449:6104":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"20:662:2320":{"crate_id":20,"path":["num_traits","NumRef"],"kind":"trait"},"4:3925:13004":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:12194:3680":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:11712:7551":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"20:95:2331":{"crate_id":20,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"4:8968:5112":{"crate_id":4,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:5630:4290":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:7478:4238":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:6236:4401":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:9526:2990":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"20:2198:2333":{"crate_id":20,"path":["num_traits","float","FloatConst"],"kind":"trait"},"6:541:5829":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"20:499:2353":{"crate_id":20,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"16:7743:4231":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"4:413:165":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"4:9038:219":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"4:8337:5083":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"1:30360:24662":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"6:4459:6107":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:4698:6181":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"4:1982:185":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:45938:5564":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"4:8091:4942":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"11:675:4773":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"20:399:2342":{"crate_id":20,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"5:3688:4877":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:3124:4796":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:10270:3388":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"4:4990:4956":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"11:744:4776":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:40050:5418":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:9772:3314":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:2929:2297":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:1413:4776":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:7520:6756":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12799:3796":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"11:1035:4786":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"4:5570:2943":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:9696:3289":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:1612:2872":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"4:953:4782":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:10545:3159":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:3872:4256":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:39280:203":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:4932:4276":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:1716:2861":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:10125:3355":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:10569:3416":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"18:766:23471":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:6651:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"5:3117:4772":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:10681:3432":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:39302:2302":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"6:1736:5996":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"20:553:2362":{"crate_id":20,"path":["num_traits","pow","Pow"],"kind":"trait"},"17:13426:4030":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:4392:6076":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:7596:19563":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:46014:5567":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"4:1846:4921":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"6:4726:6194":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:5816:6426":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"0:94:1692":{"crate_id":0,"path":["num_integer","gcd"],"kind":"function"},"11:1852:2861":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"4:11899:643":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"17:11484:3539":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:30272:2582":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:46528:5589":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:40473:5186":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:2856:2294":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:43921:5520":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:2839:2290":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:13145:3957":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"4:7644:12899":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"4:3939:13006":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:3815:4255":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:4423:6093":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"4:5926:206":{"crate_id":4,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:39258:201":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"11:326:2857":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10316:3392":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:10478:3406":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:1564:5886":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"20:679:1864":{"crate_id":20,"path":["num_traits","NumAssign"],"kind":"trait"},"4:8948:5109":{"crate_id":4,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"4:11145:2970":{"crate_id":4,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"4:11072:6790":{"crate_id":4,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:13433:4031":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:7411:4337":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"11:2157:18627":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"4:2344:6804":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"11:821:4777":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:12461:3738":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:2967:18697":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"9:174:18618":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:10000:3338":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"18:736:23470":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"4:911:2861":{"crate_id":4,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"11:1847:2897":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:6553:6591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:4952:6309":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:474:5787":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:11544:3552":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:20594:29135":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"11:1524:18634":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:5935:6497":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"14:202:13146":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6254:4404":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:43144:5481":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"4:8485:5092":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"4:6552:2955":{"crate_id":4,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"0:98:1704":{"crate_id":0,"path":["num_integer","gcd_lcm"],"kind":"function"},"17:0:2269":{"crate_id":17,"path":["object"],"kind":"module"},"4:11331:4943":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:1594:5905":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"4:10628:5127":{"crate_id":4,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:43561:5503":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"4:10050:5118":{"crate_id":4,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:40057:7421":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:6739:2916":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"4:7862:4875":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:2738:2468":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:9592:2993":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"15:198:7169":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:6057:6542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:3030:4246":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"4:4508:13046":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:2512:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"17:9424:3279":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:9826:3317":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:8109:4675":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"4:1071:4786":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:4773:6216":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:6293:4407":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:12592:3760":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:13659:4109":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:2189:6773":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:42917:5212":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:44092:6888":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:40424:3100":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:39236:202":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:4042:7400":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"4:3440:2693":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"16:5976:4183":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:11279:7558":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"18:624:34763":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:9312:3271":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"18:609:3096":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:43989:5238":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:4559:6156":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"4:2208:4925":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"1:2163:7360":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"4:1844:2724":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"0:28:2131":{"crate_id":0,"path":["num_integer","roots","signed_roots"],"kind":"macro"},"1:47770:5637":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:2161:7359":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:1756:5152":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:44389:5540":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:21827:2329":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"4:1568:2897":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:3931:2902":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"6:4991:6327":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:119:13253":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"20:487:23490":{"crate_id":20,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"1:42476:128":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"17:13821:4154":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:9453:19636":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"11:1859:4795":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:43674:5417":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"4:1924:12946":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"6:4827:6239":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:21862:5257":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:6321:4409":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"4:3168:4932":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:7591:7466":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:11220:3486":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"4:7697:5004":{"crate_id":4,"path":["std","error","private","Internal"],"kind":"struct"},"1:9151:2695":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"0:86:1661":{"crate_id":0,"path":["num_integer","div_floor"],"kind":"function"},"17:12345:3719":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"4:361:4904":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:10053:5214":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:9038:34752":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:3225:4249":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:12006:3653":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"4:9003:6781":{"crate_id":4,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:9512:3290":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"14:31:4764":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:2851:2293":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:12622:3429":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:2509:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:43210:5428":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:9469:3282":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:6598:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"4:3325:4938":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"16:5386:3256":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:13625:4097":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:11265:5225":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:10068:3350":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:5944:4326":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:2694:226":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:45822:5561":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"4:8907:5102":{"crate_id":4,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"4:554:4906":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"9:234:5472":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:2912:33203":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:43857:5519":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"4:3355:2902":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"16:5616:4286":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:45746:5557":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:5485:2912":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:6400:4419":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:2822:2162":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"4:3129:29720":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:40102:5424":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:40034:5417":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:7081:2510":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:21916:24654":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"0:96:1697":{"crate_id":0,"path":["num_integer","lcm"],"kind":"function"},"1:39114:2310":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"18:599:34762":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:45968:5565":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:11434:3532":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"4:3995:13011":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"4:1561:4772":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"4:676:12898":{"crate_id":4,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:43649:5234":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"4:8208:4946":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:7030:33396":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"18:515:3077":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:8170:4681":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:47721:5634":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:12382:5243":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:43375:5217":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:7443:6747":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:5346:4283":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:13066:3941":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"11:1879:4798":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:10052:3348":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:1650:5949":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:40324:5436":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:8675:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"4:618:4907":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:9822:3316":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:13240:3981":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:7275:6746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13651:4106":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:21978:7222":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:7259:2408":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"4:10822:5003":{"crate_id":4,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:4110:5163":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:10923:3452":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:2087:4878":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:5380:2902":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"4:9043:4982":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"1:2354:189":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:12138:3671":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:40699:4938":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"4:8748:5095":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"17:8360:19615":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:9107:2693":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:43173:5485":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"4:4096:7183":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:9628:3300":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:10377:3395":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:11924:3643":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12019:3360":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:2470:7191":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:2642:4212":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:40296:5435":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"4:2614:4928":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"4:875:4775":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:44334:5536":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:9159:2698":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:6685:6644":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:13506:4048":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:22260:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:5880:6460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:4019:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:40286:5433":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"20:485:23489":{"crate_id":20,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"1:46158:5571":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"4:10419:4934":{"crate_id":4,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"0:42:1643":{"crate_id":0,"path":["num_integer","average"],"kind":"module"},"6:4999:6329":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:13324:4000":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:11163:3474":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:6016:6530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"4:917:4792":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"6:4941:6304":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:40255:5054":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"4:9386:2963":{"crate_id":4,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"4:11837:5147":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"4:10000:7188":{"crate_id":4,"path":["std","sys","unix","os","Env"],"kind":"struct"},"4:6101:2950":{"crate_id":4,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:4047:4791":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:13721:4131":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"4:2346:12951":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:43621:5505":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:11339:3516":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"4:9098:5115":{"crate_id":4,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"3:0:2257":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"4:10138:13084":{"crate_id":4,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:9350:34755":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:40347:5175":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:47526:5625":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:11832:3627":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"11:859:4782":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"13:110:34736":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:40196:2982":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:12646:3774":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"9:0:2262":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:45413:5544":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"4:1785:4919":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"1:45491:5547":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"0:101:1876":{"crate_id":0,"path":["num_integer","impl_integer_for_usize"],"kind":"macro"},"5:1242:4790":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:42174:2697":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"0:90:1686":{"crate_id":0,"path":["num_integer","div_mod_floor"],"kind":"function"},"4:11912:1126":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"4:530:2931":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"1:40338:5439":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:2692:2465":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"17:9380:19634":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:4318:6025":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:47732:5635":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:9734:3310":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"4:10865:5097":{"crate_id":4,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:7803:4625":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:7211:4897":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:975:3145":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"4:9381:5005":{"crate_id":4,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"0:29:2136":{"crate_id":0,"path":["num_integer","roots","fixpoint"],"kind":"function"},"6:4571:6165":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"11:840:4780":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5071:4280":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:2862:4221":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:2788:2287":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:4037:4258":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:7052:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:4596:4266":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:5022:6337":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:8251:2410":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:5557:4225":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"9:421:18554":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:6587:6610":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:43135:5480":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:41226:5199":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"4:3292:12989":{"crate_id":4,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:40076:5421":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:7263:2441":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"4:9062:4983":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"6:5862:6448":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"4:0:1389":{"crate_id":4,"path":["std"],"kind":"module"},"4:11909:1495":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"16:55:4657":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"1:21107:12966":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:20596:29137":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"20:394:2340":{"crate_id":20,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"16:6671:4460":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"4:1062:4784":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:2932:2298":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:41203:155":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"20:98:23480":{"crate_id":20,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"4:9033:218":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:43327:5227":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:4782:28162":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:40069:5420":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:39334:2305":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12835:3827":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"4:8234:5063":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:6022:19556":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:40116:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:3184:4798":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:43946:5521":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:7595:7467":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"4:11887:936":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"4:1565:2510":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:4439:6098":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"4:8825:5100":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:4183:2704":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:9106:210":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:45644:5553":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:4797:6229":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:22557:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:4590:6166":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"18:590:3090":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:4681:6173":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:4472:6112":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"4:7781:3208":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"4:8124:5054":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"17:9866:3320":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"18:699:3113":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:13777:4139":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:10555:3411":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"4:11162:4984":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:3446:4251":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:44104:6891":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:41454:4772":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"4:11892:312":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"1:43792:5517":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:9405:7513":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:633:4867":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:9068:34757":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:40389:5441":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:2796:2284":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"4:7854:5011":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:6351:19557":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:2506:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"4:11905:1499":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"1:4808:795":{"crate_id":1,"path":["core","iter"],"kind":"module"},"17:11109:3467":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"5:2636:6777":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:12372:3723":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:12330:24267":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"20:247:2332":{"crate_id":20,"path":["num_traits","float","Float"],"kind":"trait"},"1:42403:68":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"11:305:5767":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:46866:5594":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:20577:29132":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:13249:3982":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"4:4074:7182":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"4:4576:6632":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:1821:5155":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:6696:19559":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:3197:2311":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:4527:6142":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:2603:128":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"17:9178:3268":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"11:1634:2866":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9721:3309":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:43084:5479":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:10626:3425":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:13419:4029":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:10516:3409":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:11446:3535":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:5418:4284":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11770:3611":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"4:1931:653":{"crate_id":4,"path":["std","ffi"],"kind":"module"},"1:47862:5641":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:10735:3439":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"5:4137:2902":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:11372:3522":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:20922:12966":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"4:6586:217":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"10:44:4801":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:6558:4435":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:21966:5267":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"4:6621:4975":{"crate_id":4,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:9653:3303":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:21561:12627":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:39161:2301":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"18:113:7161":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:12607:3764":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:21:681":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"14:0:2266":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:41462:4791":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"16:7042:4519":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:7293:4553":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:7065:4521":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:46060:5569":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:12512:2947":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:40487:5187":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"4:11372:4944":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:47666:5629":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:43611:5062":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"16:3782:4254":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:10580:3420":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:12059:3661":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:4466:6110":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:3585:4252":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"7:32:18538":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:10712:19732":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:1544:2902":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:7029:4516":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12510:3751":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:1728:5992":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:5032:4279":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:40376:5181":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:41751:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11641:3581":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:9028:3265":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"4:5179:190":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"4:6757:13105":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:11282:3502":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:40408:5182":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:40693:5191":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:7467:4602":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"4:2211:2929":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"1:41791:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:20984:12626":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:22359:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:2245:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:43223:5488":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:5886:4320":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:7060:4892":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:13181:3962":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:9624:2998":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:2337:4194":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12980:3924":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13169:3959":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:4510:4263":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:5988:6522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:6668:6639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:783:2876":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:4890:6268":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:11355:3520":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:1981:4875":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"4:1572:2861":{"crate_id":4,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:8283:19613":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:40121:5425":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:123:13254":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:526:5820":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:587:5853":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:8548:19621":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:4406:2474":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:43315:5496":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"5:211:2870":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:10691:19731":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:21443:28627":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"4:4737:2940":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:12098:3666":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:4821:6238":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:7526:6757":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:45844:5562":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:8256:4688":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:7181:4894":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"4:7808:5008":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"11:2192:5769":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:1787:3147":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:2691:1648":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"6:4619:6168":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:12357:192":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"6:4719:6193":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:1042:7180":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"4:857:4791":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:4914:2902":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:6136:6568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:568:5843":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"4:1594:4798":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:6724:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12282:3711":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"16:5741:19554":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:2753:1634":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:47686:5631":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:6460:4227":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:9188:34754":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:3317:69":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"5:4005:2872":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"4:11902:743":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"4:7528:2961":{"crate_id":4,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"4:5354:4962":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4538:6147":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"20:390:2346":{"crate_id":20,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"4:4436:13029":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"4:11854:29734":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6132:4362":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:4836:6242":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"18:574:3080":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:7321:2861":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:4904:4275":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:7529:4240":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:20982:12966":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:9986:3337":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:9534:3293":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"4:8220:13027":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:6935:4498":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"20:674:2322":{"crate_id":20,"path":["num_traits","NumAssignOps"],"kind":"trait"},"4:11168:5140":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:20579:29134":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"4:8496:5093":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:43301:5493":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:12576:3758":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:10080:3351":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:12307:3715":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:5065:6362":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:46036:5568":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:7335:34749":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"20:446:2351":{"crate_id":20,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"16:4445:4261":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:22326:177":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"15:0:2267":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:6662:4459":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:8521:19620":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:10989:3159":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:5755:6398":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"4:8410:5086":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:40677:5190":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:41871:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:6977:1857":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:2741:2440":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:2749:2472":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:47324:5622":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:7532:6758":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:2981:2299":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"4:8854:13101":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:7757:4617":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:4255:5165":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"17:13744:4132":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:4767:6213":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"4:11904:740":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"1:41380:5204":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"20:483:23488":{"crate_id":20,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"5:3753:2861":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:11938:112":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"4:8427:13077":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"4:1821:4920":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"14:40:3502":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:4947:6307":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"18:521:23472":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:8718:3129":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:13461:4038":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"4:6296:166":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"4:1985:184":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:40399:5442":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:11461:5231":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:42031:5208":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:42449:71":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:2908:6770":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"4:8736:186":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13399:4023":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:40315:5172":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:4540:4264":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:6819:4487":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:13332:4001":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:1514:5862":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"0:18:1639":{"crate_id":0,"path":["num_integer","roots","Roots"],"kind":"trait"},"4:8319:13064":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12178:3675":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:7318:159":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:21337:12639":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:6116:6554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:1908:14601":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:5834:13173":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:2768:2278":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"4:7821:130":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"5:2916:33204":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:39970:5411":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:11879:3633":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:7195:27310":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11459:3537":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:9803:12966":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"4:10835:4965":{"crate_id":4,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:43461:5219":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:2469:12966":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:10354:3394":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:13842:4157":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"0:22:1642":{"crate_id":0,"path":["num_integer","roots","sqrt"],"kind":"function"},"4:4683:13020":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"5:6248:2897":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:13698:4118":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"4:11888:419":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"17:11136:3468":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:7588:7399":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:7198:134":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:20768:26728":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:11672:7221":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:5963:4333":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:3547:4791":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:49668:12642":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"20:667:2321":{"crate_id":20,"path":["num_traits","RefNum"],"kind":"trait"},"0:116:1921":{"crate_id":0,"path":["num_integer","binomial"],"kind":"function"},"4:5247:120":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"4:8762:5096":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:2933:3155":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:43579:5504":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:9545:3251":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"4:11898:642":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"4:3987:13009":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"4:11210:4989":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"4:11901:742":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"1:7202:152":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"11:1873:4797":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:6008:6528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:13024:3929":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:3382:5159":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"4:8838:13102":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"4:2574:4927":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"4:11461:30681":{"crate_id":4,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:8979:34751":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:10823:3228":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:42913:6883":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"4:6009:2945":{"crate_id":4,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:10440:3403":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"9:352:18567":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:30466:24650":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"16:8129:4676":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"4:11035:6789":{"crate_id":4,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"4:867:2510":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"11:2076:4784":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"4:3060:4929":{"crate_id":4,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:41332:5458":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:2298:18670":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:1351:4772":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"0:26:1641":{"crate_id":0,"path":["num_integer","roots","nth_root"],"kind":"function"},"18:531:3084":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"4:8134:5058":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"17:11011:3457":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"4:638:4910":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"9:502:4853":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"18:507:3080":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:6793:4486":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:9138:3267":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:44088:6887":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:2522:237":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"4:8982:29509":{"crate_id":4,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:2404:4202":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:4857:6252":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:9907:3329":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"4:3782:4945":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12224:3699":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"4:10314:5094":{"crate_id":4,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"4:3170:4933":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"4:11893:1367":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"1:44112:6789":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:42393:6875":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"4:8387:5472":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"18:0:2270":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6981:4509":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"4:355:4903":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:10026:3343":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:11225:4991":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"4:9184:2724":{"crate_id":4,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:8843:28855":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:11422:3531":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:4553:6154":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"4:947:4780":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"4:3677:4943":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:6294:2872":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:10761:19624":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:1555:5880":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:7044:2510":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"8:0:2261":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"4:4642:13028":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:8670:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:4141:5164":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:4294:6008":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:4789:4271":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:8823:3132":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"4:11895:1481":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"17:12449:3736":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:13812:4152":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"20:315:1637":{"crate_id":20,"path":["num_traits","identities","Zero"],"kind":"trait"},"17:11585:3564":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"4:11493:4992":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"11:757:2897":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:43969:5529":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:3749:4253":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:10092:5215":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:7543:4241":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"4:11237:6791":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:6830:6725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12331:3718":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:3063:3166":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"4:11054:4983":{"crate_id":4,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:3169:2308":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:5571:4228":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:6110:6553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:7014:2897":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:40459:5058":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"4:3933:13005":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:6597:2922":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"4:10826:4850":{"crate_id":4,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:6578:6609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"4:11015:5096":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"9:445:18552":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"4:11891:1049":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"16:7711:4615":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"4:2540:2936":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:5367:18668":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4492:6123":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:43425:5500":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:45459:5546":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:863:2881":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:7338:2918":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"20:410:2348":{"crate_id":20,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"1:7211:2442":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:9147:120":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"17:12158:3674":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:10416:3401":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:2808:4219":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:43884:5237":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:4344:6045":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"4:8160:5063":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:11471:3538":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:1519:5864":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:12536:3753":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:6307:4224":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:2077:2890":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:20536:2480":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:0:443":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"4:9877:5455":{"crate_id":4,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:3079:2303":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"20:627:1636":{"crate_id":20,"path":["num_traits","sign","Signed"],"kind":"trait"},"1:40012:5415":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:2911:2295":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:2905:4223":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"4:888:4776":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:0:497":{"crate_id":1,"path":["core"],"kind":"module"},"1:44084:6886":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"4:8215:6779":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:10589:3421":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:6047:6539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:47402:5623":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:3150:4797":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:47464:5624":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"4:8075:3075":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"1:46716:5593":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:2784:2283":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:21332:12629":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:13194:3968":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:45990:5566":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"20:387:2339":{"crate_id":20,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"0:118:1923":{"crate_id":0,"path":["num_integer","multinomial"],"kind":"function"},"16:2378:4201":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:7252:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11193:3478":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:2847:2292":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"11:816:4792":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:7230:6734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:39176:200":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:5747:6396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"4:11688:2976":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"4:7471:5144":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:6585:1945":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"4:8260:5074":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:7255:4901":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"4:7677:12936":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"17:9498:3289":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:8156:4245":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"10:36:5775":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:42713:5477":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"0:92:1683":{"crate_id":0,"path":["num_integer","div_ceil"],"kind":"function"},"1:2780:2280":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:7767:19564":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:8047:4667":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:4818:4272":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"20:188:2336":{"crate_id":20,"path":["num_traits","cast","NumCast"],"kind":"trait"},"16:4480:4262":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:4667:6172":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"0:66:1647":{"crate_id":0,"path":["num_integer","Integer"],"kind":"trait"},"16:6943:19560":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:4728:4269":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:280:2875":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:40708:2988":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:4707:6186":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:13159:3958":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"20:501:2355":{"crate_id":20,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"5:1366:4791":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"14:7:4764":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10897:3451":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:11391:3527":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:40042:5160":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:11993:3650":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:44376:4800":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"17:10303:3391":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"11:119:2855":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:3182:29405":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:6890:4235":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:11299:3505":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:40206:5427":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"5:6180:2916":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"6:5071:6364":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"4:10422:4936":{"crate_id":4,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:2744:2470":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"5:963:2872":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:4322:2980":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:2764:4217":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"4:2867:210":{"crate_id":4,"path":["std","io","error","Result"],"kind":"typedef"},"16:6854:4491":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"4:8469:4951":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"20:563:2075":{"crate_id":20,"path":["num_traits","pow","checked_pow"],"kind":"function"},"6:494:5798":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"0:100:1801":{"crate_id":0,"path":["num_integer","impl_integer_for_isize"],"kind":"macro"},"16:5811:4310":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:9523:3291":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"4:6369:4976":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"17:9566:3270":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"4:10670:5133":{"crate_id":4,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:6691:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"20:196:2334":{"crate_id":20,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"0:102:1894":{"crate_id":0,"path":["num_integer","IterBinomial"],"kind":"struct"},"4:8955:5110":{"crate_id":4,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"4:3247:4936":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:562:5840":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:7538:6759":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:4629:6169":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:1709:5985":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13499:4046":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"4:1783:4918":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"16:2720:4215":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:3266:3158":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:5528:5173":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"11:652:4791":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:41951:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:10705:3434":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:39379:5282":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:5305:4282":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:12419:3730":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:4609:6167":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:2589:116":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:40718:5193":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:2616:4211":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"4:3458:12964":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"17:8858:3133":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:9796:3315":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:1682:5972":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:12403:3729":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"4:6482:4978":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:41243:5201":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:12923:3890":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"4:7838:119":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:32056:5004":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"4:6373:4977":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:41530:193":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"17:10491:3407":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:6061:18669":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:20742:12634":{"crate_id":1,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"1:10010:5060":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"16:6575:19558":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:41345:4946":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:30864:2480":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"17:242:3136":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:21945:6808":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:573:5845":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:20869:12631":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:41394:181":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"4:1895:4922":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"16:5402:3257":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4732:6197":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"4:4760:13016":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:22491:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:9641:3301":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:1630:588":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"17:12072:3662":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"18:671:3109":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:9340:3272":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"11:2212:5773":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"14:215:4768":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"15:180:7165":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:5900:6476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"4:3401:4941":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:4845:4273":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:4433:2707":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:11844:3629":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:4332:2705":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"4:7786:5005":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"16:6179:4369":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:11069:19628":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"11:1561:4794":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:10142:19705":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:13356:4008":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"4:10931:2967":{"crate_id":4,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:40367:5180":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"4:8730:5094":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"2:229:210":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:12318:3716":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:12388:3725":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:4383:6071":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:4521:6139":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:2963:2309":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"4:10942:2968":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:12085:3664":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"4:5502:13082":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"5:4207:4772":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:41597:2510":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"6:4960:6314":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"4:11889:1515":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"17:13033:3930":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:45391:5543":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:9228:34758":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:6243:34747":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"4:10652:6787":{"crate_id":4,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:6544:4232":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:2264:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:13612:4091":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"4:8147:5060":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"16:2448:4204":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:44131:122":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"16:6868:4493":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:42898:5478":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:43357:5060":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"16:4702:4268":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:5015:6334":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"20:503:2354":{"crate_id":20,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"4:9028:167":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:13211:3973":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:39552:24531":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:13121:3953":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:5987:5176":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:13376:4015":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:41289:6874":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:2774:2281":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:21116:5247":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:12033:3658":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:1721:5989":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:22425:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"11:1050:18633":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:46416:5587":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:5586:5174":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"11:1126:4789":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:4641:6170":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:6814:6719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:11721:3586":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:7089:2510":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:39075:2313":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:5785:6415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:1733:7375":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:9985:4791":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:6695:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:10635:3426":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:39216:199":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"4:2215:12948":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"17:13101:3945":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:10428:3402":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"20:648:2365":{"crate_id":20,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"16:5847:4317":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:2827:2289":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:41991:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"4:10357:2964":{"crate_id":4,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"5:815:2879":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:21004:5247":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:30041:7192":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"4:4574:6630":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:4872:4274":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:40306:5169":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:41606:183":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"4:5499:6540":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"11:1866:4796":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:2805:2288":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"5:2905:4869":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:3899:4257":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:12046:3659":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:4568:4265":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"4:1080:4790":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:8250:2411":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:7519:4607":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"0:12:1638":{"crate_id":0,"path":["num_integer","roots"],"kind":"module"},"4:7460:3144":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:43479:5220":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:43507:5501":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"0:84:1751":{"crate_id":0,"path":["num_integer","div_rem"],"kind":"function"},"4:4679:13017":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:1947:3151":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"15:219:18655":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:20909:12638":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:43236:5489":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:4546:6152":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:43656:5418":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:386:3139":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"4:3249:4937":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"4:6085:2947":{"crate_id":4,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"11:768:2861":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:40670:5189":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"0:88:1673":{"crate_id":0,"path":["num_integer","mod_floor"],"kind":"function"},"16:4624:4267":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:45622:5552":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"20:416:2347":{"crate_id":20,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"1:1467:1633":{"crate_id":1,"path":["core","mem"],"kind":"module"},"5:3129:33398":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:5967:6510":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"4:6188:2942":{"crate_id":4,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:20938:12624":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:13367:4012":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"4:6538:13098":{"crate_id":4,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:3163:2306":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:30836:183":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"11:2204:34734":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:9295:5210":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:9557:3269":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"18:614:34761":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:5077:6367":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:35:2868":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"4:7015:7186":{"crate_id":4,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:5104:4281":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:39372:2705":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:42458:68":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"6:5947:6502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:6706:6650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5051:6356":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"4:10209:4964":{"crate_id":4,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"4:10462:2965":{"crate_id":4,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:4400:4260":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:5829:6435":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"4:6907:2957":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:41671:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:1978:3154":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:9362:141":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"6:4288:6007":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"4:5764:2944":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:5032:6342":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:1752:6001":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:9876:3207":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:10283:3390":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:10244:5219":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:11891:3635":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:3142:2304":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:13344:4007":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:40684:4976":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:45367:5542":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:5000:4278":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:9609:2934":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"4:901:2897":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:11600:3570":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"5:1078:7181":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:40277:5432":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:43665:5160":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:13411:4026":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:2926:2138":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"6:1532:5870":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:9322:34759":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:4251:207":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"4:3208:4934":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:41445:1911":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:46606:5590":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:43778:5514":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"4:11308:2972":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:2668:4213":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:6431:4421":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:4803:6232":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:21083:12966":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"4:7693:5003":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"4:8776:5097":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"1:2763:2279":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"4:8800:2510":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:20549:28629":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"11:1540:4793":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:1443:4774":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"4:11195:4988":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:11410:3528":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"18:96:7158":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:11783:7565":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:6721:7189":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:2830:4220":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"4:5067:191":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"4:5439:4965":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"17:9275:34750":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"4:7932:5012":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:22458:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:40149:5426":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:2348:182":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"11:703:4774":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:2524:4207":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"4:1433:144":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:9895:3325":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:6776:6700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"4:3465:12984":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"17:10104:3353":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:6367:2510":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"4:4845:13053":{"crate_id":4,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"6:6785:6703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:9149:2694":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"4:11091:4982":{"crate_id":4,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"4:7257:29754":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"1:44364:5539":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"11:1009:4784":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:10130:5216":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"4:10948:2969":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:25847:2330":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"4:3983:13008":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"0:24:1640":{"crate_id":0,"path":["num_integer","roots","cbrt"],"kind":"function"},"5:5191:2872":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"4:7595:4995":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"1:47610:5627":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:22524:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:11861:3632":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:4:1014":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"12:0:2265":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"4:2372:12961":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"6:5779:6414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:4813:6235":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"4:2206:129":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"1:44108:6892":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"18:538:3087":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:42705:5476":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:22293:176":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"4:4112:13026":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:10660:3429":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:4970:6320":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:9886:3322":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:10804:5224":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:43631:5506":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:40083:7422":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"4:2832:2939":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"18:481:3078":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:6488:4423":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:39961:5410":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:47675:5630":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"4:8792:5099":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"9:481:18551":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:4757:6207":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"4:5686:4968":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"4:4256:4948":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"4:3210:4935":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:2833:2163":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"20:137:2337":{"crate_id":20,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"16:2572:4209":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:506:5803":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:6002:6525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"4:3132:30411":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:2706:2466":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"}},"external_crates":{"20":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}