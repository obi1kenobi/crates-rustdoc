{"root":"0:0:1656","crate_version":"0.3.28","includes_private":true,"index":{"0:282-0:135:1648":{"id":"0:282-0:135:1648","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[43,39],"end":[43,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::future_obj::LocalFutureObj","name":"LocalFutureObj","id":"0:135:1648","glob":false}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[242,4],"end":[250,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}},"items":["0:234:1827","0:235:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:199:1827":{"id":"0:199:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[180,4],"end":[182,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12038:30439":{"id":"2:12038:30439","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12039:30431"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43631:5255","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:2106-0:169:1647":{"id":"a:2:8250:2106-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:235:588":{"id":"0:235:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[247,8],"end":[249,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:309:1645":{"id":"b:2:2553-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:169:1647":{"id":"b:2:3319-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:311:1643":{"id":"0:311:1643","crate_id":0,"name":"waker","span":{"filename":"futures-task/src/waker_ref.rs","begin":[15,4],"end":[15,30]},"visibility":{"restricted":{"parent":"0:103:1644","path":"::waker_ref"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"ManuallyDrop","id":"2:30232:1834","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:269:694":{"id":"0:269:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[313,8],"end":[315,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[206,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}}],"bindings":[]}}}},"items":["0:215:1827","0:216:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:1820":{"id":"0:94:1820","crate_id":0,"name":"clone_arc_raw","span":{"filename":"futures-task/src/waker.rs","begin":[40,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:80:1643","path":"::waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":{"resolved_path":{"name":"RawWaker","id":"2:44326:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:283-0:190:1649":{"id":"0:283-0:190:1649","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[43,55],"end":[43,70]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::future_obj::UnsafeFutureObj","name":"UnsafeFutureObj","id":"0:190:1649","glob":false}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[176,0],"end":[185,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:1858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"F"}}},"items":["0:199:1827","0:200:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12116:26170":{"id":"2:12116:26170","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12130:25534":{"id":"2:12130:25534","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12039:30431":{"id":"2:12039:30431","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12038:30439"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43640:5256","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[74,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:23:1780","0:24:1787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:309:1645":{"id":"b:2:2542-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:135:1648":{"id":"a:2:2701:228-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12034:26153":{"id":"2:12034:26153","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12033:26152"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:939":{"id":"0:115:939","crate_id":0,"name":"new","span":{"filename":"futures-task/src/waker_ref.rs","begin":[22,4],"end":[27,5]},"visibility":"public","docs":"Create a new [`WakerRef`] from a [`Waker`] reference.","links":{"`WakerRef`":"0:309:1645","`Waker`":"2:12512:1655"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["waker",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:1648":{"id":"0:135:1648","crate_id":0,"name":"LocalFutureObj","span":{"filename":"futures-task/src/future_obj.rs","begin":[16,0],"end":[20,1]},"visibility":"public","docs":"A custom trait object for polling futures, roughly akin to\n`Box<dyn Future<Output = T> + 'a>`.\n\nThis custom trait object was introduced as currently it is not possible to\ntake `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std\ncontexts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:138:706","0:139:1857","0:140:1841"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:149","a:2:2701:228-0:135:1648","a:2:8249:2107-0:135:1648","a:2:8250:2106-0:135:1648","a:2:2684:220-0:135:1648","b:2:2542-0:135:1648","b:2:2248-0:135:1648","b:2:2553-0:135:1648","b:2:2251-0:135:1648","b:2:2538-0:135:1648","b:2:12312-0:135:1648","b:2:3319-0:135:1648","b:2:2548-0:135:1648","0:155","0:158","0:141","0:277","0:166","0:270","0:266","0:273","0:162"]}}},"2:12040:24835":{"id":"2:12040:24835","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43611:5253","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3321:1491":{"id":"2:3321:1491","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39341:5017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[277,4],"end":[286,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:250:1827","0:251:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:15:1639":{"id":"a:2:2684:220-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[72,0],"end":[77,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:161:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:272:694":{"id":"0:272:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[319,8],"end":[321,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:135:1648":{"id":"a:2:2684:220-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12032:32880":{"id":"2:12032:32880","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11894:1397","crate::ops::IndexMut":"2:2985:2178","str::slice_unchecked":"2:12031:32879"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:1767":{"id":"0:64:1767","crate_id":0,"name":"spawn_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[173,8],"end":[175,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312:1841":{"id":"0:312:1841","crate_id":0,"name":"_marker","span":{"filename":"futures-task/src/waker_ref.rs","begin":[16,4],"end":[16,32]},"visibility":{"restricted":{"parent":"0:103:1644","path":"::waker_ref"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"2:2706:1836","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"tuple":[]}}}}],"bindings":[]}}}}}},"2:12133:25531":{"id":"2:12133:25531","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:939":{"id":"0:152:939","crate_id":0,"name":"new","span":{"filename":"futures-task/src/future_obj.rs","begin":[45,4],"end":[51,5]},"visibility":"public","docs":"Create a `LocalFutureObj` from a custom trait object representation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2552:1478":{"id":"2:2552:1478","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88:1818":{"id":"0:88:1818","crate_id":0,"name":"waker_vtable","span":{"filename":"futures-task/src/waker.rs","begin":[6,0],"end":[13,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"RawWakerVTable","id":"2:44334:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[266,4],"end":[275,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:245:1827","0:246:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[66,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:157:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12012:2352":{"id":"2:12012:2352","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2541:2345":{"id":"2:2541:2345","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12011:811":{"id":"2:12011:811","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11888:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:1777":{"id":"0:40:1777","crate_id":0,"name":"status_local","span":{"filename":"futures-task/src/spawn.rs","begin":[121,4],"end":[123,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:12312-0:135:1648":{"id":"b:2:12312-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:12308:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:12314:186","2:12315:151","2:12316:783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"0:31:1767":{"id":"0:31:1767","crate_id":0,"name":"spawn_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[97,4],"end":[99,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[25,0],"end":[25,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12019:26023":{"id":"2:12019:26023","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11279:11581"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:694":{"id":"0:279:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[331,8],"end":[333,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12036:5265":{"id":"2:12036:5265","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43333:5245","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:169:1647":{"id":"b:2:2538-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:2345"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:15:1639":{"id":"b:2:2538-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2345"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28:1773":{"id":"0:28:1773","crate_id":0,"name":"status","span":{"filename":"futures-task/src/spawn.rs","begin":[91,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301-0:294:1650":{"id":"0:301-0:294:1650","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[46,0],"end":[46,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::noop_waker::noop_waker","name":"noop_waker","id":"0:294:1650","glob":false}}},"0:36:1777":{"id":"0:36:1777","crate_id":0,"name":"status_local","span":{"filename":"futures-task/src/spawn.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[106,0],"end":[106,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:125:1646":{"id":"0:125:1646","crate_id":0,"name":"future_obj","span":{"filename":"futures-task/src/future_obj.rs","begin":[1,0],"end":[335,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:217:1790","0:135:1648","0:143:1860","0:146:1861","0:169:1647","0:190:1649"],"is_stripped":false}}},"0:265:694":{"id":"0:265:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[307,8],"end":[309,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12042:30444":{"id":"2:12042:30444","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43649:4966","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:1827":{"id":"0:215:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[207,4],"end":[209,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:1827":{"id":"0:250:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[278,8],"end":[281,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123-0:120:1644":{"id":"0:123-0:120:1644","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[40,27],"end":[40,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]","#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"import":{"source":"crate::waker_ref::waker_ref","name":"waker_ref","id":"0:120:1644","glob":false}}},"2:12049:25688":{"id":"2:12049:25688","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12020:32878":{"id":"2:12020:32878","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12075:26165":{"id":"2:12075:26165","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580","str::rsplitn":"2:12078:26167"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43461:4951","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50":{"id":"0:50","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[141,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status_local"],"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"Sp"}}],"bindings":[]}}}},"items":["0:52:1776","0:53:1777"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[59,0],"end":[63,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[330,4],"end":[334,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:279:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:1858-0:309:1645":{"id":"a:2:2741:1858-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[306,4],"end":[310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:265:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12063:26161":{"id":"2:12063:26161","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11535:4946","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12103:32891":{"id":"2:12103:32891","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:1861":{"id":"0:146:1861","crate_id":0,"name":"remove_drop_lifetime","span":{"filename":"futures-task/src/future_obj.rs","begin":[36,0],"end":[40,1]},"visibility":{"restricted":{"parent":"0:125:1646","path":"::future_obj"}},"docs":null,"links":{},"attrs":["#[allow(single_use_lifetimes)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"function_pointer":{"decl":{"inputs":[["_",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}}]],"output":{"function_pointer":{"decl":{"inputs":[["_",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'static"}}}}]],"output":null,"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[105,0],"end":[105,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:168:588":{"id":"0:168:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[89,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:1051":{"id":"0:165:1051","crate_id":0,"name":"poll","span":{"filename":"futures-task/src/future_obj.rs","begin":[83,4],"end":[85,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12501:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44291:195","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:1827":{"id":"0:204:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[188,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:2107-0:15:1639":{"id":"a:2:8249:2107-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:169:1647":{"id":"0:169:1647","crate_id":0,"name":"FutureObj","span":{"filename":"futures-task/src/future_obj.rs","begin":[103,0],"end":[103,51]},"visibility":"public","docs":"A custom trait object for polling futures, roughly akin to\n`Box<dyn Future<Output = T> + Send + 'a>`.\n\nThis custom trait object was introduced as currently it is not possible to\ntake `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std\ncontexts.\n\nYou should generally not need to use this type outside of `no_std` or when\nimplementing `Spawn`, consider using `BoxFuture` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:173:1606"]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:178","a:2:2701:228-0:169:1647","a:2:8249:2107-0:169:1647","a:2:8250:2106-0:169:1647","b:2:2542-0:169:1647","b:2:2248-0:169:1647","b:2:2553-0:169:1647","b:2:2251-0:169:1647","b:2:2538-0:169:1647","b:2:12312-0:169:1647","b:2:3319-0:169:1647","b:2:2548-0:169:1647","0:252","0:186","0:174","0:256","0:158","0:263","0:176","0:183","0:259"]}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[232,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}},"items":["0:229:1827","0:230:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2250:2028":{"id":"2:2250:2028","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:135:1648":{"id":"b:2:2548-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[318,4],"end":[322,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:272:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:309:1645":{"id":"b:2:2548-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:164:186":{"id":"0:164:186","crate_id":0,"name":"Output","span":{"filename":"futures-task/src/future_obj.rs","begin":[80,4],"end":[80,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:24:1787":{"id":"0:24:1787","crate_id":0,"name":"is_shutdown","span":{"filename":"futures-task/src/spawn.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Check whether spawning failed to the executor being shut down.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:694":{"id":"0:258:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[295,8],"end":[297,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:33554":{"id":"5:5398:33554","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9:1638":{"id":"0:9:1638","crate_id":0,"name":"Spawn","span":{"filename":"futures-task/src/spawn.rs","begin":[6,0],"end":[27,1]},"visibility":"public","docs":"The `Spawn` trait allows for pushing futures onto an executor that will\nrun them to completion.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:10:1767","0:11:1773"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:46","0:29","0:25","0:54","0:62"]}}},"0:18:668":{"id":"0:18:668","crate_id":0,"name":"fmt","span":{"filename":"futures-task/src/spawn.rs","begin":[60,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[300,4],"end":[304,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:262:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[116,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:185:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:1858-0:15:1639":{"id":"a:2:2741:1858-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:308-2:12512:1655":{"id":"0:308-2:12512:1655","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[50,62],"end":[50,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"core::task::Waker","name":"Waker","id":"2:12512:1655","glob":false}}},"0:217:1790":{"id":"0:217:1790","crate_id":0,"name":"if_alloc","span":{"filename":"futures-task/src/future_obj.rs","begin":[215,0],"end":[215,12]},"visibility":{"restricted":{"parent":"0:125:1646","path":"::future_obj"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"2:12043:26169":{"id":"2:12043:26169","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12084:32885":{"id":"2:12084:32885","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12029:1900":{"id":"2:12029:1900","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:1644":{"id":"0:103:1644","crate_id":0,"name":"waker_ref","span":{"filename":"futures-task/src/waker_ref.rs","begin":[1,0],"end":[66,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]","#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:309:1645","0:120:1644"],"is_stripped":false}}},"0:92:1831":{"id":"0:92:1831","crate_id":0,"name":"increase_refcount","span":{"filename":"futures-task/src/waker.rs","begin":[32,0],"end":[37,1]},"visibility":{"restricted":{"parent":"0:80:1643","path":"::waker"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: redundant_clone)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:1767":{"id":"0:56:1767","crate_id":0,"name":"spawn_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[152,8],"end":[154,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12101:32890":{"id":"2:12101:32890","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12105:32892":{"id":"2:12105:32892","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11:1773":{"id":"0:11:1773","crate_id":0,"name":"status","span":{"filename":"futures-task/src/spawn.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":"Determines whether the executor is able to spawn new tasks.\n\nThis method will return `Ok` when the executor is *likely*\n(but not guaranteed) to accept a subsequent spawn attempt.\nLikewise, an `Err` return means that `spawn` is likely, but\nnot guaranteed, to yield an error.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12025:26127":{"id":"2:12025:26127","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:588":{"id":"0:216:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[211,4],"end":[211,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12023:26126":{"id":"2:12023:26126","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5390:33553":{"id":"5:5390:33553","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:1777":{"id":"0:61:1777","crate_id":0,"name":"status_local","span":{"filename":"futures-task/src/spawn.rs","begin":[166,8],"end":[168,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1642":{"id":"0:76:1642","crate_id":0,"name":"ArcWake","span":{"filename":"futures-task/src/arc_wake.rs","begin":[20,0],"end":[49,1]},"visibility":"public","docs":"A way of waking up a specific task.\n\nBy implementing this trait, types that are expected to be wrapped in an `Arc`\ncan be converted into [`Waker`] objects.\nThose Wakers can be used to signal executors that a task it owns\nis ready to be `poll`ed again.\n\nCurrently, there are two ways to convert `ArcWake` into [`Waker`]:\n\n* [`waker`](super::waker()) converts `Arc<impl ArcWake>` into [`Waker`].\n* [`waker_ref`](super::waker_ref()) converts `&Arc<impl ArcWake>` into [`WakerRef`] that\n  provides access to a [`&Waker`][`Waker`].\n\n[`Waker`]: std::task::Waker\n[`WakerRef`]: super::WakerRef","links":{"super::WakerRef":"0:309:1645","super::waker()":"0:90:1643","super::waker_ref()":"0:120:1644","std::task::Waker":"2:12512:1655"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:77:1811","0:78:1812"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"2:12131:26027":{"id":"2:12131:26027","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39552:26022","Self::is_ascii":"2:12130:25534"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39552:26022","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"futures-task/src/waker_ref.rs","begin":[19,0],"end":[39,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:115:939","0:116:1849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:309:1645":{"id":"b:2:2538-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2541:2345"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241:588":{"id":"0:241:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[261,8],"end":[263,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[151,4],"end":[159,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status"],"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Rc","id":"5:4818:204","args":{"angle_bracketed":{"args":[{"type":{"generic":"Sp"}}],"bindings":[]}}}},"items":["0:56:1767","0:57:1773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245:1827":{"id":"0:245:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[267,8],"end":[270,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:15:1639":{"id":"b:2:2548-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12078:26167":{"id":"2:12078:26167","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11888:419","str::splitn":"2:12075:26165","self::pattern":"2:11712:11580"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43479:4952","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12046:25686":{"id":"2:12046:25686","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:588":{"id":"0:200:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[184,4],"end":[184,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:1606":{"id":"0:173:1606","crate_id":0,"name":"0","span":{"filename":"futures-task/src/future_obj.rs","begin":[103,28],"end":[103,49]},"visibility":{"restricted":{"parent":"0:125:1646","path":"::future_obj"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[122,0],"end":[129,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:188:186","0:189:1051"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:71-0:12:1637":{"id":"0:71-0:12:1637","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[19,23],"end":[19,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::spawn::LocalSpawn","name":"LocalSpawn","id":"0:12:1637","glob":false}}},"0:10:1767":{"id":"0:10:1767","crate_id":0,"name":"spawn_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[15,4],"end":[15,82]},"visibility":"default","docs":"Spawns a future that will be run to completion.\n\n# Errors\n\nThe executor may be unable to spawn tasks. Spawn errors should\nrepresent relatively rare scenarios, such as the executor\nhaving been shut down so that it is no longer able to accept\ntasks.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"5:5402:25532":{"id":"5:5402:25532","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12134:25530"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1656":{"id":"0:0:1656","crate_id":0,"name":"futures_task","span":{"filename":"futures-task/src/lib.rs","begin":[1,0],"end":[50,69]},"visibility":"public","docs":"Tools for working with tasks.","links":{},"attrs":["#![warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms, single_use_lifetimes),\nallow(dead_code, unused_assignments, unused_variables))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:4:1636","0:74:1641","0:80:1643","0:103:1644","0:125:1646","0:284:1650","0:71-0:12:1637","0:72-0:9:1638","0:73-0:15:1639","0:79-0:76:1642","0:102-0:90:1643","0:123-0:120:1644","0:124-0:309:1645","0:281-0:169:1647","0:282-0:135:1648","0:283-0:190:1649","0:301-0:294:1650","0:302-0:295:1651","0:304-2:12501:107","0:305-2:44291:195","0:306-2:44326:1653","0:307-2:44334:1654","0:308-2:12512:1655"],"is_stripped":false}}},"b:2:3319-0:15:1639":{"id":"b:2:3319-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:188:186":{"id":"0:188:186","crate_id":0,"name":"Output","span":{"filename":"futures-task/src/future_obj.rs","begin":[123,4],"end":[123,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:48:1767":{"id":"0:48:1767","crate_id":0,"name":"spawn_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[132,8],"end":[134,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:2106-0:135:1648":{"id":"a:2:8250:2106-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12316:783":{"id":"2:12316:783","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:12308:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:1909":{"id":"0:292:1909","crate_id":0,"name":"NOOP_WAKER_VTABLE","span":{"filename":"futures-task/src/noop_waker.rs","begin":[12,0],"end":[12,92]},"visibility":{"restricted":{"parent":"0:284:1650","path":"::noop_waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"RawWakerVTable","id":"2:44334:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12035:4967":{"id":"2:12035:4967","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43327:4959","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:588":{"id":"0:251:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[283,8],"end":[285,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12106:32893":{"id":"2:12106:32893","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:588":{"id":"0:211:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[203,4],"end":[203,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:2253:22670":{"id":"2:2253:22670","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:15:1639":{"id":"b:2:2610-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:11612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:5794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"0:14:1777":{"id":"0:14:1777","crate_id":0,"name":"status_local","span":{"filename":"futures-task/src/spawn.rs","begin":[49,4],"end":[51,5]},"visibility":"default","docs":"Determines whether the executor is able to spawn new tasks.\n\nThis method will return `Ok` when the executor is *likely*\n(but not guaranteed) to accept a subsequent spawn attempt.\nLikewise, an `Err` return means that `spawn` is likely, but\nnot guaranteed, to yield an error.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:15:1639":{"id":"b:2:2248-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2028"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65:1773":{"id":"0:65:1773","crate_id":0,"name":"status","span":{"filename":"futures-task/src/spawn.rs","begin":[177,8],"end":[179,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1869":{"id":"0:154:1869","crate_id":0,"name":"into_future_obj","span":{"filename":"futures-task/src/future_obj.rs","begin":[61,4],"end":[63,5]},"visibility":"public","docs":"Converts the `LocalFutureObj` into a `FutureObj`.\n\n# Safety\n\nTo make this operation safe one has to ensure that the `UnsafeFutureObj`\ninstance from which this `LocalFutureObj` was created actually\nimplements `Send`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:21":{"id":"0:21","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[72,0],"end":[72,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","provide","description","type_id"],"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:230:588":{"id":"0:230:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[237,8],"end":[239,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:52:1776":{"id":"0:52:1776","crate_id":0,"name":"spawn_local_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[142,8],"end":[144,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234:1827":{"id":"0:234:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[243,8],"end":[245,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12022:26129":{"id":"2:12022:26129","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5399:33555":{"id":"5:5399:33555","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:1792","`String`":"5:7241:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:694":{"id":"0:262:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[301,8],"end":[303,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:668":{"id":"0:315:668","crate_id":0,"name":"fmt","span":{"filename":"futures-task/src/waker_ref.rs","begin":[13,9],"end":[13,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102-0:90:1643":{"id":"0:102-0:90:1643","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[33,0],"end":[33,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]","#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"import":{"source":"crate::waker::waker","name":"waker","id":"0:90:1643","glob":false}}},"b:2:2248-0:309:1645":{"id":"b:2:2248-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2250:2028"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12027:26128":{"id":"2:12027:26128","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:281-0:169:1647":{"id":"0:281-0:169:1647","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[43,28],"end":[43,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::future_obj::FutureObj","name":"FutureObj","id":"0:169:1647","glob":false}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[187,0],"end":[193,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]},{"trait":{"name":"Unpin","id":"2:2741:1858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}}},"items":["0:204:1827","0:205:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5646:1455":{"id":"5:5646:1455","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307-2:44334:1654":{"id":"0:307-2:44334:1654","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[50,46],"end":[50,60]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"core::task::RawWakerVTable","name":"RawWakerVTable","id":"2:44334:1654","glob":false}}},"2:12037:4877":{"id":"2:12037:4877","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43343:3114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5400:6284":{"id":"5:5400:6284","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12031:32879":{"id":"2:12031:32879","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11894:1397","str::slice_mut_unchecked":"2:12032:32880","crate::ops::Index":"2:2981:2177"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:1827":{"id":"0:224:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[223,8],"end":[225,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[195,0],"end":[204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"F"}}}}],"bindings":[]}}}},"items":["0:210:1827","0:211:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12056:2351":{"id":"2:12056:2351","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:694":{"id":"0:255:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[289,8],"end":[291,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:15:1639":{"id":"b:2:2251-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:22670"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:309:1645":{"id":"0:309:1645","crate_id":0,"name":"WakerRef","span":{"filename":"futures-task/src/waker_ref.rs","begin":[14,0],"end":[17,1]},"visibility":"public","docs":"A [`Waker`] that is only valid for a given lifetime.\n\nNote: this type implements [`Deref<Target = Waker>`](std::ops::Deref),\nso it can be used to get a `&Waker`.","links":{"`Waker`":"2:12512:1655","std::ops::Deref":"2:2898:117"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:311:1643","0:312:1841"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:113","a:2:2701:228-0:309:1645","a:2:8249:2107-0:309:1645","a:2:8250:2106-0:309:1645","a:2:2684:220-0:309:1645","a:2:2741:1858-0:309:1645","b:2:2542-0:309:1645","b:2:2248-0:309:1645","b:2:2553-0:309:1645","b:2:2251-0:309:1645","b:2:2538-0:309:1645","b:2:3319-0:309:1645","b:2:2548-0:309:1645","0:117","0:313"]}}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[42,0],"end":[64,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:152:939","0:154:1869"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"futures-task/src/waker_ref.rs","begin":[13,9],"end":[13,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:315:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:69:1777":{"id":"0:69:1777","crate_id":0,"name":"status_local","span":{"filename":"futures-task/src/spawn.rs","begin":[188,8],"end":[190,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5401:25533":{"id":"5:5401:25533","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12133:25531"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[131,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status"],"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"Sp"}}],"bindings":[]}}}},"items":["0:48:1767","0:49:1773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:309:1645":{"id":"a:2:2684:220-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:2106-0:15:1639":{"id":"a:2:8250:2106-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2544:694":{"id":"2:2544:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12010":{"id":"2:12010","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12011:811","2:12012:2352","2:12013:32875","2:12014:32876","2:12016:32877","2:12019:26023","2:12020:32878","2:12021:314","2:12022:26129","2:12023:26126","2:12025:26127","2:12027:26128","2:12029:1900","2:12031:32879","2:12032:32880","2:12033:26152","2:12034:26153","2:12035:4967","2:12036:5265","2:12037:4877","2:12038:30439","2:12039:30431","2:12040:24835","2:12041:32881","2:12042:30444","2:12043:26169","2:12046:25686","2:12049:25688","2:12052:2392","2:12056:2351","2:12060:24834","2:12063:26161","2:12066:26163","2:12069:32882","2:12072:32883","2:12075:26165","2:12078:26167","2:12081:32884","2:12084:32885","2:12087:2040","2:12090:32886","2:12093:32887","2:12096:32888","2:12099:32889","2:12101:32890","2:12103:32891","2:12105:32892","2:12106:32893","2:12107:32894","2:12110:32895","2:12113:23898","2:12116:26170","2:12119:32896","2:12122:32897","2:12125:32898","2:12128:32899","2:12130:25534","2:12131:26027","2:12132:25535","2:12133:25531","2:12134:25530","2:12135:32900","2:12137:6168","2:12138:32901"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:161:694":{"id":"0:161:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[74,4],"end":[76,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:1051":{"id":"0:189:1051","crate_id":0,"name":"poll","span":{"filename":"futures-task/src/future_obj.rs","begin":[126,4],"end":[128,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12501:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44291:195","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[86,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status"],"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Sp"}}},"items":["0:27:1767","0:28:1773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:193:1827":{"id":"0:193:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[153,4],"end":[153,60]},"visibility":"default","docs":"Convert an owned instance into a (conceptually owned) fat pointer.\n\n# Safety\n\n## Implementor\n\nThe trait implementor must guarantee that it is safe to convert the\nprovided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn\nFuture<Output = T> + 'a)>` and call methods on it, non-reentrantly,\nuntil `UnsafeFutureObj::drop` is called with it.","links":{},"attrs":["#[allow(clippy :: unnecessary_safety_doc)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[219,4],"end":[230,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["0:224:1827","0:225:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:291:1908":{"id":"0:291:1908","crate_id":0,"name":"noop","span":{"filename":"futures-task/src/noop_waker.rs","begin":[10,0],"end":[10,35]},"visibility":{"restricted":{"parent":"0:284:1650","path":"::noop_waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_data",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:15:1639":{"id":"b:2:2553-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[252,4],"end":[264,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:240:1827","0:241:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:90:1643":{"id":"0:90:1643","crate_id":0,"name":"waker","span":{"filename":"futures-task/src/waker.rs","begin":[19,0],"end":[26,1]},"visibility":"public","docs":"Creates a [`Waker`] from an `Arc<impl ArcWake>`.\n\nThe returned [`Waker`] will call\n[`ArcWake.wake()`](ArcWake::wake) if awoken.","links":{"`Waker`":"2:12512:1655","ArcWake::wake":"0:77:1811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["wake",{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:2107-0:169:1647":{"id":"a:2:8249:2107-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:309:1645":{"id":"a:2:2701:228-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12021:314":{"id":"2:12021:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12022:26129","`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12060:24834":{"id":"2:12060:24834","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11712:11580","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split_whitespace":"2:12038:30439","str::rsplit":"2:12066:26163"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43357:4944","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:1821":{"id":"0:96:1821","crate_id":0,"name":"wake_arc_raw","span":{"filename":"futures-task/src/waker.rs","begin":[45,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:80:1643","path":"::waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:1776":{"id":"0:39:1776","crate_id":0,"name":"spawn_local_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:1823":{"id":"0:100:1823","crate_id":0,"name":"drop_arc_raw","span":{"filename":"futures-task/src/waker.rs","begin":[57,0],"end":[59,1]},"visibility":{"restricted":{"parent":"0:80:1643","path":"::waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[324,4],"end":[328,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:276:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:72-0:9:1638":{"id":"0:72-0:9:1638","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[19,35],"end":[19,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::spawn::Spawn","name":"Spawn","id":"0:9:1638","glob":false}}},"2:2557:1477":{"id":"2:2557:1477","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:15:1639":{"id":"a:2:2701:228-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:139:1857":{"id":"0:139:1857","crate_id":0,"name":"drop_fn","span":{"filename":"futures-task/src/future_obj.rs","begin":[18,4],"end":[18,63]},"visibility":{"restricted":{"parent":"0:125:1646","path":"::future_obj"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"decl":{"inputs":[["_",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'static"}}}}]],"output":null,"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}}}},"a:2:8249:2107-0:135:1648":{"id":"a:2:8249:2107-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12052:2392":{"id":"2:12052:2392","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:1767":{"id":"0:27:1767","crate_id":0,"name":"spawn_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[87,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12113:23898":{"id":"2:12113:23898","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:169:1647":{"id":"b:2:2553-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79-0:76:1642":{"id":"0:79-0:76:1642","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[26,0],"end":[26,33]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]","#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"import":{"source":"crate::arc_wake::ArcWake","name":"ArcWake","id":"0:76:1642","glob":false}}},"b:2:2538-0:135:1648":{"id":"b:2:2538-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:2345"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:1827":{"id":"0:229:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[233,8],"end":[235,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:1650":{"id":"0:284:1650","crate_id":0,"name":"noop_waker","span":{"filename":"futures-task/src/noop_waker.rs","begin":[1,0],"end":[63,1]},"visibility":"crate","docs":"Utilities for creating zero-cost wakers that don't do anything.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:290:1905","0:291:1908","0:292:1909","0:293:1907","0:294:1650","0:295:1651"],"is_stripped":false}}},"b:2:2553-0:135:1648":{"id":"b:2:2553-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[106,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status_local"],"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Sp"}}},"items":["0:35:1776","0:36:1777"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:4:1636":{"id":"0:4:1636","crate_id":0,"name":"spawn","span":{"filename":"futures-task/src/spawn.rs","begin":[1,0],"end":[192,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:41:1790","0:9:1638","0:12:1637","0:15:1639"],"is_stripped":false}}},"2:12099:32889":{"id":"2:12099:32889","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12072:32883":{"id":"2:12072:32883","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11712:11580","str::split":"2:12060:24834","prim@char":"1:11888:419","str::split_terminator":"2:12069:32882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43425:5248","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210:1827":{"id":"0:210:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[199,4],"end":[201,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:1780":{"id":"0:23:1780","crate_id":0,"name":"shutdown","span":{"filename":"futures-task/src/spawn.rs","begin":[76,4],"end":[78,5]},"visibility":"public","docs":"Spawning failed because the executor has been shut down.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:588":{"id":"0:194:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[173,4],"end":[173,60]},"visibility":"default","docs":"Drops the future represented by the given fat pointer.\n\n# Safety\n\n## Implementor\n\nThe trait implementor must guarantee that it is safe to call this\nfunction once per `into_raw` invocation.\n\n## Caller\n\nThe caller must ensure:\n\n * the pointer passed was obtained from an `into_raw` invocation from\n   this same trait object\n * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output\n   = T> + 'a)>`\n * the pointer must not be used again after this function is called","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:80:1643":{"id":"0:80:1643","crate_id":0,"name":"waker","span":{"filename":"futures-task/src/waker.rs","begin":[1,0],"end":[59,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]","#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:88:1818","0:90:1643","0:92:1831","0:94:1820","0:96:1821","0:98:1822","0:100:1823"],"is_stripped":false}}},"2:12125:32898":{"id":"2:12125:32898","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12134:25530":{"id":"2:12134:25530","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[65,0],"end":[69,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68:1776":{"id":"0:68:1776","crate_id":0,"name":"spawn_local_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[184,8],"end":[186,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12013:32875":{"id":"2:12013:32875","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:32901":{"id":"2:12138:32901","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4533:32901"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43674:5155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[288,4],"end":[292,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:255:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:169:1647":{"id":"b:2:2542-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:12:1637":{"id":"0:12:1637","crate_id":0,"name":"LocalSpawn","span":{"filename":"futures-task/src/spawn.rs","begin":[31,0],"end":[52,1]},"visibility":"public","docs":"The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\nthat don't implement `Send`.","links":{"`Spawn`":"0:9:1638"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:13:1776","0:14:1777"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:66","0:58","0:50","0:33","0:37"]}}},"2:12122:32897":{"id":"2:12122:32897","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12107:32894":{"id":"2:12107:32894","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11737:11577","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305-2:44291:195":{"id":"0:305-2:44291:195","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[50,30],"end":[50,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"core::task::Poll","name":"Poll","id":"2:44291:195","glob":false}}},"b:2:3319-0:135:1648":{"id":"b:2:3319-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:13:1776":{"id":"0:13:1776","crate_id":0,"name":"spawn_local_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[40,4],"end":[40,93]},"visibility":"default","docs":"Spawns a future that will be run to completion.\n\n# Errors\n\nThe executor may be unable to spawn tasks. Spawn errors should\nrepresent relatively rare scenarios, such as the executor\nhaving been shut down so that it is no longer able to accept\ntasks.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[96,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status"],"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Sp"}}},"items":["0:31:1767","0:32:1773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[172,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status"],"trait":{"name":"Spawn","id":"0:9:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::sync::Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"generic":"Sp"}}],"bindings":[]}}}},"items":["0:64:1767","0:65:1773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:12312-0:169:1647":{"id":"b:2:12312-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:12308:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:12314:186","2:12315:151","2:12316:783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"2:12096:32888":{"id":"2:12096:32888","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11712:11580","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::match_indices":"2:12093:32887"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43525:5250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[79,0],"end":[86,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:164:186","0:165:1051"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:1849":{"id":"0:116:1849","crate_id":0,"name":"new_unowned","span":{"filename":"futures-task/src/waker_ref.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.\n\nNote: this if for rare cases where the caller created a [`Waker`] in\nan unsafe way (that will be valid only for a lifetime to be determined\nby the caller), and the [`Waker`] doesn't need to or must not be\ndestroyed.","links":{"`WakerRef`":"0:309:1645","`Waker`":"2:12512:1655"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["waker",{"resolved_path":{"name":"ManuallyDrop","id":"2:30232:1834","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12132:25535":{"id":"2:12132:25535","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12033:26152":{"id":"2:12033:26152","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12034:26153"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:33551","5:5384:2137","5:5387:33552","5:5390:33553","5:5398:33554","5:5399:33555","5:5400:6284","5:5401:25533","5:5402:25532"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[108,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:181:939"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:290:1905":{"id":"0:290:1905","crate_id":0,"name":"noop_clone","span":{"filename":"futures-task/src/noop_waker.rs","begin":[6,0],"end":[8,1]},"visibility":{"restricted":{"parent":"0:284:1650","path":"::noop_waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_data",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":{"resolved_path":{"name":"RawWaker","id":"2:44326:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12090:32886":{"id":"2:12090:32886","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11712:11580","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:2040"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43579:5252","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:1773":{"id":"0:32:1773","crate_id":0,"name":"status","span":{"filename":"futures-task/src/spawn.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1822":{"id":"0:98:1822","crate_id":0,"name":"wake_by_ref_arc_raw","span":{"filename":"futures-task/src/waker.rs","begin":[51,0],"end":[55,1]},"visibility":{"restricted":{"parent":"0:80:1643","path":"::waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12314:186":{"id":"2:12314:186","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:205:588":{"id":"0:205:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[192,4],"end":[192,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[312,4],"end":[316,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:269:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73-0:15:1639":{"id":"0:73-0:15:1639","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[19,42],"end":[19,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::spawn::SpawnError","name":"SpawnError","id":"0:15:1639","glob":false}}},"b:2:2248-0:135:1648":{"id":"b:2:2248-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2028"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[161,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status_local"],"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Rc","id":"5:4818:204","args":{"angle_bracketed":{"args":[{"type":{"generic":"Sp"}}],"bindings":[]}}}},"items":["0:60:1776","0:61:1777"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12066:26163":{"id":"2:12066:26163","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11712:11580","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split":"2:12060:24834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43375:4949","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12093:32887":{"id":"2:12093:32887","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11712:11580","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::rmatch_indices":"2:12096:32888"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43507:5249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12315:151":{"id":"2:12315:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"2:2612:5794":{"id":"2:2612:5794","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3382:4888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12069:32882":{"id":"2:12069:32882","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11712:11580","str::split":"2:12060:24834","prim@char":"1:11888:419","`DoubleEndedIterator`":"2:7240:121","str::rsplit_terminator":"2:12072:32883"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43407:5247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57:1773":{"id":"0:57:1773","crate_id":0,"name":"status","span":{"filename":"futures-task/src/spawn.rs","begin":[156,8],"end":[158,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:12041:32881":{"id":"2:12041:32881","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43621:5254","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[116,0],"end":[124,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status_local"],"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Sp"}}},"items":["0:39:1776","0:40:1777"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:169:1647":{"id":"b:2:2248-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2028"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181:939":{"id":"0:181:939","crate_id":0,"name":"new","span":{"filename":"futures-task/src/future_obj.rs","begin":[111,4],"end":[113,5]},"visibility":"public","docs":"Create a `FutureObj` from a custom trait object representation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"UnsafeFutureObj","id":"0:190:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1641":{"id":"0:74:1641","crate_id":0,"name":"arc_wake","span":{"filename":"futures-task/src/arc_wake.rs","begin":[1,0],"end":[49,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]","#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:76:1642"],"is_stripped":false}}},"0:118:230":{"id":"0:118:230","crate_id":0,"name":"Target","span":{"filename":"futures-task/src/waker_ref.rs","begin":[42,4],"end":[42,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:120:1644":{"id":"0:120:1644","crate_id":0,"name":"waker_ref","span":{"filename":"futures-task/src/waker_ref.rs","begin":[55,0],"end":[66,1]},"visibility":"public","docs":"Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.\n\nThe resulting [`Waker`] will call\n[`ArcWake.wake()`](ArcWake::wake) if awoken.","links":{"`Waker`":"2:12512:1655","ArcWake::wake":"0:77:1811"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["wake",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"ArcWake","id":"0:76:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:1860":{"id":"0:143:1860","crate_id":0,"name":"remove_future_lifetime","span":{"filename":"futures-task/src/future_obj.rs","begin":[29,0],"end":[33,1]},"visibility":{"restricted":{"parent":"0:125:1646","path":"::future_obj"}},"docs":null,"links":{},"attrs":["#[allow(single_use_lifetimes)]","#[allow(clippy :: transmute_ptr_to_ptr)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'static"}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:60:1776":{"id":"0:60:1776","crate_id":0,"name":"spawn_local_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[162,8],"end":[164,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:1841":{"id":"0:140:1841","crate_id":0,"name":"_marker","span":{"filename":"futures-task/src/future_obj.rs","begin":[19,4],"end":[19,32]},"visibility":{"restricted":{"parent":"0:125:1646","path":"::future_obj"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"2:2706:1836","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"tuple":[]}}}}],"bindings":[]}}}}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[294,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}},"items":["0:258:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12119:32896":{"id":"2:12119:32896","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:11578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:169:1647":{"id":"b:2:2548-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12081:32884":{"id":"2:12081:32884","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12128:32899":{"id":"2:12128:32899","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11673:127","`FromStr`":"2:11672:6382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11672:6382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11672:6382","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:1773":{"id":"0:49:1773","crate_id":0,"name":"status","span":{"filename":"futures-task/src/spawn.rs","begin":[136,8],"end":[138,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12087:2040":{"id":"2:12087:2040","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11712:11580","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:2040"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43561:5251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:668":{"id":"0:185:668","crate_id":0,"name":"fmt","span":{"filename":"futures-task/src/future_obj.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:1812":{"id":"0:78:1812","crate_id":0,"name":"wake_by_ref","span":{"filename":"futures-task/src/arc_wake.rs","begin":[48,4],"end":[48,41]},"visibility":"default","docs":"Indicates that the associated task is ready to make progress and should\nbe `poll`ed.\n\nThis function can be called from an arbitrary thread, including threads which\ndid not create the `ArcWake` based [`Waker`].\n\nExecutors generally maintain a queue of \"ready\" tasks; `wake_by_ref` should place\nthe associated task onto this queue.\n\nThis function is similar to [`wake`](ArcWake::wake), but must not consume the provided data\npointer.\n\n[`Waker`]: std::task::Waker","links":{"ArcWake::wake":"0:77:1811","std::task::Waker":"2:12512:1655"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["arc_self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12135:32900":{"id":"2:12135:32900","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4535:32900"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43656:5156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:32877":{"id":"2:12016:32877","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12014:32876"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:169:1647":{"id":"a:2:2701:228-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5387:33552":{"id":"5:5387:33552","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:309:1645":{"id":"b:2:2251-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2253:22670"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:240:1827":{"id":"0:240:1827","crate_id":0,"name":"into_raw","span":{"filename":"futures-task/src/future_obj.rs","begin":[256,8],"end":[259,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:135:1648":{"id":"b:2:2542-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"futures-task/src/future_obj.rs","begin":[88,0],"end":[92,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1871","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:168:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12137:6168":{"id":"2:12137:6168","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4536:6168"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43665:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:1776":{"id":"0:35:1776","crate_id":0,"name":"spawn_local_obj","span":{"filename":"futures-task/src/spawn.rs","begin":[107,4],"end":[109,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["future",{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15:1639":{"id":"0:15:1639","crate_id":0,"name":"SpawnError","span":{"filename":"futures-task/src/spawn.rs","begin":[55,0],"end":[57,1]},"visibility":"public","docs":"An error that occurred during spawning.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:16:1779"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:22","a:2:2701:228-0:15:1639","a:2:8249:2107-0:15:1639","a:2:8250:2106-0:15:1639","a:2:2684:220-0:15:1639","a:2:2741:1858-0:15:1639","b:2:2542-0:15:1639","b:2:2248-0:15:1639","b:2:2553-0:15:1639","b:2:2251-0:15:1639","b:2:2538-0:15:1639","b:2:3319-0:15:1639","b:2:2610-0:15:1639","b:2:2548-0:15:1639","b:5:5644-0:15:1639","0:21","0:19","0:17"]}}},"0:124-0:309:1645":{"id":"0:124-0:309:1645","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[40,38],"end":[40,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]","#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"import":{"source":"crate::waker_ref::WakerRef","name":"WakerRef","id":"0:309:1645","glob":false}}},"5:5384:2137":{"id":"5:5384:2137","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:309:1645":{"id":"b:2:3319-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:294:1650":{"id":"0:294:1650","crate_id":0,"name":"noop_waker","span":{"filename":"futures-task/src/noop_waker.rs","begin":[29,0],"end":[32,1]},"visibility":"public","docs":"Create a new [`Waker`] which does\nnothing when `wake()` is called on it.\n\n# Examples\n\n```\nuse futures::task::noop_waker;\nlet waker = noop_waker();\nwaker.wake();\n```","links":{"`Waker`":"2:12512:1655"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"futures-task/src/spawn.rs","begin":[183,4],"end":[191,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(futures_no_atomic_cas))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Sp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["status_local"],"trait":{"name":"LocalSpawn","id":"0:12:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::sync::Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"generic":"Sp"}}],"bindings":[]}}}},"items":["0:68:1776","0:69:1777"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:117":{"id":"0:117","crate_id":0,"name":null,"span":{"filename":"futures-task/src/waker_ref.rs","begin":[41,0],"end":[48,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:118:230","0:119:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:16:1779":{"id":"0:16:1779","crate_id":0,"name":"_priv","span":{"filename":"futures-task/src/spawn.rs","begin":[56,4],"end":[56,13]},"visibility":{"restricted":{"parent":"0:4:1636","path":"::spawn"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"tuple":[]}}},"0:77:1811":{"id":"0:77:1811","crate_id":0,"name":"wake","span":{"filename":"futures-task/src/arc_wake.rs","begin":[31,4],"end":[33,5]},"visibility":"default","docs":"Indicates that the associated task is ready to make progress and should\nbe `poll`ed.\n\nThis function can be called from an arbitrary thread, including threads which\ndid not create the `ArcWake` based [`Waker`].\n\nExecutors generally maintain a queue of \"ready\" tasks; `wake` should place\nthe associated task onto this queue.\n\n[`Waker`]: std::task::Waker","links":{"std::task::Waker":"2:12512:1655"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:1651":{"id":"0:295:1651","crate_id":0,"name":"noop_waker_ref","span":{"filename":"futures-task/src/noop_waker.rs","begin":[45,0],"end":[53,1]},"visibility":"public","docs":"Get a static reference to a [`Waker`] which\ndoes nothing when `wake()` is called on it.\n\n# Examples\n\n```\nuse futures::task::noop_waker_ref;\nlet waker = noop_waker_ref();\nwaker.wake_by_ref();\n```","links":{"`Waker`":"2:12512:1655"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:1790":{"id":"0:41:1790","crate_id":0,"name":"if_alloc","span":{"filename":"futures-task/src/spawn.rs","begin":[127,0],"end":[127,12]},"visibility":{"restricted":{"parent":"0:4:1636","path":"::spawn"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:304-2:12501:107":{"id":"0:304-2:12501:107","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[50,21],"end":[50,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"core::task::Context","name":"Context","id":"2:12501:107","glob":false}}},"b:5:5644-0:15:1639":{"id":"b:5:5644-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246:588":{"id":"0:246:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[272,8],"end":[274,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:706":{"id":"0:138:706","crate_id":0,"name":"future","span":{"filename":"futures-task/src/future_obj.rs","begin":[17,4],"end":[17,51]},"visibility":{"restricted":{"parent":"0:125:1646","path":"::future_obj"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'static"}}}}}},"0:276:694":{"id":"0:276:694","crate_id":0,"name":"from","span":{"filename":"futures-task/src/future_obj.rs","begin":[325,8],"end":[327,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["boxed",{"resolved_path":{"name":"Pin","id":"2:41530:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302-0:295:1651":{"id":"0:302-0:295:1651","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[47,0],"end":[47,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::noop_waker::noop_waker_ref","name":"noop_waker_ref","id":"0:295:1651","glob":false}}},"0:225:588":{"id":"0:225:588","crate_id":0,"name":"drop","span":{"filename":"futures-task/src/future_obj.rs","begin":[227,8],"end":[229,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Future","id":"2:12295:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:135:1648":{"id":"b:2:2251-0:135:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalFutureObj","id":"0:135:1648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:22670"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:15:1639":{"id":"b:2:2542-0:15:1639","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:53:1777":{"id":"0:53:1777","crate_id":0,"name":"status_local","span":{"filename":"futures-task/src/spawn.rs","begin":[146,8],"end":[148,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SpawnError","id":"0:15:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:668":{"id":"0:20:668","crate_id":0,"name":"fmt","span":{"filename":"futures-task/src/spawn.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157:668":{"id":"0:157:668","crate_id":0,"name":"fmt","span":{"filename":"futures-task/src/future_obj.rs","begin":[67,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:2106-0:309:1645":{"id":"a:2:8250:2106-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32020:6389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:119:552":{"id":"0:119:552","crate_id":0,"name":"deref","span":{"filename":"futures-task/src/waker_ref.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Waker","id":"2:12512:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:169:1647":{"id":"b:2:2251-0:169:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FutureObj","id":"0:169:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:22670"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:190:1649":{"id":"0:190:1649","crate_id":0,"name":"UnsafeFutureObj","span":{"filename":"futures-task/src/future_obj.rs","begin":[141,0],"end":[174,1]},"visibility":"public","docs":"A custom implementation of a future trait object for `FutureObj`, providing\na vtable with drop support.\n\nThis custom representation is typically used only in `no_std` contexts,\nwhere the default `Box`-based implementation is not available.\n\n# Safety\n\nSee the safety notes on individual methods for what guarantees an\nimplementor must provide.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:193:1827","0:194:588"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"outlives":"'a"}],"implementations":["0:236","0:242","0:195","0:247","0:220","0:201","0:226","0:212","0:231","0:206"]}}},"0:293:1907":{"id":"0:293:1907","crate_id":0,"name":"noop_raw_waker","span":{"filename":"futures-task/src/noop_waker.rs","begin":[14,0],"end":[16,1]},"visibility":{"restricted":{"parent":"0:284:1650","path":"::noop_waker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"RawWaker","id":"2:44326:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12014:32876":{"id":"2:12014:32876","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:306-2:44326:1653":{"id":"0:306-2:44326:1653","crate_id":0,"name":null,"span":{"filename":"futures-task/src/lib.rs","begin":[50,36],"end":[50,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"core::task::RawWaker","name":"RawWaker","id":"2:44326:1653","glob":false}}},"a:2:8249:2107-0:309:1645":{"id":"a:2:8249:2107-0:309:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WakerRef","id":"0:309:1645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12110:32895":{"id":"2:12110:32895","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:11580"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:4937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5383:33551":{"id":"5:5383:33551","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:1792","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"9:388:17668":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:8310:18733":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:4110:4892":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:43649:4966":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:22425:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:42476:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"18:538:3064":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:80:22583":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:45413:5287":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:4007:4891":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"11:97:5946":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:7821:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:8907:5593":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"0:135:1648":{"crate_id":0,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"17:11641:3561":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:12382:2190":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:5764:2951":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:42449:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:43343:3114":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:6668:13338":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:6696:18677":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:5747:16628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"18:574:3057":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:44334:1654":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:4256:5446":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:12046:3639":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:8256:4669":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:7411:4317":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4757:15973":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:45990:5313":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:43674:5155":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:44131:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:7460:3124":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:10244:4951":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:911:2850":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:7443:17603":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"11:768:2850":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:4898:15990":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"5:4336:2888":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:21004:4976":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:10316:3372":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"18:644:3057":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:20982:6256":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:4042:2073":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:4698:15966":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:4331:15931":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:242:3116":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:1650:13408":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:11225:5488":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:41631:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:2832:2946":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:8047:5547":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:5468:2886":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:20579:32312":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:11468:25270":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:44108:11882":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:9876:3187":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:5974:16645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"11:665:2357":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8091:5440":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"5:4047:4772":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:1609:13405":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:526:12485":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:47800:5396":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:10804:4956":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:10692:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:11461:25326":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:44283:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:2378:4181":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:41831:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:4707:15967":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:10936:3434":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:11544:3532":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:12433:3712":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:4970:15998":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:4439:15941":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"11:2204:34756":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:5719:5470":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:44080:11883":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:47770:5394":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:5035:2098":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:13181:3942":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:1071:4767":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:5886:4300":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:11600:3550":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:2337:4174":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:11893:1367":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:10657:5502":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"6:4797:15978":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:4019:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:9405:11658":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:1514:13394":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:9106:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:1785:5418":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:4941:15994":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:45699:5299":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:40473:4915":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:11891:1049":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:7588:4592":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"12:0:1933":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:2574:5426":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:9151:2323":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:11162:5481":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:541:12487":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"7:32:17648":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:8264:6359":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:1667:1087":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:2774:2156":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:2768:2153":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:8215:6329":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"11:1050:17749":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:7015:28956":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:12770:3756":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:7572:34826":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:11410:3508":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:9886:3302":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:2594:4190":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:8420:18736":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:6585:2365":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:5811:4290":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:5693:5469":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:45822:5308":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:4578:27434":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:12330:29821":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:1787:3127":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11220:3466":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:6369:5188":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:5717:16568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:3117:4753":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"11:60:34762":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:3135:24706":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4318:15930":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:9062:5480":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:7318:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:3169:2186":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:2616:4191":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:8858:3113":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:21879:30086":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10516:3389":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:1058:5950":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:8260:5566":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:2572:4189":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:7509:4219":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:8925:23899":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"18:531:3061":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:11854:23080":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:5708:4279":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:8286:5448":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:41479:5204":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:7198:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:506:12484":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:13469:4020":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:40226:5167":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:8632:18720":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:41711:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:5809:16634":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:2372:6251":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:21787:31573":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:3300:4230":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:482:12481":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:9796:3295":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"0:12:1637":{"crate_id":0,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"2:7591:6186":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:43561:5251":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:43809:5267":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:6578:17058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:41203:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:39365:5019":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:11090:3444":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:22524:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:5779:16631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:9157:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:123:12166":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:4854:6357":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:6327:4390":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:3973:6305":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:4251:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:39372:2332":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"18:727:3101":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"0:98:1822":{"crate_id":0,"path":["futures_task","waker","wake_by_ref_arc_raw"],"kind":"function"},"2:42174:2325":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"11:119:2844":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:10743:3421":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:8389:18735":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:7164:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:3975:2881":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:4827:15982":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:8598:18742":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12006:3633":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:44364:5282":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:11785:3595":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:11136:3448":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"14:215:4750":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:32056:5010":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:2805:2166":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:13453:4017":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:4183:2104":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:21839:31087":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:6674:11795":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:44100:11887":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:11672:6382":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:3440:2321":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:2796:2159":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:9380:18753":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:43763:5258":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:2546:4188":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:13257:3964":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:8784:4753":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:11532:3531":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:21088:6442":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:45592:5294":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:8360:18734":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:7538:16161":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:5677:18671":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:1747:30158":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:653:12542":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:6819:4467":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:45662:5297":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:43969:5278":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:13332:3981":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:8250:2106":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:7859:18683":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:6768:11787":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:3182:32361":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:42917:4943":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:41521:11840":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:8806:5464":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:7937:5509":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:3197:2077":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:7224:4878":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:9410:4942":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"14:160:4745":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:10452:3384":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:5439:5463":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:40034:5155":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:7266:4880":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:9624:2934":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:43265:5240":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:7230:12441":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:43741:11592":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:8025:4647":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:7485:16153":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4980:15999":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:4366:2886":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:47862:5398":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"18:0:1938":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:926:4755":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:46036:5315":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:7595:11791":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:32020:6389":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:7659:6172":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:11556:3533":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:6485:6401":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:30836:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:13101:3925":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12113:3649":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:8103:6255":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:9409:18754":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:43184:5234":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:1564:13401":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:4596:4246":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:1700:13413":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:40356:5180":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:3292:6280":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:11060:3409":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:5963:4313":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:6236:4381":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:40670:4918":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:6016:16650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:9545:3231":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:4890:15989":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:547:12488":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:1467:1817":{"crate_id":2,"path":["core","mem"],"kind":"module"},"5:3158:4776":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"11:1843:2357":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:5367:17786":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:41368:4931":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:4288:15927":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:6552:2962":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:39358:4554":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:6671:4440":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:11653:3564":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:8762:5587":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:7532:16160":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:4773:15975":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:4952:15996":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:12282:3691":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:42031:4939":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:1525:13396":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:11037:18746":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:7498:4587":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:635:5409":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"18:660:3082":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:7478:4218":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:2856:2173":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:8838:6406":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:13426:4010":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:7837:4610":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:39192:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:12607:3744":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:9138:3247":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"0:169:1647":{"crate_id":0,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"16:6361:4395":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:11837:5639":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:39216:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:10422:5435":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:7626:4593":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:11109:3447":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:11279:11581":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:11282:3482":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:12835:3807":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:47785:5395":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:9946:3314":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:947:4761":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:13145:3937":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:11573:3541":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:9265:3250":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:42683:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:1062:4765":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:10580:3400":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:7520:16158":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:3446:4231":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:11249:11847":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"11:1852:2850":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:21827:4985":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:40399:5182":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:30272:2143":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:4307:15929":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:12345:3699":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1213:4767":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:2346:6241":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:6990:4492":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:21900:30091":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:45968:5312":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:554:12489":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:11500:5489":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:6243:34827":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:11913:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"18:481:3055":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:3749:4233":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:10462:2972":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:10931:2974":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:2189:32436":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:6755:17066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:3063:3146":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:10203:4950":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:9178:3248":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:2169:33633":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:5571:4208":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:12357:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:922:4754":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:10010:4944":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:47747:5393":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:12449:3716":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:562:12490":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:21337:6456":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:1583:4777":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:8548:18740":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:474:12480":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:7293:4533":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:13639:4083":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:5320:5455":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:2668:4193":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:2912:5955":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:11688:2983":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:3782:4234":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:20594:32313":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:9295:4941":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:10303:3371":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:3585:4232":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"11:1634:2855":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:40718:4922":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:8195:18721":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:10026:3323":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:41445:2356":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:11258:3481":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:5032:4259":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:20760:6447":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:3249:5436":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"0:291:1908":{"crate_id":0,"path":["futures_task","noop_waker","noop"],"kind":"function"},"16:6293:4387":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:6830:17072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:532:12486":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:2905:4203":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:6009:2953":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:8955:5601":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:9895:3305":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:10865:5588":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:4679:6315":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:43778:5263":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:40022:5154":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:12461:3718":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:11712:11580":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:1413:4757":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:9028:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:11912:1126":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:1078:33657":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:3030:4226":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:1242:4771":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:488:12482":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:480:2939":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:2691:1789":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:3382:4888":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:13488:4025":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:6721:29773":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:7136:4871":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:10272:4953":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:45892:5310":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"18:681:3089":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:5862:16637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:3688:4855":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:11895:1481":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:9038:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:40206:5166":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:487:3123":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"4:0:1928":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:11449:5633":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:22458:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:13194:3948":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:43857:5268":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:40196:2917":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"14:187:17762":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:43507:5249":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:4480:4242":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:1443:4755":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:4728:4249":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"11:675:4754":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:10092:3332":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:10989:3139":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:8792:5590":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:4386:2333":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:7211:4875":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:46060:5316":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:21854:4986":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:13053:3916":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13385:3996":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:43884:4969":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:40408:4911":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:12331:3698":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:6597:2906":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:43223:5236":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:6854:4471":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:6460:4207":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2822:2165":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:494:5928":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:6097:2424":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"6:4991:16000":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:41530:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:41597:2357":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:43333:5245":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:40677:4919":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"16:7683:4223":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:1637:2139":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:5944:4306":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:9322:34839":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:8242:5564":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"11:1859:4776":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:4688:15965":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:8982:22809":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:9374:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:3266:3138":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:8909:3114":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:2360:6245":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:7529:4220":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:9986:3317":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:9534:3273":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:6935:4478":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:21443:31967":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:5995:16647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"14:221:4751":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:4546:15954":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:46158:5318":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:6764:2911":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:1919:18784":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:1366:4772":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"11:2198:31989":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:9959:3315":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:867:2357":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"11:1009:4765":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:6700:17063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"18:699:3092":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:9003:5842":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:22293:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"5:5908:2886":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:2879:4202":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:43425:5248":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:45347:5284":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:21561:6444":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:9670:3286":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:3079:2181":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"9:325:17721":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:39982:30160":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:20564:31969":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:9592:2928":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:875:4756":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4459:15943":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:40057:11649":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:265:2858":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"16:8129:4657":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:12799:3776":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:3677:5441":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:2469:6256":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:8208:5444":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:9609:2929":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:11535:4946":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:11892:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11844:3609":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:10628:5619":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:8573:18741":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:2847:2171":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:4845:4253":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:1931:653":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:13240:3961":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:7366:18680":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:3995:6309":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:11069:18747":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:7181:4872":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"5:1042:33659":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:39075:2187":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:11372:5442":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:1576:13402":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:7488:4586":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:7838:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:3355:2886":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:10649:3407":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:9381:5501":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:10142:18826":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:44096:11886":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:7016:4493":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:959:4764":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:2786:4198":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:9917:3310":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:22326:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:6943:18678":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:2869:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:4571:15957":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:2087:4856":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:6376:4206":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4416:15938":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:2692:2076":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:10039:3326":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11891:3615":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:13689:4096":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:12178:3655":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:4:1014":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:4176:5445":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:4851:15985":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:13879:4144":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:7022:2869":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6868:4473":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:62:12111":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:41462:4772":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:22491:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:5594:4210":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:45681:5298":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:5370:5461":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:39998:5152":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:13842:4137":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:3163:32668":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"11:821:4758":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:9370:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:7165:11792":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:42421:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:13169:3939":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:9038:34832":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:12634:3747":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:11243:24350":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:3775:2858":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:47610:5384":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:32147:2125":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:43956:5274":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"11:638:4753":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:2800:2161":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:7528:2968":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:8124:5170":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:12597:2086":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:8427:6381":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:7211:2306":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:10491:3387":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"7:0:1543":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:5857:16636":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:40367:4909":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:535:4161":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:2792:2160":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:7942:6283":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:4260:4895":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:11911:1553":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:3899:4237":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:47686:5388":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:4392:15936":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:10942:2975":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:5570:2950":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:8496:5584":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:40459:5187":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:40487:4916":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:4609:15959":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:41751:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"0:100:1823":{"crate_id":0,"path":["futures_task","waker","drop_arc_raw"],"kind":"function"},"16:2357:4180":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:43656:5156":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:10428:3382":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:7862:4853":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:2926:2174":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:40069:5158":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:11299:3485":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:4789:4251":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:11879:3613":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:8651:3236":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:21083:6256":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"9:445:17667":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:42153:2323":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:4642:6331":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:4865:15987":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:8443:18737":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:9362:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:13698:4098":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:25847:4882":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:2839:2169":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:10761:18743":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:9557:3249":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:46528:5340":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:9985:4772":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:1715:13415":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:2738:2121":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:7808:5504":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:12126:3650":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:39280:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:3132:24707":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:3995:4890":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:20869:6448":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:7338:2901":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:1709:13414":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:11904:740":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:12483:3729":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:1978:3134":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:41871:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:2929:2175":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:8387:5220":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:10771:4955":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:2215:6238":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:585:6167":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:11484:4964":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"11:2060:4502":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:45521:5291":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:8667:3237":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:1228:4765":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:11909:1495":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"18:636:3081":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:10647:24314":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"18:671:3088":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"11:2076:4765":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:8736:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:2749:2124":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:13082:3924":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:4399:2888":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:13316:3979":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:40338:5179":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:11500:4965":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"5:7241:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:9748:3249":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:4328:5447":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:11899:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:42705:5224":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:40133:31084":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:44326:1653":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:4813:15980":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:43255:5239":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:11910:789":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:9839:3298":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:11091:5479":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"11:652:4772":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:2742:4196":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:40296:5175":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:2426:4183":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:4499:15949":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:45437:5288":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"14:0:1934":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:11434:3512":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:2470:4185":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:13803:4128":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:44152:5279":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:5058:16006":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:10660:3409":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"11:2192:34759":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:2827:2167":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:9228:34838":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:10682:5503":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:7757:4598":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:9081:5606":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:12980:3904":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13812:4132":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:5334:5459":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:10923:3432":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:7259:5204":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:6706:17064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:44376:2085":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:13411:4006":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:5976:4163":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"11:1144:4771":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"10:36:34754":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:13015:3905":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:10505:3388":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:11924:3623":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:9498:3269":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:10050:5610":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:9148:34836":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"0:88:1818":{"crate_id":0,"path":["futures_task","waker","waker_vtable"],"kind":"function"},"17:13344:3987":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:3465:6275":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:6336:4391":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:5773:16630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:21718:4978":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:10334:3249":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:45792:5307":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:20768:30685":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:11015:5587":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:13309:3978":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:3208:5433":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"18:590:3068":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"18:582:3067":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:13744:4112":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:9098:5607":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:5797:4289":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"0:146:1861":{"crate_id":0,"path":["futures_task","future_obj","remove_drop_lifetime"],"kind":"function"},"17:8979:34831":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:9523:3271":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:2077:2874":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:7081:2357":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:11234:3467":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"11:2212:34757":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:12542:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:11210:5486":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:20577:32310":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:11391:3507":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:40376:4910":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10598:3435":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"17:12358:3700":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:2211:1843":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:39236:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:9386:2970":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:10691:18852":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:42666:5215":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:13399:4003":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:8337:5575":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:5616:4266":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4960:15997":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:4125:6328":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"0:103:1644":{"crate_id":0,"path":["futures_task","waker_ref"],"kind":"module"},"1:3911:6301":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:2153:1904":{"crate_id":2,"path":["core","ptr","null"],"kind":"function"},"6:6605:6359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:5528:4901":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:7616:2972":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:21:681":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:7846:5506":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:11737:11577":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"18:507:3057":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:40286:5173":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:6024:34668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:4096:6325":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:7509:2966":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:39258:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"0:292:1909":{"crate_id":0,"path":["futures_task","noop_waker","NOOP_WAKER_VTABLE"],"kind":"constant"},"17:10670:3411":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:4553:15955":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:45561:5293":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:10823:3208":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:7335:34829":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:1588:13403":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:11726:3094":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:11628:3560":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:6538:5959":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"6:6691:17062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:3881:6299":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:7590:5490":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:2344:2191":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:9340:3252":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:11901:742":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:4751:15972":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"11:991:4502":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:1728:13416":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:41226:4928":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:9068:34837":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:43315:5244":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:46111:5317":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:5015:16002":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"11:279:5947":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:9981:5419":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:41345:5444":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:12308:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:8953:3238":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:7767:18682":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:39302:2180":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:2932:2176":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:3622:2858":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:20729:6450":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"16:2298:17788":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:6621:5473":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:47464:5381":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:11898:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:3060:5428":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:8082:5438":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:8854:6405":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:49668:6459":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:4683:6318":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:13433:4011":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:43792:5266":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:7632:31033":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:10053:4946":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:8214:4554":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:55:4638":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"6:6553:13334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:13516:4033":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:3510:2881":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:10847:24080":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:4540:4244":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:8870:6407":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"11:828:6183":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:573:12492":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:7711:4596":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:6785:17068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:6990:2087":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:1594:4779":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"10:44:4781":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:40076:5159":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:46212:5320":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:4371:15933":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:9933:3312":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"0:4:1636":{"crate_id":0,"path":["futures_task","spawn"],"kind":"module"},"6:4667:15964":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:3673:4853":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:47732:5392":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"18:624:34843":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:21862:4987":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:11969:3629":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:5239:11569":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:40684:5188":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:5485:2894":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:3150:4778":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"18:755:3107":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:5834:2113":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:39161:2179":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:42167:2324":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"11:1071:34767":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:7635:4594":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:5071:4260":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:2862:4201":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:22260:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:4037:4238":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:10822:5500":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:9478:3264":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:8788:3111":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:5686:5466":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:9098:3246":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:643:6170":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:501:2874":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:8485:5583":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:9120:25278":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:46866:5345":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:4005:2858":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"11:0:1932":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:6981:4489":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:1682:13411":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:8521:18739":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:13356:3988":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10885:3430":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:7697:5010":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:7103:5604":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:11905:1499":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:4875:15988":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:41260:6294":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:4332:2332":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:4568:4245":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:10615:3404":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:47721:5391":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:4757:4250":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"11:1561:4775":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:35:2088":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:1821:2108":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:6685:17061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:3247:5435":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:12318:3696":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"11:305:34760":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:11907:1497":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:11889:1515":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:6101:2957":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:13763:4117":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:1947:3131":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:8931:3118":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:10104:3333":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"18:599:34842":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"11:783:2854":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:7471:5636":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:2116:32434":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:8319:6368":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"11:703:4755":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"15:198:17769":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:5354:5460":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4641:15962":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:13477:4021":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:6506:4411":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"5:863:2866":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:10092:4947":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:9188:34834":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:5643:4275":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:8968:5604":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:568:12491":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:41512:5206":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:11372:3502":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:10015:3322":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:10735:3419":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:7042:4499":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:21107:6256":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13233:3959":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11459:3517":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:4400:4240":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:8960:5602":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:4486:15947":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:11446:3515":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:8776:5588":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:9107:2321":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:5418:4264":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:12512:1655":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:8047:4648":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:12158:3654":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:11894:1397":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:44112:11896":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"5:2905:2415":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:6558:4415":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:9147:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:8670:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:5724:4281":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:43084:5227":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:6607:2907":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:7317:34825":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:9453:18755":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:11331:5441":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:7065:4501":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:5798:16633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"5:5818:2098":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:9526:2925":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:1561:4753":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:4255:4894":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:5816:16635":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"11:731:4756":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:6431:4401":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:11903:744":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:42658:5213":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:2981:2177":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:47706:5390":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:3370:11612":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:12622:3409":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:4466:15944":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"11:1866:4777":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:8166:5557":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:12496:3730":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"0:217:1790":{"crate_id":0,"path":["futures_task","future_obj","if_alloc"],"kind":"module"},"17:9424:3259":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:43621:5254":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:6999:2357":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:3933:6303":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"11:1035:4767":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:1668:13410":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:11339:3496":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:8730:5585":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:12307:3695":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:39379:5020":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:41538:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"9:52:17685":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:5755:16629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:10555:3391":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:0:1937":{"crate_id":17,"path":["object"],"kind":"module"},"17:9443:3261":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:7509:16157":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:11145:2977":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"5:1404:4756":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:5380:2886":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:4903:6364":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:7786:5501":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:2744:2075":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:41309:31085":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:30288:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:39961:5148":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:6373:5474":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:6390:4398":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:41394:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:1733:2218":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:12293:3693":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:40347:4904":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:7195:31084":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:7052:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:6321:4389":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"14:202:11594":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:4510:4243":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:4639:6358":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:5741:18672":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:21916:30162":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:4538:15953":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4803:15979":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:500:12483":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:7644:6171":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:3170:5432":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:13667:4090":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11770:3591":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:40121:5164":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:41470:2357":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:47695:5389":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:40424:3079":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:1432:4754":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:4377:2916":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:9469:3262":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:4104:6326":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:4818:4252":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:4653:15963":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"11:859:4763":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:5385:5462":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:43611:5253":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"5:1463:4852":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:1555:13400":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:40306:4898":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:42913:29588":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:420:3122":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:40050:5156":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:43301:5241":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:40042:4889":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:6400:4399":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:4527:15952":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:40693:4920":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:43407:5247":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:4836:15983":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:0:1389":{"crate_id":1,"path":["std"],"kind":"module"},"6:1546:13399":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:1846:5421":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:11813:3602":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:2985:2178":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:46606:5341":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:40448:5184":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:917:4773":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"9:421:17669":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:43144:5229":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:2470:11656":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:6180:2898":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:32060:5011":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:1821:5419":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:7030:32665":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"11:2219:4871":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:45844:5309":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:30266:2142":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:8838:31032":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:3925:6302":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:7588:2074":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:5032:16004":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"15:180:17768":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:47324:5379":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"11:840:4761":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:21978:6297":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"10:0:1931":{"crate_id":10,"path":["adler"],"kind":"module"},"16:6132:4342":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"18:113:22585":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:247:3117":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:7503:16156":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:4904:4255":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:1532:13397":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:12959:3899":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:41911:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:8410:5578":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:7321:2850":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:45391:5286":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:1622:13407":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:1568:2881":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2817:2164":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:3753:2850":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"6:6628:13361":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:4478:15946":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:45491:5290":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"18:766:22595":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:12646:3754":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:40726:4924":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:8147:4944":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:1614:13406":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:1981:4853":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:43921:5269":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:4790:15977":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:7257:23106":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:5563:2949":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:11870:24079":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:5967:16644":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:41991:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:10545:3139":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:3047:17816":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:1924:2420":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:10068:3330":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:4445:4241":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:2206:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:6662:4439":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:2163:2200":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:44076:11880":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:4423:15939":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:9822:3296":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:40102:5163":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:6002:16648":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:8469:5449":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"0:290:1905":{"crate_id":0,"path":["futures_task","noop_waker","noop_clone"],"kind":"function"},"2:20549:31969":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:39176:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:4969:4257":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:815:2864":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"16:6442:4402":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:4760:6314":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:5021:5454":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:44088:11884":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:20879:2199":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:11900:745":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"13:0:1927":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:9683:3287":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:13678:4095":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:1657:13409":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"0:120:1644":{"crate_id":0,"path":["futures_task","waker_ref","waker_ref"],"kind":"function"},"0:143:1860":{"crate_id":0,"path":["futures_task","future_obj","remove_future_lifetime"],"kind":"function"},"16:2319:4172":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:39970:5149":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:10258:4952":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:6814:17070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:40438:4913":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:8160:5555":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:20984:6443":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:9973:3316":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:44164:11897":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:8683:3108":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:40012:5153":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:2922:1871":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:2706:1836":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:11783:11586":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"0:294:1650":{"crate_id":0,"path":["futures_task","noop_waker","noop_waker"],"kind":"function"},"1:1783:5417":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:11938:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:4112:6327":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:6179:4349":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"18:736:22594":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:47572:5383":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:2502:4186":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:2448:4184":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:12019:3340":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:39955:4889":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:11717:4937":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"0:190:1649":{"crate_id":0,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"17:9275:34830":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:43946:5270":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:8226:5562":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:9149:2322":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:5998:18673":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"5:2908:5954":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:45367:5285":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:41454:4753":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:11887:936":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:40163:6225":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"16:7669:4222":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:14:1782":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:13506:4028":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:8893:5592":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:6544:4212":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"13:110:34813":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:40116:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:41332:5202":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:6575:18676":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:45746:5300":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:12388:3705":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:4947:15995":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:41289:30079":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:4590:15958":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:4492:15948":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:9734:3290":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:40255:5170":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:13721:4111":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:7244:34828":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"11:757:2881":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:43357:4944":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:3644:2357":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:11888:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:11832:3607":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:43935:11593":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:10721:3416":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:41671:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:2963:2080":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:5987:4905":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:4436:6332":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:11615:3556":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:13443:4014":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:3129:23022":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:13419:4009":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:676:6115":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:39552:26022":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:12522:3732":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:8918:5596":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:12536:3733":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:8251:4936":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:3163:2184":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:42898:5226":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:45644:5296":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:5655:4209":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:7467:4583":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6793:4466":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:2614:5427":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:10419:5433":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:4872:4254":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:7568:17631":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:3983:6306":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:10857:18745":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:41589:4772":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"0:92:1831":{"crate_id":0,"path":["futures_task","waker","increase_refcount"],"kind":"function"},"2:3142:2182":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6351:18675":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12915:3869":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:21116:4976":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:6008:16649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:963:2858":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:5586:4903":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:40277:5172":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:9772:3294":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"5:3276:2850":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:9218:3249":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:21559:6256":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:4719:15968":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:7572:5407":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:4732:15970":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:2867:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"6:6848:17073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:8234:5555":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:41243:4930":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:4782:31589":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:43210:5167":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:43640:5256":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:10440:3383":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:4624:4247":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:7595:5492":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:888:4757":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:43163:5232":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:5920:4156":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:7543:4221":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:7596:18681":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:8256:18719":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:46292:5321":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:13376:3995":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:41791:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:4602:11643":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:12295:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:3210:5434":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13651:4086":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:13135:3936":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:2753:2152":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:579:12493":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13367:3992":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:40315:4900":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"11:1847:2881":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:6917:3103":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:13777:4119":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:21952:4999":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:10286:4954":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:8490:18738":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:6919:34824":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:9153:2324":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:9721:3289":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:43579:5252":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:1539:13398":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6254:4384":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:4344:15932":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6767:4465":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:10712:5440":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:46716:5344":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:5000:4258":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:22590:5005":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"6:7252:17442":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:1034:3126":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:10209:5462":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:9653:3283":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:6164:4347":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:2550:2929":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:47214:5378":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:9028:3245":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:6307:4204":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:3782:5443":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:13499:4026":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:44347:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:43245:5238":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:4559:15956":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:11393:5443":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:4377:15934":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:3325:5189":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:7781:3188":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:42713:5225":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:7555:16163":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:9312:3251":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:6294:2858":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"0:284:1650":{"crate_id":0,"path":["futures_task","noop_waker"],"kind":"module"},"2:9813:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:6545:12530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"5:3547:4772":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:13249:3962":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:20938:6441":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:13292:3970":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:47675:5387":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:40149:5165":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"11:326:2846":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:22227:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:11424:4960":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"9:174:17734":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:11902:743":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:1752:13418":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"14:7:4745":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:11072:5931":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:10052:3328":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:9826:3297":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:857:4772":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:4681:6317":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:936:6183":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:12576:3738":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:39341:5017":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:3987:6307":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:12510:3731":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:9577:3276":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:9512:3270":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:12072:3642":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:3124:4777":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:44389:5283":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:10478:3386":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"11:1540:4774":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:6110:16679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:1908:13561":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:8156:4225":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:7202:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:20990:6445":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:8220:6330":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:6977:2952":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:6520:4413":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:11027:24076":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:21966:5000":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"15:0:1935":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:10357:2971":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:10897:3431":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:1382:2357":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:4141:4893":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:6904:4475":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:2843:2170":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:13625:4077":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:4327:4239":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:638:5411":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:7275:17444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:10416:3381":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:6890:4215":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:10840:3428":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:42393:30082":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"7:79:17655":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:11308:2979":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:23037:4881":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:4990:5454":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:975:3125":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:21665:4977":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"14:165:17755":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:7697:4213":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:783:2861":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:6151:16681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:5959:16643":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:4932:15993":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:7677:6214":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:154:2841":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:11355:3500":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:6116:15843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:10377:3375":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:7544:16162":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"9:352:17682":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:5305:4262":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:44291:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:8800:2357":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:4681:6298":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:41606:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:11319:3495":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:20536:3067":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:6367:2357":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:13791:4126":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:633:4847":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:6587:17059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:9961:4753":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:386:3119":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:10257:3367":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:8753:3110":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:2642:4192":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:13121:3933":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:587:12494":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:7263:2305":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:1048:4502":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:4574:27430":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:47823:5397":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:42498:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:42458:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:8283:18732":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4431:15940":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:880:4753":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"11:867:4764":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:4137:2886":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:1916:2082":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:7148:6182":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:5402:3237":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:7557:4589":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:211:2090":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:9628:3280":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:6332:5473":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:8948:5600":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:1844:5420":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"0:125:1646":{"crate_id":0,"path":["futures_task","future_obj"],"kind":"module"},"1:930:4758":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"18:491:3056":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:13324:3980":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:4564:6304":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:6728:4453":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:8718:3109":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:30232:1834":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:2161:2199":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"17:12550:3736":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:11800:3600":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:10652:27416":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:6776:17067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"11:744:4757":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:10080:3331":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:46682:5343":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:8825:5591":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"9:0:1930":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:9117:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:20841:6454":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:41380:4933":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:8072:4651":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"0:9:1638":{"crate_id":0,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"1:8912:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:47402:5380":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"9:234:5220":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:4167:2886":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:3640:3150":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:11902:3616":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:20596:32315":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:43173:5233":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12194:3660":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:6717:4452":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"18:690:3091":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:10626:3405":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"9:502:4834":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:43631:5255":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:10722:24085":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"0:76:1642":{"crate_id":0,"path":["futures_task","arc_wake","ArcWake"],"kind":"trait"},"5:5191:2858":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:7437:4574":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:43989:4970":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:8356:4937":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:11011:3437":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:5829:16596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:10138:5927":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:10270:3368":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:7670:5497":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:4911:15991":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:46416:5338":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:21771:4979":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:21945:31570":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:618:2421":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"0:0:1656":{"crate_id":0,"path":["futures_task"],"kind":"module"},"17:2933:3135":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:901:2881":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:4702:4248":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:10670:5625":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:2540:2944":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:6057:16652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:13865:4141":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12403:3709":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:6907:2964":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:10589:3401":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:6800:17069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:13461:4018":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:4808:795":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:43327:4959":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:5051:16005":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:11035:11896":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"5:5235:11568":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:1736:13417":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:1692:13412":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:4821:15981":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:5988:16646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:1519:13395":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:30864:3067":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:22359:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:11193:3458":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:5065:16007":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:6757:6439":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:10826:4831":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:5630:4270":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:7497:16155":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:953:4763":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:43665:4889":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:11484:3519":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:7743:4211":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:30360:30174":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:6085:1655":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:9159:2326":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:2694:4194":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:11003:5586":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:6474:4224":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:7693:5500":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:8141:3114":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"0:309:1645":{"crate_id":0,"path":["futures_task","waker_ref","WakerRef"],"kind":"struct"},"1:530:2940":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9907:3309":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"15:219:17773":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:13041:3911":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:9866:3300":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:10354:3374":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:3401:5439":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4449:15942":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:5499:6387":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:4999:16001":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:6022:18674":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:12059:3641":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:40324:5176":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:562:3124":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"11:1524:17750":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:2741:1858":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:6218:4371":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:43525:5250":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:46370:5337":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:13159:3938":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:40083:11650":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:8109:4656":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:1565:2357":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:4414:6331":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:10681:3412":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:0:1936":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:20742:6451":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"17:9696:3269":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:3534:4753":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:7077:18679":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:8823:3112":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:10000:3318":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:12259:3690":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:9161:2327":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:4619:15960":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:4932:4256":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"18:609:3075":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:11195:5485":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"14:40:3482":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:2780:2155":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:13024:3909":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:4743:15971":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:6578:2894":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"5:4207:4753":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:11520:3528":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:6061:17787":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:10948:2976":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"11:393:34766":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:6133:5472":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:12501:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"5:2407:5951":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:47072:5377":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10125:3335":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:11237:27419":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:2763:2154":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:5104:4261":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:43153:5231":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:3815:4235":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:3142:3137":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:4074:28962":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"5:2636:32636":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:4726:15969":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:12224:3679":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:7932:5508":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:41581:4753":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:12592:3740":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:7665:5416":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:7161:11793":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:7014:2881":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:2808:4199":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:2758:2157":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:5693:4276":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:7491:16154":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:11422:3511":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:7791:5502":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:9033:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:7029:4496":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"5:3129:32667":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:43135:5228":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"0:74:1641":{"crate_id":0,"path":["futures_task","arc_wake"],"kind":"module"},"17:11585:3544":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:3234:2079":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:5502:6388":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:1577:4776":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:6188:2949":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:2477:5425":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:9596:3277":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:43236:5237":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:2387:1944":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:9155:2325":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:1544:2886":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:2524:4187":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:1716:2850":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:9350:34835":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"0:41:1790":{"crate_id":0,"path":["futures_task","spawn","if_alloc"],"kind":"module"},"18:515:3054":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:1589:4778":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:7255:4879":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"18:707:3094":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:8154:5253":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:8170:4662":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"18:521:22596":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:2851:2172":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:45459:5289":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:42160:2322":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:8171:6293":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"5:1351:4753":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:2911:2078":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:13219:3956":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:10569:3396":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"0:293:1907":{"crate_id":0,"path":["futures_task","noop_waker","noop_raw_waker"],"kind":"function"},"18:719:3098":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:12372:3703":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:5935:16641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:46446:5339":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:5022:16003":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:8075:3103":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:2830:4200":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:1612:2858":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:3931:2886":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:13857:4138":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:11886:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:355:5405":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:21431:4974":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:40246:5169":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:10465:3385":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:4845:15984":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:42674:5216":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:8180:18684":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:8134:5187":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"0:94:1820":{"crate_id":0,"path":["futures_task","waker","clone_arc_raw"],"kind":"function"},"17:10967:3435":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:2208:5424":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:11163:3454":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"5:6739:2898":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:6047:16651":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:5712:2881":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:12902:3862":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:11471:3518":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:44084:11885":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:9488:3267":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:4784:15976":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:4509:15950":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:2784:2158":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:11732:11578":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:9853:3299":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:22557:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:8479:4753":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:40389:5181":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:12923:3870":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:20922:6256":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"14:31:4745":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"18:564:3066":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:13066:3921":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:6695:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:3225:4229":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:6821:17071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:21332:6446":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:9142:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:44273:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:6201:4364":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:10835:5463":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:43461:4951":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:6651:13335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:12085:3644":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:12138:3651":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:2764:4197":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"11:2087:4767":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:1756:2217":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:11861:3612":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:8249:2107":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:5071:16008":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:10712:18853":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:2967:17815":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:5386:3236":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:40699:5189":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:9566:3250":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:7578:17632":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:9877:5199":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:5843:16597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:554:5408":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:7449:4575":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:2788:2162":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:2720:4195":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:11721:3566":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:45938:5311":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:47648:5385":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:6488:4403":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"11:1839:4753":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:11265:4957":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"9:481:17666":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:12098:3646":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:3383:5558":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:5947:16642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:43479:4952":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:4914:2886":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:47526:5382":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:2812:2163":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:4845:6356":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:11906:1496":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:7854:5507":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:361:5406":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:5900:16640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:44092:11888":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:6535:2843":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:7803:4606":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:4521:15951":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:5346:4263":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:5785:16632":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:2906:32479":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:4761:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:11168:5632":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:10416:5431":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:4508:6349":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:11054:5480":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:6136:16680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4398:15778":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:30041:6296":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"11:1873:4778":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:11461:4963":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:39334:2183":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"11:1126:4770":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:5077:16009":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:13821:4134":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:11993:3630":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:6248:2881":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:3449:24549":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3184:4779":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:4433:2334":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"18:614:34841":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:9617:3279":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:22392:5004":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:42403:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:3875:6300":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:40268:5171":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"11:399:34763":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:10226:5964":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:21114:6449":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13265:3966":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:5870:16638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:10527:18851":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:3168:5431":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:20804:6453":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:30302:30173":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:46652:5342":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11946:3624":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:1594:13404":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:6876:4214":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:8843:32032":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:119:12165":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:10000:5963":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:13564:4070":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"2:4322:2915":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"18:96:22584":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:6598:17060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:6724:17065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:5910:2949":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:6409:2961":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:10705:3414":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:11859:6173":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:12419:3710":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:6865:5779":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"13:226:34814":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:7519:4588":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:6482:5475":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:8090:4653":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:7798:5503":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:5880:16639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:12236:3681":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:9641:3281":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:4404:15937":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:11821:3604":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:844:4753":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:7526:16159":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:595:12495":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:2833:2168":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:7258:17443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:8817:668":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"0:90:1643":{"crate_id":0,"path":["futures_task","waker","waker"],"kind":"function"},"5:7044:2357":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:4857:15986":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:46189:5319":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:4629:15961":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:10165:4949":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"0:96:1821":{"crate_id":0,"path":["futures_task","waker","wake_arc_raw"],"kind":"function"},"1:11908:1498":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4472:15945":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:1721:6322":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:1895:2419":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"11:1091:4769":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:3458:6254":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:10635:3406":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:1422:4773":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"8:0:1929":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:280:1792":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:39114:2081":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:47666:5386":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:10702:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:45543:5292":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:4767:15974":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:1197:4502":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"0:80:1643":{"crate_id":0,"path":["futures_task","waker"],"kind":"module"},"1:11493:5489":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:21803:4980":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:2362:6246":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:44104:11881":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:30466:30156":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"11:1879:4779":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:12894:3859":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:20770:2199":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:12563:3737":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:11502:3527":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:7089:2357":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"11:359:2848":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:10314:5585":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:10130:4948":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:7005:4869":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:3615:6295":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:5557:4205":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:1572:2850":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:3939:6304":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:5847:4297":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:7571:6256":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:4737:2947":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:41951:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:7060:4870":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:4920:15992":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:13211:3953":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"18:652:3057":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:1080:4771":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:10402:3377":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:13033:3910":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:9108:34833":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:9803:6256":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:3680:5442":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:6446:2858":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:4383:15935":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:2404:4182":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:4576:27432":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:9043:5479":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:13612:4071":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:10283:3370":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:43375:4949":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:4294:15928":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"0:15:1639":{"crate_id":0,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"17:10798:18744":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"5:1995:4855":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"5:2916:5956":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:8142:4660":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:6569:12365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:8675:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:9184:5420":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"0:295:1651":{"crate_id":0,"path":["futures_task","noop_waker","noop_waker_ref"],"kind":"function"},"1:8748:5586":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:45622:5295":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:40708:2923":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"16:2931:17814":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:3872:4236":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"11:816:4773":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:42433:4625":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:12033:3638":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:7240:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:46014:5314":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:13659:4089":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:20909:6455":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:42695:5220":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:4406:2126":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:5779:4285":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}