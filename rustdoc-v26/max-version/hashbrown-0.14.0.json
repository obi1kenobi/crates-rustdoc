{"root":"0:0:1703","crate_version":"0.14.0","includes_private":true,"index":{"b:1:2538-0:1727:4458":{"id":"b:1:2538-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:99:1087":{"id":"0:99:1087","crate_id":0,"name":"ptr","span":{"filename":"src/raw/mod.rs","begin":[282,4],"end":[282,19]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"1:12134:19755":{"id":"1:12134:19755","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[1518,0],"end":[1523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1508:554":{"id":"0:1508:554","crate_id":0,"name":"deref_mut","span":{"filename":"src/scopeguard.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:750:2853":{"id":"b:1:2548-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:370:795":{"id":"0:370:795","crate_id":0,"name":"iter","span":{"filename":"src/raw/mod.rs","begin":[3162,4],"end":[3164,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1117:3035":{"id":"a:1:2684:220-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1416":{"id":"0:1416","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[6381,0],"end":[6397,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7198:134","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1421:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1210":{"id":"0:1210","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4784,0],"end":[4792,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1213:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:981:668":{"id":"0:981:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4122,4],"end":[4124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:819:3464":{"id":"a:1:2684:220-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1316:1691":{"id":"0:1316:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[5071,4],"end":[5076,5]},"visibility":"public","docs":"Returns a reference to this entry's key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(3);\n// existing key\nassert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");\n// nonexistent key\nassert_eq!(map.entry(\"horseland\").key(), &\"horseland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:529:2257":{"id":"0:529:2257","crate_id":0,"name":"get","span":{"filename":"src/map.rs","begin":[1304,4],"end":[1313,5]},"visibility":"public","docs":"Returns a reference to the value corresponding to the key.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.get(&1), Some(&\"a\"));\nassert_eq!(map.get(&2), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"V"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:326:2318":{"id":"b:1:2248-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1148:668":{"id":"0:1148:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4607,4],"end":[4613,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1499:2495":{"id":"0:1499:2495","crate_id":0,"name":"into_inner","span":{"filename":"src/scopeguard.rs","begin":[29,4],"end":[40,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["guard",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5402:20985":{"id":"4:5402:20985","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:12134:19755"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1239:2509":{"id":"0:1239:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4821,4],"end":[4821,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}}}}},"0:539:2259":{"id":"0:539:2259","crate_id":0,"name":"get_mut","span":{"filename":"src/map.rs","begin":[1445,4],"end":[1454,5]},"visibility":"public","docs":"Returns a mutable reference to the value corresponding to the key.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nif let Some(x) = map.get_mut(&1) {\n    *x = \"b\";\n}\nassert_eq!(map[&1], \"b\");\n\nassert_eq!(map.get_mut(&2), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:441:142":{"id":"a:1:2741:4891-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"4:687:4173":{"id":"4:687:4173","crate_id":4,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:97:1927":{"id":"b:1:3319-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:909:2213":{"id":"0:909:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[3366,4],"end":[3378,5]},"visibility":"public","docs":"Sets the value of the entry, and returns a RawOccupiedEntryMut.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);\n\nassert_eq!(entry.remove_entry(), (\"horseyland\", 37));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:1867":{"id":"0:78:1867","crate_id":0,"name":"is_full","span":{"filename":"src/raw/mod.rs","begin":[104,0],"end":[106,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Checks whether a control byte represents a full bucket (top bit is clear).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ctrl",{"primitive":"u8"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1062:3033":{"id":"a:1:8250:5087-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96:769":{"id":"0:96:769","crate_id":0,"name":"index","span":{"filename":"src/raw/mod.rs","begin":[269,4],"end":[269,16]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:1:2684:220-0:737:2843":{"id":"a:1:2684:220-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1617:4522":{"id":"0:1617:4522","crate_id":0,"name":"is_disjoint","span":{"filename":"src/set.rs","begin":[1044,4],"end":[1046,5]},"visibility":"public","docs":"Returns `true` if `self` has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nlet mut b = HashSet::new();\n\nassert_eq!(a.is_disjoint(&b), true);\nb.insert(4);\nassert_eq!(a.is_disjoint(&b), true);\nb.insert(1);\nassert_eq!(a.is_disjoint(&b), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1866:2509":{"id":"0:1866:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1865,4],"end":[1865,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"0:1091:1691":{"id":"0:1091:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[4496,4],"end":[4496,35]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2021":{"id":"0:2021","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[143,0],"end":[151,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"core::borrow::Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"for":{"generic":"Q"},"items":["0:2024:1690"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:1707:2871":{"id":"a:1:2701:228-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1230":{"id":"0:1230","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4814,0],"end":[4818,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1234:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1163:2510":{"id":"0:1163:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[4632,4],"end":[4632,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"b:1:2542-0:119:2112":{"id":"b:1:2542-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501:1562":{"id":"0:501:1562","crate_id":0,"name":"values","span":{"filename":"src/map.rs","begin":[682,4],"end":[684,5]},"visibility":"public","docs":"An iterator visiting all values in arbitrary order.\nThe iterator element type is `&'a V`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<i32> = Vec::new();\n\nfor val in map.values() {\n    println!(\"{}\", val);\n    vec.push(*val);\n}\n\n// The `Values` iterator produces values in arbitrary order, so the\n// values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [1, 2, 3]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:644:2871":{"id":"a:1:2741:4891-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:975:668":{"id":"0:975:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4116,4],"end":[4118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1032:729":{"id":"0:1032:729","crate_id":0,"name":"hash","span":{"filename":"src/map.rs","begin":[4318,4],"end":[4318,13]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:4:684-0:1727:4458":{"id":"b:4:684-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12096:21087":{"id":"1:12096:21087","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:11712:13646","`DoubleEndedIterator`":"1:7240:121","prim@char":"1:51699:419","str::match_indices":"1:12093:21086"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:43525:11786","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2071":{"id":"0:2071","crate_id":0,"name":null,"span":{"filename":"src/raw/bitmask.rs","begin":[105,9],"end":[105,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5387:21762":{"id":"4:5387:21762","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:812:3251":{"id":"0:812:3251","crate_id":0,"name":"RawEntryBuilderMut","span":{"filename":"src/map.rs","begin":[2858,0],"end":[2860,1]},"visibility":"public","docs":"A builder for computing where in a [`HashMap`] a key-value pair would be stored.\n\nSee the [`HashMap::raw_entry_mut`] docs for usage examples.\n\n[`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut\n\n# Examples\n\n```\nuse hashbrown::hash_map::{RawEntryBuilderMut, RawEntryMut::Vacant, RawEntryMut::Occupied};\nuse hashbrown::HashMap;\nuse core::hash::{BuildHasher, Hash};\n\nlet mut map = HashMap::new();\nmap.extend([(1, 11), (2, 12), (3, 13), (4, 14), (5, 15), (6, 16)]);\nassert_eq!(map.len(), 6);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet builder: RawEntryBuilderMut<_, _, _> = map.raw_entry_mut();\n\n// Existing key\nmatch builder.from_key(&6) {\n    Vacant(_) => unreachable!(),\n    Occupied(view) => assert_eq!(view.get(), &16),\n}\n\nfor key in 0..12 {\n    let hash = compute_hash(map.hasher(), &key);\n    let value = map.get(&key).cloned();\n    let key_value = value.as_ref().map(|v| (&key, v));\n\n    println!(\"Key: {} and value: {:?}\", key, value);\n\n    match map.raw_entry_mut().from_key(&key) {\n        Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),\n        Vacant(_) => assert_eq!(value, None),\n    }\n    match map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {\n        Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),\n        Vacant(_) => assert_eq!(value, None),\n    }\n    match map.raw_entry_mut().from_hash(hash, |q| *q == key) {\n        Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),\n        Vacant(_) => assert_eq!(value, None),\n    }\n}\n\nassert_eq!(map.len(), 6);\n```","links":{"`HashMap`":"0:441:142"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:818:859"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:865","0:875","a:1:2701:228-0:812:3251","a:1:8249:5088-0:812:3251","a:1:8250:5087-0:812:3251","a:1:2684:220-0:812:3251","a:1:2741:4891-0:812:3251","b:1:2542-0:812:3251","b:1:2248-0:812:3251","b:1:2553-0:812:3251","b:1:2251-0:812:3251","b:1:2538-0:812:3251","b:1:3319-0:812:3251","b:1:2548-0:812:3251","0:952"]}}},"0:1814":{"id":"0:1814","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1765,0],"end":[1765,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:393:2304":{"id":"b:1:3319-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:709:2961":{"id":"b:1:3319-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:51:2607":{"id":"0:51:2607","crate_id":0,"name":"remove_lowest_bit","span":{"filename":"src/raw/bitmask.rs","begin":[37,4],"end":[39,5]},"visibility":{"restricted":{"parent":"0:42:1842","path":"::raw::bitmask"}},"docs":"Returns a new `BitMask` with the lowest bit removed.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:95:1922":{"id":"a:1:2701:228-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2553-0:95:1922":{"id":"b:1:2553-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:763:2907":{"id":"b:1:3319-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:913:3559":{"id":"0:913:3559","crate_id":0,"name":"and_modify","span":{"filename":"src/map.rs","begin":[3463,4],"end":[3477,5]},"visibility":"public","docs":"Provides in-place mutable access to an occupied entry before any\npotential inserts into the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmap.raw_entry_mut()\n   .from_key(\"poneyland\")\n   .and_modify(|_k, v| { *v += 1 })\n   .or_insert(\"poneyland\", 42);\nassert_eq!(map[\"poneyland\"], 42);\n\nmap.raw_entry_mut()\n   .from_key(\"poneyland\")\n   .and_modify(|_k, v| { *v += 1 })\n   .or_insert(\"poneyland\", 0);\nassert_eq!(map[\"poneyland\"], 43);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:1117:3035":{"id":"a:1:2701:228-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:932:2213":{"id":"0:932:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[3812,4],"end":[3814,5]},"visibility":"public","docs":"Sets the value of the entry, and returns the entry's old value.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => assert_eq!(o.insert(1000), 100),\n}\n\nassert_eq!(map[&\"a\"], 1000);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"V"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1393:2181":{"id":"0:1393:2181","crate_id":0,"name":"remove_entry","span":{"filename":"src/map.rs","begin":[5979,4],"end":[5981,5]},"visibility":"public","docs":"Take the ownership of the key and value from the map.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.entry_ref(\"poneyland\").or_insert(12);\n\nif let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {\n    // We delete the entry from the map.\n    assert_eq!(o.remove_entry(), (\"poneyland\".to_owned(), 12));\n}\n\nassert_eq!(map.contains_key(\"poneyland\"), false);\n// Now map hold none elements but capacity is equal to the old one\nassert!(map.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2056:1844":{"id":"0:2056:1844","crate_id":0,"name":"Group","span":{"filename":"src/raw/sse2.rs","begin":[22,0],"end":[22,38]},"visibility":"crate","docs":"Abstraction over a group of control bytes which can be scanned in\nparallel.\n\nThis implementation uses a 128-bit SSE value.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:2058:1606"]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2036","a:1:2701:228-0:2056:1844","a:1:8249:5088-0:2056:1844","a:1:8250:5087-0:2056:1844","a:1:2684:220-0:2056:1844","a:1:2741:4891-0:2056:1844","b:1:2542-0:2056:1844","b:1:2248-0:2056:1844","b:1:2553-0:2056:1844","b:1:2251-0:2056:1844","b:1:2538-0:2056:1844","b:1:3319-0:2056:1844","b:1:2548-0:2056:1844","b:4:684-0:2056:1844","0:2059","0:2060"]}}},"a:1:2684:220-0:397:2572":{"id":"a:1:2684:220-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:1117:3035":{"id":"0:1117:3035","crate_id":0,"name":"VacantEntryRef","span":{"filename":"src/map.rs","begin":[4561,0],"end":[4565,1]},"visibility":"public","docs":"A view into a vacant entry in a `HashMap`.\nIt is part of the [`EntryRef`] enum.\n\n[`EntryRef`]: enum.EntryRef.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap, VacantEntryRef};\n\nlet mut map = HashMap::<String, i32>::new();\n\nlet entry_v: VacantEntryRef<_, _, _, _> = match map.entry_ref(\"a\") {\n    EntryRef::Vacant(view) => view,\n    EntryRef::Occupied(_) => unreachable!(),\n};\nentry_v.insert(10);\nassert!(map[\"a\"] == 10 && map.len() == 1);\n\n// Nonexistent key (insert and update)\nmatch map.entry_ref(\"b\") {\n    EntryRef::Occupied(_) => unreachable!(),\n    EntryRef::Vacant(view) => {\n        let value = view.insert(2);\n        assert_eq!(*value, 2);\n        *value = 20;\n    }\n}\nassert!(map[\"b\"] == 20 && map.len() == 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1125:729","0:1126:1691","0:1127:2114"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:1404","a:1:2701:228-0:1117:3035","a:1:8249:5088-0:1117:3035","a:1:8250:5087-0:1117:3035","a:1:2684:220-0:1117:3035","a:1:2741:4891-0:1117:3035","b:1:2542-0:1117:3035","b:1:2248-0:1117:3035","b:1:2553-0:1117:3035","b:1:2251-0:1117:3035","b:1:2538-0:1117:3035","b:1:3319-0:1117:3035","b:1:2548-0:1117:3035","0:1128"]}}},"1:12132:19753":{"id":"1:12132:19753","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:2068:1843":{"id":"a:1:2701:228-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:749:668":{"id":"0:749:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2592,4],"end":[2594,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1356":{"id":"0:1356","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[5653,0],"end":[5898,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1364:2213","0:1365:3538","0:1366:3549","0:1368:3834","0:1370:1691","0:1371:3559","0:1373:3582"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:1488:1827":{"id":"a:1:2701:228-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1888:2509":{"id":"0:1888:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1918,4],"end":[1918,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"a:1:8249:5088-0:1938:3019":{"id":"a:1:8249:5088-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:2102":{"id":"0:2102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[154,31],"end":[154,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2103:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2035:2586":{"id":"0:2035:2586","crate_id":0,"name":"BITMASK_ITER_MASK","span":{"filename":"src/raw/sse2.rs","begin":[15,0],"end":[15,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"u16"},"expr":"_","value":"65_535u16","is_literal":false}}},"b:1:7206-0:709:2961":{"id":"b:1:7206-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:1:2538-0:2074:1852":{"id":"b:1:2538-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1290":{"id":"0:1290","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4912,0],"end":[4917,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1294:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:807:2860":{"id":"b:1:2548-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1040:668":{"id":"0:1040:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4324,4],"end":[4326,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1747:4467":{"id":"0:1747:4467","crate_id":0,"name":"Union","span":{"filename":"src/set.rs","begin":[1632,0],"end":[1634,1]},"visibility":"public","docs":"A lazy iterator producing elements in the union of `HashSet`s.\n\nThis `struct` is created by the [`union`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`union`]: struct.HashSet.html#method.union","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1752:795"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1747:4467","a:1:8249:5088-0:1747:4467","a:1:8250:5087-0:1747:4467","a:1:2684:220-0:1747:4467","a:1:2741:4891-0:1747:4467","b:1:2542-0:1747:4467","b:1:2248-0:1747:4467","b:1:2553-0:1747:4467","b:1:2251-0:1747:4467","b:1:7206-0:1747:4467","b:1:2538-0:1747:4467","b:1:3319-0:1747:4467","b:1:2548-0:1747:4467","b:4:684-0:1747:4467","0:1914","0:1905","0:1900","0:1909"]}}},"1:12035:11795":{"id":"1:12035:11795","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:51699:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:43327:11773","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:97:1927":{"id":"a:1:8250:5087-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:662:1659":{"id":"0:662:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2358,4],"end":[2358,26]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}}}},"1:7209:2510":{"id":"1:7209:2510","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:500:2842":{"id":"0:500:2842","crate_id":0,"name":"keys","span":{"filename":"src/map.rs","begin":[650,4],"end":[652,5]},"visibility":"public","docs":"An iterator visiting all keys in arbitrary order.\nThe iterator element type is `&'a K`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<&str> = Vec::new();\n\nfor key in map.keys() {\n    println!(\"{}\", key);\n    vec.push(*key);\n}\n\n// The `Keys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [\"a\", \"b\", \"c\"]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:1711:2510":{"id":"b:1:2538-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1246":{"id":"0:1246","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4842,0],"end":[4842,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:7206-0:2068:1843":{"id":"b:1:7206-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:1:2251-0:305:2293":{"id":"b:1:2251-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:592:2179":{"id":"0:592:2179","crate_id":0,"name":"remove","span":{"filename":"src/map.rs","begin":[1891,4],"end":[1900,5]},"visibility":"public","docs":"Removes a key from the map, returning the value at the key if the key\nwas previously in the map. Keeps the allocated memory for reuse.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.insert(1, \"a\");\n\nassert_eq!(map.remove(&1), Some(\"a\"));\nassert_eq!(map.remove(&1), None);\n\n// Now map holds none elements\nassert!(map.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/raw/bitmask.rs","begin":[91,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:58:2509","0:59:2510","0:60:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:774:2940":{"id":"a:1:8250:5087-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:871:3513":{"id":"0:871:3513","crate_id":0,"name":"from_key","span":{"filename":"src/map.rs","begin":[3167,4],"end":[3174,5]},"visibility":"public","docs":"Creates a `RawEntryMut` from the given key.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key(&key);\nentry.insert(key, 100);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":["#[inline]","#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1328":{"id":"0:1328","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[5211,0],"end":[5564,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1334:1691","0:1335:2181","0:1336:2257","0:1337:2259","0:1338:3614","0:1339:2213","0:1340:2179","0:1341:3900","0:1342:3923","0:1343:3583"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1179:2509":{"id":"0:1179:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4700,4],"end":[4700,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"b:1:2553-0:1922:3016":{"id":"b:1:2553-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1983:2225":{"id":"0:1983:2225","crate_id":0,"name":"insert_entry","span":{"filename":"src/set.rs","begin":[2384,4],"end":[2392,5]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:2089:1695":{"id":"a:1:8249:5088-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:296:423":{"id":"0:296:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/mod.rs","begin":[2848,4],"end":[2855,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1143":{"id":"0:1143","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4606,0],"end":[4614,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1148:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:970":{"id":"0:970","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4115,0],"end":[4119,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:975:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1134:668":{"id":"0:1134:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4570,4],"end":[4572,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1572:2939":{"id":"0:1572:2939","crate_id":0,"name":"extract_if","span":{"filename":"src/set.rs","begin":[403,4],"end":[414,5]},"visibility":"public","docs":"Drains elements which are true under the given predicate,\nand returns an iterator over the removed items.\n\nIn other words, move all elements `e` such that `f(&e)` returns `true` out\ninto another iterator.\n\nIf the returned `ExtractIf` is not exhausted, e.g. because it is dropped without iterating\nor the iteration short-circuits, then the remaining elements will be retained.\nUse [`retain()`] with a negated predicate if you do not need the returned iterator.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<i32> = (0..8).collect();\nlet drained: HashSet<i32> = set.extract_if(|v| v % 2 == 0).collect();\n\nlet mut evens = drained.into_iter().collect::<Vec<_>>();\nlet mut odds = set.into_iter().collect::<Vec<_>>();\nevens.sort();\nodds.sort();\n\nassert_eq!(evens, vec![0, 2, 4, 6]);\nassert_eq!(odds, vec![1, 3, 5, 7]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1739:795":{"id":"0:1739:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[1609,4],"end":[1609,21]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"0:780:640":{"id":"0:780:640","crate_id":0,"name":"f","span":{"filename":"src/map.rs","begin":[2724,4],"end":[2724,8]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"F"}}},"0:750:2853":{"id":"0:750:2853","crate_id":0,"name":"Values","span":{"filename":"src/map.rs","begin":[2625,0],"end":[2627,1]},"visibility":"public","docs":"An iterator over the values of a `HashMap` in arbitrary order.\nThe iterator element type is `&'a V`.\n\nThis `struct` is created by the [`values`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`values`]: struct.HashMap.html#method.values\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut values = map.values();\nlet mut vec = vec![values.next(), values.next(), values.next()];\n\n// The `Values` iterator produces values in arbitrary order, so the\n// values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(&\"a\"), Some(&\"b\"), Some(&\"c\")]);\n\n// It is fused iterator\nassert_eq!(values.next(), None);\nassert_eq!(values.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:754:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:750:2853","a:1:8249:5088-0:750:2853","a:1:8250:5087-0:750:2853","a:1:2684:220-0:750:2853","a:1:2741:4891-0:750:2853","b:1:2542-0:750:2853","b:1:2248-0:750:2853","b:1:2553-0:750:2853","b:1:2251-0:750:2853","b:1:7206-0:750:2853","b:1:2538-0:750:2853","b:1:3319-0:750:2853","b:1:2548-0:750:2853","b:4:684-0:750:2853","0:755","0:1249","0:1256","0:1260","0:759"]}}},"0:2079":{"id":"0:2079","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[70,9],"end":[70,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:1720:2940":{"id":"b:1:2538-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1965:2213":{"id":"0:1965:2213","crate_id":0,"name":"insert","span":{"filename":"src/set.rs","begin":[2173,4],"end":[2182,5]},"visibility":"public","docs":"Sets the value of the entry, and returns an OccupiedEntry.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\nlet entry = set.entry(\"horseyland\").insert();\n\nassert_eq!(entry.get(), &\"horseyland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:423":{"id":"0:315:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/mod.rs","begin":[3030,4],"end":[3035,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:684-0:97:1927":{"id":"b:4:684-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1785:668":{"id":"0:1785:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1707,4],"end":[1709,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:709:2961":{"id":"0:709:2961","crate_id":0,"name":"IntoValues","span":{"filename":"src/map.rs","begin":[2515,0],"end":[2517,1]},"visibility":"public","docs":"An owning iterator over the values of a `HashMap` in arbitrary order.\nThe iterator element type is `V`.\n\nThis `struct` is created by the [`into_values`] method on [`HashMap`].\nSee its documentation for more. The map cannot be used after calling that method.\n\n[`into_values`]: struct.HashMap.html#method.into_values\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut values = map.into_values();\nlet mut vec = vec![values.next(), values.next(), values.next()];\n\n// The `IntoValues` iterator produces values in arbitrary order, so\n// the values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(\"a\"), Some(\"b\"), Some(\"c\")]);\n\n// It is fused iterator\nassert_eq!(values.next(), None);\nassert_eq!(values.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:713:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:709:2961","a:1:8249:5088-0:709:2961","a:1:8250:5087-0:709:2961","a:1:2684:220-0:709:2961","a:1:2741:4891-0:709:2961","b:1:2542-0:709:2961","b:1:2248-0:709:2961","b:1:2553-0:709:2961","b:1:2251-0:709:2961","b:1:7206-0:709:2961","b:1:2538-0:709:2961","b:1:3319-0:709:2961","b:1:2548-0:709:2961","0:727","0:714","0:722","0:731"]}}},"b:1:2548-0:393:2304":{"id":"b:1:2548-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:840":{"id":"0:840","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3043,0],"end":[3050,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1609:4491":{"id":"0:1609:4491","crate_id":0,"name":"get_or_insert_owned","span":{"filename":"src/set.rs","begin":[940,4],"end":[951,5]},"visibility":"public","docs":"Inserts an owned copy of the given `value` into the set if it is not\npresent, then returns a reference to the value in the set.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]\n    .iter().map(|&pet| pet.to_owned()).collect();\n\nassert_eq!(set.len(), 3);\nfor &pet in &[\"cat\", \"dog\", \"fish\"] {\n    let value = set.get_or_insert_owned(pet);\n    assert_eq!(value, pet);\n}\nassert_eq!(set.len(), 4); // a new \"fish\" was inserted\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:671:2510":{"id":"a:1:2684:220-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2103:668":{"id":"0:2103:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[154,31],"end":[154,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:305:2293":{"id":"b:1:2248-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:2062:2602":{"id":"a:1:2701:228-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:812:3251":{"id":"a:1:2701:228-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:1082:3032":{"id":"b:1:3319-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:2056:1844":{"id":"b:4:684-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:359:2308":{"id":"b:1:2542-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:7206-0:774:2940":{"id":"b:1:7206-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:875":{"id":"0:875","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3208,0],"end":[3257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:881:3517","0:884:3521"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1068:1606":{"id":"0:1068:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[4428,13],"end":[4428,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Q"}}}}},"0:410:953":{"id":"0:410:953","crate_id":0,"name":"next","span":{"filename":"src/raw/mod.rs","begin":[3292,4],"end":[3305,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:681:2954":{"id":"a:1:8249:5088-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:742":{"id":"0:742","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2582,0],"end":[2589,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:745:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:1062:3033":{"id":"b:1:2538-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12069:21081":{"id":"1:12069:21081","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:11712:13646","str::split":"1:12060:2521","prim@char":"1:51699:419","`DoubleEndedIterator`":"1:7240:121","str::rsplit_terminator":"1:12072:21082"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:43407:11779","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:95:1922":{"id":"a:1:2741:4891-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1200:2509":{"id":"0:1200:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4758,4],"end":[4758,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]}}}},"a:1:8249:5088-0:2074:1852":{"id":"a:1:8249:5088-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:97:1927":{"id":"a:1:8249:5088-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:658:2880":{"id":"b:1:2251-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:790":{"id":"0:790","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2746,0],"end":[2746,92]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:787:2509":{"id":"0:787:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[2733,4],"end":[2733,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"0:1051:1606":{"id":"0:1051:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[4398,13],"end":[4398,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:318:2509":{"id":"0:318:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/mod.rs","begin":[3039,4],"end":[3039,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"b:1:2248-0:658:2880":{"id":"b:1:2248-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:1062:3033":{"id":"a:1:2701:228-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:441:142":{"id":"b:1:2248-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1450:4052":{"id":"0:1450:4052","crate_id":0,"name":"assert_covariance","span":{"filename":"src/map.rs","begin":[6608,0],"end":[6648,1]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1127:2114":{"id":"0:1127:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[4564,4],"end":[4564,38]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"0:1696:362":{"id":"0:1696:362","crate_id":0,"name":"bitand","span":{"filename":"src/set.rs","begin":[1468,4],"end":[1470,5]},"visibility":"default","docs":"Returns the intersection of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![2, 3, 4].into_iter().collect();\n\nlet set = &a & &b;\n\nlet mut i = 0;\nlet expected = [2, 3];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1707:2871":{"id":"0:1707:2871","crate_id":0,"name":"Iter","span":{"filename":"src/set.rs","begin":[1544,0],"end":[1546,1]},"visibility":"public","docs":"An iterator over the items of a `HashSet`.\n\nThis `struct` is created by the [`iter`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`iter`]: struct.HashSet.html#method.iter","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1710:795"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1707:2871","a:1:8249:5088-0:1707:2871","a:1:8250:5087-0:1707:2871","a:1:2684:220-0:1707:2871","a:1:2741:4891-0:1707:2871","b:1:2542-0:1707:2871","b:1:2248-0:1707:2871","b:1:2553-0:1707:2871","b:1:2251-0:1707:2871","b:1:7206-0:1707:2871","b:1:2538-0:1707:2871","b:1:3319-0:1707:2871","b:1:2548-0:1707:2871","b:4:684-0:1707:2871","0:1777","0:1768","0:1781","0:1771","0:1783"]}}},"b:1:2538-0:2068:1843":{"id":"b:1:2538-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:521:2205":{"id":"0:521:2205","crate_id":0,"name":"try_reserve","span":{"filename":"src/map.rs","begin":[1151,4],"end":[1154,5]},"visibility":"public","docs":"Tries to reserve capacity for at least `additional` more elements to be inserted\nin the given `HashMap<K,V>`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Errors\n\nIf the capacity overflows, or the allocator reports a failure, then an error\nis returned.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, isize> = HashMap::new();\n// Map is empty and doesn't allocate memory\nassert_eq!(map.capacity(), 0);\n\nmap.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");\n\n// And now map can hold at least 10 elements\nassert!(map.capacity() >= 10);\n```\nIf the capacity overflows, or the allocator reports a failure, then an error\nis returned:\n```\n# fn test() {\nuse hashbrown::HashMap;\nuse hashbrown::TryReserveError;\nlet mut map: HashMap<i32, i32> = HashMap::new();\n\nmatch map.try_reserve(usize::MAX) {\n    Err(error) => match error {\n        TryReserveError::CapacityOverflow => {}\n        _ => panic!(\"TryReserveError::AllocError ?\"),\n    },\n    _ => panic!(),\n}\n# }\n# fn main() {\n#     #[cfg(not(miri))]\n#     test()\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1720:2940":{"id":"0:1720:2940","crate_id":0,"name":"ExtractIf","span":{"filename":"src/set.rs","begin":[1578,0],"end":[1584,1]},"visibility":"public","docs":"A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.\n\nThis `struct` is created by the [`extract_if`] method on [`HashSet`]. See its\ndocumentation for more.\n\n[`extract_if`]: struct.HashSet.html#method.extract_if\n[`HashSet`]: struct.HashSet.html","links":{},"attrs":["#[must_use = \"Iterators are lazy unless consumed\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1725:640","0:1726:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:1:2701:228-0:1720:2940","a:1:8249:5088-0:1720:2940","a:1:8250:5087-0:1720:2940","a:1:2684:220-0:1720:2940","a:1:2741:4891-0:1720:2940","b:1:2542-0:1720:2940","b:1:2248-0:1720:2940","b:1:2553-0:1720:2940","b:1:2251-0:1720:2940","b:1:7206-0:1720:2940","b:1:2538-0:1720:2940","b:1:3319-0:1720:2940","b:1:2548-0:1720:2940","0:1830","0:1822"]}}},"b:1:2548-0:1727:4458":{"id":"b:1:2548-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1877:668":{"id":"0:1877:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1898,4],"end":[1900,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:1747:4467":{"id":"a:1:2741:4891-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:1711:2510":{"id":"b:1:2248-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:95:1922":{"id":"b:1:2542-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:1747:4467":{"id":"b:1:2553-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12110:21094":{"id":"1:12110:21094","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:1540:144":{"id":"a:1:2701:228-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2548-0:441:142":{"id":"b:1:2548-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:359:2308":{"id":"b:1:3319-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:811:1659":{"id":"0:811:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2800,4],"end":[2800,28]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}}}},"b:0:2021-0:1540:144":{"id":"b:0:2021-0:1540:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[143,0],"end":[151,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:2024:1690"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"Q"}}}},"b:1:2251-0:1747:4467":{"id":"b:1:2251-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:831:3469":{"id":"a:1:8249:5088-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:156:2188":{"id":"0:156:2188","crate_id":0,"name":"drop_elements","span":{"filename":"src/raw/mod.rs","begin":[1035,4],"end":[1041,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1274":{"id":"0:1274","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4890,0],"end":[4890,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:1741:4449":{"id":"b:1:2538-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:1715:2907":{"id":"b:1:2538-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:393:2304":{"id":"a:1:2684:220-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:321:2528":{"id":"0:321:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/raw/mod.rs","begin":[3061,4],"end":[3063,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:927:3614":{"id":"0:927:3614","crate_id":0,"name":"into_mut","span":{"filename":"src/map.rs","begin":[3671,4],"end":[3673,5]},"visibility":"public","docs":"Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nlet value: &mut u32;\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => value = o.into_mut(),\n}\n*value += 900;\n\nassert_eq!(map[&\"a\"], 1000);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2061:423":{"id":"0:2061:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/sse2.rs","begin":[21,15],"end":[21,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1162:2509":{"id":"0:1162:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4631,4],"end":[4631,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}}},"b:1:7206-0:305:2293":{"id":"b:1:7206-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:976":{"id":"0:976","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4121,0],"end":[4125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:981:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180:2274":{"id":"0:180:2274","crate_id":0,"name":"get_many_unchecked_mut","span":{"filename":"src/raw/mod.rs","begin":[1356,4],"end":[1363,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hashes",{"array":{"type":{"primitive":"u64"},"len":"N"}}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}},{"name":"impl FnMut(usize, &T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:670:795":{"id":"0:670:795","crate_id":0,"name":"iter","span":{"filename":"src/map.rs","begin":[2371,4],"end":[2376,5]},"visibility":"crate","docs":"Returns a iterator of references over the remaining items.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:812:3251":{"id":"a:1:2684:220-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:644:2871":{"id":"b:1:2248-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:119:2112":{"id":"b:1:2553-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:737:2843":{"id":"b:4:684-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:763:2907":{"id":"b:1:2538-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:124:2115":{"id":"b:1:2553-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:837:3017":{"id":"0:837:3017","crate_id":0,"name":"elem","span":{"filename":"src/map.rs","begin":[3038,4],"end":[3038,24]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}}}},"0:680:795":{"id":"0:680:795","crate_id":0,"name":"iter","span":{"filename":"src/map.rs","begin":[2416,4],"end":[2421,5]},"visibility":"crate","docs":"Returns a iterator of references over the remaining items.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:774:2940":{"id":"b:1:2248-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:550:2274":{"id":"0:550:2274","crate_id":0,"name":"get_many_unchecked_mut","span":{"filename":"src/map.rs","begin":[1564,4],"end":[1573,5]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once, without validating that\nthe values are unique.\n\nReturns an array of length `N` with the results of each query. `None` will be returned if\nany of the keys are missing.\n\nFor a safe alternative see [`get_many_mut`](`HashMap::get_many_mut`).\n\n# Safety\n\nCalling this method with overlapping keys is *[undefined behavior]* even if the resulting\nreferences are not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"Library of Congress\",\n]);\nassert_eq!(\n    got,\n    Some([\n        &mut 1807,\n        &mut 1800,\n    ]),\n);\n\n// Missing keys result in None\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"New York Public Library\",\n]);\nassert_eq!(got, None);\n```","links":{"`HashMap::get_many_mut`":"0:543:2266"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:964":{"id":"0:964","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4106,0],"end":[4113,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:969:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:1000:3019":{"id":"b:1:2538-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1061:668":{"id":"0:1061:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4419,4],"end":[4424,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:2628":{"id":"0:440:2628","crate_id":0,"name":"DefaultHashBuilder","span":{"filename":"src/map.rs","begin":[13,0],"end":[13,77]},"visibility":"public","docs":"Default hasher for `HashMap`.","links":{},"attrs":["#[cfg(feature = \"ahash\")]"],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"core::hash::BuildHasherDefault","id":"1:9410:2629","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ahash::AHasher","id":"6:790:2630","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:108:1966":{"id":"0:108:1966","crate_id":0,"name":"from_base_index","span":{"filename":"src/raw/mod.rs","begin":[346,4],"end":[378,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Creates a [`Bucket`] that contain pointer to the data.\nThe pointer calculation is performed by calculating the\noffset from given `base` pointer (convenience for\n`base.as_ptr().sub(index)`).\n\n`index` is in units of `T`; e.g., an `index` of 3 represents a pointer\noffset of `3 * size_of::<T>()` bytes.\n\nIf the `T` is a ZST, then we instead track the index of the element\nin the table so that `erase` works properly (return\n`NonNull::new_unchecked((index + 1) as *mut T)`)\n\n# Safety\n\nIf `mem::size_of::<T>() != 0`, then the safety rules are directly derived\nfrom the safety rules for [`<*mut T>::sub`] method of `*mut T` and the safety\nrules of [`NonNull::new_unchecked`] function.\n\nThus, in order to uphold the safety contracts for the [`<*mut T>::sub`] method\nand [`NonNull::new_unchecked`] function, as well as for the correct\nlogic of the work of this crate, the following rules are necessary and\nsufficient:\n\n* the `base` pointer must not be `dangling` and must points to the\n  end of the first `value element` from the `data part` of the table, i.e.\n  must be the pointer that returned by [`RawTable::data_end`] or by\n  [`RawTableInner::data_end<T>`];\n\n* `index` must not be greater than `RawTableInner.bucket_mask`, i.e.\n  `index <= RawTableInner.bucket_mask` or, in other words, `(index + 1)`\n  must be no greater than the number returned by the function\n  [`RawTable::buckets`] or [`RawTableInner::buckets`].\n\nIf `mem::size_of::<T>() == 0`, then the only requirement is that the\n`index` must not be greater than `RawTableInner.bucket_mask`, i.e.\n`index <= RawTableInner.bucket_mask` or, in other words, `(index + 1)`\nmust be no greater than the number returned by the function\n[`RawTable::buckets`] or [`RawTableInner::buckets`].\n\n[`Bucket`]: crate::raw::Bucket\n[`<*mut T>::sub`]: https://doc.rust-lang.org/core/primitive.pointer.html#method.sub-1\n[`NonNull::new_unchecked`]: https://doc.rust-lang.org/stable/std/ptr/struct.NonNull.html#method.new_unchecked\n[`RawTable::data_end`]: crate::raw::RawTable::data_end\n[`RawTableInner::data_end<T>`]: RawTableInner::data_end<T>\n[`RawTable::buckets`]: crate::raw::RawTable::buckets\n[`RawTableInner::buckets`]: RawTableInner::buckets","links":{"crate::raw::Bucket":"0:97:1927","RawTableInner::data_end<T>":"0:224:2152","crate::raw::RawTable::data_end":"0:146:2152","RawTableInner::buckets":"0:234:1916","crate::raw::RawTable::buckets":"0:193:1916"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["base",{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}],["index",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1558:2124":{"id":"0:1558:2124","crate_id":0,"name":"new_in","span":{"filename":"src/set.rs","begin":[221,4],"end":[225,5]},"visibility":"public","docs":"Creates an empty `HashSet`.\n\nThe hash set is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_hasher_in`](HashSet::with_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::new();\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144","HashSet::with_hasher_in":"0:1585:2784"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1648":{"id":"0:1648","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1301,0],"end":[1308,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"tuple":[]}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1652:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:794:2941":{"id":"a:1:2701:228-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:830:1606":{"id":"0:830:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[2974,11],"end":[2974,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"b:1:2553-0:1062:3033":{"id":"b:1:2553-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1187:953":{"id":"0:1187:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[4733,4],"end":[4742,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:694":{"id":"0:694","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2470,0],"end":[2475,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:698:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:812:3251":{"id":"b:1:3319-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1340:2179":{"id":"0:1340:2179","crate_id":0,"name":"remove","span":{"filename":"src/map.rs","begin":[5391,4],"end":[5393,5]},"visibility":"public","docs":"Takes the value out of the entry, and returns it.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.entry(\"poneyland\").or_insert(12);\n\nif let Entry::Occupied(o) = map.entry(\"poneyland\") {\n    assert_eq!(o.remove(), 12);\n}\n\nassert_eq!(map.contains_key(\"poneyland\"), false);\n// Now map hold none elements\nassert!(map.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397:2572":{"id":"0:397:2572","crate_id":0,"name":"RawIterHashInner","span":{"filename":"src/raw/mod.rs","begin":[3240,0],"end":[3257,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:398:1895","0:399:1868","0:400:2358","0:401:2350","0:402:2349","0:403:1842"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:2701:228-0:397:2572","a:1:8249:5088-0:397:2572","a:1:8250:5087-0:397:2572","a:1:2684:220-0:397:2572","a:1:2741:4891-0:397:2572","b:1:2542-0:397:2572","b:1:2248-0:397:2572","b:1:2553-0:397:2572","b:1:2251-0:397:2572","b:1:7206-0:397:2572","b:1:2538-0:397:2572","b:1:3319-0:397:2572","b:1:2548-0:397:2572","0:411"]}}},"b:1:2542-0:1026:3021":{"id":"b:1:2542-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:1488:1827":{"id":"b:1:2248-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:1540:144":{"id":"b:1:2548-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1768":{"id":"0:1768","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1678,0],"end":[1685,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["0:1770:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1792":{"id":"0:1792","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1728,0],"end":[1733,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1795:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:1715:2907":{"id":"b:1:2248-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336:795":{"id":"0:336:795","crate_id":0,"name":"iter","span":{"filename":"src/raw/mod.rs","begin":[3079,4],"end":[3081,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:658:2880":{"id":"a:1:2741:4891-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235:2237":{"id":"0:235:2237","crate_id":0,"name":"is_bucket_full","span":{"filename":"src/raw/mod.rs","begin":[2130,4],"end":[2133,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Checks whether the bucket at `index` is full.\n\n# Safety\n\nThe caller must ensure `index` is less than the number of buckets.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:774:2940":{"id":"a:1:8249:5088-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:812:3251":{"id":"b:1:2251-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1412:1691":{"id":"0:1412:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[6299,4],"end":[6304,5]},"visibility":"public","docs":"Gets a reference to the key that would be used when inserting a value\nthrough the `VacantEntryRef`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nlet key: &str = \"poneyland\";\nassert_eq!(map.entry_ref(key).key(), \"poneyland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:2605":{"id":"0:50:2605","crate_id":0,"name":"invert","span":{"filename":"src/raw/bitmask.rs","begin":[30,4],"end":[32,5]},"visibility":"crate","docs":"Returns a new `BitMask` with all bits inverted.","links":{},"attrs":["#[inline]","#[must_use]","#[allow(dead_code)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:2056:1844":{"id":"b:1:3319-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:504:2861":{"id":"0:504:2861","crate_id":0,"name":"iter_mut","span":{"filename":"src/map.rs","begin":[799,4],"end":[807,5]},"visibility":"public","docs":"An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nThe iterator element type is `(&'a K, &'a mut V)`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\n// Update all values\nfor (_, val) in map.iter_mut() {\n    *val *= 2;\n}\n\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<(&str, i32)> = Vec::new();\n\nfor (key, val) in &map {\n    println!(\"key: {} val: {}\", key, val);\n    vec.push((*key, *val));\n}\n\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 2), (\"b\", 4), (\"c\", 6)]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:825:3018":{"id":"0:825:3018","crate_id":0,"name":"Occupied","span":{"filename":"src/map.rs","begin":[2960,4],"end":[2960,49]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::{hash_map::RawEntryMut, HashMap};\nlet mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:827:1606"]},"discriminant":null}}},"b:1:2248-0:819:3464":{"id":"b:1:2248-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:359:2308":{"id":"0:359:2308","crate_id":0,"name":"RawDrain","span":{"filename":"src/raw/mod.rs","begin":[3146,0],"end":[3158,1]},"visibility":"public","docs":"Iterator which consumes elements without freeing the table storage.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:363:795","0:364:2114","0:365:2315","0:366:860"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:367","a:1:8249:5088-0:359:2308","a:1:8250:5087-0:359:2308","a:1:2741:4891-0:359:2308","b:1:2542-0:359:2308","b:1:2248-0:359:2308","b:1:2553-0:359:2308","b:1:2251-0:359:2308","b:1:7206-0:359:2308","b:1:2538-0:359:2308","b:1:3319-0:359:2308","b:1:2548-0:359:2308","0:387","0:390","0:377","0:381","0:374","0:371"]}}},"0:1719:795":{"id":"0:1719:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[1567,4],"end":[1567,34]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"map::Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"tuple":[]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"b:1:3319-0:1715:2907":{"id":"b:1:3319-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:1734:4439":{"id":"b:1:2553-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:88:1894":{"id":"0:88:1894","crate_id":0,"name":"move_next","span":{"filename":"src/raw/mod.rs","begin":[164,4],"end":[174,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bucket_mask",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3308,0],"end":[3334,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:412:2509","0:413:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2251-0:1734:4439":{"id":"b:1:2251-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1765:2509":{"id":"0:1765:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1647,4],"end":[1647,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:910:3538":{"id":"0:910:3538","crate_id":0,"name":"or_insert","span":{"filename":"src/map.rs","begin":[3397,4],"end":[3406,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty, and returns\nmutable references to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmap.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);\nassert_eq!(map[\"poneyland\"], 3);\n\n*map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default_key",{"generic":"K"}],["default_val",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:831:3469":{"id":"b:1:2553-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1746:795":{"id":"0:1746:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[1622,4],"end":[1622,65]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Chain","id":"1:40255:4299","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:1:2741:4891-0:850:3473":{"id":"a:1:2741:4891-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:1540:144":{"id":"b:1:2251-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:1938:3019":{"id":"b:1:2542-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2098:613":{"id":"0:2098:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[154,16],"end":[154,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1594:2998":{"id":"0:1594:2998","crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/set.rs","begin":[688,4],"end":[690,5]},"visibility":"public","docs":"Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::with_capacity(100);\nset.insert(1);\nset.insert(2);\nassert!(set.capacity() >= 100);\nset.shrink_to_fit();\nassert!(set.capacity() >= 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12056:10326":{"id":"1:12056:10326","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:41396:179","prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2186":{"id":"0:192:2186","crate_id":0,"name":"is_empty","span":{"filename":"src/raw/mod.rs","begin":[1400,4],"end":[1402,5]},"visibility":"public","docs":"Returns `true` if the table contains no elements.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1868:2528":{"id":"0:1868:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1878,4],"end":[1881,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2112":{"id":"0:119:2112","crate_id":0,"name":"RawTable","span":{"filename":"src/raw/mod.rs","begin":[777,0],"end":[781,1]},"visibility":"public","docs":"A raw hash table with an unsafe API.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:122:2114","0:123:860"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:131","0:135","0:260","a:1:8249:5088-0:119:2112","a:1:8250:5087-0:119:2112","a:1:2741:4891-0:119:2112","b:1:2542-0:119:2112","b:1:2248-0:119:2112","b:1:2553-0:119:2112","b:1:2251-0:119:2112","b:1:2538-0:119:2112","b:1:3319-0:119:2112","b:1:2548-0:119:2112","b:4:684-0:119:2112","0:257","0:248","0:203","0:265","0:273","0:269","0:200"]}}},"a:1:2684:220-0:774:2940":{"id":"a:1:2684:220-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:507:2307":{"id":"0:507:2307","crate_id":0,"name":"drain","span":{"filename":"src/map.rs","begin":[888,4],"end":[892,5]},"visibility":"public","docs":"Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.\n\nIf the returned iterator is dropped before being fully consumed, it\ndrops the remaining key-value pairs. The returned iterator keeps a\nmutable borrow on the vector to optimize its implementation.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\na.insert(1, \"a\");\na.insert(2, \"b\");\nlet capacity_before_drain = a.capacity();\n\nfor (k, v) in a.drain().take(1) {\n    assert!(k == 1 || k == 2);\n    assert!(v == \"a\" || v == \"b\");\n}\n\n// As we can see, the map is empty and contains no element.\nassert!(a.is_empty() && a.len() == 0);\n// But map capacity is equal to old one.\nassert_eq!(a.capacity(), capacity_before_drain);\n\nlet mut a = HashMap::new();\na.insert(1, \"a\");\na.insert(2, \"b\");\n\n{   // Iterator is dropped without being consumed.\n    let d = a.drain();\n}\n\n// But the map is empty even if we do not use Drain iterator.\nassert!(a.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:52:2362":{"id":"0:52:2362","crate_id":0,"name":"any_bit_set","span":{"filename":"src/raw/bitmask.rs","begin":[43,4],"end":[45,5]},"visibility":"crate","docs":"Returns whether the `BitMask` has at least one set bit.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1181:784":{"id":"0:1181:784","crate_id":0,"name":"into_iter","span":{"filename":"src/map.rs","begin":[4722,4],"end":[4726,5]},"visibility":"default","docs":"Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(\"a\", 1), (\"b\", 2), (\"c\", 3)].into();\n\n// Not possible with .iter()\nlet mut vec: Vec<(&str, i32)> = map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so\n// the items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3)]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:2082:1913":{"id":"a:1:2684:220-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:703":{"id":"0:703","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2479,0],"end":[2485,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:707:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3028,0],"end":[3036,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:315:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:850:3473":{"id":"b:1:2553-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[831,0],"end":[1516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:138:2134","0:139:2135","0:140:2124","0:141:2140","0:142:2142","0:143:2133","0:144:290","0:145:2150","0:146:2152","0:147:2164","0:148:2165","0:149:2168","0:150:2169","0:151:2179","0:152:2181","0:153:2183","0:154:2185","0:156:2188","0:157:2190","0:158:2200","0:159:2205","0:160:2202","0:162:2196","0:164:2213","0:165:2225","0:166:2234","0:168:2246","0:170:2218","0:171:2176","0:173:2257","0:174:2259","0:175:2266","0:180:2274","0:184:2269","0:190:2128","0:191:811","0:192:2186","0:193:1916","0:194:2237","0:195:795","0:196:2307","0:197:2309","0:198:2317","0:199:2320"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:737:2843":{"id":"b:1:3319-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:1715:2907":{"id":"b:1:2553-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:807:2860":{"id":"a:1:2684:220-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1726:1659":{"id":"0:1726:1659","crate_id":0,"name":"inner","span":{"filename":"src/set.rs","begin":[1583,4],"end":[1583,39]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"tuple":[]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"a:1:8249:5088-0:2062:2602":{"id":"a:1:8249:5088-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:84:1891":{"id":"b:1:2538-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:112:588":{"id":"0:112:588","crate_id":0,"name":"drop","span":{"filename":"src/raw/mod.rs","begin":[580,4],"end":[582,5]},"visibility":"crate","docs":"Executes the destructor (if any) of the pointed-to `data`.\n\n# Safety\n\nSee [`ptr::drop_in_place`] for safety concerns.\n\nYou should use [`RawTable::erase`] instead of this function,\nor be careful with calling this function directly, because for\nproperly dropping the data we need also clear `data` control bytes.\nIf we drop data, but do not erase `data control byte` it leads to\ndouble drop when [`RawTable`] goes out of scope.\n\n[`ptr::drop_in_place`]: https://doc.rust-lang.org/core/ptr/fn.drop_in_place.html\n[`RawTable`]: crate::raw::RawTable\n[`RawTable::erase`]: crate::raw::RawTable::erase","links":{"crate::raw::RawTable::erase":"0:150:2169","crate::raw::RawTable":"0:119:2112"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:681:2954":{"id":"b:1:2553-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:1117:3035":{"id":"b:1:2553-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:1707:2871":{"id":"a:1:8249:5088-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:1741:4449":{"id":"a:1:8249:5088-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1920:953":{"id":"0:1920:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1986,4],"end":[1988,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1182":{"id":"0:1182","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4729,0],"end":[4747,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1186:2509","0:1187:953","0:1188:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2013-0:415:859":{"id":"0:2013-0:415:859","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[87,4],"end":[87,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::map","name":"map","id":"0:415:859","glob":true}}},"b:1:2248-0:2089:1695":{"id":"b:1:2248-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12052:2176":{"id":"1:12052:2176","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:41396:179","prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:768:1659":{"id":"0:768:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2674,4],"end":[2674,34]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3067,0],"end":[3067,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2049:2409":{"id":"0:2049:2409","crate_id":0,"name":"store_aligned","span":{"filename":"src/raw/sse2.rs","begin":[70,4],"end":[74,5]},"visibility":"crate","docs":"Stores the group of bytes to the given address, which must be\naligned to `mem::align_of::<Group>()`.","links":{},"attrs":["#[inline]","#[allow(clippy :: cast_ptr_alignment)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["ptr",{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:326:2318":{"id":"a:1:8250:5087-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2548-0:831:3469":{"id":"b:1:2548-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:1949:3021":{"id":"a:1:2741:4891-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3038,0],"end":[3064,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:318:2509","0:319:953","0:321:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2684:220-0:84:1891":{"id":"a:1:2684:220-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:671:2510":{"id":"a:1:2741:4891-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:1488:1827":{"id":"b:1:2538-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1706:1416":{"id":"0:1706:1416","crate_id":0,"name":"sub","span":{"filename":"src/set.rs","begin":[1532,4],"end":[1534,5]},"visibility":"default","docs":"Returns the difference of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\nlet set = &a - &b;\n\nlet mut i = 0;\nlet expected = [1, 2];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1740:1007":{"id":"0:1740:1007","crate_id":0,"name":"other","span":{"filename":"src/set.rs","begin":[1611,4],"end":[1611,31]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"0:142:2142":{"id":"0:142:2142","crate_id":0,"name":"fallible_with_capacity","span":{"filename":"src/raw/mod.rs","begin":[873,4],"end":[887,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Attempts to allocate a new hash table with at least enough capacity\nfor inserting the given number of elements without reallocating.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}],["capacity",{"primitive":"usize"}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1891":{"id":"0:1891","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1930,0],"end":[1936,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12131:19751":{"id":"1:12131:19751","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:39552:14784","Self::is_ascii":"1:12130:19750"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:39552:14784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1592:2200":{"id":"0:1592:2200","crate_id":0,"name":"reserve","span":{"filename":"src/set.rs","begin":[646,4],"end":[648,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Panics\n\nPanics if the new capacity exceeds [`isize::MAX`] bytes and [`abort`] the program\nin case of allocation error. Use [`try_reserve`](HashSet::try_reserve) instead\nif you want to handle memory allocation failure.\n\n[`isize::MAX`]: https://doc.rust-lang.org/std/primitive.isize.html\n[`abort`]: https://doc.rust-lang.org/alloc/alloc/fn.handle_alloc_error.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set: HashSet<i32> = HashSet::new();\nset.reserve(10);\nassert!(set.capacity() >= 10);\n```","links":{"HashSet::try_reserve":"0:1593:2205"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:2918":{"id":"0:508:2918","crate_id":0,"name":"retain","span":{"filename":"src/map.rs","begin":[917,4],"end":[930,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate. Keeps the\nallocated memory for reuse.\n\nIn other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.\nThe elements are visited in unsorted (and unspecified) order.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();\nassert_eq!(map.len(), 8);\n\nmap.retain(|&k, _| k % 2 == 0);\n\n// We can see, that the number of elements inside map is changed.\nassert_eq!(map.len(), 4);\n\nlet mut vec: Vec<(i32, i32)> = map.iter().map(|(&k, &v)| (k, v)).collect();\nvec.sort_unstable();\nassert_eq!(vec, [(0, 0), (2, 20), (4, 40), (6, 60)]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:750:2853":{"id":"b:1:3319-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1414:2213":{"id":"0:1414:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[6347,4],"end":[6359,5]},"visibility":"public","docs":"Sets the value of the entry with the VacantEntryRef's key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nlet key: &str = \"poneyland\";\n\nif let EntryRef::Vacant(o) = map.entry_ref(key) {\n    o.insert(37);\n}\nassert_eq!(map[\"poneyland\"], 37);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1720:2940":{"id":"b:1:2251-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:858:3267":{"id":"a:1:8249:5088-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:1938:3019":{"id":"b:1:2248-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12019:19747":{"id":"1:12019:19747","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:11279:13654"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12101:21089":{"id":"1:12101:21089","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:831:3469":{"id":"a:1:8250:5087-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:789:2528":{"id":"0:789:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[2741,4],"end":[2743,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2718,0],"end":[2729,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:276:2509","0:277:2510","0:278:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:326:2318":{"id":"b:1:2548-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:119:2112":{"id":"a:1:8250:5087-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:773:795":{"id":"0:773:795","crate_id":0,"name":"iter","span":{"filename":"src/map.rs","begin":[2680,4],"end":[2685,5]},"visibility":"crate","docs":"Returns a iterator of references over the remaining items.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:84:1891":{"id":"b:1:2548-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1069:3748":{"id":"0:1069:3748","crate_id":0,"name":"Owned","span":{"filename":"src/map.rs","begin":[4429,4],"end":[4429,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1071:1606"]},"discriminant":null}}},"b:1:2542-0:1082:3032":{"id":"b:1:2542-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:1082:3032":{"id":"b:1:2538-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2020:1690":{"id":"0:2020:1690","crate_id":0,"name":"equivalent","span":{"filename":"src/lib.rs","begin":[140,4],"end":[140,42]},"visibility":"default","docs":"Checks if this value is equivalent to the given key.\n\nReturns `true` if both values are equivalent, and `false` otherwise.\n\n# Correctness\n\nWhen this function returns `true`, both `self` and `key` must hash to\nthe same value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["key",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1225:811":{"id":"0:1225:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[4808,4],"end":[4810,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1082:3032":{"id":"b:1:2548-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:326:2318":{"id":"b:1:3319-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:55:2611":{"id":"0:55:2611","crate_id":0,"name":"nonzero_trailing_zeros","span":{"filename":"src/raw/bitmask.rs","begin":[74,4],"end":[82,5]},"visibility":{"restricted":{"parent":"0:42:1842","path":"::raw::bitmask"}},"docs":"Same as above but takes a `NonZeroBitMaskWord`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["nonzero",{"resolved_path":{"name":"NonZeroU16","id":"1:22260:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1026:3021":{"id":"a:1:8250:5087-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:1949:3021":{"id":"a:1:8249:5088-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:230:2366":{"id":"0:230:2366","crate_id":0,"name":"set_ctrl_h2","span":{"filename":"src/raw/mod.rs","begin":[1994,4],"end":[1997,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Sets a control byte to the hash, and possibly also the replicated control byte at\nthe end of the array.\n\nThis function does not make any changes to the `data` parts of the table,\nor any changes to the the `items` or `growth_left` field of the table.\n\n# Safety\n\nThe safety rules are directly derived from the safety rules for [`RawTableInner::set_ctrl`]\nmethod. Thus, in order to uphold the safety contracts for the method, you must observe the\nfollowing rules when calling this function:\n\n* The [`RawTableInner`] has already been allocated;\n\n* The `index` must not be greater than the `RawTableInner.bucket_mask`, i.e.\n  `index <= RawTableInner.bucket_mask` or, in other words, `(index + 1)` must\n  be no greater than the number returned by the function [`RawTableInner::buckets`].\n\nCalling this function on a table that has not been allocated results in [`undefined behavior`].\n\nSee also [`Bucket::as_ptr`] method, for more information about of properly removing\nor saving `data element` from / into the [`RawTable`] / [`RawTableInner`].\n\n[`RawTableInner::set_ctrl`]: RawTableInner::set_ctrl\n[`RawTableInner::buckets`]: RawTableInner::buckets\n[`Bucket::as_ptr`]: Bucket::as_ptr\n[`undefined behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{"`RawTableInner`":"0:124:2115","Bucket::as_ptr":"0:110:314","RawTableInner::buckets":"0:234:1916","`RawTable`":"0:119:2112","RawTableInner::set_ctrl":"0:232:2240"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["hash",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:794:2941":{"id":"b:1:2542-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:933:3635":{"id":"0:933:3635","crate_id":0,"name":"insert_key","span":{"filename":"src/map.rs","begin":[3844,4],"end":[3846,5]},"visibility":"public","docs":"Sets the value of the entry, and returns the entry's old value.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => {\n        let old_key = o.insert_key(key_two.clone());\n        assert!(Rc::ptr_eq(&old_key, &key_one));\n    }\n}\nassert_eq!(map[&key_two], 10);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["key",{"generic":"K"}]],"output":{"generic":"K"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2095:423":{"id":"0:2095:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[154,9],"end":[154,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5382":{"id":"4:5382","crate_id":4,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["4:5383:21761","4:5384:2314","4:5387:21762","4:5390:21763","4:5398:21764","4:5399:21765","4:5400:4838","4:5401:20984","4:5402:20985"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:4:684-0:1747:4467":{"id":"b:4:684-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:709:2961":{"id":"b:1:2548-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:119:2112":{"id":"b:4:684-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1554:2132":{"id":"0:1554:2132","crate_id":0,"name":"with_capacity","span":{"filename":"src/set.rs","begin":[188,4],"end":[192,5]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_capacity_and_hasher`](HashSet::with_capacity_and_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::with_capacity(10);\nassert!(set.capacity() >= 10);\n```","links":{"HashSet::with_capacity_and_hasher":"0:1579:2770","`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1394:2257":{"id":"0:1394:2257","crate_id":0,"name":"get","span":{"filename":"src/map.rs","begin":[6000,4],"end":[6002,5]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.entry_ref(\"poneyland\").or_insert(12);\n\nmatch map.entry_ref(\"poneyland\") {\n    EntryRef::Vacant(_) => panic!(),\n    EntryRef::Occupied(entry) => assert_eq!(entry.get(), &12),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:726:811":{"id":"0:726:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[2534,4],"end":[2536,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1949:3021":{"id":"a:1:2684:220-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2706,0],"end":[2716,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"nightly\"))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:272:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1135:3180":{"id":"a:1:2741:4891-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:305:2293":{"id":"a:1:2741:4891-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:707:668":{"id":"0:707:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2480,4],"end":[2484,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1220:2528":{"id":"0:1220:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[4802,4],"end":[4804,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:731":{"id":"0:731","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2541,0],"end":[2547,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:735:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:240:2207":{"id":"0:240:2207","crate_id":0,"name":"reserve_rehash_inner","span":{"filename":"src/raw/mod.rs","begin":[2184,4],"end":[2213,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Reserves or rehashes to make room for `additional` more elements.\n\nThis uses dynamic dispatch to reduce the amount of\ncode generated, but it is eliminated by LLVM optimizations when inlined.","links":{},"attrs":["#[allow(clippy :: inline_always)]","#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}],["hasher",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},{"primitive":"usize"}],"output":{"primitive":"u64"}}}},"generic_params":[]}],"lifetime":null}}}}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["layout",{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["drop",{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"function_pointer":{"decl":{"inputs":[["_",{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}}]],"output":null,"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1321":{"id":"0:1321","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[5178,0],"end":[5209,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1327:3854"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1034:2114":{"id":"0:1034:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[4320,4],"end":[4320,38]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"b:1:2538-0:737:2843":{"id":"b:1:2538-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:305:2293":{"id":"b:1:2538-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:709:2961":{"id":"a:1:8250:5087-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:393:2304":{"id":"a:1:2701:228-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:8250:5087-0:794:2941":{"id":"a:1:8250:5087-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1102":{"id":"0:1102","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4510,0],"end":[4518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1695:186":{"id":"0:1695:186","crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1446,4],"end":[1446,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"a:1:8249:5088-0:1727:4458":{"id":"a:1:8249:5088-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1944":{"id":"0:1944","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2115,0],"end":[2121,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1948:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12012:2186":{"id":"1:12012:2186","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:684-0:2062:2602":{"id":"b:4:684-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:152:2181":{"id":"0:152:2181","crate_id":0,"name":"remove_entry","span":{"filename":"src/raw/mod.rs","begin":[1007,4],"end":[1013,5]},"visibility":"public","docs":"Finds and removes an element from the table, returning it.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:97:1927":{"id":"b:1:2248-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3143,0],"end":[3143,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1000:3019":{"id":"0:1000:3019","crate_id":0,"name":"OccupiedEntry","span":{"filename":"src/map.rs","begin":[4254,0],"end":[4259,1]},"visibility":"public","docs":"A view into an occupied entry in a `HashMap`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);\n\nlet _entry_o: OccupiedEntry<_, _, _> = map.entry(\"a\").insert(100);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert and update)\nmatch map.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(mut view) => {\n        assert_eq!(view.get(), &100);\n        let v = view.get_mut();\n        *v *= 10;\n        assert_eq!(view.insert(1111), 1000);\n    }\n}\n\nassert_eq!(map[&\"a\"], 1111);\nassert_eq!(map.len(), 3);\n\n// Existing key (take)\nmatch map.entry(\"c\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"c\", 30));\n    }\n}\nassert_eq!(map.get(&\"c\"), None);\nassert_eq!(map.len(), 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1006:729","0:1007:1691","0:1008:3017","0:1009:2114"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:1328","a:1:8249:5088-0:1000:3019","a:1:8250:5087-0:1000:3019","a:1:2741:4891-0:1000:3019","b:1:2542-0:1000:3019","b:1:2248-0:1000:3019","b:1:2553-0:1000:3019","b:1:2251-0:1000:3019","b:1:2538-0:1000:3019","b:1:3319-0:1000:3019","b:1:2548-0:1000:3019","0:1010","0:1015","0:1020"]}}},"0:1725:640":{"id":"0:1725:640","crate_id":0,"name":"f","span":{"filename":"src/set.rs","begin":[1582,4],"end":[1582,8]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"F"}}},"0:1973:2179":{"id":"0:1973:2179","crate_id":0,"name":"remove","span":{"filename":"src/set.rs","begin":[2282,4],"end":[2284,5]},"visibility":"public","docs":"Takes the value out of the entry, and returns it.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_set::Entry;\n\nlet mut set: HashSet<&str> = HashSet::new();\n// The set is empty\nassert!(set.is_empty() && set.capacity() == 0);\n\nset.entry(\"poneyland\").or_insert();\nlet capacity_before_remove = set.capacity();\n\nif let Entry::Occupied(o) = set.entry(\"poneyland\") {\n    assert_eq!(o.remove(), \"poneyland\");\n}\n\nassert_eq!(set.contains(\"poneyland\"), false);\n// Now set hold none elements but capacity is equal to the old one\nassert!(set.len() == 0 && set.capacity() == capacity_before_remove);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:1895":{"id":"0:398:1895","crate_id":0,"name":"bucket_mask","span":{"filename":"src/raw/mod.rs","begin":[3244,4],"end":[3244,22]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1156":{"id":"0:1156","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4630,0],"end":[4660,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"items":["0:1162:2509","0:1163:2510","0:1164:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:831:3469":{"id":"b:1:2248-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:1000:3019":{"id":"b:1:2548-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1596:4438":{"id":"0:1596:4438","crate_id":0,"name":"difference","span":{"filename":"src/set.rs","begin":[742,4],"end":[747,5]},"visibility":"public","docs":"Visits the values representing the difference,\ni.e., the values that are in `self` but not in `other`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n\n// Can be seen as `a - b`.\nfor x in a.difference(&b) {\n    println!(\"{}\", x); // Print 1\n}\n\nlet diff: HashSet<_> = a.difference(&b).collect();\nassert_eq!(diff, [1].iter().collect());\n\n// Note that difference is not symmetric,\n// and `b - a` means something else:\nlet diff: HashSet<_> = b.difference(&a).collect();\nassert_eq!(diff, [4].iter().collect());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:936:3583":{"id":"0:936:3583","crate_id":0,"name":"replace_entry_with","span":{"filename":"src/map.rs","begin":[3922,4],"end":[3942,5]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nthe entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nlet raw_entry = match map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {\n        assert_eq!(k, &\"a\");\n        assert_eq!(v, 100);\n        Some(v + 900)\n    }),\n};\nlet raw_entry = match raw_entry {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {\n        assert_eq!(k, &\"a\");\n        assert_eq!(v, 1000);\n        None\n    }),\n};\nmatch raw_entry {\n    RawEntryMut::Vacant(_) => { },\n    RawEntryMut::Occupied(_) => panic!(),\n};\nassert_eq!(map.get(&\"a\"), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:2082:1913":{"id":"a:1:8250:5087-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1817":{"id":"0:1817","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1767,0],"end":[1772,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1820:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1741:4449":{"id":"0:1741:4449","crate_id":0,"name":"SymmetricDifference","span":{"filename":"src/set.rs","begin":[1621,0],"end":[1623,1]},"visibility":"public","docs":"A lazy iterator producing elements in the symmetric difference of `HashSet`s.\n\nThis `struct` is created by the [`symmetric_difference`] method on\n[`HashSet`]. See its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1746:795"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1741:4449","a:1:8249:5088-0:1741:4449","a:1:8250:5087-0:1741:4449","a:1:2684:220-0:1741:4449","a:1:2741:4891-0:1741:4449","b:1:2542-0:1741:4449","b:1:2248-0:1741:4449","b:1:2553-0:1741:4449","b:1:2251-0:1741:4449","b:1:7206-0:1741:4449","b:1:2538-0:1741:4449","b:1:3319-0:1741:4449","b:1:2548-0:1741:4449","b:4:684-0:1741:4449","0:1878","0:1883","0:1895","0:1891"]}}},"0:2086":{"id":"0:2086","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[224,15],"end":[224,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2087:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:241:2210":{"id":"0:241:2210","crate_id":0,"name":"resize_inner","span":{"filename":"src/raw/mod.rs","begin":[2222,4],"end":[2260,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Allocates a new table of a different size and moves the contents of the\ncurrent table into it.\n\nThis uses dynamic dispatch to reduce the amount of\ncode generated, but it is eliminated by LLVM optimizations when inlined.","links":{},"attrs":["#[allow(clippy :: inline_always)]","#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["capacity",{"primitive":"usize"}],["hasher",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},{"primitive":"usize"}],"output":{"primitive":"u64"}}}},"generic_params":[]}],"lifetime":null}}}}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["layout",{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:819:3464":{"id":"a:1:8250:5087-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2014:1672":{"id":"0:2014:1672","crate_id":0,"name":"hash_set","span":{"filename":"src/lib.rs","begin":[102,0],"end":[102,16]},"visibility":"public","docs":"A hash set implemented as a `HashMap` where the value is `()`.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2015-0:1513:1669"],"is_stripped":false}}},"0:282:2294":{"id":"0:282:2294","crate_id":0,"name":"data","span":{"filename":"src/raw/mod.rs","begin":[2739,4],"end":[2739,19]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"b:1:2548-0:2074:1852":{"id":"b:1:2548-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:423":{"id":"0:251:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/mod.rs","begin":[2492,4],"end":[2520,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12027:17016":{"id":"1:12027:17016","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:858:3267":{"id":"b:1:2538-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1846:2528":{"id":"0:1846:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1824,4],"end":[1827,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:2089:1695":{"id":"a:1:2701:228-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:831:3469":{"id":"b:1:3319-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1568:2307":{"id":"0:1568:2307","crate_id":0,"name":"drain","span":{"filename":"src/set.rs","begin":[349,4],"end":[353,5]},"visibility":"public","docs":"Clears the set, returning all elements in an iterator.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nassert!(!set.is_empty());\n\n// print 1, 2, 3 in an arbitrary order\nfor i in set.drain() {\n    println!(\"{}\", i);\n}\n\nassert!(set.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:1707:2871":{"id":"b:1:2553-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:819:3464":{"id":"b:1:2538-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1174":{"id":"0:1174","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4699,0],"end":[4727,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1179:2509","0:1180:2510","0:1181:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1844:2509":{"id":"0:1844:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1811,4],"end":[1811,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"0:288:2526":{"id":"0:288:2526","crate_id":0,"name":"next_impl","span":{"filename":"src/raw/mod.rs","begin":[2819,4],"end":[2838,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"# Safety\nIf DO_CHECK_PTR_RANGE is false, caller must ensure that we never try to iterate\nafter yielding all elements.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"DO_CHECK_PTR_RANGE","kind":{"const":{"type":{"primitive":"bool"},"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:2062:2602":{"id":"b:1:3319-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:119:2112":{"id":"b:1:2548-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:124:2115":{"id":"a:1:2701:228-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2553-0:1938:3019":{"id":"b:1:2553-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2017-0:1540:144":{"id":"0:2017-0:1540:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[118,0],"end":[118,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::set::HashSet","name":"HashSet","id":"0:1540:144","glob":false}}},"1:12042:16474":{"id":"1:12042:16474","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:43649:11794","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:2062:2602":{"id":"b:1:2251-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12075:19890":{"id":"1:12075:19890","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646","str::rsplitn":"1:12078:19892"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:43461:11782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[508,0],"end":[1066,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:495:290","0:496:2784","0:497:2801","0:498:2192","0:499:2128","0:500:2842","0:501:1562","0:502:2859","0:503:795","0:504:2861","0:505:811","0:506:2186","0:507:2307","0:508:2918","0:510:2939","0:512:2185","0:513:2953","0:514:2960"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:1949:3021":{"id":"b:1:2248-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1802:668":{"id":"0:1802:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1737,4],"end":[1740,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1249":{"id":"0:1249","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4844,0],"end":[4859,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1253:2509","0:1254:953","0:1255:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1371:3559":{"id":"0:1371:3559","crate_id":0,"name":"and_modify","span":{"filename":"src/map.rs","begin":[5821,4],"end":[5832,5]},"visibility":"public","docs":"Provides in-place mutable access to an occupied entry before any\npotential inserts into the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n\nmap.entry_ref(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 42);\n\nmap.entry_ref(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 43);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:2183":{"id":"0:246:2183","crate_id":0,"name":"clear_no_drop","span":{"filename":"src/raw/mod.rs","begin":[2387,4],"end":[2395,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Marks all table buckets as empty without dropping their contents.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1203":{"id":"0:1203","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4776,0],"end":[4781,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1206:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113:2066":{"id":"0:113:2066","crate_id":0,"name":"read","span":{"filename":"src/raw/mod.rs","begin":[601,4],"end":[603,5]},"visibility":"crate","docs":"Reads the `value` from `self` without moving it. This leaves the\nmemory in `self` unchanged.\n\n# Safety\n\nSee [`ptr::read`] for safety concerns.\n\nYou should use [`RawTable::remove`] instead of this function,\nor be careful with calling this function directly, because compiler\ncalls its destructor when readed `value` goes out of scope. It\ncan cause double dropping when [`RawTable`] goes out of scope,\nbecause of not erased `data control byte`.\n\n[`ptr::read`]: https://doc.rust-lang.org/core/ptr/fn.read.html\n[`RawTable`]: crate::raw::RawTable\n[`RawTable::remove`]: crate::raw::RawTable::remove","links":{"crate::raw::RawTable::remove":"0:151:2179","crate::raw::RawTable":"0:119:2112"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:713:1659":{"id":"0:713:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2516,4],"end":[2516,28]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:400:2358":{"id":"0:400:2358","crate_id":0,"name":"h2_hash","span":{"filename":"src/raw/mod.rs","begin":[3248,4],"end":[3248,15]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:1:8250:5087-0:763:2907":{"id":"a:1:8250:5087-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:719:953":{"id":"0:719:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[2523,4],"end":[2525,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5646:1455":{"id":"4:5646:1455","crate_id":4,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:124:2115":{"id":"b:1:2248-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:2074:1852":{"id":"a:1:8250:5087-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:839:2740":{"id":"0:839:2740","crate_id":0,"name":"hash_builder","span":{"filename":"src/map.rs","begin":[3040,4],"end":[3040,23]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"S"}}}}},"0:591:3179":{"id":"0:591:3179","crate_id":0,"name":"try_insert","span":{"filename":"src/map.rs","begin":[1852,4],"end":[1861,5]},"visibility":"public","docs":"Tries to insert a key-value pair into the map, and returns\na mutable reference to the value in the entry.\n\n# Errors\n\nIf the map already had this key present, nothing is updated, and\nan error containing the occupied entry and the value is returned.\n\n# Examples\n\nBasic usage:\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::OccupiedError;\n\nlet mut map = HashMap::new();\nassert_eq!(map.try_insert(37, \"a\").unwrap(), &\"a\");\n\nmatch map.try_insert(37, \"b\") {\n    Err(OccupiedError { entry, value }) => {\n        assert_eq!(entry.key(), &37);\n        assert_eq!(entry.get(), &\"a\");\n        assert_eq!(value, \"b\");\n    }\n    _ => panic!()\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}},{"type":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:850:3473":{"id":"0:850:3473","crate_id":0,"name":"RawVacantEntryMut","span":{"filename":"src/map.rs","begin":[3108,0],"end":[3111,1]},"visibility":"public","docs":"A view into a vacant entry in a `HashMap`.\nIt is part of the [`RawEntryMut`] enum.\n\n[`RawEntryMut`]: enum.RawEntryMut.html\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut, RawVacantEntryMut};\n\nlet mut map = HashMap::<&str, i32>::new();\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet raw_v: RawVacantEntryMut<_, _, _> = match map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(view) => view,\n    RawEntryMut::Occupied(_) => unreachable!(),\n};\nraw_v.insert(\"a\", 10);\nassert!(map[&\"a\"] == 10 && map.len() == 1);\n\n// Nonexistent key (insert and update)\nlet hash = compute_hash(map.hasher(), &\"b\");\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"b\") {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(view) => {\n        let (k, value) = view.insert(\"b\", 2);\n        assert_eq!((*k, *value), (\"b\", 2));\n        *value = 20;\n    }\n}\nassert!(map[&\"b\"] == 20 && map.len() == 2);\n\nlet hash = compute_hash(map.hasher(), &\"c\");\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == \"c\") {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(view) => {\n        assert_eq!(view.insert(\"c\", 30), (&mut \"c\", &mut 30));\n    }\n}\nassert!(map[&\"c\"] == 30 && map.len() == 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:856:2114","0:857:2740"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:940","a:1:2701:228-0:850:3473","a:1:8249:5088-0:850:3473","a:1:8250:5087-0:850:3473","a:1:2684:220-0:850:3473","a:1:2741:4891-0:850:3473","b:1:2542-0:850:3473","b:1:2248-0:850:3473","b:1:2553-0:850:3473","b:1:2251-0:850:3473","b:1:2538-0:850:3473","b:1:3319-0:850:3473","b:1:2548-0:850:3473","0:970"]}}},"0:1488:1827":{"id":"0:1488:1827","crate_id":0,"name":"ScopeGuard","span":{"filename":"src/scopeguard.rs","begin":[8,0],"end":[14,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1491:4298","0:1492:2214"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["0:1496","a:1:2701:228-0:1488:1827","a:1:8249:5088-0:1488:1827","a:1:8250:5087-0:1488:1827","a:1:2684:220-0:1488:1827","a:1:2741:4891-0:1488:1827","b:1:2542-0:1488:1827","b:1:2248-0:1488:1827","b:1:2553-0:1488:1827","b:1:2251-0:1488:1827","b:1:2538-0:1488:1827","b:1:3319-0:1488:1827","b:1:2548-0:1488:1827","0:1505","0:1509","0:1500"]}}},"b:1:2538-0:644:2871":{"id":"b:1:2538-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255:2498":{"id":"0:255:2498","crate_id":0,"name":"RawTableClone","span":{"filename":"src/raw/mod.rs","begin":[2570,0],"end":[2572,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Specialization of `clone_from` for `Copy` types","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:256:2494"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:257"]}}},"b:1:2553-0:393:2304":{"id":"b:1:2553-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:365:2315":{"id":"0:365:2315","crate_id":0,"name":"orig_table","span":{"filename":"src/raw/mod.rs","begin":[3153,4],"end":[3153,39]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2070:1606":{"id":"0:2070:1606","crate_id":0,"name":"0","span":{"filename":"src/raw/bitmask.rs","begin":[106,30],"end":[106,48]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:76:1861":{"id":"0:76:1861","crate_id":0,"name":"EMPTY","span":{"filename":"src/raw/mod.rs","begin":[97,0],"end":[97,30]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Control byte value for an empty bucket.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"u8"},"expr":"0b1111_1111","value":"255u8","is_literal":true}}},"0:557:3112":{"id":"0:557:3112","crate_id":0,"name":"get_many_key_value_mut","span":{"filename":"src/map.rs","begin":[1619,4],"end":[1628,5]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once, with immutable\nreferences to the corresponding keys.\n\nReturns an array of length `N` with the results of each query. For soundness, at most one\nmutable reference will be returned to any value. `None` will be returned if any of the keys\nare duplicates or missing.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n]);\nassert_eq!(\n    got,\n    Some([\n        (&\"Bodleian Library\".to_string(), &mut 1602),\n        (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),\n    ]),\n);\n// Missing keys result in None\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Gewandhaus\",\n]);\nassert_eq!(got, None);\n\n// Duplicate keys result in None\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n]);\nassert_eq!(got, None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}]},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:795":{"id":"0:195:795","crate_id":0,"name":"iter","span":{"filename":"src/raw/mod.rs","begin":[1425,4],"end":[1431,5]},"visibility":"public","docs":"Returns an iterator over every element in the table. It is up to\nthe caller to ensure that the `RawTable` outlives the `RawIter`.\nBecause we cannot make the `next` method unsafe on the `RawIter`\nstruct, we have to make the `iter` method unsafe.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:917":{"id":"0:917","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3546,0],"end":[3943,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:923:1691","0:924:3600","0:925:3606","0:926:2257","0:927:3614","0:928:2259","0:929:3049","0:930:3057","0:931:3541","0:932:2213","0:933:3635","0:934:2179","0:935:2181","0:936:3583"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:1062:3033":{"id":"b:1:2542-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1397:2213":{"id":"0:1397:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[6083,4],"end":[6085,5]},"visibility":"public","docs":"Sets the value of the entry, and returns the entry's old value.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.entry_ref(\"poneyland\").or_insert(12);\n\nif let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {\n    assert_eq!(o.insert(15), 12);\n}\n\nassert_eq!(map[\"poneyland\"], 15);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"V"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1126:1691":{"id":"0:1126:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[4563,4],"end":[4563,27]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}}}},"0:1584:290":{"id":"0:1584:290","crate_id":0,"name":"allocator","span":{"filename":"src/set.rs","begin":[518,4],"end":[520,5]},"visibility":"public","docs":"Returns a reference to the underlying allocator.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"A"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1777":{"id":"0:1777","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1698,0],"end":[1703,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["0:1780:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1221":{"id":"0:1221","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4806,0],"end":[4811,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1225:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:1135:3180":{"id":"a:1:2701:228-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:799:795":{"id":"0:799:795","crate_id":0,"name":"iter","span":{"filename":"src/map.rs","begin":[2750,4],"end":[2750,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}}}},"b:1:2553-0:279:2295":{"id":"b:1:2553-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:754:1659":{"id":"0:754:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2626,4],"end":[2626,25]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}}}},"b:1:3319-0:1000:3019":{"id":"b:1:3319-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141:2140":{"id":"0:141:2140","crate_id":0,"name":"new_uninitialized","span":{"filename":"src/raw/mod.rs","begin":[853,4],"end":[869,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Allocates a new hash table with the given number of buckets.\n\nThe control bytes are left uninitialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}],["buckets",{"primitive":"usize"}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:441:142":{"id":"b:1:3319-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1010":{"id":"0:1010","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4261,0],"end":[4268,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2251-0:2056:1844":{"id":"b:1:2251-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1781":{"id":"0:1781","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1704,0],"end":[1704,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1791:2528":{"id":"0:1791:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1724,4],"end":[1726,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1715:2907":{"id":"a:1:8250:5087-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2542-0:671:2510":{"id":"b:1:2542-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1392:1691":{"id":"0:1392:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[5950,4],"end":[5952,5]},"visibility":"public","docs":"Gets a reference to the key in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.entry_ref(\"poneyland\").or_insert(12);\n\nmatch map.entry_ref(\"poneyland\") {\n    EntryRef::Vacant(_) => panic!(),\n    EntryRef::Occupied(entry) => assert_eq!(entry.key(), \"poneyland\"),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1733:1007":{"id":"0:1733:1007","crate_id":0,"name":"other","span":{"filename":"src/set.rs","begin":[1597,4],"end":[1597,31]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"a:1:2741:4891-0:1741:4449":{"id":"a:1:2741:4891-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2253:4081":{"id":"1:2253:4081","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:671:2510":{"id":"0:671:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[2409,0],"end":[2411,1]},"visibility":"public","docs":"An owning iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(K, V)`.\n\nThis `struct` is created by the [`into_iter`] method on [`HashMap`]\n(provided by the [`IntoIterator`] trait). See its documentation for more.\nThe map cannot be used after calling that method.\n\n[`into_iter`]: struct.HashMap.html#method.into_iter\n[`HashMap`]: struct.HashMap.html\n[`IntoIterator`]: https://doc.rust-lang.org/core/iter/trait.IntoIterator.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut iter = map.into_iter();\nlet mut vec = vec![iter.next(), iter.next(), iter.next()];\n\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);\n\n// It is fused iterator\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:675:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:676","a:1:2701:228-0:671:2510","a:1:8249:5088-0:671:2510","a:1:8250:5087-0:671:2510","a:1:2684:220-0:671:2510","a:1:2741:4891-0:671:2510","b:1:2542-0:671:2510","b:1:2248-0:671:2510","b:1:2553-0:671:2510","b:1:2251-0:671:2510","b:1:7206-0:671:2510","b:1:2538-0:671:2510","b:1:3319-0:671:2510","b:1:2548-0:671:2510","0:1230","0:1226","0:1214","0:1221"]}}},"0:496:2784":{"id":"0:496:2784","crate_id":0,"name":"with_hasher_in","span":{"filename":"src/map.rs","begin":[543,4],"end":[548,5]},"visibility":"public","docs":"Creates an empty `HashMap` which will use the given hash builder to hash\nkeys. It will be allocated with the given allocator.\n\nThe hash map is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_hasher(s);\nmap.insert(1, 2);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hash_builder",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1899:668":{"id":"0:1899:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1944,4],"end":[1946,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:860":{"id":"0:331:860","crate_id":0,"name":"marker","span":{"filename":"src/raw/mod.rs","begin":[3073,4],"end":[3073,26]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"1:2706:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"b:1:3319-0:658:2880":{"id":"b:1:3319-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:441:142":{"id":"b:1:2542-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34-5:1043:1841":{"id":"0:34-5:1043:1841","crate_id":0,"name":null,"span":{"filename":"src/raw/alloc.rs","begin":[31,47],"end":[31,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"allocator_api2::alloc::Global","name":"Global","id":"5:1043:1841","glob":false}}},"0:165:2225":{"id":"0:165:2225","crate_id":0,"name":"insert_entry","span":{"filename":"src/raw/mod.rs","begin":[1198,4],"end":[1200,5]},"visibility":"public","docs":"Inserts a new element into the table, and returns a mutable reference to it.\n\nThis does not check if the given element already exists in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["value",{"generic":"T"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:671:2510":{"id":"a:1:8249:5088-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:794:2941":{"id":"a:1:2741:4891-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3217,0],"end":[3217,69]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1314:3834":{"id":"0:1314:3834","crate_id":0,"name":"or_insert_with_key","span":{"filename":"src/map.rs","begin":[5042,4],"end":[5054,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting, if empty, the result of the default function.\nThis method allows for generating key-derived values for insertion by providing the default\nfunction a reference to the key that was moved during the `.entry(key)` method call.\n\nThe reference to the moved key is provided so that cloning or copying the key is\nunnecessary, unlike with `.or_insert_with(|| ... )`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, usize> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());\nassert_eq!(map[\"poneyland\"], 9);\n\n// existing key\n*map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;\nassert_eq!(map[\"poneyland\"], 18);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1565:795":{"id":"0:1565:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[291,4],"end":[295,5]},"visibility":"public","docs":"An iterator visiting all elements in arbitrary order.\nThe iterator element type is `&'a T`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set = HashSet::new();\nset.insert(\"a\");\nset.insert(\"b\");\n\n// Will print in an arbitrary order.\nfor x in set.iter() {\n    println!(\"{}\", x);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1732:795":{"id":"0:1732:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[1595,4],"end":[1595,21]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"0:1241:2528":{"id":"0:1241:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[4832,4],"end":[4834,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:1135:3180":{"id":"b:1:2538-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:84:1891":{"id":"b:1:3319-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212:2142":{"id":"0:212:2142","crate_id":0,"name":"fallible_with_capacity","span":{"filename":"src/raw/mod.rs","begin":[1599,4],"end":[1623,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Attempts to allocate a new [`RawTableInner`] with at least enough\ncapacity for inserting the given number of elements without reallocating.\n\nAll the control bytes are initialized with the [`EMPTY`] bytes.","links":{"`RawTableInner`":"0:124:2115","`EMPTY`":"0:76:1861"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}],["table_layout",{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["capacity",{"primitive":"usize"}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:305:2293":{"id":"a:1:8250:5087-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:312:2188":{"id":"0:312:2188","crate_id":0,"name":"drop_elements","span":{"filename":"src/raw/mod.rs","begin":[3019,4],"end":[3025,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1253:2509":{"id":"0:1253:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4845,4],"end":[4845,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}}}},"0:1173:784":{"id":"0:1173:784","crate_id":0,"name":"into_iter","span":{"filename":"src/map.rs","begin":[4694,4],"end":[4696,5]},"visibility":"default","docs":"Creates an iterator over the entries of a `HashMap` in arbitrary order\nwith mutable references to the values. The iterator element type is\n`(&'a K, &'a mut V)`.\n\nReturn the same `IterMut` struct as by the [`iter_mut`] method on\n[`HashMap`].\n\n[`iter_mut`]: struct.HashMap.html#method.iter_mut\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<_, _> = [(\"a\", 1), (\"b\", 2), (\"c\", 3)].into();\n\nfor (key, value) in &mut map {\n    println!(\"Key: {}, Value: {}\", key, value);\n    *value *= 2;\n}\n\nlet mut vec = map.iter().collect::<Vec<_>>();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(&\"a\", &2), (&\"b\", &4), (&\"c\", &6)]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:393:2304":{"id":"a:1:8249:5088-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:794:2941":{"id":"b:1:2538-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:1000:3019":{"id":"b:1:2248-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:384:2509":{"id":"0:384:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/mod.rs","begin":[3200,4],"end":[3200,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:1:2553-0:1488:1827":{"id":"b:1:2553-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:1488:1827":{"id":"b:1:3319-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1795:811":{"id":"0:1795:811","crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[1730,4],"end":[1732,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:644:2871":{"id":"a:1:2684:220-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:7206-0:1711:2510":{"id":"b:1:7206-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1500":{"id":"0:1500","crate_id":0,"name":null,"span":{"filename":"src/scopeguard.rs","begin":[43,0],"end":[52,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["0:1503:230","0:1504:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1829:2528":{"id":"0:1829:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1788,4],"end":[1790,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1869":{"id":"0:1869","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1884,0],"end":[1890,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:807:2860":{"id":"0:807:2860","crate_id":0,"name":"ValuesMut","span":{"filename":"src/map.rs","begin":[2799,0],"end":[2801,1]},"visibility":"public","docs":"A mutable iterator over the values of a `HashMap` in arbitrary order.\nThe iterator element type is `&'a mut V`.\n\nThis `struct` is created by the [`values_mut`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`values_mut`]: struct.HashMap.html#method.values_mut\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();\n\nlet mut values = map.values_mut();\nvalues.next().map(|v| v.push_str(\" Mississippi\"));\nvalues.next().map(|v| v.push_str(\" Mississippi\"));\n\n// It is fused iterator\nassert_eq!(values.next(), None);\nassert_eq!(values.next(), None);\n\nassert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());\nassert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:811:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:807:2860","a:1:8249:5088-0:807:2860","a:1:8250:5087-0:807:2860","a:1:2684:220-0:807:2860","a:1:2741:4891-0:807:2860","b:1:2542-0:807:2860","b:1:2248-0:807:2860","b:1:2553-0:807:2860","b:1:2251-0:807:2860","b:1:7206-0:807:2860","b:1:2538-0:807:2860","b:1:3319-0:807:2860","b:1:2548-0:807:2860","0:1274","0:1270","0:1277","0:1263"]}}},"0:963:668":{"id":"0:963:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4098,4],"end":[4103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1355:2225":{"id":"0:1355:2225","crate_id":0,"name":"insert_entry","span":{"filename":"src/map.rs","begin":[5634,4],"end":[5650,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:858:3267":{"id":"a:1:2684:220-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1734:4439":{"id":"0:1734:4439","crate_id":0,"name":"Difference","span":{"filename":"src/set.rs","begin":[1607,0],"end":[1612,1]},"visibility":"public","docs":"A lazy iterator producing elements in the difference of `HashSet`s.\n\nThis `struct` is created by the [`difference`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`difference`]: struct.HashSet.html#method.difference","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1739:795","0:1740:1007"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1734:4439","a:1:8249:5088-0:1734:4439","a:1:8250:5087-0:1734:4439","a:1:2684:220-0:1734:4439","a:1:2741:4891-0:1734:4439","b:1:2542-0:1734:4439","b:1:2248-0:1734:4439","b:1:2553-0:1734:4439","b:1:2251-0:1734:4439","b:1:7206-0:1734:4439","b:1:2538-0:1734:4439","b:1:3319-0:1734:4439","b:1:2548-0:1734:4439","b:4:684-0:1734:4439","0:1856","0:1869","0:1861","0:1873"]}}},"b:1:2251-0:858:3267":{"id":"b:1:2251-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:1741:4449":{"id":"b:4:684-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:1747:4467":{"id":"b:1:2542-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2074:1852":{"id":"0:2074:1852","crate_id":0,"name":"Fallibility","span":{"filename":"src/raw/mod.rs","begin":[71,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Whether memory allocation errors should return an error or abort.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2075:1853","0:2077:1854"],"impls":["0:73","a:1:2701:228-0:2074:1852","a:1:8249:5088-0:2074:1852","a:1:8250:5087-0:2074:1852","a:1:2684:220-0:2074:1852","a:1:2741:4891-0:2074:1852","b:1:2542-0:2074:1852","b:1:2248-0:2074:1852","b:1:2553-0:2074:1852","b:1:2251-0:2074:1852","b:1:2538-0:2074:1852","b:1:3319-0:2074:1852","b:1:2548-0:2074:1852","b:4:684-0:2074:1852","0:2080","0:2079"]}}},"0:123:860":{"id":"0:123:860","crate_id":0,"name":"marker","span":{"filename":"src/raw/mod.rs","begin":[780,4],"end":[780,26]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"1:2706:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"0:1564:2128":{"id":"0:1564:2128","crate_id":0,"name":"capacity","span":{"filename":"src/set.rs","begin":[270,4],"end":[272,5]},"visibility":"public","docs":"Returns the number of elements the set can hold without reallocating.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::with_capacity(100);\nassert!(set.capacity() >= 100);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2457":{"id":"0:238:2457","crate_id":0,"name":"prepare_resize","span":{"filename":"src/raw/mod.rs","begin":[2147,4],"end":[2176,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: mut_mut)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["table_layout",{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["capacity",{"primitive":"usize"}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::scopeguard::ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}]}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1922:3016":{"id":"a:1:8250:5087-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:107:1928":{"id":"0:107:1928","crate_id":0,"name":"IS_ZERO_SIZED_TYPE","span":{"filename":"src/raw/mod.rs","begin":[297,4],"end":[297,62]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"_"}}},"0:1913:668":{"id":"0:1913:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1972,4],"end":[1974,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158:2200":{"id":"0:158:2200","crate_id":0,"name":"reserve","span":{"filename":"src/raw/mod.rs","begin":[1083,4],"end":[1093,5]},"visibility":"public","docs":"Ensures that at least `additional` items can be inserted into the table\nwithout reallocation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1317:3559":{"id":"0:1317:3559","crate_id":0,"name":"and_modify","span":{"filename":"src/map.rs","begin":[5099,4],"end":[5110,5]},"visibility":"public","docs":"Provides in-place mutable access to an occupied entry before any\npotential inserts into the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmap.entry(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 42);\n\nmap.entry(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 43);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1922:3016":{"id":"a:1:2684:220-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1938:3019":{"id":"0:1938:3019","crate_id":0,"name":"OccupiedEntry","span":{"filename":"src/set.rs","begin":[2111,0],"end":[2113,1]},"visibility":"public","docs":"A view into an occupied entry in a `HashSet`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};\n\nlet mut set = HashSet::new();\nset.extend([\"a\", \"b\", \"c\"]);\n\nlet _entry_o: OccupiedEntry<_, _> = set.entry(\"a\").insert();\nassert_eq!(set.len(), 3);\n\n// Existing key\nmatch set.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.get(), &\"a\");\n    }\n}\n\nassert_eq!(set.len(), 3);\n\n// Existing key (take)\nmatch set.entry(\"c\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.remove(), \"c\");\n    }\n}\nassert_eq!(set.get(&\"c\"), None);\nassert_eq!(set.len(), 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1943:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:1968","a:1:2701:228-0:1938:3019","a:1:8249:5088-0:1938:3019","a:1:8250:5087-0:1938:3019","a:1:2684:220-0:1938:3019","a:1:2741:4891-0:1938:3019","b:1:2542-0:1938:3019","b:1:2248-0:1938:3019","b:1:2553-0:1938:3019","b:1:2251-0:1938:3019","b:1:2538-0:1938:3019","b:1:3319-0:1938:3019","b:1:2548-0:1938:3019","0:1944"]}}},"0:2096":{"id":"0:2096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[154,16],"end":[154,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:84:1891":{"id":"a:1:8250:5087-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12011:811":{"id":"1:12011:811","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:51699:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:2179":{"id":"0:151:2179","crate_id":0,"name":"remove","span":{"filename":"src/raw/mod.rs","begin":[995,4],"end":[1003,5]},"visibility":"public","docs":"Removes an element from the table, returning it.\n\nThis also returns an `InsertSlot` pointing to the newly free bucket.","links":{},"attrs":["#[inline]","#[allow(clippy :: needless_pass_by_value)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["item",{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}]],"output":{"tuple":[{"generic":"T"},{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1752:795":{"id":"0:1752:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[1633,4],"end":[1633,53]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Chain","id":"1:40255:4299","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"1:12016:21075":{"id":"1:12016:21075","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:12014:21074"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12033:19878":{"id":"1:12033:19878","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:12034:19879"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:2089:1695":{"id":"b:1:2251-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12043:4130":{"id":"1:12043:4130","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2902,0],"end":[3026,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:311:2135","0:312:2188"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1847":{"id":"0:1847","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1830,0],"end":[1839,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1851:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5399:21765":{"id":"4:5399:21765","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:280:11280","`String`":"4:7241:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:280:11280","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"4:6990:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1062:3033":{"id":"b:1:2548-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:441:142":{"id":"a:1:2684:220-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:4:684-0:1734:4439":{"id":"b:4:684-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:124:2115":{"id":"b:1:2542-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12099:21088":{"id":"1:12099:21088","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1544:859":{"id":"0:1544:859","crate_id":0,"name":"map","span":{"filename":"src/set.rs","begin":[116,4],"end":[116,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"tuple":[]}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"b:1:2251-0:124:2115":{"id":"b:1:2251-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:359:2308":{"id":"a:1:8250:5087-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:140:2124":{"id":"0:140:2124","crate_id":0,"name":"new_in","span":{"filename":"src/raw/mod.rs","begin":[842,4],"end":[847,5]},"visibility":"public","docs":"Creates a new empty hash table without allocating any memory, using the\ngiven allocator.\n\nIn effect this returns a table with exactly 1 bucket. However we can\nleave the data pointer dangling since that bucket is never written to\ndue to our load factor forcing us to always have at least 1 free bucket.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49":{"id":"0:49","crate_id":0,"name":null,"span":{"filename":"src/raw/bitmask.rs","begin":[25,0],"end":[89,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(clippy :: use_self)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:50:2605","0:51:2607","0:52:2362","0:53:2344","0:54:2493","0:55:2611","0:56:2492"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:1041:3031":{"id":"b:1:2542-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:750:2853":{"id":"b:4:684-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:658:2880":{"id":"b:1:2548-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:763:2907":{"id":"b:1:2542-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12116:19897":{"id":"1:12116:19897","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:2196":{"id":"0:162:2196","crate_id":0,"name":"resize","span":{"filename":"src/raw/mod.rs","begin":[1136,4],"end":[1150,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Allocates a new table of a different size and moves the contents of the\ncurrent table into it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["capacity",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:95:1922":{"id":"b:1:2251-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:537:3062":{"id":"0:537:3062","crate_id":0,"name":"contains_key","span":{"filename":"src/map.rs","begin":[1414,4],"end":[1419,5]},"visibility":"public","docs":"Returns `true` if the map contains a value for the specified key.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.contains_key(&1), true);\nassert_eq!(map.contains_key(&2), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:453:423":{"id":"0:453:423","crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[194,4],"end":[199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:648:1659":{"id":"0:648:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2309,4],"end":[2309,26]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}}}},"b:1:2548-0:737:2843":{"id":"b:1:2548-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:819:3464":{"id":"a:1:8249:5088-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2548-0:1041:3031":{"id":"b:1:2548-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"4:5401:20984":{"id":"4:5401:20984","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:12133:19754"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1747:4467":{"id":"a:1:2684:220-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1421:697":{"id":"0:1421:697","crate_id":0,"name":"from_iter","span":{"filename":"src/map.rs","begin":[6388,4],"end":[6396,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:769":{"id":"0:769","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2677,0],"end":[2686,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:773:795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:300:953":{"id":"0:300:953","crate_id":0,"name":"next","span":{"filename":"src/raw/mod.rs","begin":[2862,4],"end":[2867,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:750:2853":{"id":"b:1:2542-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1789:2509":{"id":"0:1789:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1713,4],"end":[1713,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"K"}}}},"b:1:2248-0:2074:1852":{"id":"b:1:2248-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122:2114":{"id":"0:122:2114","crate_id":0,"name":"table","span":{"filename":"src/raw/mod.rs","begin":[778,4],"end":[778,27]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}}}},"a:1:2684:220-0:1488:1827":{"id":"a:1:2684:220-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:4:684-0:2082:1913":{"id":"b:4:684-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:807:2860":{"id":"b:1:2542-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1593:2205":{"id":"0:1593:2205","crate_id":0,"name":"try_reserve","span":{"filename":"src/set.rs","begin":[667,4],"end":[669,5]},"visibility":"public","docs":"Tries to reserve capacity for at least `additional` more elements to be inserted\nin the given `HashSet<K,V>`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Errors\n\nIf the capacity overflows, or the allocator reports a failure, then an error\nis returned.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set: HashSet<i32> = HashSet::new();\nset.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:774:2940":{"id":"b:1:2548-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:1041:3031":{"id":"b:1:2248-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:858:3267":{"id":"b:1:2548-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:279:2295":{"id":"b:1:2542-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1353:3606":{"id":"0:1353:3606","crate_id":0,"name":"into_key","span":{"filename":"src/map.rs","begin":[5598,4],"end":[5600,5]},"visibility":"public","docs":"Take ownership of the key.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmatch map.entry(\"poneyland\") {\n    Entry::Occupied(_) => panic!(),\n    Entry::Vacant(v) => assert_eq!(v.into_key(), \"poneyland\"),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"K"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1776:2528":{"id":"0:1776:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1694,4],"end":[1696,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:931:3541":{"id":"0:931:3541","crate_id":0,"name":"into_key_value","span":{"filename":"src/map.rs","begin":[3788,4],"end":[3793,5]},"visibility":"public","docs":"Converts the OccupiedEntry into a mutable reference to the key and value in the entry\nwith a lifetime bound to the map itself.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nlet inside_key: &mut Rc<&str>;\nlet inside_value: &mut u32;\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => {\n        let tuple = o.into_key_value();\n        inside_key = tuple.0;\n        inside_value = tuple.1;\n    }\n}\n*inside_key = key_two.clone();\n*inside_value = 100;\nassert_eq!(map[&key_two], 100);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2544:694":{"id":"1:2544:694","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:2082:1913":{"id":"b:1:2248-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:2056:1844":{"id":"a:1:2701:228-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:95:1922":{"id":"b:1:2538-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:1922:3016":{"id":"b:1:3319-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:397:2572":{"id":"a:1:2701:228-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:2684:220-0:95:1922":{"id":"a:1:2684:220-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:4:684-0:644:2871":{"id":"b:4:684-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:850:3473":{"id":"b:1:2251-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:737:2843":{"id":"a:1:2741:4891-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2548-0:95:1922":{"id":"b:1:2548-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:380:588":{"id":"0:380:588","crate_id":0,"name":"drop","span":{"filename":"src/raw/mod.rs","begin":[3182,4],"end":[3196,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1007:1691":{"id":"0:1007:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[4256,4],"end":[4256,18]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}}}}},"0:1481:1668":{"id":"0:1481:1668","crate_id":0,"name":"scopeguard","span":{"filename":"src/scopeguard.rs","begin":[2,0],"end":[72,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1488:1827","0:1493:1826"],"is_stripped":false}}},"b:1:3319-0:774:2940":{"id":"b:1:3319-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:1488:1827":{"id":"a:1:2741:4891-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1767:784":{"id":"0:1767:784","crate_id":0,"name":"into_iter","span":{"filename":"src/set.rs","begin":[1671,4],"end":[1675,5]},"visibility":"default","docs":"Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set = HashSet::new();\nset.insert(\"a\".to_string());\nset.insert(\"b\".to_string());\n\n// Not possible to collect to a Vec<String> with a regular `.iter()`.\nlet v: Vec<String> = set.into_iter().collect();\n\n// Will print in an arbitrary order.\nfor x in &v {\n    println!(\"{}\", x);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1949:3021":{"id":"a:1:8250:5087-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1337:2259":{"id":"0:1337:2259","crate_id":0,"name":"get_mut","span":{"filename":"src/map.rs","begin":[5310,4],"end":[5312,5]},"visibility":"public","docs":"Gets a mutable reference to the value in the entry.\n\nIf you need a reference to the `OccupiedEntry` which may outlive the\ndestruction of the `Entry` value, see [`into_mut`].\n\n[`into_mut`]: #method.into_mut\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nassert_eq!(map[\"poneyland\"], 12);\nif let Entry::Occupied(mut o) = map.entry(\"poneyland\") {\n    *o.get_mut() += 10;\n    assert_eq!(*o.get(), 22);\n\n    // We can use the same Entry multiple times.\n    *o.get_mut() += 2;\n}\n\nassert_eq!(map[\"poneyland\"], 24);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:425":{"id":"0:253:425","crate_id":0,"name":"clone_from","span":{"filename":"src/raw/mod.rs","begin":[2522,4],"end":[2566,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:2510":{"id":"0:277:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/raw/mod.rs","begin":[2720,4],"end":[2720,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}},"0:1432":{"id":"0:1432","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[6484,0],"end":[6545,1]},"visibility":"default","docs":"Inserts all new key-values from the iterator and replaces values with existing\nkeys with new values returned from the iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7211:4017","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1438:4038"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:928:2259":{"id":"0:928:2259","crate_id":0,"name":"get_mut","span":{"filename":"src/map.rs","begin":[3692,4],"end":[3694,5]},"visibility":"public","docs":"Gets a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => *o.get_mut() += 900,\n}\n\nassert_eq!(map[&\"a\"], 1000);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:611":{"id":"0:611","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2182,0],"end":[2189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:952":{"id":"0:952","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4091,0],"end":[4095,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:957:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1770:423":{"id":"0:1770:423","crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[1680,4],"end":[1684,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:1715:2907":{"id":"a:1:2701:228-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:1747:4467":{"id":"a:1:2701:228-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1621:4536":{"id":"0:1621:4536","crate_id":0,"name":"is_superset","span":{"filename":"src/set.rs","begin":[1090,4],"end":[1092,5]},"visibility":"public","docs":"Returns `true` if the set is a superset of another,\ni.e., `self` contains at least all the values in `other`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet sub: HashSet<_> = [1, 2].iter().cloned().collect();\nlet mut set = HashSet::new();\n\nassert_eq!(set.is_superset(&sub), false);\n\nset.insert(0);\nset.insert(1);\nassert_eq!(set.is_superset(&sub), false);\n\nset.insert(2);\nassert_eq!(set.is_superset(&sub), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1082:3032":{"id":"b:1:2251-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:1734:4439":{"id":"b:1:3319-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1766:2510":{"id":"0:1766:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/set.rs","begin":[1648,4],"end":[1648,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}},"0:2089:1695":{"id":"0:2089:1695","crate_id":0,"name":"TryReserveError","span":{"filename":"src/lib.rs","begin":[155,0],"end":[165,1]},"visibility":"public","docs":"The error type for `try_reserve` methods.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2090:1698","0:2092:1700"],"impls":["a:1:2701:228-0:2089:1695","a:1:8249:5088-0:2089:1695","a:1:8250:5087-0:2089:1695","a:1:2684:220-0:2089:1695","a:1:2741:4891-0:2089:1695","b:0:2021-0:2089:1695","b:1:2542-0:2089:1695","b:1:2248-0:2089:1695","b:1:2553-0:2089:1695","b:1:2251-0:2089:1695","b:1:2538-0:2089:1695","b:1:3319-0:2089:1695","b:1:2548-0:2089:1695","b:4:684-0:2089:1695","0:2099","0:2094","0:2096","0:2102","0:2097","0:2100"]}}},"b:1:2542-0:709:2961":{"id":"b:1:2542-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:982:3016":{"id":"a:1:8249:5088-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:755":{"id":"0:755","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2630,0],"end":[2637,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:758:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1303:668":{"id":"0:1303:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4926,4],"end":[4928,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1637:613":{"id":"0:1637:613","crate_id":0,"name":"eq","span":{"filename":"src/set.rs","begin":[1274,4],"end":[1280,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:423":{"id":"0:104:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/mod.rs","begin":[291,4],"end":[293,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:644:2871":{"id":"b:1:2553-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:397:2572":{"id":"b:1:2542-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:812:3251":{"id":"b:1:2542-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:571:3091":{"id":"0:571:3091","crate_id":0,"name":"get_many_mut_inner","span":{"filename":"src/map.rs","begin":[1685,4],"end":[1695,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:124:2115":{"id":"a:1:8249:5088-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2542-0:658:2880":{"id":"b:1:2542-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1981:4702":{"id":"0:1981:4702","crate_id":0,"name":"into_value","span":{"filename":"src/set.rs","begin":[2355,4],"end":[2357,5]},"visibility":"public","docs":"Take ownership of the value.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\n\nlet mut set: HashSet<&str> = HashSet::new();\n\nmatch set.entry(\"poneyland\") {\n    Entry::Occupied(_) => panic!(),\n    Entry::Vacant(v) => assert_eq!(v.into_value(), \"poneyland\"),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:667":{"id":"0:667","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2368,0],"end":[2377,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:670:795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:7206-0:393:2304":{"id":"b:1:7206-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:990:1606":{"id":"0:990:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[4187,13],"end":[4187,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"b:1:3319-0:305:2293":{"id":"b:1:3319-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:502:2859":{"id":"0:502:2859","crate_id":0,"name":"values_mut","span":{"filename":"src/map.rs","begin":[720,4],"end":[724,5]},"visibility":"public","docs":"An iterator visiting all values mutably in arbitrary order.\nThe iterator element type is `&'a mut V`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\n\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\nfor val in map.values_mut() {\n    *val = *val + 10;\n}\n\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<i32> = Vec::new();\n\nfor val in map.values() {\n    println!(\"{}\", val);\n    vec.push(*val);\n}\n\n// The `Values` iterator produces values in arbitrary order, so the\n// values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [11, 12, 13]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2024:1690":{"id":"0:2024:1690","crate_id":0,"name":"equivalent","span":{"filename":"src/lib.rs","begin":[148,4],"end":[150,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["key",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:2770":{"id":"0:489:2770","crate_id":0,"name":"with_capacity_and_hasher","span":{"filename":"src/map.rs","begin":[500,4],"end":[505,5]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity, using `hash_builder`\nto hash the keys.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe HashMap to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_capacity_and_hasher(10, s);\nassert_eq!(map.len(), 0);\nassert!(map.capacity() >= 10);\n\nmap.insert(1, 2);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}],["hash_builder",{"generic":"S"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1213:668":{"id":"0:1213:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4789,4],"end":[4791,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477:2132":{"id":"0:477:2132","crate_id":0,"name":"with_capacity","span":{"filename":"src/map.rs","begin":[321,4],"end":[323,5]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_capacity_and_hasher`](HashMap::with_capacity_and_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<&str, i32> = HashMap::with_capacity(10);\nassert_eq!(map.len(), 0);\nassert!(map.capacity() >= 10);\n```","links":{"`ahash::RandomState`":"6:813:10910","HashMap::with_capacity_and_hasher":"0:489:2770","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1189":{"id":"0:1189","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4748,0],"end":[4753,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1192:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:226:2350":{"id":"0:226:2350","crate_id":0,"name":"probe_seq","span":{"filename":"src/raw/mod.rs","begin":[1929,4],"end":[1934,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Returns an iterator-like object for a probe sequence on the table.\n\nThis iterator never terminates, but is guaranteed to visit each bucket\ngroup exactly once. The loop using `probe_seq` must terminate upon\nreaching a group containing an empty bucket.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[1550,0],"end":[2489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:211:2140","0:212:2142","0:214:2341","0:215:2348","0:216:2247","0:217:2229","0:218:2216","0:219:2255","0:220:2406","0:221:2165","0:223:2411","0:224:2152","0:226:2350","0:227:2253","0:228:2418","0:230:2366","0:231:2439","0:232:2240","0:233:1868","0:234:1916","0:235:2237","0:236:2338","0:237:2323","0:238:2457","0:240:2207","0:241:2210","0:242:2465","0:244:2150","0:245:2161","0:246:2183","0:247:2169"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1082:3032":{"id":"a:1:2741:4891-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:1488:1827":{"id":"b:1:2251-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:1711:2510":{"id":"b:1:2542-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3180,0],"end":[3197,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:380:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1041:3031":{"id":"a:1:2741:4891-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:1922:3016":{"id":"b:1:2538-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:5:1655":{"id":"0:5:1655","crate_id":0,"name":"macros","span":{"filename":"src/macros.rs","begin":[2,0],"end":[70,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[macro_use]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:6:1812","0:7:1823"],"is_stripped":false}}},"b:1:2542-0:1741:4449":{"id":"b:1:2542-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3216,0],"end":[3216,73]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1710:795":{"id":"0:1710:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[1545,4],"end":[1545,25]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"tuple":[]}}],"bindings":[]}}}}}},"b:1:2538-0:671:2510":{"id":"b:1:2538-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:7206-0:1734:4439":{"id":"b:1:7206-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"a:1:2741:4891-0:1715:2907":{"id":"a:1:2741:4891-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1396:3614":{"id":"0:1396:3614","crate_id":0,"name":"into_mut","span":{"filename":"src/map.rs","begin":[6061,4],"end":[6063,5]},"visibility":"public","docs":"Converts the OccupiedEntryRef into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself.\n\nIf you need multiple references to the `OccupiedEntryRef`, see [`get_mut`].\n\n[`get_mut`]: #method.get_mut\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.entry_ref(\"poneyland\").or_insert(12);\n\nlet value: &mut u32;\nmatch map.entry_ref(\"poneyland\") {\n    EntryRef::Occupied(entry) => value = entry.into_mut(),\n    EntryRef::Vacant(_) => panic!(),\n}\n*value += 10;\n\nassert_eq!(map[\"poneyland\"], 22);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:693:2528":{"id":"0:693:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[2465,4],"end":[2467,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1373:3582":{"id":"0:1373:3582","crate_id":0,"name":"and_replace_entry_with","span":{"filename":"src/map.rs","begin":[5889,4],"end":[5897,5]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nan occupied entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n\nlet entry = map\n    .entry_ref(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| panic!());\n\nmatch entry {\n    EntryRef::Vacant(e) => {\n        assert_eq!(e.key(), \"poneyland\");\n    }\n    EntryRef::Occupied(_) => panic!(),\n}\n\nmap.insert(\"poneyland\".to_string(), 42);\n\nlet entry = map\n    .entry_ref(\"poneyland\")\n    .and_replace_entry_with(|k, v| {\n        assert_eq!(k, \"poneyland\");\n        assert_eq!(v, 42);\n        Some(v + 1)\n    });\n\nmatch entry {\n    EntryRef::Occupied(e) => {\n        assert_eq!(e.key(), \"poneyland\");\n        assert_eq!(e.get(), &43);\n    }\n    EntryRef::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = map\n    .entry_ref(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| None);\n\nmatch entry {\n    EntryRef::Vacant(e) => assert_eq!(e.key(), \"poneyland\"),\n    EntryRef::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1933":{"id":"0:1933","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2066,0],"end":[2073,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1937:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:159:2205":{"id":"0:159:2205","crate_id":0,"name":"try_reserve","span":{"filename":"src/raw/mod.rs","begin":[1098,4],"end":[1108,5]},"visibility":"public","docs":"Tries to ensure that at least `additional` items can be inserted into\nthe table without reallocation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:690:2509":{"id":"0:690:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[2458,4],"end":[2458,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"K"}}}},"a:1:2701:228-0:807:2860":{"id":"a:1:2701:228-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:957:668":{"id":"0:957:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4092,4],"end":[4094,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1054:1606":{"id":"0:1054:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[4413,11],"end":[4413,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"b:1:2553-0:2089:1695":{"id":"b:1:2553-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2073:423":{"id":"0:2073:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/bitmask.rs","begin":[105,15],"end":[105,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:1690":{"id":"0:465:1690","crate_id":0,"name":"equivalent","span":{"filename":"src/map.rs","begin":[233,0],"end":[238,1]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":"Ensures that a single closure type across uses of this which, in turn prevents multiple\ninstances of any functions like RawTable::reserve from being generated","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[1524,0],"end":[1529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1135:3180":{"id":"b:1:3319-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:763:2907":{"id":"b:1:2251-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:850:3473":{"id":"a:1:8249:5088-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:227:2253":{"id":"0:227:2253","crate_id":0,"name":"record_item_insert_at","span":{"filename":"src/raw/mod.rs","begin":[1952,4],"end":[1956,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["old_ctrl",{"primitive":"u8"}],["hash",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:2119":{"id":"0:308:2119","crate_id":0,"name":"items","span":{"filename":"src/raw/mod.rs","begin":[2899,4],"end":[2899,16]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:2085":{"id":"0:2085","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[224,9],"end":[224,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1201:953":{"id":"0:1201:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[4761,4],"end":[4770,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:894:3513":{"id":"0:894:3513","crate_id":0,"name":"from_key","span":{"filename":"src/map.rs","begin":[3273,4],"end":[3280,5]},"visibility":"public","docs":"Access an immutable entry by key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"a\";\nassert_eq!(map.raw_entry().from_key(&key), Some((&\"a\", &100)));\n```","links":{},"attrs":["#[inline]","#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:124:2115":{"id":"a:1:2684:220-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:279:2295":{"id":"b:1:2251-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:97:1927":{"id":"b:1:2548-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1384":{"id":"0:1384","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[5933,0],"end":[6283,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1392:1691","0:1393:2181","0:1394:2257","0:1395:2259","0:1396:3614","0:1397:2213","0:1398:2179","0:1399:3900","0:1400:3923","0:1401:3583"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2251-0:397:2572":{"id":"b:1:2251-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1260":{"id":"0:1260","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4866,0],"end":[4866,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:242:2465":{"id":"0:242:2465","crate_id":0,"name":"rehash_in_place","span":{"filename":"src/raw/mod.rs","begin":[2272,4],"end":[2350,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Rehashes the contents of the table in place (i.e. without changing the\nallocation).\n\nIf `hasher` panics then some the table's contents may be lost.\n\nThis uses dynamic dispatch to reduce the amount of\ncode generated, but it is eliminated by LLVM optimizations when inlined.","links":{},"attrs":["#[allow(clippy :: inline_always)]","#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hasher",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},{"primitive":"usize"}],"output":{"primitive":"u64"}}}},"generic_params":[]}],"lifetime":null}}}}],["size_of",{"primitive":"usize"}],["drop",{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"function_pointer":{"decl":{"inputs":[["_",{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}}]],"output":null,"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:0:2021-0:441:142":{"id":"b:0:2021-0:441:142","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[143,0],"end":[151,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:2024:1690"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"Q"}}}},"b:1:2553-0:750:2853":{"id":"b:1:2553-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:1041:3031":{"id":"a:1:8249:5088-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:1707:2871":{"id":"b:1:2251-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1186:2509":{"id":"0:1186:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4730,4],"end":[4730,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}}},"0:1567:2186":{"id":"0:1567:2186","crate_id":0,"name":"is_empty","span":{"filename":"src/set.rs","begin":[327,4],"end":[329,5]},"visibility":"public","docs":"Returns `true` if the set contains no elements.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut v = HashSet::new();\nassert!(v.is_empty());\nv.insert(1);\nassert!(!v.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:2056:1844":{"id":"a:1:2741:4891-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:74:1856":{"id":"0:74:1856","crate_id":0,"name":"capacity_overflow","span":{"filename":"src/raw/mod.rs","begin":[79,4],"end":[84,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Error to return on capacity overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:84:1891":{"id":"a:1:2701:228-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1214":{"id":"0:1214","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4794,0],"end":[4805,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1218:2509","0:1219:953","0:1220:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:272:588":{"id":"0:272:588","crate_id":0,"name":"drop","span":{"filename":"src/raw/mod.rs","begin":[2708,4],"end":[2715,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1354:2213":{"id":"0:1354:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[5619,4],"end":[5631,5]},"visibility":"public","docs":"Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nif let Entry::Vacant(o) = map.entry(\"poneyland\") {\n    o.insert(37);\n}\nassert_eq!(map[\"poneyland\"], 37);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1117:3035":{"id":"a:1:8250:5087-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1496":{"id":"0:1496","crate_id":0,"name":null,"span":{"filename":"src/scopeguard.rs","begin":[24,0],"end":[41,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["0:1499:2495"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1775:953":{"id":"0:1775:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1690,4],"end":[1692,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1000:3019":{"id":"b:1:2251-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1860:423":{"id":"0:1860:423","crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[1851,4],"end":[1856,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:819:3464":{"id":"0:819:3464","crate_id":0,"name":"RawEntryMut","span":{"filename":"src/map.rs","begin":[2946,0],"end":[2975,1]},"visibility":"public","docs":"A view into a single entry in a map, which may either be vacant or occupied.\n\nThis is a lower-level version of [`Entry`].\n\nThis `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],\nthen calling one of the methods of that [`RawEntryBuilderMut`].\n\n[`HashMap`]: struct.HashMap.html\n[`Entry`]: enum.Entry.html\n[`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut\n[`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};\n\nlet mut map = HashMap::new();\nmap.extend([('a', 1), ('b', 2), ('c', 3)]);\nassert_eq!(map.len(), 3);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\n// Existing key (insert)\nlet raw: RawEntryMut<_, _, _> = map.raw_entry_mut().from_key(&'a');\nlet _raw_o: RawOccupiedEntryMut<_, _, _> = raw.insert('a', 10);\nassert_eq!(map.len(), 3);\n\n// Nonexistent key (insert)\nmap.raw_entry_mut().from_key(&'d').insert('d', 40);\nassert_eq!(map.len(), 4);\n\n// Existing key (or_insert)\nlet hash = compute_hash(map.hasher(), &'b');\nlet kv = map\n    .raw_entry_mut()\n    .from_key_hashed_nocheck(hash, &'b')\n    .or_insert('b', 20);\nassert_eq!(kv, (&mut 'b', &mut 2));\n*kv.1 = 20;\nassert_eq!(map.len(), 4);\n\n// Nonexistent key (or_insert)\nlet hash = compute_hash(map.hasher(), &'e');\nlet kv = map\n    .raw_entry_mut()\n    .from_key_hashed_nocheck(hash, &'e')\n    .or_insert('e', 50);\nassert_eq!(kv, (&mut 'e', &mut 50));\nassert_eq!(map.len(), 5);\n\n// Existing key (or_insert_with)\nlet hash = compute_hash(map.hasher(), &'c');\nlet kv = map\n    .raw_entry_mut()\n    .from_hash(hash, |q| q == &'c')\n    .or_insert_with(|| ('c', 30));\nassert_eq!(kv, (&mut 'c', &mut 3));\n*kv.1 = 30;\nassert_eq!(map.len(), 5);\n\n// Nonexistent key (or_insert_with)\nlet hash = compute_hash(map.hasher(), &'f');\nlet kv = map\n    .raw_entry_mut()\n    .from_hash(hash, |q| q == &'f')\n    .or_insert_with(|| ('f', 60));\nassert_eq!(kv, (&mut 'f', &mut 60));\nassert_eq!(map.len(), 6);\n\nprintln!(\"Our HashMap: {:?}\", map);\n\nlet mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [('a', 10), ('b', 20), ('c', 30), ('d', 40), ('e', 50), ('f', 60)]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:825:3018","0:828:3020"],"impls":["0:903","a:1:2701:228-0:819:3464","a:1:8249:5088-0:819:3464","a:1:8250:5087-0:819:3464","a:1:2684:220-0:819:3464","a:1:2741:4891-0:819:3464","b:1:2542-0:819:3464","b:1:2248-0:819:3464","b:1:2553-0:819:3464","b:1:2251-0:819:3464","b:1:2538-0:819:3464","b:1:3319-0:819:3464","b:1:2548-0:819:3464","0:958"]}}},"b:1:2548-0:1741:4449":{"id":"b:1:2548-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:1747:4467":{"id":"a:1:8249:5088-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1513:1669":{"id":"0:1513:1669","crate_id":0,"name":"set","span":{"filename":"src/set.rs","begin":[1,0],"end":[2903,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1540:144","0:1707:2871","0:1711:2510","0:1715:2907","0:1720:2940","0:1727:4458","0:1734:4439","0:1741:4449","0:1747:4467","0:1922:3016","0:1938:3019","0:1949:3021","0:1984:4052"],"is_stripped":false}}},"b:1:3319-0:1026:3021":{"id":"b:1:3319-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1834":{"id":"0:1834","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1795,0],"end":[1803,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1838:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2100":{"id":"0:2100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[154,27],"end":[154,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1905":{"id":"0:1905","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1958,0],"end":[1964,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:6:1812":{"id":"0:6:1812","crate_id":0,"name":"cfg_if","span":{"filename":"src/macros.rs","begin":[3,0],"end":[55,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(unused_macro_rules)]"],"deprecation":null,"inner":{"macro":"macro_rules! cfg_if {\n    ($(\n        if #[cfg($($meta:meta),*)] { $($it:item)* }\n    ) else * else {\n        $($it2:item)*\n    }) => { ... };\n    (\n        if #[cfg($($i_met:meta),*)] { $($i_it:item)* }\n        $(\n            else if #[cfg($($e_met:meta),*)] { $($e_it:item)* }\n        )*\n    ) => { ... };\n    (@__items ($($not:meta,)*) ; ) => { ... };\n    (@__items ($($not:meta,)*) ; ( ($($m:meta),*) ($($it:item)*) ), $($rest:tt)*) => { ... };\n    (@__apply $m:meta, $($it:item)*) => { ... };\n}"}},"a:1:2741:4891-0:279:2295":{"id":"a:1:2741:4891-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:601:3250":{"id":"0:601:3250","crate_id":0,"name":"raw_entry_mut","span":{"filename":"src/map.rs","begin":[2038,4],"end":[2040,5]},"visibility":"public","docs":"Creates a raw entry builder for the HashMap.\n\nRaw entries provide the lowest level of control for searching and\nmanipulating a map. They must be manually initialized with a hash and\nthen manually searched. After this, insertions into a vacant entry\nstill require an owned key to be provided.\n\nRaw entries are useful for such exotic situations as:\n\n* Hash memoization\n* Deferring the creation of an owned key until it is known to be required\n* Using a search key that doesn't work with the Borrow trait\n* Using custom comparison logic without newtype wrappers\n\nBecause raw entries provide much more low-level control, it's much easier\nto put the HashMap into an inconsistent state which, while memory-safe,\nwill cause the map to produce seemingly random results. Higher-level and\nmore foolproof APIs like `entry` should be preferred when possible.\n\nIn particular, the hash used to initialized the raw entry must still be\nconsistent with the hash of the key that is ultimately stored in the entry.\nThis is because implementations of HashMap may need to recompute hashes\nwhen resizing, at which point only the keys are available.\n\nRaw entries give mutable access to the keys. This must not be used\nto modify how the key would compare or hash, as the map will not re-evaluate\nwhere the key should go, meaning the keys may become \"lost\" if their\nlocation does not reflect their state. For instance, if you change a key\nso that the map now contains keys which compare equal, search may start\nacting erratically, with two keys randomly masking each other. Implementations\nare free to assume this doesn't happen (within the limits of memory-safety).\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\n// Existing key (insert and update)\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(mut view) => {\n        assert_eq!(view.get(), &100);\n        let v = view.get_mut();\n        let new_v = (*v) * 10;\n        *v = new_v;\n        assert_eq!(view.insert(1111), 1000);\n    }\n}\n\nassert_eq!(map[&\"a\"], 1111);\nassert_eq!(map.len(), 3);\n\n// Existing key (take)\nlet hash = compute_hash(map.hasher(), &\"c\");\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"c\", 300));\n    }\n}\nassert_eq!(map.raw_entry().from_key(&\"c\"), None);\nassert_eq!(map.len(), 2);\n\n// Nonexistent key (insert and update)\nlet key = \"d\";\nlet hash = compute_hash(map.hasher(), &key);\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == key) {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(view) => {\n        let (k, value) = view.insert(\"d\", 4000);\n        assert_eq!((*k, *value), (\"d\", 4000));\n        *value = 40000;\n    }\n}\nassert_eq!(map[&\"d\"], 40000);\nassert_eq!(map.len(), 3);\n\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == key) {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"d\", 40000));\n    }\n}\nassert_eq!(map.get(&\"d\"), None);\nassert_eq!(map.len(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1545":{"id":"0:1545","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[119,0],"end":[129,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1549:423","0:1550:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2251-0:709:2961":{"id":"b:1:2251-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110:314":{"id":"0:110:314","crate_id":0,"name":"as_ptr","span":{"filename":"src/raw/mod.rs","begin":[504,4],"end":[512,5]},"visibility":"public","docs":"Acquires the underlying raw pointer `*mut T` to `data`.\n\n# Note\n\nIf `T` is not [`Copy`], do not use `*mut T` methods that can cause calling the\ndestructor of `T` (for example the [`<*mut T>::drop_in_place`] method), because\nfor properly dropping the data we also need to clear `data` control bytes. If we\ndrop data, but do not clear `data control byte` it leads to double drop when\n[`RawTable`] goes out of scope.\n\nIf you modify an already initialized `value`, so [`Hash`] and [`Eq`] on the new\n`T` value and its borrowed form *must* match those for the old `T` value, as the map\nwill not re-evaluate where the new value should go, meaning the value may become\n\"lost\" if their location does not reflect their state.\n\n[`RawTable`]: crate::raw::RawTable\n[`<*mut T>::drop_in_place`]: https://doc.rust-lang.org/core/primitive.pointer.html#method.drop_in_place\n[`Hash`]: https://doc.rust-lang.org/core/hash/trait.Hash.html\n[`Eq`]: https://doc.rust-lang.org/core/cmp/trait.Eq.html\n\n# Examples\n\n```\n# #[cfg(feature = \"raw\")]\n# fn test() {\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::raw::{Bucket, RawTable};\n\ntype NewHashBuilder = core::hash::BuildHasherDefault<ahash::AHasher>;\n\nfn make_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet hash_builder = NewHashBuilder::default();\nlet mut table = RawTable::new();\n\nlet value = (\"a\", 100);\nlet hash = make_hash(&hash_builder, &value.0);\n\ntable.insert(hash, value.clone(), |val| make_hash(&hash_builder, &val.0));\n\nlet bucket: Bucket<(&str, i32)> = table.find(hash, |(k1, _)| k1 == &value.0).unwrap();\n\nassert_eq!(unsafe { &*bucket.as_ptr() }, &(\"a\", 100));\n# }\n# fn main() {\n#     #[cfg(feature = \"raw\")]\n#     test()\n# }\n```","links":{"crate::raw::RawTable":"0:119:2112","`Copy`":"1:2696:109"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[1531,0],"end":[1548,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:208:2124"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1172:2510":{"id":"0:1172:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[4664,4],"end":[4664,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"a:1:8249:5088-0:359:2308":{"id":"a:1:8249:5088-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:819:3464":{"id":"a:1:2701:228-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:441:142":{"id":"a:1:8249:5088-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:63:2509":{"id":"0:63:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/bitmask.rs","begin":[125,4],"end":[125,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"0:175:2266":{"id":"0:175:2266","crate_id":0,"name":"get_many_mut","span":{"filename":"src/raw/mod.rs","begin":[1335,4],"end":[1354,5]},"visibility":"public","docs":"Attempts to get mutable references to `N` entries in the table at once.\n\nReturns an array of length `N` with the results of each query.\n\nAt most one mutable reference will be returned to any entry. `None` will be returned if any\nof the hashes are duplicates. `None` will be returned if the hash is not found.\n\nThe `eq` argument should be a closure such that `eq(i, k)` returns true if `k` is equal to\nthe `i`th key to be looked up.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hashes",{"array":{"type":{"primitive":"u64"},"len":"N"}}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}},{"name":"impl FnMut(usize, &T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[289,0],"end":[294,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:104:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:359:2308":{"id":"b:1:2553-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3077,0],"end":[3082,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:336:795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:850:3473":{"id":"b:1:2248-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:97:1927":{"id":"b:1:2538-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:1062:3033":{"id":"b:1:2251-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:1540:144":{"id":"b:1:2248-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2082:1913":{"id":"0:2082:1913","crate_id":0,"name":"TableLayout","span":{"filename":"src/raw/mod.rs","begin":[225,0],"end":[228,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Helper which allows the max calculation for ctrl_align to be statically computed for each T\nwhile keeping the rest of `calculate_layout_for` independent of `T`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2083:1362","0:2084:1914"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:91","a:1:2701:228-0:2082:1913","a:1:8249:5088-0:2082:1913","a:1:8250:5087-0:2082:1913","a:1:2684:220-0:2082:1913","a:1:2741:4891-0:2082:1913","b:1:2542-0:2082:1913","b:1:2248-0:2082:1913","b:1:2553-0:2082:1913","b:1:2251-0:2082:1913","b:1:2538-0:2082:1913","b:1:3319-0:2082:1913","b:1:2548-0:2082:1913","b:4:684-0:2082:1913","0:2086","0:2085"]}}},"a:1:8249:5088-0:812:3251":{"id":"a:1:8249:5088-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:1670:4038":{"id":"0:1670:4038","crate_id":0,"name":"extend","span":{"filename":"src/set.rs","begin":[1352,4],"end":[1354,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1093:2114":{"id":"0:1093:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[4498,4],"end":[4498,38]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"0:1715:2907":{"id":"0:1715:2907","crate_id":0,"name":"Drain","span":{"filename":"src/set.rs","begin":[1566,0],"end":[1568,1]},"visibility":"public","docs":"A draining iterator over the items of a `HashSet`.\n\nThis `struct` is created by the [`drain`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`drain`]: struct.HashSet.html#method.drain","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1719:795"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1715:2907","a:1:8249:5088-0:1715:2907","a:1:8250:5087-0:1715:2907","a:1:2684:220-0:1715:2907","a:1:2741:4891-0:1715:2907","b:1:2542-0:1715:2907","b:1:2248-0:1715:2907","b:1:2553-0:1715:2907","b:1:2251-0:1715:2907","b:1:7206-0:1715:2907","b:1:2538-0:1715:2907","b:1:3319-0:1715:2907","b:1:2548-0:1715:2907","0:1814","0:1810","0:1804","0:1817"]}}},"a:1:8250:5087-0:812:3251":{"id":"a:1:8250:5087-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:164:2213":{"id":"0:164:2213","crate_id":0,"name":"insert","span":{"filename":"src/raw/mod.rs","begin":[1156,4],"end":[1171,5]},"visibility":"public","docs":"Inserts a new element into the table, and returns its raw bucket.\n\nThis does not check if the given element already exists in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["value",{"generic":"T"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2307":{"id":"0:196:2307","crate_id":0,"name":"drain","span":{"filename":"src/raw/mod.rs","begin":[1451,4],"end":[1456,5]},"visibility":"public","docs":"Returns an iterator which removes all elements from the table without\nfreeing the memory.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1304":{"id":"0:1304","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4931,0],"end":[5176,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1310:2213","0:1311:3538","0:1312:3549","0:1314:3834","0:1316:1691","0:1317:3559","0:1319:3582"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1062:3033":{"id":"a:1:2741:4891-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8250:5087-0:1135:3180":{"id":"a:1:8250:5087-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2032:2585":{"id":"0:2032:2585","crate_id":0,"name":"NonZeroBitMaskWord","span":{"filename":"src/raw/sse2.rs","begin":[12,0],"end":[12,48]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"NonZeroU16","id":"1:22260:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"b:1:2553-0:774:2940":{"id":"b:1:2553-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:1720:2940":{"id":"a:1:8250:5087-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2684:220-0:1540:144":{"id":"a:1:2684:220-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2553-0:2056:1844":{"id":"b:1:2553-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:127:1868":{"id":"0:127:1868","crate_id":0,"name":"ctrl","span":{"filename":"src/raw/mod.rs","begin":[792,4],"end":[792,21]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"a:1:2741:4891-0:1734:4439":{"id":"a:1:2741:4891-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:2089:1695":{"id":"a:1:2741:4891-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:2089:1695":{"id":"b:1:2538-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:1135:3180":{"id":"b:1:2248-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1234:668":{"id":"0:1234:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4815,4],"end":[4817,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7206-0:763:2907":{"id":"b:1:7206-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1700:186":{"id":"0:1700:186","crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1478,4],"end":[1478,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:1647:668":{"id":"0:1647:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1296,4],"end":[1298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5398:21764":{"id":"4:5398:21764","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:774:2940":{"id":"a:1:2741:4891-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1927:3018":{"id":"0:1927:3018","crate_id":0,"name":"Occupied","span":{"filename":"src/set.rs","begin":[2048,4],"end":[2048,40]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\nlet mut set: HashSet<_> = [\"a\", \"b\"].into();\n\nmatch set.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1929:1606"]},"discriminant":null}}},"0:1025:668":{"id":"0:1025:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4279,4],"end":[4284,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12038:16469":{"id":"1:12038:16469","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:12039:16460"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:43631:11792","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7206-0:644:2871":{"id":"b:1:7206-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"a:1:2684:220-0:1938:3019":{"id":"a:1:2684:220-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2059":{"id":"0:2059","crate_id":0,"name":null,"span":{"filename":"src/raw/sse2.rs","begin":[21,9],"end":[21,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2099":{"id":"0:2099","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[154,27],"end":[154,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"1:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2097":{"id":"0:2097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[154,16],"end":[154,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2098:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:1135:3180":{"id":"b:1:2542-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:397:2572":{"id":"a:1:8250:5087-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:699":{"id":"0:699","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2477,0],"end":[2477,71]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:119:2112":{"id":"b:1:2248-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:735:668":{"id":"0:735:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2542,4],"end":[2546,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:819:3464":{"id":"b:1:2542-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:364:2114":{"id":"0:364:2114","crate_id":0,"name":"table","span":{"filename":"src/raw/mod.rs","begin":[3152,4],"end":[3152,39]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"ManuallyDrop","id":"1:30232:1831","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:1:2741:4891-0:393:2304":{"id":"a:1:2741:4891-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1294:811":{"id":"0:1294:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[4914,4],"end":[4916,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1602:63":{"id":"0:1602:63","crate_id":0,"name":"union","span":{"filename":"src/set.rs","begin":[827,4],"end":[838,5]},"visibility":"public","docs":"Visits the values representing the union,\ni.e., all the values in `self` or `other`, without duplicates.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n\n// Print 1, 2, 3, 4 in arbitrary order.\nfor x in a.union(&b) {\n    println!(\"{}\", x);\n}\n\nlet union: HashSet<_> = a.union(&b).collect();\nassert_eq!(union, [1, 2, 3, 4].iter().collect());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1904:423":{"id":"0:1904:423","crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[1951,4],"end":[1955,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12113:19896":{"id":"1:12113:19896","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:1922":{"id":"0:95:1922","crate_id":0,"name":"InsertSlot","span":{"filename":"src/raw/mod.rs","begin":[268,0],"end":[270,1]},"visibility":"public","docs":"A reference to an empty bucket into which an can be inserted.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:96:769"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:2701:228-0:95:1922","a:1:8249:5088-0:95:1922","a:1:8250:5087-0:95:1922","a:1:2684:220-0:95:1922","a:1:2741:4891-0:95:1922","b:1:2542-0:95:1922","b:1:2248-0:95:1922","b:1:2553-0:95:1922","b:1:2251-0:95:1922","b:1:2538-0:95:1922","b:1:3319-0:95:1922","b:1:2548-0:95:1922"]}}},"0:642:694":{"id":"0:642:694","crate_id":0,"name":"from","span":{"filename":"src/map.rs","begin":[2275,4],"end":[2277,5]},"visibility":"default","docs":"# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map1 = HashMap::from([(1, 2), (3, 4)]);\nlet map2: HashMap<_, _> = [(1, 2), (3, 4)].into();\nassert_eq!(map1, map2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["arr",{"array":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]},"len":"N"}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:691:953":{"id":"0:691:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[2461,4],"end":[2463,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:397:2572":{"id":"a:1:8249:5088-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1282":{"id":"0:1282","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4900,0],"end":[4911,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1287:2509","0:1288:953","0:1289:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1680":{"id":"0:1680","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1393,0],"end":[1405,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1684:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111:2046":{"id":"0:111:2046","crate_id":0,"name":"next_n","span":{"filename":"src/raw/mod.rs","begin":[552,4],"end":[562,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Create a new [`Bucket`] that is offset from the `self` by the given\n`offset`. The pointer calculation is performed by calculating the\noffset from `self` pointer (convenience for `self.ptr.as_ptr().sub(offset)`).\nThis function is used for iterators.\n\n`offset` is in units of `T`; e.g., a `offset` of 3 represents a pointer\noffset of `3 * size_of::<T>()` bytes.\n\n# Safety\n\nIf `mem::size_of::<T>() != 0`, then the safety rules are directly derived\nfrom the safety rules for [`<*mut T>::sub`] method of `*mut T` and safety\nrules of [`NonNull::new_unchecked`] function.\n\nThus, in order to uphold the safety contracts for [`<*mut T>::sub`] method\nand [`NonNull::new_unchecked`] function, as well as for the correct\nlogic of the work of this crate, the following rules are necessary and\nsufficient:\n\n* `self` contained pointer must not be `dangling`;\n\n* `self.to_base_index() + ofset` must not be greater than `RawTableInner.bucket_mask`,\n  i.e. `(self.to_base_index() + ofset) <= RawTableInner.bucket_mask` or, in other\n  words, `self.to_base_index() + ofset + 1` must be no greater than the number returned\n  by the function [`RawTable::buckets`] or [`RawTableInner::buckets`].\n\nIf `mem::size_of::<T>() == 0`, then the only requirement is that the\n`self.to_base_index() + ofset` must not be greater than `RawTableInner.bucket_mask`,\ni.e. `(self.to_base_index() + ofset) <= RawTableInner.bucket_mask` or, in other words,\n`self.to_base_index() + ofset + 1` must be no greater than the number returned by the\nfunction [`RawTable::buckets`] or [`RawTableInner::buckets`].\n\n[`Bucket`]: crate::raw::Bucket\n[`<*mut T>::sub`]: https://doc.rust-lang.org/core/primitive.pointer.html#method.sub-1\n[`NonNull::new_unchecked`]: https://doc.rust-lang.org/stable/std/ptr/struct.NonNull.html#method.new_unchecked\n[`RawTable::buckets`]: crate::raw::RawTable::buckets\n[`RawTableInner::buckets`]: RawTableInner::buckets","links":{"crate::raw::Bucket":"0:97:1927","crate::raw::RawTable::buckets":"0:193:1916","RawTableInner::buckets":"0:234:1916"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["offset",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1727:4458":{"id":"0:1727:4458","crate_id":0,"name":"Intersection","span":{"filename":"src/set.rs","begin":[1593,0],"end":[1598,1]},"visibility":"public","docs":"A lazy iterator producing elements in the intersection of `HashSet`s.\n\nThis `struct` is created by the [`intersection`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`intersection`]: struct.HashSet.html#method.intersection","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1732:795","0:1733:1007"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1727:4458","a:1:8249:5088-0:1727:4458","a:1:8250:5087-0:1727:4458","a:1:2684:220-0:1727:4458","a:1:2741:4891-0:1727:4458","b:1:2542-0:1727:4458","b:1:2248-0:1727:4458","b:1:2553-0:1727:4458","b:1:2251-0:1727:4458","b:1:7206-0:1727:4458","b:1:2538-0:1727:4458","b:1:3319-0:1727:4458","b:1:2548-0:1727:4458","b:4:684-0:1727:4458","0:1852","0:1834","0:1847","0:1839"]}}},"0:138:2134":{"id":"0:138:2134","crate_id":0,"name":"TABLE_LAYOUT","span":{"filename":"src/raw/mod.rs","begin":[832,4],"end":[832,62]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"b:1:2538-0:850:3473":{"id":"b:1:2538-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:1715:2907":{"id":"b:1:2251-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:671:2510":{"id":"b:1:2548-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2065":{"id":"0:2065","crate_id":0,"name":null,"span":{"filename":"src/raw/bitmask.rs","begin":[21,9],"end":[21,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1149":{"id":"0:1149","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4616,0],"end":[4628,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1155:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12022:2278":{"id":"1:12022:2278","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:51716:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2048:2342":{"id":"0:2048:2342","crate_id":0,"name":"load_aligned","span":{"filename":"src/raw/sse2.rs","begin":[60,4],"end":[64,5]},"visibility":"crate","docs":"Loads a group of bytes starting at the given address, which must be\naligned to `mem::align_of::<Group>()`.","links":{},"attrs":["#[inline]","#[allow(clippy :: cast_ptr_alignment)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1270":{"id":"0:1270","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4884,0],"end":[4889,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1273:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:850:3473":{"id":"a:1:2701:228-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1566:811":{"id":"0:1566:811","crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[310,4],"end":[312,5]},"visibility":"public","docs":"Returns the number of elements in the set.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut v = HashSet::new();\nassert_eq!(v.len(), 0);\nv.insert(1);\nassert_eq!(v.len(), 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1690:364":{"id":"0:1690:364","crate_id":0,"name":"bitor","span":{"filename":"src/set.rs","begin":[1435,4],"end":[1437,5]},"visibility":"default","docs":"Returns the union of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\nlet set = &a | &b;\n\nlet mut i = 0;\nlet expected = [1, 2, 3, 4, 5];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:119:2112":{"id":"a:1:2741:4891-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:1922:3016":{"id":"a:1:2701:228-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12084:21084":{"id":"1:12084:21084","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12107:21093":{"id":"1:12107:21093","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:11737:13651","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1734:4439":{"id":"b:1:2548-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1026:3021":{"id":"0:1026:3021","crate_id":0,"name":"VacantEntry","span":{"filename":"src/map.rs","begin":[4317,0],"end":[4321,1]},"visibility":"public","docs":"A view into a vacant entry in a `HashMap`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap, VacantEntry};\n\nlet mut map = HashMap::<&str, i32>::new();\n\nlet entry_v: VacantEntry<_, _, _> = match map.entry(\"a\") {\n    Entry::Vacant(view) => view,\n    Entry::Occupied(_) => unreachable!(),\n};\nentry_v.insert(10);\nassert!(map[&\"a\"] == 10 && map.len() == 1);\n\n// Nonexistent key (insert and update)\nmatch map.entry(\"b\") {\n    Entry::Occupied(_) => unreachable!(),\n    Entry::Vacant(view) => {\n        let value = view.insert(2);\n        assert_eq!(*value, 2);\n        *value = 20;\n    }\n}\nassert!(map[&\"b\"] == 20 && map.len() == 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1032:729","0:1033:1691","0:1034:2114"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:1346","a:1:2701:228-0:1026:3021","a:1:8249:5088-0:1026:3021","a:1:8250:5087-0:1026:3021","a:1:2684:220-0:1026:3021","a:1:2741:4891-0:1026:3021","b:1:2542-0:1026:3021","b:1:2248-0:1026:3021","b:1:2553-0:1026:3021","b:1:2251-0:1026:3021","b:1:2538-0:1026:3021","b:1:3319-0:1026:3021","b:1:2548-0:1026:3021","0:1035"]}}},"0:1447:4038":{"id":"0:1447:4038","crate_id":0,"name":"extend","span":{"filename":"src/map.rs","begin":[6590,4],"end":[6592,5]},"visibility":"default","docs":"Inserts all new key-values from the iterator to existing `HashMap<K, V, S, A>`.\nReplace values with existing keys with new values returned from the iterator.\nThe keys and values must implement [`Copy`] trait.\n\n[`Copy`]: https://doc.rust-lang.org/core/marker/trait.Copy.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, 100);\n\nlet arr = [(1, 1), (2, 2)];\nlet some_iter = arr.iter();\nmap.extend(some_iter);\n// Replace values with existing keys with new values returned from the iterator.\n// So that the map.get(&1) doesn't return Some(&100).\nassert_eq!(map.get(&1), Some(&1));\n\nlet some_vec: Vec<_> = vec![(3, 3), (4, 4)];\nmap.extend(&some_vec);\n\nlet some_arr = [(5, 5), (6, 6)];\nmap.extend(&some_arr);\n\nlet mut vec: Vec<_> = map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1226":{"id":"0:1226","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4812,0],"end":[4812,71]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:1734:4439":{"id":"a:1:8250:5087-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:2074:1852":{"id":"a:1:2701:228-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:1540:144":{"id":"b:1:2538-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:794:2941":{"id":"b:1:2251-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:888":{"id":"0:888","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3259,0],"end":[3350,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:894:3513","0:896:3514","0:898:3521","0:901:3517"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:1488:1827":{"id":"b:1:2542-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1786":{"id":"0:1786","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1712,0],"end":[1727,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1789:2509","0:1790:953","0:1791:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:644:2871":{"id":"a:1:8250:5087-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:2082:1913":{"id":"a:1:2741:4891-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:522:2998":{"id":"0:522:2998","crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/map.rs","begin":[1173,4],"end":[1176,5]},"visibility":"public","docs":"Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = HashMap::with_capacity(100);\nmap.insert(1, 2);\nmap.insert(3, 4);\nassert!(map.capacity() >= 100);\nmap.shrink_to_fit();\nassert!(map.capacity() >= 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1256":{"id":"0:1256","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4860,0],"end":[4865,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1259:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1624:2314":{"id":"0:1624:2314","crate_id":0,"name":"replace","span":{"filename":"src/set.rs","begin":[1156,4],"end":[1164,5]},"visibility":"public","docs":"Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::new();\nset.insert(Vec::<i32>::new());\n\nassert_eq!(set.get(&[][..]).unwrap().capacity(), 0);\nset.replace(Vec::with_capacity(10));\nassert_eq!(set.get(&[][..]).unwrap().capacity(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:84:1891":{"id":"b:1:2248-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:1734:4439":{"id":"b:1:2542-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:455:2743":{"id":"0:455:2743","crate_id":0,"name":"make_hasher","span":{"filename":"src/map.rs","begin":[212,0],"end":[218,1]},"visibility":"crate","docs":"Ensures that a single closure type across uses of this which, in turn prevents multiple\ninstances of any functions like RawTable::reserve from being generated","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hash_builder",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"S"}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"tuple":[{"generic":"Q"},{"generic":"V"}]}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1948:668":{"id":"0:1948:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2116,4],"end":[2120,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1575":{"id":"0:1575","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[434,0],"end":[510,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:1578:2814","0:1579:2770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1062:3033":{"id":"b:1:3319-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:84:1891":{"id":"b:1:2553-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1041:3031":{"id":"0:1041:3031","crate_id":0,"name":"EntryRef","span":{"filename":"src/map.rs","begin":[4381,0],"end":[4414,1]},"visibility":"public","docs":"A view into a single entry in a map, which may either be vacant or occupied,\nwith any borrowed form of the map's key type.\n\n\nThis `enum` is constructed from the [`entry_ref`] method on [`HashMap`].\n\n[`Hash`] and [`Eq`] on the borrowed form of the map's key type *must* match those\nfor the key type. It also require that key may be constructed from the borrowed\nform through the [`From`] trait.\n\n[`HashMap`]: struct.HashMap.html\n[`entry_ref`]: struct.HashMap.html#method.entry_ref\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n[`From`]: https://doc.rust-lang.org/std/convert/trait.From.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap, OccupiedEntryRef};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\".to_owned(), 10), (\"b\".into(), 20), (\"c\".into(), 30)]);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert)\nlet key = String::from(\"a\");\nlet entry: EntryRef<_, _, _, _> = map.entry_ref(&key);\nlet _raw_o: OccupiedEntryRef<_, _, _, _> = entry.insert(1);\nassert_eq!(map.len(), 3);\n// Nonexistent key (insert)\nmap.entry_ref(\"d\").insert(4);\n\n// Existing key (or_insert)\nlet v = map.entry_ref(\"b\").or_insert(2);\nassert_eq!(std::mem::replace(v, 2), 20);\n// Nonexistent key (or_insert)\nmap.entry_ref(\"e\").or_insert(5);\n\n// Existing key (or_insert_with)\nlet v = map.entry_ref(\"c\").or_insert_with(|| 3);\nassert_eq!(std::mem::replace(v, 3), 30);\n// Nonexistent key (or_insert_with)\nmap.entry_ref(\"f\").or_insert_with(|| 6);\n\nprintln!(\"Our HashMap: {:?}\", map);\n\nfor (key, value) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().zip(1..=6) {\n    assert_eq!(map[key], value)\n}\nassert_eq!(map.len(), 6);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"variants_stripped":false,"variants":["0:1049:3018","0:1052:3020"],"impls":["0:1356","0:1375","a:1:2701:228-0:1041:3031","a:1:8249:5088-0:1041:3031","a:1:8250:5087-0:1041:3031","a:1:2684:220-0:1041:3031","a:1:2741:4891-0:1041:3031","b:1:2542-0:1041:3031","b:1:2248-0:1041:3031","b:1:2553-0:1041:3031","b:1:2251-0:1041:3031","b:1:2538-0:1041:3031","b:1:3319-0:1041:3031","b:1:2548-0:1041:3031","0:1055"]}}},"0:1202:2528":{"id":"0:1202:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[4772,4],"end":[4774,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:441:142":{"id":"b:1:2553-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:1000:3019":{"id":"b:1:2542-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"4:688:11014":{"id":"4:688:11014","crate_id":4,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:850:3473":{"id":"b:1:2542-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:2062:2602":{"id":"a:1:8250:5087-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:299:2509":{"id":"0:299:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/mod.rs","begin":[2859,4],"end":[2859,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"b:1:2251-0:1922:3016":{"id":"b:1:2251-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/raw/bitmask.rs","begin":[124,0],"end":[133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:2509","0:64:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92:939":{"id":"0:92:939","crate_id":0,"name":"new","span":{"filename":"src/raw/mod.rs","begin":[232,4],"end":[242,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:326:2318":{"id":"a:1:8249:5088-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:350:2509":{"id":"0:350:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/mod.rs","begin":[3129,4],"end":[3129,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:969:668":{"id":"0:969:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4107,4],"end":[4112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1741:4449":{"id":"a:1:2684:220-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:4:684-0:2074:1852":{"id":"b:4:684-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:117:2099":{"id":"0:117:2099","crate_id":0,"name":"as_mut","span":{"filename":"src/raw/mod.rs","begin":[741,4],"end":[743,5]},"visibility":"public","docs":"Returns a unique mutable reference to the `value`.\n\n# Safety\n\nSee [`NonNull::as_mut`] for safety concerns.\n\n# Note\n\n[`Hash`] and [`Eq`] on the new `T` value and its borrowed form *must* match\nthose for the old `T` value, as the map will not re-evaluate where the new\nvalue should go, meaning the value may become \"lost\" if their location\ndoes not reflect their state.\n\n[`NonNull::as_mut`]: https://doc.rust-lang.org/core/ptr/struct.NonNull.html#method.as_mut\n[`Hash`]: https://doc.rust-lang.org/core/hash/trait.Hash.html\n[`Eq`]: https://doc.rust-lang.org/core/cmp/trait.Eq.html\n\n# Examples\n\n```\n# #[cfg(feature = \"raw\")]\n# fn test() {\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::raw::{Bucket, RawTable};\n\ntype NewHashBuilder = core::hash::BuildHasherDefault<ahash::AHasher>;\n\nfn make_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet hash_builder = NewHashBuilder::default();\nlet mut table = RawTable::new();\n\nlet value: (&str, String) = (\"A pony\", \"is a small horse\".to_owned());\nlet hash = make_hash(&hash_builder, &value.0);\n\ntable.insert(hash, value.clone(), |val| make_hash(&hash_builder, &val.0));\n\nlet bucket: Bucket<(&str, String)> = table.find(hash, |(k, _)| k == &value.0).unwrap();\n\nunsafe {\n    bucket\n        .as_mut()\n        .1\n        .push_str(\" less than 147 cm at the withers\")\n};\nassert_eq!(\n    unsafe { bucket.as_ref() },\n    &(\n        \"A pony\",\n        \"is a small horse less than 147 cm at the withers\".to_owned()\n    )\n);\n# }\n# fn main() {\n#     #[cfg(feature = \"raw\")]\n#     test()\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:2257":{"id":"0:173:2257","crate_id":0,"name":"get","span":{"filename":"src/raw/mod.rs","begin":[1308,4],"end":[1314,5]},"visibility":"public","docs":"Gets a reference to an element in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:794:2941":{"id":"b:1:2553-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:658:2880":{"id":"b:1:2538-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170:2218":{"id":"0:170:2218","crate_id":0,"name":"insert_in_slot","span":{"filename":"src/raw/mod.rs","begin":[1283,4],"end":[1290,5]},"visibility":"public","docs":"Inserts a new element into the table in the given slot, and returns its\nraw bucket.\n\n# Safety\n\n`slot` must point to a slot previously returned by\n`find_or_find_insert_slot`, and no mutation of the table must have\noccurred since that call.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["slot",{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1509":{"id":"0:1509","crate_id":0,"name":null,"span":{"filename":"src/scopeguard.rs","begin":[64,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["0:1512:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12106:21092":{"id":"1:12106:21092","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1813:811":{"id":"0:1813:811","crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[1761,4],"end":[1763,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1052:3020":{"id":"0:1052:3020","crate_id":0,"name":"Vacant","span":{"filename":"src/map.rs","begin":[4413,4],"end":[4413,49]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\nlet mut map: HashMap<String, i32> = HashMap::new();\n\nmatch map.entry_ref(\"a\") {\n    EntryRef::Occupied(_) => unreachable!(),\n    EntryRef::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1054:1606"]},"discriminant":null}}},"0:634:186":{"id":"0:634:186","crate_id":0,"name":"Output","span":{"filename":"src/map.rs","begin":[2235,4],"end":[2235,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"V"}}}},"1:2557:1477":{"id":"1:2557:1477","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:119:2112":{"id":"b:1:3319-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:763:2907":{"id":"b:1:2548-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1666":{"id":"0:1666","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1345,0],"end":[1367,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7211:4017","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1670:4038"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:2089:1695":{"id":"b:1:2548-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:541:3058":{"id":"0:541:3058","crate_id":0,"name":"get_inner_mut","span":{"filename":"src/map.rs","begin":[1457,4],"end":[1467,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:393:2304":{"id":"b:1:2251-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:926:2257":{"id":"0:926:2257","crate_id":0,"name":"get","span":{"filename":"src/map.rs","begin":[3646,4],"end":[3648,5]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.get(), &100),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1008:3017":{"id":"0:1008:3017","crate_id":0,"name":"elem","span":{"filename":"src/map.rs","begin":[4257,4],"end":[4257,24]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}}}},"0:1055":{"id":"0:1055","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4416,0],"end":[4425,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1061:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8249:5088-0:1720:2940":{"id":"a:1:8249:5088-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:1026:3021":{"id":"a:1:2741:4891-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:397:2572":{"id":"b:1:3319-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12029:2280":{"id":"1:12029:2280","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:737:2843":{"id":"b:1:2248-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84:1891":{"id":"0:84:1891","crate_id":0,"name":"ProbeSeq","span":{"filename":"src/raw/mod.rs","begin":[157,0],"end":[160,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Probe sequence based on triangular numbers, which is guaranteed (since our\ntable size is a power of two) to visit every group of elements exactly once.\n\nA triangular probe has us jump by 1 more group every time. So first we\njump by 1 group (meaning we just continue our linear scan), then 2 groups\n(skipping over 1 group), then 3 groups (skipping over 2 groups), and so on.\n\nProof that the probe will visit every group in the table:\n<https://fgiesen.wordpress.com/2015/02/22/triangular-numbers-mod-2n/>","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:85:1892","0:86:1893"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:87","a:1:2701:228-0:84:1891","a:1:8249:5088-0:84:1891","a:1:8250:5087-0:84:1891","a:1:2684:220-0:84:1891","a:1:2741:4891-0:84:1891","b:1:2542-0:84:1891","b:1:2248-0:84:1891","b:1:2553-0:84:1891","b:1:2251-0:84:1891","b:1:2538-0:84:1891","b:1:3319-0:84:1891","b:1:2548-0:84:1891"]}}},"0:223:2411":{"id":"0:223:2411","crate_id":0,"name":"bucket_ptr","span":{"filename":"src/raw/mod.rs","begin":[1911,4],"end":[1916,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["size_of",{"primitive":"usize"}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1441":{"id":"0:1441","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[6549,0],"end":[6605,1]},"visibility":"default","docs":"Inserts all new key-values from the iterator and replaces values with existing\nkeys with new values returned from the iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7211:4017","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1447:4038"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232:2240":{"id":"0:232:2240","crate_id":0,"name":"set_ctrl","span":{"filename":"src/raw/mod.rs","begin":[2060,4],"end":[2087,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Sets a control byte, and possibly also the replicated control byte at\nthe end of the array.\n\nThis function does not make any changes to the `data` parts of the table,\nor any changes to the the `items` or `growth_left` field of the table.\n\n# Safety\n\nYou must observe the following safety rules when calling this function:\n\n* The [`RawTableInner`] has already been allocated;\n\n* The `index` must not be greater than the `RawTableInner.bucket_mask`, i.e.\n  `index <= RawTableInner.bucket_mask` or, in other words, `(index + 1)` must\n  be no greater than the number returned by the function [`RawTableInner::buckets`].\n\nCalling this function on a table that has not been allocated results in [`undefined behavior`].\n\nSee also [`Bucket::as_ptr`] method, for more information about of properly removing\nor saving `data element` from / into the [`RawTable`] / [`RawTableInner`].\n\n[`RawTableInner::buckets`]: RawTableInner::buckets\n[`Bucket::as_ptr`]: Bucket::as_ptr\n[`undefined behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{"`RawTableInner`":"0:124:2115","Bucket::as_ptr":"0:110:314","RawTableInner::buckets":"0:234:1916","`RawTable`":"0:119:2112"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["ctrl",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7206-0:359:2308":{"id":"b:1:7206-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:128:2118":{"id":"0:128:2118","crate_id":0,"name":"growth_left","span":{"filename":"src/raw/mod.rs","begin":[795,4],"end":[795,22]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:1:2548-0:359:2308":{"id":"b:1:2548-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:488:2814":{"id":"0:488:2814","crate_id":0,"name":"with_hasher","span":{"filename":"src/map.rs","begin":[458,4],"end":[463,5]},"visibility":"public","docs":"Creates an empty `HashMap` which will use the given hash builder to hash\nkeys.\n\nThe hash map is initially created with a capacity of 0, so it will not\nallocate until it is first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe HashMap to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_hasher(s);\nassert_eq!(map.len(), 0);\nassert_eq!(map.capacity(), 0);\n\nmap.insert(1, 2);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hash_builder",{"generic":"S"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1401:3583":{"id":"0:1401:3583","crate_id":0,"name":"replace_entry_with","span":{"filename":"src/map.rs","begin":[6254,4],"end":[6282,5]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nthe entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.insert(\"poneyland\".to_string(), 42);\n\nlet entry = match map.entry_ref(\"poneyland\") {\n    EntryRef::Occupied(e) => {\n        e.replace_entry_with(|k, v| {\n            assert_eq!(k, \"poneyland\");\n            assert_eq!(v, 42);\n            Some(v + 1)\n        })\n    }\n    EntryRef::Vacant(_) => panic!(),\n};\n\nmatch entry {\n    EntryRef::Occupied(e) => {\n        assert_eq!(e.key(), \"poneyland\");\n        assert_eq!(e.get(), &43);\n    }\n    EntryRef::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = match map.entry_ref(\"poneyland\") {\n    EntryRef::Occupied(e) => e.replace_entry_with(|_k, _v| None),\n    EntryRef::Vacant(_) => panic!(),\n};\n\nmatch entry {\n    EntryRef::Vacant(e) => {\n        assert_eq!(e.key(), \"poneyland\");\n    }\n    EntryRef::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1664:694":{"id":"0:1664:694","crate_id":0,"name":"from","span":{"filename":"src/set.rs","begin":[1340,4],"end":[1342,5]},"visibility":"default","docs":"# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet set1 = HashSet::from([1, 2, 3, 4]);\nlet set2: HashSet<_> = [1, 2, 3, 4].into();\nassert_eq!(set1, set2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["arr",{"array":{"type":{"generic":"T"},"len":"N"}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1540:144":{"id":"0:1540:144","crate_id":0,"name":"HashSet","span":{"filename":"src/set.rs","begin":[115,0],"end":[117,1]},"visibility":"public","docs":"A hash set implemented as a `HashMap` where the value is `()`.\n\nAs with the [`HashMap`] type, a `HashSet` requires that the elements\nimplement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by\nusing `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,\nit is important that the following property holds:\n\n```text\nk1 == k2 -> hash(k1) == hash(k2)\n```\n\nIn other words, if two keys are equal, their hashes must be equal.\n\n\nIt is a logic error for an item to be modified in such a way that the\nitem's hash, as determined by the [`Hash`] trait, or its equality, as\ndetermined by the [`Eq`] trait, changes while it is in the set. This is\nnormally only possible through [`Cell`], [`RefCell`], global state, I/O, or\nunsafe code.\n\nIt is also a logic error for the [`Hash`] implementation of a key to panic.\nThis is generally only possible if the trait is implemented manually. If a\npanic does occur then the contents of the `HashSet` may become corrupted and\nsome items may be dropped from the table.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n// Type inference lets us omit an explicit type signature (which\n// would be `HashSet<String>` in this example).\nlet mut books = HashSet::new();\n\n// Add some books.\nbooks.insert(\"A Dance With Dragons\".to_string());\nbooks.insert(\"To Kill a Mockingbird\".to_string());\nbooks.insert(\"The Odyssey\".to_string());\nbooks.insert(\"The Great Gatsby\".to_string());\n\n// Check for a specific one.\nif !books.contains(\"The Winds of Winter\") {\n    println!(\"We have {} books, but The Winds of Winter ain't one.\",\n             books.len());\n}\n\n// Remove a book.\nbooks.remove(\"The Odyssey\");\n\n// Iterate over everything.\nfor book in &books {\n    println!(\"{}\", book);\n}\n```\n\nThe easiest way to use `HashSet` with a custom type is to derive\n[`Eq`] and [`Hash`]. We must also derive [`PartialEq`]. This will in the\nfuture be implied by [`Eq`].\n\n```\nuse hashbrown::HashSet;\n#[derive(Hash, Eq, PartialEq, Debug)]\nstruct Viking {\n    name: String,\n    power: usize,\n}\n\nlet mut vikings = HashSet::new();\n\nvikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });\nvikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });\nvikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });\nvikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });\n\n// Use derived implementation to print the vikings.\nfor x in &vikings {\n    println!(\"{:?}\", x);\n}\n```\n\nA `HashSet` with fixed list of elements can be initialized from an array:\n\n```\nuse hashbrown::HashSet;\n\nlet viking_names: HashSet<&'static str> =\n    [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();\n// use the values stored in the set\n```\n\n[`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n[`HashMap`]: struct.HashMap.html\n[`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\n[`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1544:859"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:1551","0:1555","0:1560","0:1575","0:1580","0:1588","a:1:2701:228-0:1540:144","a:1:8249:5088-0:1540:144","a:1:8250:5087-0:1540:144","a:1:2684:220-0:1540:144","a:1:2741:4891-0:1540:144","b:0:2021-0:1540:144","b:1:2542-0:1540:144","b:1:2248-0:1540:144","b:1:2553-0:1540:144","b:1:2251-0:1540:144","b:1:2538-0:1540:144","b:1:3319-0:1540:144","b:1:2548-0:1540:144","b:4:684-0:1540:144","0:1639","0:1702","0:1761","0:1691","0:1545","0:1653","0:1753","0:1697","0:1685","0:1673","0:1643","0:1666","0:1680","0:1633","0:1648","0:1659"]}}},"0:217:2229":{"id":"0:217:2229","crate_id":0,"name":"prepare_insert_slot","span":{"filename":"src/raw/mod.rs","begin":[1729,4],"end":[1734,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Searches for an empty or deleted bucket which is suitable for inserting\na new element and sets the hash for that slot.\n\nThere must be at least 1 empty bucket in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"u8"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12138:21100":{"id":"1:12138:21100","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:4533:21100"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:43674:11699","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:953":{"id":"0:319:953","crate_id":0,"name":"next","span":{"filename":"src/raw/mod.rs","begin":[3042,4],"end":[3058,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:1062:3033":{"id":"b:1:2248-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:750:2853":{"id":"a:1:2684:220-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[162,0],"end":[175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:88:1894"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1705:186":{"id":"0:1705:186","crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1510,4],"end":[1510,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:194:2237":{"id":"0:194:2237","crate_id":0,"name":"is_bucket_full","span":{"filename":"src/raw/mod.rs","begin":[1416,4],"end":[1418,5]},"visibility":"public","docs":"Checks whether the bucket at `index` is full.\n\n# Safety\n\nThe caller must ensure `index` is less than the number of buckets.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:1707:2871":{"id":"b:1:2248-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:221:2165":{"id":"0:221:2165","crate_id":0,"name":"bucket","span":{"filename":"src/raw/mod.rs","begin":[1904,4],"end":[1908,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:939":{"id":"0:133:939","crate_id":0,"name":"new","span":{"filename":"src/raw/mod.rs","begin":[810,4],"end":[815,5]},"visibility":"public","docs":"Creates a new empty hash table without allocating any memory.\n\nIn effect this returns a table with exactly 1 bucket. However we can\nleave the data pointer dangling since that bucket is never written to\ndue to our load factor forcing us to always have at least 1 free bucket.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:286":{"id":"0:130:286","crate_id":0,"name":"alloc","span":{"filename":"src/raw/mod.rs","begin":[800,4],"end":[800,12]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"A"}}},"0:884:3521":{"id":"0:884:3521","crate_id":0,"name":"search","span":{"filename":"src/map.rs","begin":[3241,4],"end":[3256,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["is_match",{"generic":"F"}]],"output":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1790:953":{"id":"0:1790:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1716,4],"end":[1722,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:763:2907":{"id":"a:1:2701:228-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[1939,0],"end":[2163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:601:3250","0:602:3266"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:7206-0:671:2510":{"id":"b:1:7206-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:367":{"id":"0:367","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3160,0],"end":[3165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:370:795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1774:2509":{"id":"0:1774:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1687,4],"end":[1687,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}}}}},"0:603":{"id":"0:603","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2165,0],"end":[2180,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:608:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:124:2115":{"id":"a:1:8250:5087-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:831:3469":{"id":"a:1:2741:4891-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2684:220-0:1041:3031":{"id":"a:1:2684:220-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1807:2509":{"id":"0:1807:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1744,4],"end":[1744,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"K"}}}},"0:515":{"id":"0:515","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[1068,0],"end":[1937,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:520:2200","0:521:2205","0:522:2998","0:523:2190","0:524:3015","0:525:3029","0:529:2257","0:531:3049","0:533:3043","0:535:3057","0:537:3062","0:539:2259","0:541:3058","0:543:2266","0:550:2274","0:557:3112","0:564:3115","0:571:3091","0:577:3101","0:583:3116","0:589:2213","0:590:3163","0:591:3179","0:592:2179","0:594:2181"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2686,0],"end":[2691,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:268:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:741:1659":{"id":"0:741:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2578,4],"end":[2578,25]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}}}},"0:857:2740":{"id":"0:857:2740","crate_id":0,"name":"hash_builder","span":{"filename":"src/map.rs","begin":[3110,4],"end":[3110,23]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"S"}}}}},"a:1:2741:4891-0:1727:4458":{"id":"a:1:2741:4891-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:644:2871":{"id":"0:644:2871","crate_id":0,"name":"Iter","span":{"filename":"src/map.rs","begin":[2308,0],"end":[2311,1]},"visibility":"public","docs":"An iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(&'a K, &'a V)`.\n\nThis `struct` is created by the [`iter`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`iter`]: struct.HashMap.html#method.iter\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut iter = map.iter();\nlet mut vec = vec![iter.next(), iter.next(), iter.next()];\n\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((&1, &\"a\")), Some((&2, &\"b\")), Some((&3, &\"c\"))]);\n\n// It is fused iterator\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:648:1659","0:649:860"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:644:2871","a:1:8249:5088-0:644:2871","a:1:8250:5087-0:644:2871","a:1:2684:220-0:644:2871","a:1:2741:4891-0:644:2871","b:1:2542-0:644:2871","b:1:2248-0:644:2871","b:1:2553-0:644:2871","b:1:2251-0:644:2871","b:1:7206-0:644:2871","b:1:2538-0:644:2871","b:1:3319-0:644:2871","b:1:2548-0:644:2871","b:4:684-0:644:2871","0:1182","0:654","0:1193","0:650","0:1189"]}}},"b:1:2538-0:1938:3019":{"id":"b:1:2538-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:454:425":{"id":"0:454:425","crate_id":0,"name":"clone_from","span":{"filename":"src/map.rs","begin":[201,4],"end":[206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:762:668":{"id":"0:762:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2640,4],"end":[2642,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:1488:1827":{"id":"a:1:8249:5088-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1809:2528":{"id":"0:1809:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1755,4],"end":[1757,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1873":{"id":"0:1873","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1892,0],"end":[1901,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1877:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:397:2572":{"id":"b:1:2548-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:94:1915":{"id":"0:94:1915","crate_id":0,"name":"calculate_layout_for","span":{"filename":"src/raw/mod.rs","begin":[245,4],"end":[264,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["buckets",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"Layout","id":"1:44347:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:609":{"id":"0:284:609","crate_id":0,"name":"end","span":{"filename":"src/raw/mod.rs","begin":[2746,4],"end":[2746,18]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}}}},"a:1:2741:4891-0:397:2572":{"id":"a:1:2741:4891-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2553-0:2074:1852":{"id":"b:1:2553-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:305:2293":{"id":"b:1:2548-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:330:2319":{"id":"0:330:2319","crate_id":0,"name":"allocation","span":{"filename":"src/raw/mod.rs","begin":[3072,4],"end":[3072,45]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},{"resolved_path":{"name":"Layout","id":"1:44347:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}}}},"0:858:3267":{"id":"0:858:3267","crate_id":0,"name":"RawEntryBuilder","span":{"filename":"src/map.rs","begin":[3147,0],"end":[3149,1]},"visibility":"public","docs":"A builder for computing where in a [`HashMap`] a key-value pair would be stored.\n\nSee the [`HashMap::raw_entry`] docs for usage examples.\n\n[`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryBuilder};\nuse core::hash::{BuildHasher, Hash};\n\nlet mut map = HashMap::new();\nmap.extend([(1, 10), (2, 20), (3, 30)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nfor k in 0..6 {\n    let hash = compute_hash(map.hasher(), &k);\n    let v = map.get(&k).cloned();\n    let kv = v.as_ref().map(|v| (&k, v));\n\n    println!(\"Key: {} and value: {:?}\", k, v);\n    let builder: RawEntryBuilder<_, _, _> = map.raw_entry();\n    assert_eq!(builder.from_key(&k), kv);\n    assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);\n    assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);\n}\n```","links":{"`HashMap`":"0:441:142"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:864:859"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:888","a:1:2701:228-0:858:3267","a:1:8249:5088-0:858:3267","a:1:8250:5087-0:858:3267","a:1:2684:220-0:858:3267","a:1:2741:4891-0:858:3267","b:1:2542-0:858:3267","b:1:2248-0:858:3267","b:1:2553-0:858:3267","b:1:2251-0:858:3267","b:1:2538-0:858:3267","b:1:3319-0:858:3267","b:1:2548-0:858:3267","0:976"]}}},"0:7:1823":{"id":"0:7:1823","crate_id":0,"name":"default_fn","span":{"filename":"src/macros.rs","begin":[66,0],"end":[70,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"nightly\"))]"],"deprecation":null,"inner":{"macro":"macro_rules! default_fn {\n    ($($tt:tt)*) => { ... };\n}"}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3289,0],"end":[3306,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:409:2509","0:410:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:469:2744":{"id":"0:469:2744","crate_id":0,"name":"make_hash","span":{"filename":"src/map.rs","begin":[242,0],"end":[251,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"nightly\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hash_builder",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"S"}}}],["val",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:763:2907":{"id":"a:1:8249:5088-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1375":{"id":"0:1375","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[5900,0],"end":[5931,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1383:3854"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1090:729":{"id":"0:1090:729","crate_id":0,"name":"hash","span":{"filename":"src/map.rs","begin":[4495,4],"end":[4495,13]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:1:2251-0:119:2112":{"id":"b:1:2251-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:644:2871":{"id":"b:1:2548-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:1117:3035":{"id":"b:1:2248-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:366:860":{"id":"0:366:860","crate_id":0,"name":"marker","span":{"filename":"src/raw/mod.rs","begin":[3157,4],"end":[3157,43]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"1:2706:1829","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}],"bindings":[]}}}}}},"0:2033:2588":{"id":"0:2033:2588","crate_id":0,"name":"BITMASK_STRIDE","span":{"filename":"src/raw/sse2.rs","begin":[13,0],"end":[13,43]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"usize"},"expr":"1","value":"1usize","is_literal":true}}},"0:763:2907":{"id":"0:763:2907","crate_id":0,"name":"Drain","span":{"filename":"src/map.rs","begin":[2673,0],"end":[2675,1]},"visibility":"public","docs":"A draining iterator over the entries of a `HashMap` in arbitrary\norder. The iterator element type is `(K, V)`.\n\nThis `struct` is created by the [`drain`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`drain`]: struct.HashMap.html#method.drain\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut drain_iter = map.drain();\nlet mut vec = vec![drain_iter.next(), drain_iter.next(), drain_iter.next()];\n\n// The `Drain` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);\n\n// It is fused iterator\nassert_eq!(drain_iter.next(), None);\nassert_eq!(drain_iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:768:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:769","a:1:2701:228-0:763:2907","a:1:8249:5088-0:763:2907","a:1:8250:5087-0:763:2907","a:1:2684:220-0:763:2907","a:1:2741:4891-0:763:2907","b:1:2542-0:763:2907","b:1:2248-0:763:2907","b:1:2553-0:763:2907","b:1:2251-0:763:2907","b:1:7206-0:763:2907","b:1:2538-0:763:2907","b:1:3319-0:763:2907","b:1:2548-0:763:2907","0:1282","0:1299","0:1290","0:1295"]}}},"b:1:2553-0:819:3464":{"id":"b:1:2553-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1312:3549":{"id":"0:1312:3549","crate_id":0,"name":"or_insert_with","span":{"filename":"src/map.rs","begin":[5008,4],"end":[5017,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_insert_with(|| 3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry(\"poneyland\").or_insert_with(|| 10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:850:3473":{"id":"b:1:3319-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:657:668":{"id":"0:657:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2325,4],"end":[2327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1711:2510":{"id":"a:1:8250:5087-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2080":{"id":"0:2080","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[70,15],"end":[70,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2081:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:1938:3019":{"id":"a:1:8250:5087-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12128:21098":{"id":"1:12128:21098","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:11673:127","`FromStr`":"1:11672:5274"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:11672:5274","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:11672:5274","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:858:3267":{"id":"a:1:2741:4891-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12105:21091":{"id":"1:12105:21091","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:2295":{"id":"0:279:2295","crate_id":0,"name":"RawIterRange","span":{"filename":"src/raw/mod.rs","begin":[2733,0],"end":[2747,1]},"visibility":"crate","docs":"Iterator over a sub-range of a table. Unlike `RawIter` this iterator does\nnot track an item count.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:281:2513","0:282:2294","0:283:2514","0:284:609"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:285","a:1:8249:5088-0:279:2295","a:1:8250:5087-0:279:2295","a:1:2741:4891-0:279:2295","b:1:2542-0:279:2295","b:1:2248-0:279:2295","b:1:2553-0:279:2295","b:1:2251-0:279:2295","b:1:7206-0:279:2295","b:1:2538-0:279:2295","b:1:3319-0:279:2295","b:1:2548-0:279:2295","b:4:684-0:279:2295","0:294","0:297","0:303","0:290","0:292"]}}},"b:1:7206-0:1747:4467":{"id":"b:1:7206-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:1:2548-0:982:3016":{"id":"b:1:2548-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:145:2150":{"id":"0:145:2150","crate_id":0,"name":"free_buckets","span":{"filename":"src/raw/mod.rs","begin":[914,4],"end":[916,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Deallocates the table without dropping any entries.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3142,0],"end":[3142,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2684:220-0:1135:3180":{"id":"a:1:2684:220-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1288:953":{"id":"0:1288:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[4904,4],"end":[4906,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:1720:2940":{"id":"a:1:2741:4891-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:7208:2509":{"id":"1:7208:2509","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:263:2499":{"id":"0:263:2499","crate_id":0,"name":"clone_from_impl","span":{"filename":"src/raw/mod.rs","begin":[2605,4],"end":[2639,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Common code for clone and clone_from. Assumes:\n- `self.buckets() == source.buckets()`.\n- Any existing elements have been dropped.\n- The control bytes are not initialized yet.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12023:2257":{"id":"1:12023:2257","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:953":{"id":"0:385:953","crate_id":0,"name":"next","span":{"filename":"src/raw/mod.rs","begin":[3203,4],"end":[3208,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:750:2853":{"id":"a:1:2741:4891-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1009:2114":{"id":"0:1009:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[4258,4],"end":[4258,38]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"0:594:2181":{"id":"0:594:2181","crate_id":0,"name":"remove_entry","span":{"filename":"src/map.rs","begin":[1930,4],"end":[1936,5]},"visibility":"public","docs":"Removes a key from the map, returning the stored key and value if the\nkey was previously in the map. Keeps the allocated memory for reuse.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.insert(1, \"a\");\n\nassert_eq!(map.remove_entry(&1), Some((1, \"a\")));\nassert_eq!(map.remove(&1), None);\n\n// Now map hold none elements\nassert!(map.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:1747:4467":{"id":"b:1:2248-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1932:1606":{"id":"0:1932:1606","crate_id":0,"name":"0","span":{"filename":"src/set.rs","begin":[2063,11],"end":[2063,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:302:2528":{"id":"0:302:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/raw/mod.rs","begin":[2870,4],"end":[2880,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12137:13514":{"id":"1:12137:13514","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:4536:13514"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:43665:11690","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:2062:2602":{"id":"b:1:2542-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1598:4448":{"id":"0:1598:4448","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/set.rs","begin":[771,4],"end":[775,5]},"visibility":"public","docs":"Visits the values representing the symmetric difference,\ni.e., the values that are in `self` or in `other` but not in both.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n\n// Print 1, 4 in arbitrary order.\nfor x in a.symmetric_difference(&b) {\n    println!(\"{}\", x);\n}\n\nlet diff1: HashSet<_> = a.symmetric_difference(&b).collect();\nlet diff2: HashSet<_> = b.symmetric_difference(&a).collect();\n\nassert_eq!(diff1, diff2);\nassert_eq!(diff1, [1, 4].iter().collect());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:268:60":{"id":"0:268:60","crate_id":0,"name":"default","span":{"filename":"src/raw/mod.rs","begin":[2688,4],"end":[2690,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:627:60":{"id":"0:627:60","crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[2223,4],"end":[2225,5]},"visibility":"default","docs":"Creates an empty `HashMap<K, V, S, A>`, with the `Default` value for the hasher and allocator.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse std::collections::hash_map::RandomState;\n\n// You can specify all types of HashMap, including hasher and allocator.\n// Created map is empty and don't allocate memory\nlet map: HashMap<u32, String> = Default::default();\nassert_eq!(map.capacity(), 0);\nlet map: HashMap<u32, String, RandomState> = HashMap::default();\nassert_eq!(map.capacity(), 0);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2551:128":{"id":"1:2551:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"1:12034:19879":{"id":"1:12034:19879","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:12033:19878"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1438:4038":{"id":"0:1438:4038","crate_id":0,"name":"extend","span":{"filename":"src/map.rs","begin":[6530,4],"end":[6532,5]},"visibility":"default","docs":"Inserts all new key-values from the iterator to existing `HashMap<K, V, S, A>`.\nReplace values with existing keys with new values returned from the iterator.\nThe keys and values must implement [`Copy`] trait.\n\n[`Copy`]: https://doc.rust-lang.org/core/marker/trait.Copy.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, 100);\n\nlet arr = [(1, 1), (2, 2)];\nlet some_iter = arr.iter().map(|(k, v)| (k, v));\nmap.extend(some_iter);\n// Replace values with existing keys with new values returned from the iterator.\n// So that the map.get(&1) doesn't return Some(&100).\nassert_eq!(map.get(&1), Some(&1));\n\nlet some_vec: Vec<_> = vec![(3, 3), (4, 4)];\nmap.extend(some_vec.iter().map(|(k, v)| (k, v)));\n\nlet some_arr = [(5, 5), (6, 6)];\nmap.extend(some_arr.iter().map(|(k, v)| (k, v)));\n\n// You can also extend from another HashMap\nlet mut new_map = HashMap::new();\nnew_map.extend(&map);\nassert_eq!(new_map, map);\n\nlet mut vec: Vec<_> = new_map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:1711:2510":{"id":"a:1:2701:228-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1235":{"id":"0:1235","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4820,0],"end":[4835,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1239:2509","0:1240:953","0:1241:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:2062:2602":{"id":"b:1:2538-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1678:4038":{"id":"0:1678:4038","crate_id":0,"name":"extend","span":{"filename":"src/set.rs","begin":[1376,4],"end":[1378,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:807:2860":{"id":"b:1:2553-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:97:1927":{"id":"a:1:2741:4891-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:281:2513":{"id":"0:281:2513","crate_id":0,"name":"current_group","span":{"filename":"src/raw/mod.rs","begin":[2736,4],"end":[2736,30]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:441:142":{"id":"0:441:142","crate_id":0,"name":"HashMap","span":{"filename":"src/map.rs","begin":[188,0],"end":[191,1]},"visibility":"public","docs":"A hash map implemented with quadratic probing and SIMD lookup.\n\nThe default hashing algorithm is currently [`AHash`], though this is\nsubject to change at any point in the future. This hash function is very\nfast for all types of keys, but this algorithm will typically *not* protect\nagainst attacks such as HashDoS.\n\nThe hashing algorithm can be replaced on a per-`HashMap` basis using the\n[`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many\nalternative algorithms are available on crates.io, such as the [`fnv`] crate.\n\nIt is required that the keys implement the [`Eq`] and [`Hash`] traits, although\nthis can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.\nIf you implement these yourself, it is important that the following\nproperty holds:\n\n```text\nk1 == k2 -> hash(k1) == hash(k2)\n```\n\nIn other words, if two keys are equal, their hashes must be equal.\n\nIt is a logic error for a key to be modified in such a way that the key's\nhash, as determined by the [`Hash`] trait, or its equality, as determined by\nthe [`Eq`] trait, changes while it is in the map. This is normally only\npossible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.\n\nIt is also a logic error for the [`Hash`] implementation of a key to panic.\nThis is generally only possible if the trait is implemented manually. If a\npanic does occur then the contents of the `HashMap` may become corrupted and\nsome items may be dropped from the table.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\n// Type inference lets us omit an explicit type signature (which\n// would be `HashMap<String, String>` in this example).\nlet mut book_reviews = HashMap::new();\n\n// Review some books.\nbook_reviews.insert(\n    \"Adventures of Huckleberry Finn\".to_string(),\n    \"My favorite book.\".to_string(),\n);\nbook_reviews.insert(\n    \"Grimms' Fairy Tales\".to_string(),\n    \"Masterpiece.\".to_string(),\n);\nbook_reviews.insert(\n    \"Pride and Prejudice\".to_string(),\n    \"Very enjoyable.\".to_string(),\n);\nbook_reviews.insert(\n    \"The Adventures of Sherlock Holmes\".to_string(),\n    \"Eye lyked it alot.\".to_string(),\n);\n\n// Check for a specific one.\n// When collections store owned values (String), they can still be\n// queried using references (&str).\nif !book_reviews.contains_key(\"Les Misérables\") {\n    println!(\"We've got {} reviews, but Les Misérables ain't one.\",\n             book_reviews.len());\n}\n\n// oops, this review has a lot of spelling mistakes, let's delete it.\nbook_reviews.remove(\"The Adventures of Sherlock Holmes\");\n\n// Look up the values associated with some keys.\nlet to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];\nfor &book in &to_find {\n    match book_reviews.get(book) {\n        Some(review) => println!(\"{}: {}\", book, review),\n        None => println!(\"{} is unreviewed.\", book)\n    }\n}\n\n// Look up the value for a key (will panic if the key is not found).\nprintln!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);\n\n// Iterate over everything.\nfor (book, review) in &book_reviews {\n    println!(\"{}: \\\"{}\\\"\", book, review);\n}\n```\n\n`HashMap` also implements an [`Entry API`](#method.entry), which allows\nfor more complex methods of getting, setting, updating and removing keys and\ntheir values:\n\n```\nuse hashbrown::HashMap;\n\n// type inference lets us omit an explicit type signature (which\n// would be `HashMap<&str, u8>` in this example).\nlet mut player_stats = HashMap::new();\n\nfn random_stat_buff() -> u8 {\n    // could actually return some random value here - let's just return\n    // some fixed value for now\n    42\n}\n\n// insert a key only if it doesn't already exist\nplayer_stats.entry(\"health\").or_insert(100);\n\n// insert a key using a function that provides a new value only if it\n// doesn't already exist\nplayer_stats.entry(\"defence\").or_insert_with(random_stat_buff);\n\n// update a key, guarding against the key possibly not being set\nlet stat = player_stats.entry(\"attack\").or_insert(100);\n*stat += random_stat_buff();\n```\n\nThe easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].\nWe must also derive [`PartialEq`].\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n[`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\n[`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html\n[`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html\n[`default`]: #method.default\n[`with_hasher`]: #method.with_hasher\n[`with_capacity_and_hasher`]: #method.with_capacity_and_hasher\n[`fnv`]: https://crates.io/crates/fnv\n[`AHash`]: https://crates.io/crates/ahash\n\n```\nuse hashbrown::HashMap;\n\n#[derive(Hash, Eq, PartialEq, Debug)]\nstruct Viking {\n    name: String,\n    country: String,\n}\n\nimpl Viking {\n    /// Creates a new Viking.\n    fn new(name: &str, country: &str) -> Viking {\n        Viking { name: name.to_string(), country: country.to_string() }\n    }\n}\n\n// Use a HashMap to store the vikings' health points.\nlet mut vikings = HashMap::new();\n\nvikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);\nvikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);\nvikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);\n\n// Use derived implementation to print the status of the vikings.\nfor (viking, health) in &vikings {\n    println!(\"{:?} has {} hp\", viking, health);\n}\n```\n\nA `HashMap` with fixed list of elements can be initialized from an array:\n\n```\nuse hashbrown::HashMap;\n\nlet timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]\n    .iter().cloned().collect();\n// use the values stored in map\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:446:2740","0:447:2114"],"fields_stripped":false}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:473","0:478","0:484","0:490","0:515","0:596","a:1:2701:228-0:441:142","a:1:8249:5088-0:441:142","a:1:8250:5087-0:441:142","a:1:2684:220-0:441:142","a:1:2741:4891-0:441:142","b:0:2021-0:441:142","b:1:2542-0:441:142","b:1:2248-0:441:142","b:1:2553-0:441:142","b:1:2251-0:441:142","b:1:2538-0:441:142","b:1:3319-0:441:142","b:1:2548-0:441:142","b:4:684-0:441:142","0:622","0:1165","0:616","0:1432","0:611","0:628","0:1156","0:448","0:1424","0:1441","0:1416","0:603","0:1648","0:1174","0:636"]}}},"b:1:2542-0:681:2954":{"id":"b:1:2542-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:774:2940":{"id":"b:1:2538-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:991:3020":{"id":"0:991:3020","crate_id":0,"name":"Vacant","span":{"filename":"src/map.rs","begin":[4202,4],"end":[4202,39]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\nlet mut map: HashMap<&str, i32> = HashMap::new();\n\nmatch map.entry(\"a\") {\n    Entry::Occupied(_) => unreachable!(),\n    Entry::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:993:1606"]},"discriminant":null}}},"0:1968":{"id":"0:1968","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2236,0],"end":[2321,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1972:2257","0:1973:2179","0:1974:2314"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:4:684-0:305:2293":{"id":"b:4:684-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:831:3469":{"id":"b:1:2542-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1608:4482":{"id":"0:1608:4482","crate_id":0,"name":"get_or_insert","span":{"filename":"src/set.rs","begin":[911,4],"end":[919,5]},"visibility":"public","docs":"Inserts the given `value` into the set if it is not present, then\nreturns a reference to the value in the set.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nassert_eq!(set.len(), 3);\nassert_eq!(set.get_or_insert(2), &2);\nassert_eq!(set.get_or_insert(100), &100);\nassert_eq!(set.len(), 4); // 100 was inserted\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1141:3015":{"id":"0:1141:3015","crate_id":0,"name":"entry","span":{"filename":"src/map.rs","begin":[4601,4],"end":[4601,44]},"visibility":"public","docs":"The entry in the map that was already occupied.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:503:795":{"id":"0:503:795","crate_id":0,"name":"iter","span":{"filename":"src/map.rs","begin":[754,4],"end":[762,5]},"visibility":"public","docs":"An iterator visiting all key-value pairs in arbitrary order.\nThe iterator element type is `(&'a K, &'a V)`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<(&str, i32)> = Vec::new();\n\nfor (key, val) in map.iter() {\n    println!(\"key: {} val: {}\", key, val);\n    vec.push((*key, *val));\n}\n\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3)]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:1839":{"id":"0:36:1839","crate_id":0,"name":"do_alloc","span":{"filename":"src/raw/alloc.rs","begin":[35,4],"end":[40,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(clippy :: map_err_ignore)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"A"}}}],["layout",{"resolved_path":{"name":"Layout","id":"1:44347:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3128,0],"end":[3140,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:350:2509","0:351:953","0:352:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2228,0],"end":[2257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2981:2626","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:634:186","0:635:769"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1653":{"id":"0:1653","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1310,0],"end":[1322,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7198:134","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1657:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:193:1916":{"id":"0:193:1916","crate_id":0,"name":"buckets","span":{"filename":"src/raw/mod.rs","begin":[1406,4],"end":[1408,5]},"visibility":"public","docs":"Returns the number of buckets in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1689:186":{"id":"0:1689:186","crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1413,4],"end":[1413,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"b:1:2553-0:1949:3021":{"id":"b:1:2553-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:2089:1695":{"id":"b:4:684-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2094":{"id":"0:2094","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[154,9],"end":[154,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2095:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1383:3854":{"id":"0:1383:3854","crate_id":0,"name":"or_default","span":{"filename":"src/map.rs","begin":[5921,4],"end":[5930,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default value if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, Option<u32>> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_default();\nassert_eq!(map[\"poneyland\"], None);\n\nmap.insert(\"horseland\".to_string(), Some(3));\n\n// existing key\nassert_eq!(map.entry_ref(\"horseland\").or_default(), &mut Some(3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:850:3473":{"id":"a:1:2684:220-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1398:2179":{"id":"0:1398:2179","crate_id":0,"name":"remove","span":{"filename":"src/map.rs","begin":[6111,4],"end":[6113,5]},"visibility":"public","docs":"Takes the value out of the entry, and returns it.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.entry_ref(\"poneyland\").or_insert(12);\n\nif let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {\n    assert_eq!(o.remove(), 12);\n}\n\nassert_eq!(map.contains_key(\"poneyland\"), false);\n// Now map hold none elements but capacity is equal to the old one\nassert!(map.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1627:4090":{"id":"0:1627:4090","crate_id":0,"name":"take","span":{"filename":"src/set.rs","begin":[1214,4],"end":[1223,5]},"visibility":"public","docs":"Removes and returns the value in the set, if any, that is equal to the given one.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nassert_eq!(set.take(&2), Some(2));\nassert_eq!(set.take(&2), None);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:2255":{"id":"0:219:2255","crate_id":0,"name":"find_inner","span":{"filename":"src/raw/mod.rs","begin":[1797,4],"end":[1832,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Searches for an element in a table, returning the `index` of the found element.\nThis uses dynamic dispatch to reduce the amount of code generated, but it is\neliminated by LLVM optimizations.\n\nThis function does not make any changes to the `data` part of the table, or any\nchanges to the `items` or `growth_left` field of the table.\n\nThe table must have at least 1 empty `bucket`, otherwise, if the\n`eq: &mut dyn FnMut(usize) -> bool` function does not return `true`,\nthis function will also never return (will go into an infinite loop).","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"}],"output":{"primitive":"bool"}}}},"generic_params":[]}],"lifetime":null}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:393:2304":{"id":"b:1:2542-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:763:2907":{"id":"a:1:2741:4891-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8250:5087-0:279:2295":{"id":"a:1:8250:5087-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1299":{"id":"0:1299","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4920,0],"end":[4929,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1303:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:800:2114":{"id":"0:800:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[2751,4],"end":[2751,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"b:1:2542-0:982:3016":{"id":"b:1:2542-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:737:2843":{"id":"b:1:2542-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:794:2941":{"id":"b:1:2548-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1889:953":{"id":"0:1889:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1921,4],"end":[1923,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:119:2112":{"id":"b:1:2538-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1049:3018":{"id":"0:1049:3018","crate_id":0,"name":"Occupied","span":{"filename":"src/map.rs","begin":[4398,4],"end":[4398,53]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\nlet mut map: HashMap<_, _> = [(\"a\".to_owned(), 100), (\"b\".into(), 200)].into();\n\nmatch map.entry_ref(\"a\") {\n    EntryRef::Vacant(_) => unreachable!(),\n    EntryRef::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1051:1606"]},"discriminant":null}}},"b:1:7206-0:737:2843":{"id":"b:1:7206-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1207":{"id":"0:1207","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4782,0],"end":[4782,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:737:2843":{"id":"a:1:8250:5087-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:25:286":{"id":"0:25:286","crate_id":0,"name":"alloc","span":{"filename":"src/raw/alloc.rs","begin":[1,0],"end":[86,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:30:1659"],"is_stripped":false}}},"0:1218:2509":{"id":"0:1218:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4795,4],"end":[4795,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"0:1625:2179":{"id":"0:1625:2179","crate_id":0,"name":"remove","span":{"filename":"src/set.rs","begin":[1188,4],"end":[1193,5]},"visibility":"public","docs":"Removes a value from the set. Returns whether the value was\npresent in the set.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::new();\n\nset.insert(2);\nassert_eq!(set.remove(&2), true);\nassert_eq!(set.remove(&2), false);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1949:3021":{"id":"0:1949:3021","crate_id":0,"name":"VacantEntry","span":{"filename":"src/set.rs","begin":[2149,0],"end":[2151,1]},"visibility":"public","docs":"A view into a vacant entry in a `HashSet`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet, VacantEntry};\n\nlet mut set = HashSet::<&str>::new();\n\nlet entry_v: VacantEntry<_, _> = match set.entry(\"a\") {\n    Entry::Vacant(view) => view,\n    Entry::Occupied(_) => unreachable!(),\n};\nentry_v.insert();\nassert!(set.contains(\"a\") && set.len() == 1);\n\n// Nonexistent key (insert)\nmatch set.entry(\"b\") {\n    Entry::Vacant(view) => view.insert(),\n    Entry::Occupied(_) => unreachable!(),\n}\nassert!(set.contains(\"b\") && set.len() == 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1954:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:1975","a:1:2701:228-0:1949:3021","a:1:8249:5088-0:1949:3021","a:1:8250:5087-0:1949:3021","a:1:2684:220-0:1949:3021","a:1:2741:4891-0:1949:3021","b:1:2542-0:1949:3021","b:1:2248-0:1949:3021","b:1:2553-0:1949:3021","b:1:2251-0:1949:3021","b:1:2538-0:1949:3021","b:1:3319-0:1949:3021","b:1:2548-0:1949:3021","0:1955"]}}},"0:447:2114":{"id":"0:447:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[190,4],"end":[190,41]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"b:1:2248-0:95:1922":{"id":"b:1:2248-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:279:2295":{"id":"b:4:684-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1761":{"id":"0:1761","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1646,0],"end":[1676,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1765:2509","0:1766:2510","0:1767:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:1741:4449":{"id":"a:1:2701:228-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2542-0:84:1891":{"id":"b:1:2542-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2060":{"id":"0:2060","crate_id":0,"name":null,"span":{"filename":"src/raw/sse2.rs","begin":[21,15],"end":[21,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2061:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:1949:3021":{"id":"b:1:2538-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:2089:1695":{"id":"a:1:8250:5087-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:1000:3019":{"id":"a:1:8249:5088-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"BuildHasherDefault","id":"1:9410:2629","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"AHasher","id":"6:790:2630","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:1135:3180":{"id":"a:1:8249:5088-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:513:2953":{"id":"0:513:2953","crate_id":0,"name":"into_keys","span":{"filename":"src/map.rs","begin":[1033,4],"end":[1037,5]},"visibility":"public","docs":"Creates a consuming iterator visiting all the keys in arbitrary order.\nThe map cannot be used after calling this.\nThe iterator element type is `K`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\nlet mut vec: Vec<&str> = map.into_keys().collect();\n\n// The `IntoKeys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [\"a\", \"b\", \"c\"]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:448":{"id":"0:448","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[193,0],"end":[207,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:453:423","0:454:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:805:953":{"id":"0:805:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[2756,4],"end":[2769,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"F"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1020":{"id":"0:1020","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4278,0],"end":[4285,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1025:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:208:2124":{"id":"0:208:2124","crate_id":0,"name":"new_in","span":{"filename":"src/raw/mod.rs","begin":[1538,4],"end":[1547,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Creates a new empty hash table without allocating any memory.\n\nIn effect this returns a table with exactly 1 bucket. However we can\nleave the data pointer dangling since that bucket is never accessed\ndue to our load factor forcing us to always have at least 1 free bucket.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:1041:3031":{"id":"b:1:3319-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2036":{"id":"0:2036","crate_id":0,"name":null,"span":{"filename":"src/raw/sse2.rs","begin":[26,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(clippy :: use_self)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2037:1897","0:2038:2326","0:2047:832","0:2048:2342","0:2049:2409","0:2050:2359","0:2051:2361","0:2052:2343","0:2053:2517","0:2054:2408"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5390:21763":{"id":"4:5390:21763","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1540:144":{"id":"a:1:8250:5087-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3090,0],"end":[3095,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1930:3020":{"id":"0:1930:3020","crate_id":0,"name":"Vacant","span":{"filename":"src/set.rs","begin":[2063,4],"end":[2063,36]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\nlet mut set: HashSet<&str> = HashSet::new();\n\nmatch set.entry(\"a\") {\n    Entry::Occupied(_) => unreachable!(),\n    Entry::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1932:1606"]},"discriminant":null}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2573,0],"end":[2580,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawTableClone","id":"0:255:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:2088:2494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1890:2528":{"id":"0:1890:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1925,4],"end":[1927,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:1707:2871":{"id":"b:1:2542-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2090:1698":{"id":"0:2090:1698","crate_id":0,"name":"CapacityOverflow","span":{"filename":"src/lib.rs","begin":[158,4],"end":[158,20]},"visibility":"default","docs":"Error due to the computed capacity exceeding the collection's maximum\n(usually `isize::MAX` bytes).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1259:811":{"id":"0:1259:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[4862,4],"end":[4864,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2038:2326":{"id":"0:2038:2326","crate_id":0,"name":"static_empty","span":{"filename":"src/raw/sse2.rs","begin":[36,4],"end":[47,5]},"visibility":"crate","docs":"Returns a full group of empty bytes, suitable for use as the initial\nvalue for an empty hash table.\n\nThis is guaranteed to be aligned to the group size.","links":{},"attrs":["#[inline]","#[allow(clippy :: items_after_statements)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"16"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7206-0:397:2572":{"id":"b:1:7206-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:1:2251-0:359:2308":{"id":"b:1:2251-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:577:3101":{"id":"0:577:3101","crate_id":0,"name":"get_many_unchecked_mut_inner","span":{"filename":"src/map.rs","begin":[1697,4],"end":[1707,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1026:3021":{"id":"a:1:2684:220-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1972:2257":{"id":"0:1972:2257","crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[2253,4],"end":[2255,5]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\n\nlet mut set: HashSet<&str> = HashSet::new();\nset.entry(\"poneyland\").or_insert();\n\nmatch set.entry(\"poneyland\") {\n    Entry::Vacant(_) => panic!(),\n    Entry::Occupied(entry) => assert_eq!(entry.get(), &\"poneyland\"),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:1893":{"id":"0:86:1893","crate_id":0,"name":"stride","span":{"filename":"src/raw/mod.rs","begin":[159,4],"end":[159,17]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:1:8250:5087-0:982:3016":{"id":"a:1:8250:5087-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1081:315":{"id":"0:1081:315","crate_id":0,"name":"as_ref","span":{"filename":"src/map.rs","begin":[4445,4],"end":[4450,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:1082:3032":{"id":"a:1:8249:5088-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"1:12046:19894":{"id":"1:12046:19894","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12066:19888":{"id":"1:12066:19888","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:11712:13646","`DoubleEndedIterator`":"1:7240:121","prim@char":"1:51699:419","str::split":"1:12060:2521"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:43375:11440","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:681:2954":{"id":"b:1:3319-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12103:21090":{"id":"1:12103:21090","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:948:3682":{"id":"0:948:3682","crate_id":0,"name":"insert_with_hasher","span":{"filename":"src/map.rs","begin":[4055,4],"end":[4069,5]},"visibility":"public","docs":"Set the value of an entry with a custom hasher function.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn make_hasher<K, S>(hash_builder: &S) -> impl Fn(&K) -> u64 + '_\nwhere\n    K: Hash + ?Sized,\n    S: BuildHasher,\n{\n    move |key: &K| {\n        use core::hash::Hasher;\n        let mut state = hash_builder.build_hasher();\n        key.hash(&mut state);\n        state.finish()\n    }\n}\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet hash_builder = map.hasher().clone();\nlet hash = make_hasher(&hash_builder)(&key);\n\nmatch map.raw_entry_mut().from_hash(hash, |q| q == &key) {\n    RawEntryMut::Occupied(_) => panic!(),\n    RawEntryMut::Vacant(v) => assert_eq!(\n        v.insert_with_hasher(hash, key, 100, make_hasher(&hash_builder)),\n        (&mut \"a\", &mut 100)\n    ),\n}\nmap.extend([(\"b\", 200), (\"c\", 300), (\"d\", 400), (\"e\", 500), (\"f\", 600)]);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["key",{"generic":"K"}],["value",{"generic":"V"}],["hasher",{"generic":"H"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:819:3464":{"id":"b:1:2548-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:858:3267":{"id":"b:1:2542-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1980:2257":{"id":"0:1980:2257","crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[2336,4],"end":[2338,5]},"visibility":"public","docs":"Gets a reference to the value that would be used when inserting\nthrough the `VacantEntry`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\nassert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:2089:1695":{"id":"a:1:2684:220-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2843,0],"end":[2843,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:644:2871":{"id":"b:1:3319-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:737:2843":{"id":"0:737:2843","crate_id":0,"name":"Keys","span":{"filename":"src/map.rs","begin":[2577,0],"end":[2579,1]},"visibility":"public","docs":"An iterator over the keys of a `HashMap` in arbitrary order.\nThe iterator element type is `&'a K`.\n\nThis `struct` is created by the [`keys`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`keys`]: struct.HashMap.html#method.keys\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut keys = map.keys();\nlet mut vec = vec![keys.next(), keys.next(), keys.next()];\n\n// The `Keys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(&1), Some(&2), Some(&3)]);\n\n// It is fused iterator\nassert_eq!(keys.next(), None);\nassert_eq!(keys.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:741:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:737:2843","a:1:8249:5088-0:737:2843","a:1:8250:5087-0:737:2843","a:1:2684:220-0:737:2843","a:1:2741:4891-0:737:2843","b:1:2542-0:737:2843","b:1:2248-0:737:2843","b:1:2553-0:737:2843","b:1:2251-0:737:2843","b:1:7206-0:737:2843","b:1:2538-0:737:2843","b:1:3319-0:737:2843","b:1:2548-0:737:2843","b:4:684-0:737:2843","0:1246","0:1235","0:742","0:1242","0:746"]}}},"b:1:7206-0:1715:2907":{"id":"b:1:7206-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"1:12125:21097":{"id":"1:12125:21097","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12130:19750":{"id":"1:12130:19750","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1612:4495":{"id":"0:1612:4495","crate_id":0,"name":"get_or_insert_with","span":{"filename":"src/set.rs","begin":[972,4],"end":[984,5]},"visibility":"public","docs":"Inserts a value computed from `f` into the set if the given `value` is\nnot present, then returns a reference to the value in the set.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]\n    .iter().map(|&pet| pet.to_owned()).collect();\n\nassert_eq!(set.len(), 3);\nfor &pet in &[\"cat\", \"dog\", \"fish\"] {\n    let value = set.get_or_insert_with(pet, str::to_owned);\n    assert_eq!(value, pet);\n}\nassert_eq!(set.len(), 4); // a new \"fish\" was inserted\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}],["f",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1512:588":{"id":"0:1512:588","crate_id":0,"name":"drop","span":{"filename":"src/scopeguard.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413:953":{"id":"0:413:953","crate_id":0,"name":"next","span":{"filename":"src/raw/mod.rs","begin":[3311,4],"end":[3333,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7318:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1741:4449":{"id":"b:1:2251-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:393:2304":{"id":"a:1:8250:5087-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:1711:2510":{"id":"a:1:2741:4891-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[76,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:1856","0:75:1859"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:307:795":{"id":"0:307:795","crate_id":0,"name":"iter","span":{"filename":"src/raw/mod.rs","begin":[2898,4],"end":[2898,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"0:635:769":{"id":"0:635:769","crate_id":0,"name":"index","span":{"filename":"src/map.rs","begin":[2254,4],"end":[2256,5]},"visibility":"default","docs":"Returns a reference to the value corresponding to the supplied key.\n\n# Panics\n\nPanics if the key is not present in the `HashMap`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(\"a\", \"One\"), (\"b\", \"Two\")].into();\n\nassert_eq!(map[&\"a\"], \"One\");\nassert_eq!(map[&\"b\"], \"Two\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["key",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1219:953":{"id":"0:1219:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[4798,4],"end":[4800,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:819:3464":{"id":"b:1:2251-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:781:1659":{"id":"0:781:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2725,4],"end":[2725,38]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:1072":{"id":"0:1072","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4432,0],"end":[4442,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["0:1076:3749"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1066:3034":{"id":"0:1066:3034","crate_id":0,"name":"Borrowed","span":{"filename":"src/map.rs","begin":[4428,4],"end":[4428,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1068:1606"]},"discriminant":null}}},"b:1:2542-0:1117:3035":{"id":"b:1:2542-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2066":{"id":"0:2066","crate_id":0,"name":null,"span":{"filename":"src/raw/bitmask.rs","begin":[21,15],"end":[21,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2067:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2075:1853":{"id":"0:2075:1853","crate_id":0,"name":"Fallible","span":{"filename":"src/raw/mod.rs","begin":[72,4],"end":[72,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:220:2406":{"id":"0:220:2406","crate_id":0,"name":"prepare_rehash_in_place","span":{"filename":"src/raw/mod.rs","begin":[1866,4],"end":[1901,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Prepares for rehashing data in place (that is, without allocating new memory).\nConverts all full index `control bytes` to `DELETED` and all `DELETED` control\nbytes to `EMPTY`, i.e. performs the following conversion:\n\n- `EMPTY` control bytes   -> `EMPTY`;\n- `DELETED` control bytes -> `EMPTY`;\n- `FULL` control bytes    -> `DELETED`.\n\nThis function does not make any changes to the `data` parts of the table,\nor any changes to the the `items` or `growth_left` field of the table.\n\n# Safety\n\nYou must observe the following safety rules when calling this function:\n\n* The [`RawTableInner`] has already been allocated;\n\n* The caller of this function must convert the `DELETED` bytes back to `FULL`\n  bytes when re-inserting them into their ideal position (which was impossible\n  to do during the first insert due to tombstones). If the caller does not do\n  this, then calling this function may result in a memory leak.\n\nCalling this function on a table that has not been allocated results in\n[`undefined behavior`].\n\nSee also [`Bucket::as_ptr`] method, for more information about of properly removing\nor saving `data element` from / into the [`RawTable`] / [`RawTableInner`].\n\n[`Bucket::as_ptr`]: Bucket::as_ptr\n[`undefined behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{"`RawTableInner`":"0:124:2115","Bucket::as_ptr":"0:110:314","`RawTable`":"0:119:2112"},"attrs":["#[allow(clippy :: mut_mut)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:292":{"id":"0:292","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2844,0],"end":[2844,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:658:2880":{"id":"b:1:2553-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:399:1868":{"id":"0:399:1868","crate_id":0,"name":"ctrl","span":{"filename":"src/raw/mod.rs","begin":[3245,4],"end":[3245,21]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"a:1:8249:5088-0:807:2860":{"id":"a:1:8249:5088-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:1574:2185":{"id":"0:1574:2185","crate_id":0,"name":"clear","span":{"filename":"src/set.rs","begin":[429,4],"end":[431,5]},"visibility":"public","docs":"Clears the set, removing all values.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut v = HashSet::new();\nv.insert(1);\nv.clear();\nassert!(v.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:1540:144":{"id":"b:1:2542-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:199:2320":{"id":"0:199:2320","crate_id":0,"name":"into_allocation","span":{"filename":"src/raw/mod.rs","begin":[1498,4],"end":[1515,5]},"visibility":"crate","docs":"Converts the table into a raw allocation. The contents of the table\nshould be dropped using a `RawIter` before freeing the allocation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},{"resolved_path":{"name":"Layout","id":"1:44347:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1082:3032":{"id":"0:1082:3032","crate_id":0,"name":"OccupiedEntryRef","span":{"filename":"src/map.rs","begin":[4494,0],"end":[4499,1]},"visibility":"public","docs":"A view into an occupied entry in a `HashMap`.\nIt is part of the [`EntryRef`] enum.\n\n[`EntryRef`]: enum.EntryRef.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap, OccupiedEntryRef};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\".to_owned(), 10), (\"b\".into(), 20), (\"c\".into(), 30)]);\n\nlet key = String::from(\"a\");\nlet _entry_o: OccupiedEntryRef<_, _, _, _> = map.entry_ref(&key).insert(100);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert and update)\nmatch map.entry_ref(\"a\") {\n    EntryRef::Vacant(_) => unreachable!(),\n    EntryRef::Occupied(mut view) => {\n        assert_eq!(view.get(), &100);\n        let v = view.get_mut();\n        *v *= 10;\n        assert_eq!(view.insert(1111), 1000);\n    }\n}\n\nassert_eq!(map[\"a\"], 1111);\nassert_eq!(map.len(), 3);\n\n// Existing key (take)\nmatch map.entry_ref(\"c\") {\n    EntryRef::Vacant(_) => unreachable!(),\n    EntryRef::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"c\".to_owned(), 30));\n    }\n}\nassert_eq!(map.get(\"c\"), None);\nassert_eq!(map.len(), 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1090:729","0:1091:1691","0:1092:3017","0:1093:2114"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:1384","a:1:8249:5088-0:1082:3032","a:1:8250:5087-0:1082:3032","a:1:2741:4891-0:1082:3032","b:1:2542-0:1082:3032","b:1:2248-0:1082:3032","b:1:2553-0:1082:3032","b:1:2251-0:1082:3032","b:1:2538-0:1082:3032","b:1:3319-0:1082:3032","b:1:2548-0:1082:3032","0:1102","0:1110","0:1094"]}}},"0:1549:423":{"id":"0:1549:423","crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[120,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:858:3267":{"id":"b:1:3319-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2062:2602":{"id":"0:2062:2602","crate_id":0,"name":"BitMask","span":{"filename":"src/raw/bitmask.rs","begin":[22,0],"end":[22,50]},"visibility":"crate","docs":"A bit mask which contains the result of a `Match` operation on a `Group` and\nallows iterating through them.\n\nThe bit mask is arranged so that low-order bits represent lower memory\naddresses for group match results.\n\nFor implementation reasons, the bits in the set may be sparsely packed with\ngroups of 8 bits representing one element. If any of these bits are non-zero\nthen this element is considered to true in the mask. If this is the\ncase, `BITMASK_STRIDE` will be 8 to indicate a divide-by-8 should be\nperformed on counts/indices to normalize this difference. `BITMASK_MASK` is\nsimilarly a mask of all the actually-used bits.\n\nTo iterate over a bit mask, it must be converted to a form where only 1 bit\nis set per element. This is done by applying `BITMASK_ITER_MASK` on the\nmask bits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:2064:1606"]},"generics":{"params":[],"where_predicates":[]},"impls":["0:49","a:1:2701:228-0:2062:2602","a:1:8249:5088-0:2062:2602","a:1:8250:5087-0:2062:2602","a:1:2684:220-0:2062:2602","a:1:2741:4891-0:2062:2602","b:1:2542-0:2062:2602","b:1:2248-0:2062:2602","b:1:2553-0:2062:2602","b:1:2251-0:2062:2602","b:1:2538-0:2062:2602","b:1:3319-0:2062:2602","b:1:2548-0:2062:2602","b:4:684-0:2062:2602","0:2066","0:2065","0:57"]}}},"a:1:2701:228-0:1727:4458":{"id":"a:1:2701:228-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2548-0:2068:1843":{"id":"b:1:2548-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:2068:1843":{"id":"a:1:2741:4891-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1633":{"id":"0:1633","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1268,0],"end":[1281,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1637:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1289:2528":{"id":"0:1289:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[4908,4],"end":[4910,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12020:21076":{"id":"1:12020:21076","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:671:2510":{"id":"b:1:2248-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2054:2408":{"id":"0:2054:2408","crate_id":0,"name":"convert_special_to_empty_and_full_to_deleted","span":{"filename":"src/raw/sse2.rs","begin":[129,4],"end":[148,5]},"visibility":"crate","docs":"Performs the following transformation on all bytes in the group:\n- `EMPTY => EMPTY`\n- `DELETED => EMPTY`\n- `FULL => DELETED`","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:30:1659":{"id":"0:30:1659","crate_id":0,"name":"inner","span":{"filename":"src/raw/alloc.rs","begin":[29,0],"end":[29,9]},"visibility":{"restricted":{"parent":"0:25:286","path":"::raw::alloc"}},"docs":null,"links":{},"attrs":["#[cfg(all(not(feature = \"nightly\"), feature = \"allocator-api2\"))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33-5:50:1840","0:34-5:1043:1841","0:36:1839"],"is_stripped":false}}},"0:721:2528":{"id":"0:721:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[2527,4],"end":[2529,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1116:668":{"id":"0:1116:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4523,4],"end":[4528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1711:2510":{"id":"0:1711:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/set.rs","begin":[1555,0],"end":[1557,1]},"visibility":"public","docs":"An owning iterator over the items of a `HashSet`.\n\nThis `struct` is created by the [`into_iter`] method on [`HashSet`]\n(provided by the `IntoIterator` trait). See its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`into_iter`]: struct.HashSet.html#method.into_iter","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1714:795"],"fields_stripped":false}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1711:2510","a:1:8249:5088-0:1711:2510","a:1:8250:5087-0:1711:2510","a:1:2684:220-0:1711:2510","a:1:2741:4891-0:1711:2510","b:1:2542-0:1711:2510","b:1:2248-0:1711:2510","b:1:2553-0:1711:2510","b:1:2251-0:1711:2510","b:1:7206-0:1711:2510","b:1:2538-0:1711:2510","b:1:3319-0:1711:2510","b:1:2548-0:1711:2510","0:1796","0:1799","0:1792","0:1786"]}}},"0:1943:1659":{"id":"0:1943:1659","crate_id":0,"name":"inner","span":{"filename":"src/set.rs","begin":[2112,4],"end":[2112,46]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"map::OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"tuple":[]}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:157:2190":{"id":"0:157:2190","crate_id":0,"name":"shrink_to","span":{"filename":"src/raw/mod.rs","begin":[1045,4],"end":[1078,5]},"visibility":"public","docs":"Shrinks the table to fit `max(self.len(), min_size)` elements.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["min_size",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2801":{"id":"0:497:2801","crate_id":0,"name":"with_capacity_and_hasher_in","span":{"filename":"src/map.rs","begin":[578,4],"end":[583,5]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity, using `hash_builder`\nto hash the keys. It will be allocated with the given allocator.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_capacity_and_hasher(10, s);\nmap.insert(1, 2);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}],["hash_builder",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:2074:1852":{"id":"b:1:3319-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2858,0],"end":[2881,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:299:2509","0:300:953","0:302:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:745:423":{"id":"0:745:423","crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[2584,4],"end":[2588,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:1734:4439":{"id":"a:1:8249:5088-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1404":{"id":"0:1404","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[6285,0],"end":[6379,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1412:1691","0:1413:3606","0:1414:2213","0:1415:2225"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1339:2213":{"id":"0:1339:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[5363,4],"end":[5365,5]},"visibility":"public","docs":"Sets the value of the entry, and returns the entry's old value.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nif let Entry::Occupied(mut o) = map.entry(\"poneyland\") {\n    assert_eq!(o.insert(15), 12);\n}\n\nassert_eq!(map[\"poneyland\"], 15);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"V"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:681:2954":{"id":"a:1:2701:228-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2064:1606":{"id":"0:2064:1606","crate_id":0,"name":"0","span":{"filename":"src/raw/bitmask.rs","begin":[22,26],"end":[22,48]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u16"}}},"b:1:2542-0:2082:1913":{"id":"b:1:2542-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:2509":{"id":"0:276:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/mod.rs","begin":[2719,4],"end":[2719,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:393:2304":{"id":"0:393:2304","crate_id":0,"name":"RawIterHash","span":{"filename":"src/raw/mod.rs","begin":[3235,0],"end":[3238,1]},"visibility":"public","docs":"Iterator over occupied buckets that could match a given hash.\n\n`RawTable` only stores 7 bits of the hash value, so this iterator may return\nitems that have a hash value different than the one provided. You should\nalways validate the returned values before using them.\n\nFor maximum flexibility this iterator is not bound by a lifetime, but you\nmust observe several rules when using it:\n- You must not free the hash table while iterating (including via growing/shrinking).\n- It is fine to erase a bucket that has been yielded by the iterator.\n- Erasing a bucket that has not yet been yielded by the iterator may still\n  result in the iterator yielding that bucket.\n- It is unspecified whether an element inserted after the iterator was\n  created will be yielded by that iterator.\n- The order in which the iterator yields buckets is unspecified and may\n  change in the future.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:395:1659","0:396:2573"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:393:2304","a:1:8249:5088-0:393:2304","a:1:8250:5087-0:393:2304","a:1:2684:220-0:393:2304","a:1:2741:4891-0:393:2304","b:1:2542-0:393:2304","b:1:2248-0:393:2304","b:1:2553-0:393:2304","b:1:2251-0:393:2304","b:1:7206-0:393:2304","b:1:2538-0:393:2304","b:1:3319-0:393:2304","b:1:2548-0:393:2304","0:407"]}}},"0:590:3163":{"id":"0:590:3163","crate_id":0,"name":"insert_unique_unchecked","span":{"filename":"src/map.rs","begin":[1814,4],"end":[1821,5]},"visibility":"public","docs":"Insert a key-value pair into the map without checking\nif the key already exists in the map.\n\nReturns a reference to the key and value just inserted.\n\nThis operation is safe if a key does not exist in the map.\n\nHowever, if a key exists in the map already, the behavior is unspecified:\nthis operation may panic, loop forever, or any following operation with the map\nmay panic, loop forever or return arbitrary result.\n\nThat said, this operation (and following operations) are guaranteed to\nnot violate memory safety.\n\nThis operation is faster than regular insert, because it does not perform\nlookup before insertion.\n\nThis operation is useful during initial population of the map.\nFor example, when constructing a map from another map, we know\nthat keys are unique.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map1 = HashMap::new();\nassert_eq!(map1.insert(1, \"a\"), None);\nassert_eq!(map1.insert(2, \"b\"), None);\nassert_eq!(map1.insert(3, \"c\"), None);\nassert_eq!(map1.len(), 3);\n\nlet mut map2 = HashMap::new();\n\nfor (key, value) in map1.into_iter() {\n    map2.insert_unique_unchecked(key, value);\n}\n\nlet (key, value) = map2.insert_unique_unchecked(4, \"d\");\nassert_eq!(key, &4);\nassert_eq!(value, &mut \"d\");\n*value = \"e\";\n\nassert_eq!(map2[&1], \"a\");\nassert_eq!(map2[&2], \"b\");\nassert_eq!(map2[&3], \"c\");\nassert_eq!(map2[&4], \"e\");\nassert_eq!(map2.len(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["k",{"generic":"K"}],["v",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2051:2361":{"id":"0:2051:2361","crate_id":0,"name":"match_empty","span":{"filename":"src/raw/sse2.rs","begin":[97,4],"end":[99,5]},"visibility":"crate","docs":"Returns a `BitMask` indicating all bytes in the group which are\n`EMPTY`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:671:2510":{"id":"a:1:2701:228-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:1026:3021":{"id":"a:1:8249:5088-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"BuildHasherDefault","id":"1:9410:2629","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"AHasher","id":"6:790:2630","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:1117:3035":{"id":"b:1:3319-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1492:2214":{"id":"0:1492:2214","crate_id":0,"name":"value","span":{"filename":"src/scopeguard.rs","begin":[13,4],"end":[13,12]},"visibility":{"restricted":{"parent":"0:1481:1668","path":"::scopeguard"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:1691":{"id":"0:1691","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1440,0],"end":[1471,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"1:2812:4300","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"items":["0:1695:186","0:1696:362"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1707:2871":{"id":"a:1:2741:4891-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:42:1842":{"id":"0:42:1842","crate_id":0,"name":"bitmask","span":{"filename":"src/raw/bitmask.rs","begin":[1,0],"end":[133,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2062:2602","0:2068:1843"],"is_stripped":false}}},"0:184:2269":{"id":"0:184:2269","crate_id":0,"name":"get_many_mut_pointers","span":{"filename":"src/raw/mod.rs","begin":[1365,4],"end":[1381,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hashes",{"array":{"type":{"primitive":"u64"},"len":"N"}}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}},{"name":"impl FnMut(usize, &T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:543:2266":{"id":"0:543:2266","crate_id":0,"name":"get_many_mut","span":{"filename":"src/map.rs","begin":[1512,4],"end":[1517,5]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once.\n\nReturns an array of length `N` with the results of each query. For soundness, at most one\nmutable reference will be returned to any value. `None` will be returned if any of the\nkeys are duplicates or missing.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"Library of Congress\",\n]);\nassert_eq!(\n    got,\n    Some([\n        &mut 1807,\n        &mut 1800,\n    ]),\n);\n\n// Missing keys result in None\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"New York Public Library\",\n]);\nassert_eq!(got, None);\n\n// Duplicate keys result in None\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"Athenæum\",\n]);\nassert_eq!(got, None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:616":{"id":"0:616","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2191,0],"end":[2200,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:621:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:774:2940":{"id":"a:1:2701:228-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[230,0],"end":[265,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:92:939","0:94:1915"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1799":{"id":"0:1799","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1736,0],"end":[1741,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1802:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:414:1665":{"id":"0:414:1665","crate_id":0,"name":"external_trait_impls","span":{"filename":"src/external_trait_impls/mod.rs","begin":[1,0],"end":[6,10]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"a:1:2684:220-0:681:2954":{"id":"a:1:2684:220-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:54:2493":{"id":"0:54:2493","crate_id":0,"name":"trailing_zeros","span":{"filename":"src/raw/bitmask.rs","begin":[59,4],"end":[70,5]},"visibility":"crate","docs":"Returns the number of trailing zeroes in the `BitMask`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:2115":{"id":"0:124:2115","crate_id":0,"name":"RawTableInner","span":{"filename":"src/raw/mod.rs","begin":[785,0],"end":[801,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Non-generic part of `RawTable` which allows functions to be instantiated only once regardless\nof how many different key-value types are used.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:126:1895","0:127:1868","0:128:2118","0:129:2119","0:130:286"],"fields_stripped":false}},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:206","0:209","a:1:2701:228-0:124:2115","a:1:8249:5088-0:124:2115","a:1:8250:5087-0:124:2115","a:1:2684:220-0:124:2115","a:1:2741:4891-0:124:2115","b:1:2542-0:124:2115","b:1:2248-0:124:2115","b:1:2553-0:124:2115","b:1:2251-0:124:2115","b:1:2538-0:124:2115","b:1:3319-0:124:2115","b:1:2548-0:124:2115"]}}},"0:326:2318":{"id":"0:326:2318","crate_id":0,"name":"RawIntoIter","span":{"filename":"src/raw/mod.rs","begin":[3070,0],"end":[3075,1]},"visibility":"public","docs":"Iterator which consumes a table and returns elements.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:329:795","0:330:2319","0:331:860","0:332:286"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:333","a:1:8249:5088-0:326:2318","a:1:8250:5087-0:326:2318","a:1:2741:4891-0:326:2318","b:1:2542-0:326:2318","b:1:2248-0:326:2318","b:1:2553-0:326:2318","b:1:2251-0:326:2318","b:1:7206-0:326:2318","b:1:2538-0:326:2318","b:1:3319-0:326:2318","b:1:2548-0:326:2318","0:356","0:347","0:343","0:353","0:340","0:337"]}}},"b:1:2248-0:763:2907":{"id":"b:1:2248-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1370:1691":{"id":"0:1370:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[5790,4],"end":[5798,5]},"visibility":"public","docs":"Returns a reference to this entry's key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.entry_ref(\"poneyland\").or_insert(3);\n// existing key\nassert_eq!(map.entry_ref(\"poneyland\").key(), \"poneyland\");\n// nonexistent key\nassert_eq!(map.entry_ref(\"horseland\").key(), \"horseland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1092:3017":{"id":"0:1092:3017","crate_id":0,"name":"elem","span":{"filename":"src/map.rs","begin":[4497,4],"end":[4497,24]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}}}}},"0:1504:552":{"id":"0:1504:552","crate_id":0,"name":"deref","span":{"filename":"src/scopeguard.rs","begin":[49,4],"end":[51,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1882:423":{"id":"0:1882:423","crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[1905,4],"end":[1909,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:684-0:1707:2871":{"id":"b:4:684-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:84:1891":{"id":"b:1:2251-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3199,0],"end":[3214,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:384:2509","0:385:953","0:386:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:915:3582":{"id":"0:915:3582","crate_id":0,"name":"and_replace_entry_with","span":{"filename":"src/map.rs","begin":[3535,4],"end":[3543,5]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nan occupied entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::RawEntryMut;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nlet entry = map\n    .raw_entry_mut()\n    .from_key(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| panic!());\n\nmatch entry {\n    RawEntryMut::Vacant(_) => {},\n    RawEntryMut::Occupied(_) => panic!(),\n}\n\nmap.insert(\"poneyland\", 42);\n\nlet entry = map\n    .raw_entry_mut()\n    .from_key(\"poneyland\")\n    .and_replace_entry_with(|k, v| {\n        assert_eq!(k, &\"poneyland\");\n        assert_eq!(v, 42);\n        Some(v + 1)\n    });\n\nmatch entry {\n    RawEntryMut::Occupied(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n        assert_eq!(e.get(), &43);\n    },\n    RawEntryMut::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = map\n    .raw_entry_mut()\n    .from_key(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| None);\n\nmatch entry {\n    RawEntryMut::Vacant(_) => {},\n    RawEntryMut::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12081:21083":{"id":"1:12081:21083","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:795":{"id":"0:329:795","crate_id":0,"name":"iter","span":{"filename":"src/raw/mod.rs","begin":[3071,4],"end":[3071,20]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"a:1:2684:220-0:1707:2871":{"id":"a:1:2684:220-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:681:2954":{"id":"b:1:2251-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12135:21099":{"id":"1:12135:21099","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:4535:21099"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:43656:11700","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:415:859":{"id":"0:415:859","crate_id":0,"name":"map","span":{"filename":"src/map.rs","begin":[1,0],"end":[8506,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:440:2628","0:441:142","0:455:2743","0:460:2745","0:465:1690","0:469:2744","0:644:2871","0:658:2880","0:671:2510","0:681:2954","0:709:2961","0:737:2843","0:750:2853","0:763:2907","0:774:2940","0:794:2941","0:807:2860","0:812:3251","0:819:3464","0:831:3469","0:850:3473","0:858:3267","0:982:3016","0:1000:3019","0:1026:3021","0:1041:3031","0:1062:3033","0:1082:3032","0:1117:3035","0:1135:3180","0:1450:4052"],"is_stripped":false}}},"b:1:7206-0:1720:2940":{"id":"b:1:7206-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:1:2251-0:2068:1843":{"id":"b:1:2251-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2050:2359":{"id":"0:2050:2359","crate_id":0,"name":"match_byte","span":{"filename":"src/raw/sse2.rs","begin":[79,4],"end":[92,5]},"visibility":"crate","docs":"Returns a `BitMask` indicating all bytes in the group which have\nthe given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["byte",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1639":{"id":"0:1639","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1283,0],"end":[1289,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:69:1847":{"id":"0:69:1847","crate_id":0,"name":"invalid_mut","span":{"filename":"src/raw/mod.rs","begin":[60,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[cfg(not(feature = \"nightly\"))]","#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["addr",{"primitive":"usize"}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:84:1891":{"id":"a:1:8249:5088-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190:2128":{"id":"0:190:2128","crate_id":0,"name":"capacity","span":{"filename":"src/raw/mod.rs","begin":[1388,4],"end":[1390,5]},"visibility":"public","docs":"Returns the number of elements the map can hold without reallocating.\n\nThis number is a lower bound; the table might be able to hold\nmore, but is guaranteed to be able to hold at least this many.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:397:2572":{"id":"b:1:2248-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2052:2343":{"id":"0:2052:2343","crate_id":0,"name":"match_empty_or_deleted","span":{"filename":"src/raw/sse2.rs","begin":[104,4],"end":[116,5]},"visibility":"crate","docs":"Returns a `BitMask` indicating all bytes in the group which are\n`EMPTY` or `DELETED`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:2062:2602":{"id":"b:1:2553-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:2082:1913":{"id":"b:1:2251-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:2068:1843":{"id":"b:1:3319-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:608:613":{"id":"0:608:613","crate_id":0,"name":"eq","span":{"filename":"src/map.rs","begin":[2172,4],"end":[2179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:737:2843":{"id":"a:1:2701:228-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2037:1897":{"id":"0:2037:1897","crate_id":0,"name":"WIDTH","span":{"filename":"src/raw/sse2.rs","begin":[28,4],"end":[28,59]},"visibility":"crate","docs":"Number of bytes in the group.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"usize"},"default":"_"}}},"a:1:2701:228-0:2082:1913":{"id":"a:1:2701:228-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2684:220-0:709:2961":{"id":"a:1:2684:220-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:903":{"id":"0:903","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3352,0],"end":[3544,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:909:2213","0:910:3538","0:911:3549","0:913:3559","0:915:3582"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:1727:4458":{"id":"b:1:2248-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1006:729":{"id":"0:1006:729","crate_id":0,"name":"hash","span":{"filename":"src/map.rs","begin":[4255,4],"end":[4255,13]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:1:2553-0:1727:4458":{"id":"b:1:2553-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12014:21074":{"id":"1:12014:21074","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12031:21077":{"id":"1:12031:21077","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:51705:1397","str::slice_mut_unchecked":"1:12032:21078","crate::ops::Index":"1:2981:2626"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:982:3016":{"id":"b:1:2248-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:644:2871":{"id":"a:1:8249:5088-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:801":{"id":"0:801","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2754,0],"end":[2770,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:805:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:97:1927":{"id":"b:1:2553-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:124:2115":{"id":"b:1:2548-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:5644-0:1135:3180":{"id":"b:4:5644-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"4:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1180:2510":{"id":"0:1180:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[4701,4],"end":[4701,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}},"b:1:3319-0:1949:3021":{"id":"b:1:3319-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2015-0:1513:1669":{"id":"0:2015-0:1513:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[104,4],"end":[104,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::set","name":"set","id":"0:1513:1669","glob":true}}},"b:1:2553-0:1720:2940":{"id":"b:1:2553-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:1727:4458":{"id":"a:1:8250:5087-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8250:5087-0:750:2853":{"id":"a:1:8250:5087-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:326:2318":{"id":"b:1:2538-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:395:1659":{"id":"0:395:1659","crate_id":0,"name":"inner","span":{"filename":"src/raw/mod.rs","begin":[3236,4],"end":[3236,27]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:988:3018":{"id":"0:988:3018","crate_id":0,"name":"Occupied","span":{"filename":"src/map.rs","begin":[4187,4],"end":[4187,43]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\nlet mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:990:1606"]},"discriminant":null}}},"0:0:1703":{"id":"0:0:1703","crate_id":0,"name":"hashbrown","span":{"filename":"src/lib.rs","begin":[1,0],"end":[165,1]},"visibility":"public","docs":"This crate is a Rust port of Google's high-performance [SwissTable] hash\nmap, adapted to make it a drop-in replacement for Rust's standard `HashMap`\nand `HashSet` types.\n\nThe original C++ version of [SwissTable] can be found [here], and this\n[CppCon talk] gives an overview of how the algorithm works.\n\n[SwissTable]: https://abseil.io/blog/20180927-swisstables\n[here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h\n[CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","links":{},"attrs":["#![no_std]","#![allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\nmust_use_candidate, clippy :: option_if_let_else, clippy :: redundant_else,\nclippy :: manual_map, clippy :: missing_safety_doc, clippy ::\nmissing_errors_doc)]","#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:5:1655","0:8:62","0:414:1665","0:415:859","0:1481:1668","0:1513:1669","0:2012:1670","0:2014:1672","0:2016-0:441:142","0:2017-0:1540:144","0:2018:1683","0:2089:1695"],"is_stripped":false}}},"0:237:2323":{"id":"0:237:2323","crate_id":0,"name":"is_empty_singleton","span":{"filename":"src/raw/mod.rs","begin":[2141,4],"end":[2143,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:305:2293":{"id":"b:1:2542-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:925:3606":{"id":"0:925:3606","crate_id":0,"name":"into_key","span":{"filename":"src/map.rs","begin":[3627,4],"end":[3629,5]},"visibility":"public","docs":"Converts the entry into a mutable reference to the key in the entry\nwith a lifetime bound to the map itself.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nlet inside_key: &mut Rc<&str>;\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => inside_key = o.into_key(),\n}\n*inside_key = key_two.clone();\n\nassert_eq!(map[&key_two], 10);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"K"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:1922:3016":{"id":"a:1:8249:5088-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:236:2338":{"id":"0:236:2338","crate_id":0,"name":"num_ctrl_bytes","span":{"filename":"src/raw/mod.rs","begin":[2136,4],"end":[2138,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2250:1693":{"id":"1:2250:1693","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[264,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"ahash\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:476:939","0:477:2132"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8249:5088-0:737:2843":{"id":"a:1:8249:5088-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2542-0:2074:1852":{"id":"b:1:2542-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:84:1891":{"id":"a:1:2741:4891-0:84:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:95:1922":{"id":"b:1:3319-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:512:2185":{"id":"0:512:2185","crate_id":0,"name":"clear","span":{"filename":"src/map.rs","begin":[1007,4],"end":[1009,5]},"visibility":"public","docs":"Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\na.insert(1, \"a\");\nlet capacity_before_clear = a.capacity();\n\na.clear();\n\n// Map is empty.\nassert!(a.is_empty());\n// But map capacity is equal to old one.\nassert_eq!(a.capacity(), capacity_before_clear);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1193":{"id":"0:1193","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4755,0],"end":[4755,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2251-0:807:2860":{"id":"b:1:2251-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:940":{"id":"0:940","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3945,0],"end":[4089,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:946:2213","0:947:3659","0:948:3682","0:951:2225"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:709:2961":{"id":"b:1:2553-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1600:4457":{"id":"0:1600:4457","crate_id":0,"name":"intersection","span":{"filename":"src/set.rs","begin":[796,4],"end":[806,5]},"visibility":"public","docs":"Visits the values representing the intersection,\ni.e., the values that are both in `self` and `other`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n\n// Print 2, 3 in arbitrary order.\nfor x in a.intersection(&b) {\n    println!(\"{}\", x);\n}\n\nlet intersection: HashSet<_> = a.intersection(&b).collect();\nassert_eq!(intersection, [2, 3].iter().collect());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:326:2318":{"id":"b:1:2553-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1714:795":{"id":"0:1714:795","crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[1556,4],"end":[1556,33]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"map::IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"tuple":[]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:759":{"id":"0:759","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2639,0],"end":[2643,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:762:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:1715:2907":{"id":"b:1:2542-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171:2176":{"id":"0:171:2176","crate_id":0,"name":"find","span":{"filename":"src/raw/mod.rs","begin":[1294,4],"end":[1304,5]},"visibility":"public","docs":"Searches for an element in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:784":{"id":"0:278:784","crate_id":0,"name":"into_iter","span":{"filename":"src/raw/mod.rs","begin":[2723,4],"end":[2728,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:898:3521":{"id":"0:898:3521","crate_id":0,"name":"search","span":{"filename":"src/map.rs","begin":[3312,4],"end":[3320,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["is_match",{"generic":"F"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1810":{"id":"0:1810","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1759,0],"end":[1764,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1813:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1820:668":{"id":"0:1820:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1768,4],"end":[1771,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1856":{"id":"0:1856","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1849,0],"end":[1857,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1860:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1938:3019":{"id":"b:1:3319-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2314,0],"end":[2322,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:653:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:819:3464":{"id":"a:1:2741:4891-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:2056:1844":{"id":"b:1:2538-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1341:3900":{"id":"0:1341:3900","crate_id":0,"name":"replace_entry","span":{"filename":"src/map.rs","begin":[5427,4],"end":[5434,5]},"visibility":"public","docs":"Replaces the entry, returning the old key and value. The new key in the hash map will be\nthe key used to create this entry.\n\n# Panics\n\nWill panic if this OccupiedEntry was created through [`Entry::insert`].\n\n# Examples\n\n```\n use hashbrown::hash_map::{Entry, HashMap};\n use std::rc::Rc;\n\n let mut map: HashMap<Rc<String>, u32> = HashMap::new();\n let key_one = Rc::new(\"Stringthing\".to_string());\n let key_two = Rc::new(\"Stringthing\".to_string());\n\n map.insert(key_one.clone(), 15);\n assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\n match map.entry(key_two.clone()) {\n     Entry::Occupied(entry) => {\n         let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);\n         assert!(Rc::ptr_eq(&key_one, &old_key) && old_value == 15);\n     }\n     Entry::Vacant(_) => panic!(),\n }\n\n assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n assert_eq!(map[&\"Stringthing\".to_owned()], 16);\n```","links":{"`Entry::insert`":"0:1310:2213"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:1117:3035":{"id":"b:1:2538-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12119:21095":{"id":"1:12119:21095","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:315":{"id":"0:115:315","crate_id":0,"name":"as_ref","span":{"filename":"src/raw/mod.rs","begin":[673,4],"end":[675,5]},"visibility":"public","docs":"Returns a shared immutable reference to the `value`.\n\n# Safety\n\nSee [`NonNull::as_ref`] for safety concerns.\n\n[`NonNull::as_ref`]: https://doc.rust-lang.org/core/ptr/struct.NonNull.html#method.as_ref\n\n# Examples\n\n```\n# #[cfg(feature = \"raw\")]\n# fn test() {\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::raw::{Bucket, RawTable};\n\ntype NewHashBuilder = core::hash::BuildHasherDefault<ahash::AHasher>;\n\nfn make_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet hash_builder = NewHashBuilder::default();\nlet mut table = RawTable::new();\n\nlet value: (&str, String) = (\"A pony\", \"is a small horse\".to_owned());\nlet hash = make_hash(&hash_builder, &value.0);\n\ntable.insert(hash, value.clone(), |val| make_hash(&hash_builder, &val.0));\n\nlet bucket: Bucket<(&str, String)> = table.find(hash, |(k, _)| k == &value.0).unwrap();\n\nassert_eq!(\n    unsafe { bucket.as_ref() },\n    &(\"A pony\", \"is a small horse\".to_owned())\n);\n# }\n# fn main() {\n#     #[cfg(feature = \"raw\")]\n#     test()\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:2556:128":{"id":"1:2556:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32020:1854","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2491,0],"end":[2567,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:251:423","0:253:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:535:3057":{"id":"0:535:3057","crate_id":0,"name":"get_key_value_mut","span":{"filename":"src/map.rs","begin":[1383,4],"end":[1392,5]},"visibility":"public","docs":"Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.\n\nThe supplied key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nlet (k, v) = map.get_key_value_mut(&1).unwrap();\nassert_eq!(k, &1);\nassert_eq!(v, &mut \"a\");\n*v = \"b\";\nassert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));\nassert_eq!(map.get_key_value_mut(&2), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:583:3116":{"id":"0:583:3116","crate_id":0,"name":"build_hashes_inner","span":{"filename":"src/map.rs","begin":[1709,4],"end":[1718,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"array":{"type":{"primitive":"u64"},"len":"N"}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:2068:1843":{"id":"b:1:2553-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:746":{"id":"0:746","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2591,0],"end":[2595,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:749:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:1026:3021":{"id":"a:1:2701:228-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1142:2214":{"id":"0:1142:2214","crate_id":0,"name":"value","span":{"filename":"src/map.rs","begin":[4603,4],"end":[4603,16]},"visibility":"public","docs":"The value which was not inserted, because the entry was already occupied.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"V"}}},"b:1:2542-0:2056:1844":{"id":"b:1:2542-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:709:2961":{"id":"a:1:2741:4891-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:794:2941":{"id":"b:1:2248-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:838:2114":{"id":"0:838:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[3039,4],"end":[3039,38]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"0:1503:230":{"id":"0:1503:230","crate_id":0,"name":"Target","span":{"filename":"src/scopeguard.rs","begin":[47,4],"end":[47,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:1:2701:228-0:658:2880":{"id":"a:1:2701:228-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:396:2573":{"id":"0:396:2573","crate_id":0,"name":"_marker","span":{"filename":"src/raw/mod.rs","begin":[3237,4],"end":[3237,27]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"1:2706:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"b:1:7206-0:1727:4458":{"id":"b:1:7206-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1878":{"id":"0:1878","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1903,0],"end":[1910,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1882:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:1895":{"id":"0:126:1895","crate_id":0,"name":"bucket_mask","span":{"filename":"src/raw/mod.rs","begin":[788,4],"end":[788,22]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1242":{"id":"0:1242","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4836,0],"end":[4841,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1245:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1760:784":{"id":"0:1760:784","crate_id":0,"name":"into_iter","span":{"filename":"src/set.rs","begin":[1641,4],"end":[1643,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1830":{"id":"0:1830","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1793,0],"end":[1793,103]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1117:3035":{"id":"a:1:2741:4891-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:64:953":{"id":"0:64:953","crate_id":0,"name":"next","span":{"filename":"src/raw/bitmask.rs","begin":[128,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:2074:1852":{"id":"b:1:2251-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1984:4052":{"id":"0:1984:4052","crate_id":0,"name":"assert_covariance","span":{"filename":"src/set.rs","begin":[2396,0],"end":[2433,1]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1623:3163":{"id":"0:1623:3163","crate_id":0,"name":"insert_unique_unchecked","span":{"filename":"src/set.rs","begin":[1136,4],"end":[1138,5]},"visibility":"public","docs":"Insert a value the set without checking if the value already exists in the set.\n\nReturns a reference to the value just inserted.\n\nThis operation is safe if a value does not exist in the set.\n\nHowever, if a value exists in the set already, the behavior is unspecified:\nthis operation may panic, loop forever, or any following operation with the set\nmay panic, loop forever or return arbitrary result.\n\nThat said, this operation (and following operations) are guaranteed to\nnot violate memory safety.\n\nThis operation is faster than regular insert, because it does not perform\nlookup before insertion.\n\nThis operation is useful during initial population of the set.\nFor example, when constructing a set from another set, we know\nthat values are unique.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79:1871":{"id":"0:79:1871","crate_id":0,"name":"is_special","span":{"filename":"src/raw/mod.rs","begin":[110,0],"end":[112,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Checks whether a control byte represents a special value (top bit is set).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ctrl",{"primitive":"u8"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2552:1478":{"id":"1:2552:1478","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245:2161":{"id":"0:245:2161","crate_id":0,"name":"allocation_info","span":{"filename":"src/raw/mod.rs","begin":[2359,4],"end":[2374,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["table_layout",{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},{"resolved_path":{"name":"Layout","id":"1:44347:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523:2190":{"id":"0:523:2190","crate_id":0,"name":"shrink_to","span":{"filename":"src/map.rs","begin":[1202,4],"end":[1205,5]},"visibility":"public","docs":"Shrinks the capacity of the map with a lower limit. It will drop\ndown no lower than the supplied limit while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\nThis function does nothing if the current capacity is smaller than the\nsupplied minimum capacity.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = HashMap::with_capacity(100);\nmap.insert(1, 2);\nmap.insert(3, 4);\nassert!(map.capacity() >= 100);\nmap.shrink_to(10);\nassert!(map.capacity() >= 10);\nmap.shrink_to(0);\nassert!(map.capacity() >= 2);\nmap.shrink_to(10);\nassert!(map.capacity() >= 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["min_capacity",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1759:2510":{"id":"0:1759:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/set.rs","begin":[1638,4],"end":[1638,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"a:1:2701:228-0:1720:2940":{"id":"a:1:2701:228-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:1727:4458":{"id":"b:1:2251-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:1734:4439":{"id":"a:1:2701:228-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1929:1606":{"id":"0:1929:1606","crate_id":0,"name":"0","span":{"filename":"src/set.rs","begin":[2048,13],"end":[2048,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:53:2344":{"id":"0:53:2344","crate_id":0,"name":"lowest_set_bit","span":{"filename":"src/raw/bitmask.rs","begin":[49,4],"end":[55,5]},"visibility":"crate","docs":"Returns the first set bit in the `BitMask`, if there is one.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:923:1691":{"id":"0:923:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[3562,4],"end":[3564,5]},"visibility":"public","docs":"Gets a reference to the key in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.key(), &\"a\")\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12040:21079":{"id":"1:12040:21079","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:43611:11790","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12122:21096":{"id":"1:12122:21096","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2053:2517":{"id":"0:2053:2517","crate_id":0,"name":"match_full","span":{"filename":"src/raw/sse2.rs","begin":[120,4],"end":[122,5]},"visibility":"crate","docs":"Returns a `BitMask` indicating all bytes in the group which are full.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:812:3251":{"id":"b:1:2248-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:763:2907":{"id":"a:1:2684:220-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1268:953":{"id":"0:1268:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[4872,4],"end":[4878,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1919:2509":{"id":"0:1919:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1983,4],"end":[1983,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"1:12025:2259":{"id":"1:12025:2259","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1255:2528":{"id":"0:1255:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[4856,4],"end":[4858,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:1922:3016":{"id":"b:1:2542-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285":{"id":"0:285","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2749,0],"end":[2839,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:287:939","0:288:2526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:807:2860":{"id":"b:1:3319-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214:2341":{"id":"0:214:2341","crate_id":0,"name":"fix_insert_slot","span":{"filename":"src/raw/mod.rs","begin":[1628,4],"end":[1661,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Fixes up an insertion slot due to false positives for groups smaller than the group width.\nThis must only be used on insertion slots found by `find_insert_slot_in_group`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1702":{"id":"0:1702","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1505,0],"end":[1535,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"1:2758:4303","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}}}},"items":["0:1705:186","0:1706:1416"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1540:144":{"id":"a:1:2741:4891-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1334:1691":{"id":"0:1334:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[5228,4],"end":[5230,5]},"visibility":"public","docs":"Gets a reference to the key in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nmatch map.entry(\"poneyland\") {\n    Entry::Vacant(_) => panic!(),\n    Entry::Occupied(entry) => assert_eq!(entry.key(), &\"poneyland\"),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:1026:3021":{"id":"b:1:2553-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:525:3029":{"id":"0:525:3029","crate_id":0,"name":"entry_ref","span":{"filename":"src/map.rs","begin":[1263,4],"end":[1282,5]},"visibility":"public","docs":"Gets the given key's corresponding entry by reference in the map for in-place manipulation.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut words: HashMap<String, usize> = HashMap::new();\nlet source = [\"poneyland\", \"horseyland\", \"poneyland\", \"poneyland\"];\nfor (i, &s) in source.iter().enumerate() {\n    let counter = words.entry_ref(s).or_insert(0);\n    *counter += 1;\n}\n\nassert_eq!(words[\"poneyland\"], 3);\nassert_eq!(words[\"horseyland\"], 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Self"}}}],["key",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1949:3021":{"id":"b:1:2548-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2541:3751":{"id":"1:2541:3751","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3167,0],"end":[3172,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:58:2509":{"id":"0:58:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/bitmask.rs","begin":[92,4],"end":[92,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"0:654":{"id":"0:654","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2324,0],"end":[2328,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:657:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1267:2509":{"id":"0:1267:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4869,4],"end":[4869,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}}}},"b:1:2548-0:2062:2602":{"id":"b:1:2548-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:287:939":{"id":"0:287:939","crate_id":0,"name":"new","span":{"filename":"src/raw/mod.rs","begin":[2754,4],"end":[2769,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Returns a `RawIterRange` covering a subset of a table.\n\nThe control byte address must be aligned to the group size.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ctrl",{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}}],["data",{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}],["len",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:935:2181":{"id":"0:935:2181","crate_id":0,"name":"remove_entry","span":{"filename":"src/map.rs","begin":[3884,4],"end":[3886,5]},"visibility":"public","docs":"Take the ownership of the key and value from the map.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.remove_entry(), (\"a\", 100)),\n}\nassert_eq!(map.get(&\"a\"), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:845":{"id":"0:845","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3051,0],"end":[3058,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:351:953":{"id":"0:351:953","crate_id":0,"name":"next","span":{"filename":"src/raw/mod.rs","begin":[3132,4],"end":[3134,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1364:2213":{"id":"0:1364:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[5667,4],"end":[5679,5]},"visibility":"public","docs":"Sets the value of the entry, and returns an OccupiedEntryRef.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nlet entry = map.entry_ref(\"horseyland\").insert(37);\n\nassert_eq!(entry.key(), \"horseyland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:2074:1852":{"id":"a:1:2684:220-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:1720:2940":{"id":"b:1:2248-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:864:859":{"id":"0:864:859","crate_id":0,"name":"map","span":{"filename":"src/map.rs","begin":[3148,4],"end":[3148,32]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"0:224:2152":{"id":"0:224:2152","crate_id":0,"name":"data_end","span":{"filename":"src/raw/mod.rs","begin":[1919,4],"end":[1921,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1493:1826":{"id":"0:1493:1826","crate_id":0,"name":"guard","span":{"filename":"src/scopeguard.rs","begin":[17,0],"end":[22,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"T"}],["dropfn",{"generic":"F"}]],"output":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1955":{"id":"0:1955","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2153,0],"end":[2157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1959:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:100":{"id":"0:100","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[287,0],"end":[287,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:2082:1913":{"id":"b:1:2548-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:482:2124":{"id":"0:482:2124","crate_id":0,"name":"new_in","span":{"filename":"src/map.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Creates an empty `HashMap` using the given allocator.\n\nThe hash map is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_hasher_in`](HashMap::with_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse bumpalo::Bump;\n\nlet bump = Bump::new();\nlet mut map = HashMap::new_in(&bump);\n\n// The created HashMap holds none elements\nassert_eq!(map.len(), 0);\n\n// The created HashMap also doesn't allocate memory\nassert_eq!(map.capacity(), 0);\n\n// Now we insert element inside created HashMap\nmap.insert(\"One\", 1);\n// We can see that the HashMap holds 1 element\nassert_eq!(map.len(), 1);\n// And it also allocates some capacity\nassert!(map.capacity() > 1);\n```","links":{"HashMap::with_hasher_in":"0:496:2784","`ahash::RandomState`":"6:813:10910","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:896:3514":{"id":"0:896:3514","crate_id":0,"name":"from_key_hashed_nocheck","span":{"filename":"src/map.rs","begin":[3304,4],"end":[3309,5]},"visibility":"public","docs":"Access an immutable entry by a key and its hash.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::HashMap;\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nassert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &key), Some((&\"a\", &100)));\n```","links":{},"attrs":["#[inline]","#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1071:1606":{"id":"0:1071:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[4429,10],"end":[4429,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"K"}}},"0:90:1910":{"id":"0:90:1910","crate_id":0,"name":"bucket_mask_to_capacity","span":{"filename":"src/raw/mod.rs","begin":[211,0],"end":[220,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Returns the maximum effective capacity for the given bucket mask, taking\nthe maximum load factor into account.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bucket_mask",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:982:3016":{"id":"a:1:2684:220-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:1041:3031":{"id":"b:1:2251-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:279:2295":{"id":"b:1:2548-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1035":{"id":"0:1035","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4323,0],"end":[4327,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1040:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:7206-0:750:2853":{"id":"b:1:7206-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:1:2538-0:359:2308":{"id":"b:1:2538-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1327:3854":{"id":"0:1327:3854","crate_id":0,"name":"or_default","span":{"filename":"src/map.rs","begin":[5199,4],"end":[5208,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default value if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, Option<u32>> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_default();\nassert_eq!(map[\"poneyland\"], None);\n\nmap.insert(\"horseland\", Some(3));\n\n// existing key\nassert_eq!(map.entry(\"horseland\").or_default(), &mut Some(3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2025:1628":{"id":"0:2025:1628","crate_id":0,"name":"sse2","span":{"filename":"src/raw/sse2.rs","begin":[1,0],"end":[149,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[cfg(all(all(target_feature = \"sse2\",\nany(target_arch = \"x86\", target_arch = \"x86_64\"), not(miri)), not(any())))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2031:2584","0:2032:2585","0:2033:2588","0:2034:2587","0:2035:2586","0:2056:1844"],"is_stripped":false}}},"b:1:2538-0:441:142":{"id":"b:1:2538-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:644:2871":{"id":"b:1:2251-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:831:3469":{"id":"0:831:3469","crate_id":0,"name":"RawOccupiedEntryMut","span":{"filename":"src/map.rs","begin":[3037,0],"end":[3041,1]},"visibility":"public","docs":"A view into an occupied entry in a `HashMap`.\nIt is part of the [`RawEntryMut`] enum.\n\n[`RawEntryMut`]: enum.RawEntryMut.html\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet _raw_o: RawOccupiedEntryMut<_, _, _> = map.raw_entry_mut().from_key(&\"a\").insert(\"a\", 100);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert and update)\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(mut view) => {\n        assert_eq!(view.get(), &100);\n        let v = view.get_mut();\n        let new_v = (*v) * 10;\n        *v = new_v;\n        assert_eq!(view.insert(1111), 1000);\n    }\n}\n\nassert_eq!(map[&\"a\"], 1111);\nassert_eq!(map.len(), 3);\n\n// Existing key (take)\nlet hash = compute_hash(map.hasher(), &\"c\");\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"c\", 30));\n    }\n}\nassert_eq!(map.raw_entry().from_key(&\"c\"), None);\nassert_eq!(map.len(), 2);\n\nlet hash = compute_hash(map.hasher(), &\"b\");\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == \"b\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"b\", 20));\n    }\n}\nassert_eq!(map.get(&\"b\"), None);\nassert_eq!(map.len(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:837:3017","0:838:2114","0:839:2740"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:917","a:1:8249:5088-0:831:3469","a:1:8250:5087-0:831:3469","a:1:2741:4891-0:831:3469","b:1:2542-0:831:3469","b:1:2248-0:831:3469","b:1:2553-0:831:3469","b:1:2251-0:831:3469","b:1:2538-0:831:3469","b:1:3319-0:831:3469","b:1:2548-0:831:3469","0:840","0:964","0:845"]}}},"b:1:2553-0:1540:144":{"id":"b:1:2553-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1758:2509":{"id":"0:1758:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1637,4],"end":[1637,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"b:1:2553-0:1711:2510":{"id":"b:1:2553-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:401:2350":{"id":"0:401:2350","crate_id":0,"name":"probe_seq","span":{"filename":"src/raw/mod.rs","begin":[3251,4],"end":[3251,23]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1909":{"id":"0:1909","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1966,0],"end":[1975,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1913:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1808:953":{"id":"0:1808:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1747,4],"end":[1753,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1974:2314":{"id":"0:1974:2314","crate_id":0,"name":"replace","span":{"filename":"src/set.rs","begin":[2318,4],"end":[2320,5]},"visibility":"public","docs":"Replaces the entry, returning the old value. The new value in the hash map will be\nthe value used to create this entry.\n\n# Panics\n\nWill panic if this OccupiedEntry was created through [`Entry::insert`].\n\n# Examples\n\n```\n use hashbrown::hash_set::{Entry, HashSet};\n use std::rc::Rc;\n\n let mut set: HashSet<Rc<String>> = HashSet::new();\n let key_one = Rc::new(\"Stringthing\".to_string());\n let key_two = Rc::new(\"Stringthing\".to_string());\n\n set.insert(key_one.clone());\n assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\n match set.entry(key_two.clone()) {\n     Entry::Occupied(entry) => {\n         let old_key: Rc<String> = entry.replace();\n         assert!(Rc::ptr_eq(&key_one, &old_key));\n     }\n     Entry::Vacant(_) => panic!(),\n }\n\n assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n assert!(set.contains(&\"Stringthing\".to_owned()));\n```","links":{"`Entry::insert`":"0:1965:2213"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2012:1670":{"id":"0:2012:1670","crate_id":0,"name":"hash_map","span":{"filename":"src/lib.rs","begin":[85,0],"end":[85,16]},"visibility":"public","docs":"A hash map implemented with quadratic probing and SIMD lookup.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2013-0:415:859"],"is_stripped":false}}},"a:1:2701:228-0:750:2853":{"id":"a:1:2701:228-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:831:3469":{"id":"b:1:2251-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:1727:4458":{"id":"a:1:2684:220-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85:1892":{"id":"0:85:1892","crate_id":0,"name":"pos","span":{"filename":"src/raw/mod.rs","begin":[158,4],"end":[158,14]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:924:3600":{"id":"0:924:3600","crate_id":0,"name":"key_mut","span":{"filename":"src/map.rs","begin":[3593,4],"end":[3595,5]},"visibility":"public","docs":"Gets a mutable reference to the key in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => {\n        *o.key_mut() = key_two.clone();\n    }\n}\nassert_eq!(map[&key_two], 10);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"K"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1338:3614":{"id":"0:1338:3614","crate_id":0,"name":"into_mut","span":{"filename":"src/map.rs","begin":[5341,4],"end":[5343,5]},"visibility":"public","docs":"Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself.\n\nIf you need multiple references to the `OccupiedEntry`, see [`get_mut`].\n\n[`get_mut`]: #method.get_mut\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nassert_eq!(map[\"poneyland\"], 12);\n\nlet value: &mut u32;\nmatch map.entry(\"poneyland\") {\n    Entry::Occupied(entry) => value = entry.into_mut(),\n    Entry::Vacant(_) => panic!(),\n}\n*value += 10;\n\nassert_eq!(map[\"poneyland\"], 22);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1551":{"id":"0:1551","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[132,0],"end":[193,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"ahash\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:1553:939","0:1554:2132"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1550:425":{"id":"0:1550:425","crate_id":0,"name":"clone_from","span":{"filename":"src/set.rs","begin":[126,4],"end":[128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3173,0],"end":[3178,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:1741:4449":{"id":"b:1:2553-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1015":{"id":"0:1015","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4269,0],"end":[4276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1540:144":{"id":"b:1:3319-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211:2140":{"id":"0:211:2140","crate_id":0,"name":"new_uninitialized","span":{"filename":"src/raw/mod.rs","begin":[1564,4],"end":[1592,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Allocates a new [`RawTableInner`] with the given number of buckets.\nThe control bytes and buckets are left uninitialized.\n\n# Safety\n\nThe caller of this function must ensure that the `buckets` is power of two\nand also initialize all control bytes of the length `self.bucket_mask + 1 +\nGroup::WIDTH` with the [`EMPTY`] bytes.\n\nSee also [`Allocator`] API for other safety concerns.\n\n[`Allocator`]: https://doc.rust-lang.org/alloc/alloc/trait.Allocator.html","links":{"`RawTableInner`":"0:124:2115","`EMPTY`":"0:76:1861"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alloc",{"generic":"A"}],["table_layout",{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["buckets",{"primitive":"usize"}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:326:2318":{"id":"b:1:2542-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:2510":{"id":"0:59:2510","crate_id":0,"name":"IntoIter","span":{"filename":"src/raw/bitmask.rs","begin":[93,4],"end":[93,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3084,0],"end":[3089,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:819:3464":{"id":"b:1:3319-0:819:3464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:346:588":{"id":"0:346:588","crate_id":0,"name":"drop","span":{"filename":"src/raw/mod.rs","begin":[3115,4],"end":[3125,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:737:2843":{"id":"b:1:2553-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476:939":{"id":"0:476:939","crate_id":0,"name":"new","span":{"filename":"src/map.rs","begin":[291,4],"end":[293,5]},"visibility":"public","docs":"Creates an empty `HashMap`.\n\nThe hash map is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_hasher`](HashMap::with_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<&str, i32> = HashMap::new();\nassert_eq!(map.len(), 0);\nassert_eq!(map.capacity(), 0);\n```","links":{"HashMap::with_hasher":"0:488:2814","`ahash::RandomState`":"6:813:10910","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:119:2112":{"id":"a:1:8249:5088-0:119:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:483:2133":{"id":"0:483:2133","crate_id":0,"name":"with_capacity_in","span":{"filename":"src/map.rs","begin":[417,4],"end":[419,5]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity using the given allocator.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_capacity_and_hasher_in`](HashMap::with_capacity_and_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse bumpalo::Bump;\n\nlet bump = Bump::new();\nlet mut map = HashMap::with_capacity_in(5, &bump);\n\n// The created HashMap holds none elements\nassert_eq!(map.len(), 0);\n// But it can hold at least 5 elements without reallocating\nlet empty_map_capacity = map.capacity();\nassert!(empty_map_capacity >= 5);\n\n// Now we insert some 5 elements inside created HashMap\nmap.insert(\"One\",   1);\nmap.insert(\"Two\",   2);\nmap.insert(\"Three\", 3);\nmap.insert(\"Four\",  4);\nmap.insert(\"Five\",  5);\n\n// We can see that the HashMap holds 5 elements\nassert_eq!(map.len(), 5);\n// But its capacity isn't changed\nassert_eq!(map.capacity(), empty_map_capacity)\n```","links":{"`ahash::RandomState`":"6:813:10910","HashMap::with_capacity_and_hasher_in":"0:497:2801","`HashMap`":"0:441:142"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:858:3267":{"id":"b:1:2553-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:684-0:2068:1843":{"id":"b:4:684-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:279:2295":{"id":"b:1:2248-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147:2164":{"id":"0:147:2164","crate_id":0,"name":"bucket_index","span":{"filename":"src/raw/mod.rs","begin":[946,4],"end":[948,5]},"visibility":"public","docs":"Returns the index of a bucket from a `Bucket`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["bucket",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:359:2308":{"id":"b:1:2248-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[296,0],"end":[774,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:107:1928","0:108:1966","0:109:1990","0:110:314","0:111:2046","0:112:588","0:113:2066","0:114:2075","0:115:315","0:117:2099"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:499:2128":{"id":"0:499:2128","crate_id":0,"name":"capacity","span":{"filename":"src/map.rs","begin":[618,4],"end":[620,5]},"visibility":"public","docs":"Returns the number of elements the map can hold without reallocating.\n\nThis number is a lower bound; the `HashMap<K, V>` might be able to hold\nmore, but is guaranteed to be able to hold at least this many.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet map: HashMap<i32, i32> = HashMap::with_capacity(100);\nassert_eq!(map.len(), 0);\nassert!(map.capacity() >= 100);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:644:2871":{"id":"a:1:2701:228-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1188:2528":{"id":"0:1188:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[4744,4],"end":[4746,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1165":{"id":"0:1165","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4662,0],"end":[4697,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"items":["0:1171:2509","0:1172:2510","0:1173:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:750:2853":{"id":"b:1:2248-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:782":{"id":"0:782","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2728,0],"end":[2744,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:787:2509","0:788:953","0:789:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:774:2940":{"id":"0:774:2940","crate_id":0,"name":"ExtractIf","span":{"filename":"src/map.rs","begin":[2720,0],"end":[2726,1]},"visibility":"public","docs":"A draining iterator over entries of a `HashMap` which don't satisfy the predicate\n`f(&k, &mut v)` in arbitrary order. The iterator element type is `(K, V)`.\n\nThis `struct` is created by the [`extract_if`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`extract_if`]: struct.HashMap.html#method.extract_if\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, &str> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut extract_if = map.extract_if(|k, _v| k % 2 != 0);\nlet mut vec = vec![extract_if.next(), extract_if.next()];\n\n// The `ExtractIf` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((1, \"a\")),Some((3, \"c\"))]);\n\n// It is fused iterator\nassert_eq!(extract_if.next(), None);\nassert_eq!(extract_if.next(), None);\ndrop(extract_if);\n\nassert_eq!(map.len(), 1);\n```","links":{},"attrs":["#[must_use = \"Iterators are lazy unless consumed\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:780:640","0:781:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:1:2701:228-0:774:2940","a:1:8249:5088-0:774:2940","a:1:8250:5087-0:774:2940","a:1:2684:220-0:774:2940","a:1:2741:4891-0:774:2940","b:1:2542-0:774:2940","b:1:2248-0:774:2940","b:1:2553-0:774:2940","b:1:2251-0:774:2940","b:1:7206-0:774:2940","b:1:2538-0:774:2940","b:1:3319-0:774:2940","b:1:2548-0:774:2940","0:790","0:782"]}}},"0:1033:1691":{"id":"0:1033:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[4319,4],"end":[4319,10]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"K"}}},"0:1555":{"id":"0:1555","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[196,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"ahash\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1558:2124","0:1559:2133"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1076:3749":{"id":"0:1076:3749","crate_id":0,"name":"into_owned","span":{"filename":"src/map.rs","begin":[4433,4],"end":[4441,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"K"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:686:3748":{"id":"4:686:3748","crate_id":4,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:1701:367":{"id":"0:1701:367","crate_id":0,"name":"bitxor","span":{"filename":"src/set.rs","begin":[1500,4],"end":[1502,5]},"visibility":"default","docs":"Returns the symmetric difference of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\nlet set = &a ^ &b;\n\nlet mut i = 0;\nlet expected = [1, 2, 4, 5];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:2509":{"id":"0:409:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/mod.rs","begin":[3290,4],"end":[3290,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"b:1:2548-0:1488:1827":{"id":"b:1:2548-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:644:2871":{"id":"b:1:2542-0:644:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:352:2528":{"id":"0:352:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/raw/mod.rs","begin":[3137,4],"end":[3139,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:698:811":{"id":"0:698:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[2472,4],"end":[2474,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:812:3251":{"id":"b:1:2548-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1352:1691":{"id":"0:1352:1691","crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[5579,4],"end":[5581,5]},"visibility":"public","docs":"Gets a reference to the key that would be used when inserting a value\nthrough the `VacantEntry`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nassert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1619:4529":{"id":"0:1619:4529","crate_id":0,"name":"is_subset","span":{"filename":"src/set.rs","begin":[1065,4],"end":[1067,5]},"visibility":"public","docs":"Returns `true` if the set is a subset of another,\ni.e., `other` contains at least all the values in `self`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nlet mut set = HashSet::new();\n\nassert_eq!(set.is_subset(&sup), true);\nset.insert(2);\nassert_eq!(set.is_subset(&sup), true);\nset.insert(4);\nassert_eq!(set.is_subset(&sup), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2058:1606":{"id":"0:2058:1606","crate_id":0,"name":"0","span":{"filename":"src/raw/sse2.rs","begin":[22,24],"end":[22,36]},"visibility":{"restricted":{"parent":"0:2025:1628","path":"::raw::sse2"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"x86::__m128i","id":"1:47666:5009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:1:3319-0:2082:1913":{"id":"b:1:3319-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:7206-0:1707:2871":{"id":"b:1:7206-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1780:811":{"id":"0:1780:811","crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[1700,4],"end":[1702,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1922:3016":{"id":"b:1:2548-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:681:2954":{"id":"b:1:2548-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:441:142":{"id":"a:1:2701:228-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8250:5087-0:2056:1844":{"id":"a:1:8250:5087-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:397:2572":{"id":"b:1:2538-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:7206-0:681:2954":{"id":"b:1:7206-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:139:2135":{"id":"0:139:2135","crate_id":0,"name":"DATA_NEEDS_DROP","span":{"filename":"src/raw/mod.rs","begin":[833,4],"end":[833,57]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"_"}}},"0:1192:811":{"id":"0:1192:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[4750,4],"end":[4752,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:982:3016":{"id":"b:1:2538-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:1026:3021":{"id":"b:1:2248-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:498:2192":{"id":"0:498:2192","crate_id":0,"name":"hasher","span":{"filename":"src/map.rs","begin":[600,4],"end":[602,5]},"visibility":"public","docs":"Returns a reference to the map's [`BuildHasher`].\n\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet hasher = DefaultHashBuilder::default();\nlet map: HashMap<i32, i32> = HashMap::with_hasher(hasher);\nlet hasher: &DefaultHashBuilder = map.hasher();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"S"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:684-0:441:142":{"id":"b:4:684-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2067:423":{"id":"0:2067:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/bitmask.rs","begin":[21,15],"end":[21,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:2082:1913":{"id":"b:1:2538-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:460:2745":{"id":"0:460:2745","crate_id":0,"name":"equivalent_key","span":{"filename":"src/map.rs","begin":[223,0],"end":[228,1]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":"Ensures that a single closure type across uses of this which, in turn prevents multiple\ninstances of any functions like RawTable::reserve from being generated","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1553:939":{"id":"0:1553:939","crate_id":0,"name":"new","span":{"filename":"src/set.rs","begin":[157,4],"end":[161,5]},"visibility":"public","docs":"Creates an empty `HashSet`.\n\nThe hash set is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_hasher`](HashSet::with_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::new();\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144","HashSet::with_hasher":"0:1578:2814"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1505":{"id":"0:1505","crate_id":0,"name":null,"span":{"filename":"src/scopeguard.rs","begin":[54,0],"end":[62,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:2911:4297","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":["0:1508:554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1586:2801":{"id":"0:1586:2801","crate_id":0,"name":"with_capacity_and_hasher_in","span":{"filename":"src/set.rs","begin":[592,4],"end":[596,5]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity, using\n`hasher` to hash the keys.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe HashSet to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_capacity_and_hasher(10, s);\nset.insert(1);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}],["hasher",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1606:2257":{"id":"0:1606:2257","crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[885,4],"end":[894,5]},"visibility":"public","docs":"Returns a reference to the value in the set, if any, that is equal to the given value.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet set: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nassert_eq!(set.get(&2), Some(&2));\nassert_eq!(set.get(&4), None);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:1707:2871":{"id":"b:1:2538-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:1715:2907":{"id":"a:1:2684:220-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2542-0:1727:4458":{"id":"b:1:2542-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:1734:4439":{"id":"a:1:2684:220-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3066,0],"end":[3066,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:794:2941":{"id":"0:794:2941","crate_id":0,"name":"ExtractIfInner","span":{"filename":"src/map.rs","begin":[2749,0],"end":[2752,1]},"visibility":"crate","docs":"Portions of `ExtractIf` shared with `set::ExtractIf`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:799:795","0:800:2114"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:801","a:1:2701:228-0:794:2941","a:1:8249:5088-0:794:2941","a:1:8250:5087-0:794:2941","a:1:2684:220-0:794:2941","a:1:2741:4891-0:794:2941","b:1:2542-0:794:2941","b:1:2248-0:794:2941","b:1:2553-0:794:2941","b:1:2251-0:794:2941","b:1:2538-0:794:2941","b:1:3319-0:794:2941","b:1:2548-0:794:2941"]}}},"0:150:2169":{"id":"0:150:2169","crate_id":0,"name":"erase","span":{"filename":"src/raw/mod.rs","begin":[968,4],"end":[972,5]},"visibility":"public","docs":"Erases an element from the table, dropping it in place.","links":{},"attrs":["#[inline]","#[allow(clippy :: needless_pass_by_value)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["item",{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1827:953":{"id":"0:1827:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1781,4],"end":[1785,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7318:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1922:3016":{"id":"0:1922:3016","crate_id":0,"name":"Entry","span":{"filename":"src/set.rs","begin":[2031,0],"end":[2064,1]},"visibility":"public","docs":"A view into a single entry in a set, which may either be vacant or occupied.\n\nThis `enum` is constructed from the [`entry`] method on [`HashSet`].\n\n[`HashSet`]: struct.HashSet.html\n[`entry`]: struct.HashSet.html#method.entry\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};\n\nlet mut set = HashSet::new();\nset.extend([\"a\", \"b\", \"c\"]);\nassert_eq!(set.len(), 3);\n\n// Existing value (insert)\nlet entry: Entry<_, _> = set.entry(\"a\");\nlet _raw_o: OccupiedEntry<_, _> = entry.insert();\nassert_eq!(set.len(), 3);\n// Nonexistent value (insert)\nset.entry(\"d\").insert();\n\n// Existing value (or_insert)\nset.entry(\"b\").or_insert();\n// Nonexistent value (or_insert)\nset.entry(\"e\").or_insert();\n\nprintln!(\"Our HashSet: {:?}\", set);\n\nlet mut vec: Vec<_> = set.iter().copied().collect();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [\"a\", \"b\", \"c\", \"d\", \"e\"]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"variants_stripped":false,"variants":["0:1927:3018","0:1930:3020"],"impls":["0:1960","a:1:2701:228-0:1922:3016","a:1:8249:5088-0:1922:3016","a:1:8250:5087-0:1922:3016","a:1:2684:220-0:1922:3016","a:1:2741:4891-0:1922:3016","b:1:2542-0:1922:3016","b:1:2248-0:1922:3016","b:1:2553-0:1922:3016","b:1:2251-0:1922:3016","b:1:2538-0:1922:3016","b:1:3319-0:1922:3016","b:1:2548-0:1922:3016","0:1933"]}}},"0:2031:2584":{"id":"0:2031:2584","crate_id":0,"name":"BitMaskWord","span":{"filename":"src/raw/sse2.rs","begin":[11,0],"end":[11,34]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"primitive":"u16"},"generics":{"params":[],"where_predicates":[]}}}},"0:1400:3923":{"id":"0:1400:3923","crate_id":0,"name":"replace_key","span":{"filename":"src/map.rs","begin":[6197,4],"end":[6203,5]},"visibility":"public","docs":"Replaces the key in the hash map with the key used to create this entry.\n\n# Panics\n\nWill panic if this OccupiedEntryRef was created through [`EntryRef::insert`].\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\nuse std::rc::Rc;\n\nlet mut map: HashMap<Rc<str>, usize> = HashMap::with_capacity(6);\nlet mut keys: Vec<Rc<str>> = Vec::with_capacity(6);\n\nfor (value, key) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().enumerate() {\n    let rc_key: Rc<str> = Rc::from(key);\n    keys.push(rc_key.clone());\n    map.insert(rc_key.clone(), value);\n}\n\nassert!(keys.iter().all(|key| Rc::strong_count(key) == 2));\n\n// It doesn't matter that we kind of use a vector with the same keys,\n// because all keys will be newly created from the references\nreclaim_memory(&mut map, &keys);\n\nassert!(keys.iter().all(|key| Rc::strong_count(key) == 1));\n\nfn reclaim_memory(map: &mut HashMap<Rc<str>, usize>, keys: &[Rc<str>]) {\n    for key in keys {\n        if let EntryRef::Occupied(entry) = map.entry_ref(key.as_ref()) {\n            // Replaces the entry's key with our version of it in `keys`.\n            entry.replace_key();\n        }\n    }\n}\n```","links":{"`EntryRef::insert`":"0:1364:2213"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"K"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:934:2179":{"id":"0:934:2179","crate_id":0,"name":"remove","span":{"filename":"src/map.rs","begin":[3864,4],"end":[3866,5]},"visibility":"public","docs":"Takes the value out of the entry, and returns it.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.remove(), 100),\n}\nassert_eq!(map.get(&\"a\"), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:1747:4467":{"id":"b:1:3319-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1954:1659":{"id":"0:1954:1659","crate_id":0,"name":"inner","span":{"filename":"src/set.rs","begin":[2150,4],"end":[2150,44]},"visibility":{"restricted":{"parent":"0:1513:1669","path":"::set"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"map::VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"tuple":[]}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"1:12078:19892":{"id":"1:12078:19892","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:51699:419","str::splitn":"1:12075:19890","self::pattern":"1:11712:13646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:43479:11783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[803,0],"end":[829,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:133:939","0:134:2132"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12093:21086":{"id":"1:12093:21086","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:11712:13646","`DoubleEndedIterator`":"1:7240:121","prim@char":"1:51699:419","str::rmatch_indices":"1:12096:21087"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:43507:11785","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:290":{"id":"0:144:290","crate_id":0,"name":"allocator","span":{"filename":"src/raw/mod.rs","begin":[908,4],"end":[910,5]},"visibility":"public","docs":"Returns a reference to the underlying allocator.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"A"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:1990":{"id":"0:109:1990","crate_id":0,"name":"to_base_index","span":{"filename":"src/raw/mod.rs","begin":[419,4],"end":[447,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Calculates the index of a [`Bucket`] as distance between two pointers\n(convenience for `base.as_ptr().offset_from(self.ptr.as_ptr()) as usize`).\nThe returned value is in units of T: the distance in bytes divided by\n[`core::mem::size_of::<T>()`].\n\nIf the `T` is a ZST, then we return the index of the element in\nthe table so that `erase` works properly (return `self.ptr.as_ptr() as usize - 1`).\n\nThis function is the inverse of [`from_base_index`].\n\n# Safety\n\nIf `mem::size_of::<T>() != 0`, then the safety rules are directly derived\nfrom the safety rules for [`<*const T>::offset_from`] method of `*const T`.\n\nThus, in order to uphold the safety contracts for [`<*const T>::offset_from`]\nmethod, as well as for the correct logic of the work of this crate, the\nfollowing rules are necessary and sufficient:\n\n* `base` contained pointer must not be `dangling` and must point to the\n  end of the first `element` from the `data part` of the table, i.e.\n  must be a pointer that returns by [`RawTable::data_end`] or by\n  [`RawTableInner::data_end<T>`];\n\n* `self` also must not contain dangling pointer;\n\n* both `self` and `base` must be created from the same [`RawTable`]\n  (or [`RawTableInner`]).\n\nIf `mem::size_of::<T>() == 0`, this function is always safe.\n\n[`Bucket`]: crate::raw::Bucket\n[`from_base_index`]: crate::raw::Bucket::from_base_index\n[`RawTable::data_end`]: crate::raw::RawTable::data_end\n[`RawTableInner::data_end<T>`]: RawTableInner::data_end<T>\n[`RawTable`]: crate::raw::RawTable\n[`RawTableInner`]: RawTableInner\n[`<*const T>::offset_from`]: https://doc.rust-lang.org/nightly/core/primitive.pointer.html#method.offset_from","links":{"crate::raw::Bucket":"0:97:1927","crate::raw::RawTable":"0:119:2112","crate::raw::Bucket::from_base_index":"0:108:1966","crate::raw::RawTable::data_end":"0:146:2152","RawTableInner::data_end<T>":"0:224:2152","RawTableInner":"0:124:2115","`core::mem::size_of::<T>()`":"1:1600:1363"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["base",{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:305:2293":{"id":"a:1:2701:228-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:1711:2510":{"id":"b:1:2251-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:2068:1843":{"id":"a:1:2684:220-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8250:5087-0:1707:2871":{"id":"a:1:8250:5087-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:82:1879":{"id":"0:82:1879","crate_id":0,"name":"MIN_HASH_LEN","span":{"filename":"src/raw/mod.rs","begin":[130,0],"end":[134,2]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"usize"},"expr":"_","value":"8usize","is_literal":false}}},"0:524:3015":{"id":"0:524:3015","crate_id":0,"name":"entry","span":{"filename":"src/map.rs","begin":[1227,4],"end":[1243,5]},"visibility":"public","docs":"Gets the given key's corresponding entry in the map for in-place manipulation.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut letters = HashMap::new();\n\nfor ch in \"a short treatise on fungi\".chars() {\n    let counter = letters.entry(ch).or_insert(0);\n    *counter += 1;\n}\n\nassert_eq!(letters[&'s'], 2);\nassert_eq!(letters[&'t'], 3);\nassert_eq!(letters[&'u'], 1);\nassert_eq!(letters.get(&'y'), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["key",{"generic":"K"}]],"output":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:1902":{"id":"0:89:1902","crate_id":0,"name":"capacity_to_buckets","span":{"filename":"src/raw/mod.rs","begin":[184,0],"end":[206,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Returns the number of buckets needed to hold the given number of items,\ntaking the maximum load factor into account.\n\nReturns `None` if an overflow occurs.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cap",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1429:4038":{"id":"0:1429:4038","crate_id":0,"name":"extend","span":{"filename":"src/map.rs","begin":[6443,4],"end":[6458,5]},"visibility":"default","docs":"Inserts all new key-values from the iterator to existing `HashMap<K, V, S, A>`.\nReplace values with existing keys with new values returned from the iterator.\n\n# Examples\n\n```\nuse hashbrown::hash_map::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, 100);\n\nlet some_iter = [(1, 1), (2, 2)].into_iter();\nmap.extend(some_iter);\n// Replace values with existing keys with new values returned from the iterator.\n// So that the map.get(&1) doesn't return Some(&100).\nassert_eq!(map.get(&1), Some(&1));\n\nlet some_vec: Vec<_> = vec![(3, 3), (4, 4)];\nmap.extend(some_vec);\n\nlet some_arr = [(5, 5), (6, 6)];\nmap.extend(some_arr);\nlet old_map_len = map.len();\n\n// You can also extend from another HashMap\nlet mut new_map = HashMap::new();\nnew_map.extend(map);\nassert_eq!(new_map.len(), old_map_len);\n\nlet mut vec: Vec<_> = new_map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1254:953":{"id":"0:1254:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[4848,4],"end":[4854,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:774:2940":{"id":"b:1:2542-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:97:1927":{"id":"b:1:2542-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:441:142":{"id":"b:1:2251-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3321:1491":{"id":"1:3321:1491","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39341:11560","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1155:668":{"id":"0:1155:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4619,4],"end":[4627,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1796":{"id":"0:1796","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1734,0],"end":[1734,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1826:2509":{"id":"0:1826:2509","crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1778,4],"end":[1778,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"K"}}}},"0:1867:953":{"id":"0:1867:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1868,4],"end":[1875,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:2152":{"id":"0:146:2152","crate_id":0,"name":"data_end","span":{"filename":"src/raw/mod.rs","begin":[920,4],"end":[922,5]},"visibility":"public","docs":"Returns pointer to one past last element of data table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NonNull","id":"1:1821:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1335:2181":{"id":"0:1335:2181","crate_id":0,"name":"remove_entry","span":{"filename":"src/map.rs","begin":[5257,4],"end":[5259,5]},"visibility":"public","docs":"Take the ownership of the key and value from the map.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.entry(\"poneyland\").or_insert(12);\n\nif let Entry::Occupied(o) = map.entry(\"poneyland\") {\n    // We delete the entry from the map.\n    assert_eq!(o.remove_entry(), (\"poneyland\", 12));\n}\n\nassert_eq!(map.contains_key(\"poneyland\"), false);\n// Now map hold none elements\nassert!(map.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1206:811":{"id":"0:1206:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[4778,4],"end":[4780,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1883":{"id":"0:1883","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1912,0],"end":[1928,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1888:2509","0:1889:953","0:1890:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:653:423":{"id":"0:653:423","crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[2316,4],"end":[2321,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:709:2961":{"id":"a:1:2701:228-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:505:811":{"id":"0:505:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[828,4],"end":[830,5]},"visibility":"public","docs":"Returns the number of elements in the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\nassert_eq!(a.len(), 0);\na.insert(1, \"a\");\nassert_eq!(a.len(), 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:788:953":{"id":"0:788:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[2736,4],"end":[2738,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7318:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1077":{"id":"0:1077","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4444,0],"end":[4451,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2506:75","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":["0:1081:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1975":{"id":"0:1975","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2323,0],"end":[2393,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1980:2257","0:1981:4702","0:1982:2213","0:1983:2225"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:1949:3021":{"id":"b:1:2542-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:2068:1843":{"id":"b:1:2542-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:71:1849":{"id":"0:71:1849","crate_id":0,"name":"offset_from","span":{"filename":"src/raw/mod.rs","begin":[65,0],"end":[67,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["to",{"raw_pointer":{"mutable":false,"type":{"generic":"T"}}}],["from",{"raw_pointer":{"mutable":false,"type":{"generic":"T"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:0:2021-0:2089:1695":{"id":"b:0:2021-0:2089:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[143,0],"end":[151,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2024:1690"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"Q"}}}},"0:1395:2259":{"id":"0:1395:2259","crate_id":0,"name":"get_mut","span":{"filename":"src/map.rs","begin":[6032,4],"end":[6034,5]},"visibility":"public","docs":"Gets a mutable reference to the value in the entry.\n\nIf you need a reference to the `OccupiedEntryRef` which may outlive the\ndestruction of the `EntryRef` value, see [`into_mut`].\n\n[`into_mut`]: #method.into_mut\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.entry_ref(\"poneyland\").or_insert(12);\n\nassert_eq!(map[\"poneyland\"], 12);\nif let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {\n    *o.get_mut() += 10;\n    assert_eq!(*o.get(), 22);\n\n    // We can use the same Entry multiple times.\n    *o.get_mut() += 2;\n}\n\nassert_eq!(map[\"poneyland\"], 24);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:750:2853":{"id":"b:1:2538-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33-5:50:1840":{"id":"0:33-5:50:1840","crate_id":0,"name":null,"span":{"filename":"src/raw/alloc.rs","begin":[31,36],"end":[31,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"allocator_api2::alloc::Allocator","name":"Allocator","id":"5:50:1840","glob":false}}},"0:818:859":{"id":"0:818:859","crate_id":0,"name":"map","span":{"filename":"src/map.rs","begin":[2859,4],"end":[2859,36]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"0:1982:2213":{"id":"0:1982:2213","crate_id":0,"name":"insert","span":{"filename":"src/set.rs","begin":[2375,4],"end":[2381,5]},"visibility":"public","docs":"Sets the value of the entry with the VacantEntry's value.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_set::Entry;\n\nlet mut set: HashSet<&str> = HashSet::new();\n\nif let Entry::Vacant(o) = set.entry(\"poneyland\") {\n    o.insert();\n}\nassert!(set.contains(\"poneyland\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2084:1914":{"id":"0:2084:1914","crate_id":0,"name":"ctrl_align","span":{"filename":"src/raw/mod.rs","begin":[227,4],"end":[227,21]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"4:5400:4838":{"id":"4:5400:4838","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1491:4298":{"id":"0:1491:4298","crate_id":0,"name":"dropfn","span":{"filename":"src/scopeguard.rs","begin":[12,4],"end":[12,13]},"visibility":{"restricted":{"parent":"0:1481:1668","path":"::scopeguard"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"F"}}},"0:160:2202":{"id":"0:160:2202","crate_id":0,"name":"reserve_rehash","span":{"filename":"src/raw/mod.rs","begin":[1113,4],"end":[1132,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Out-of-line slow path for `reserve` and `try_reserve`.","links":{},"attrs":["#[cold]","#[inline(never)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}],["fallibility",{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:2185":{"id":"0:154:2185","crate_id":0,"name":"clear","span":{"filename":"src/raw/mod.rs","begin":[1023,4],"end":[1033,5]},"visibility":"public","docs":"Removes all elements from the table without freeing the backing memory.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:2169":{"id":"0:247:2169","crate_id":0,"name":"erase","span":{"filename":"src/raw/mod.rs","begin":[2431,4],"end":[2488,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Erases the [`Bucket`]'s control byte at the given index so that it does not\ntriggered as full, decreases the `items` of the table and, if it can be done,\nincreases `self.growth_left`.\n\nThis function does not actually erase / drop the [`Bucket`] itself, i.e. it\ndoes not make any changes to the `data` parts of the table. The caller of this\nfunction must take care to properly drop the `data`, otherwise calling this\nfunction may result in a memory leak.\n\n# Safety\n\nYou must observe the following safety rules when calling this function:\n\n* The [`RawTableInner`] has already been allocated;\n\n* It must be the full control byte at the given position;\n\n* The `index` must not be greater than the `RawTableInner.bucket_mask`, i.e.\n  `index <= RawTableInner.bucket_mask` or, in other words, `(index + 1)` must\n  be no greater than the number returned by the function [`RawTableInner::buckets`].\n\nCalling this function on a table that has not been allocated results in [`undefined behavior`].\n\nCalling this function on a table with no elements is unspecified, but calling subsequent\nfunctions is likely to result in [`undefined behavior`] due to overflow subtraction\n(`self.items -= 1 cause overflow when self.items == 0`).\n\nSee also [`Bucket::as_ptr`] method, for more information about of properly removing\nor saving `data element` from / into the [`RawTable`] / [`RawTableInner`].\n\n[`RawTableInner::buckets`]: RawTableInner::buckets\n[`Bucket::as_ptr`]: Bucket::as_ptr\n[`undefined behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{"`RawTableInner`":"0:124:2115","Bucket::as_ptr":"0:110:314","RawTableInner::buckets":"0:234:1916","`RawTable`":"0:119:2112","`Bucket`":"0:97:1927"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1684:60":{"id":"0:1684:60","crate_id":0,"name":"default","span":{"filename":"src/set.rs","begin":[1400,4],"end":[1404,5]},"visibility":"default","docs":"Creates an empty `HashSet<T, S>` with the `Default` value for the hasher.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2034:2587":{"id":"0:2034:2587","crate_id":0,"name":"BITMASK_MASK","span":{"filename":"src/raw/sse2.rs","begin":[14,0],"end":[14,52]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"u16"},"expr":"0xffff","value":"65_535u16","is_literal":true}}},"0:2068:1843":{"id":"0:2068:1843","crate_id":0,"name":"BitMaskIter","span":{"filename":"src/raw/bitmask.rs","begin":[106,0],"end":[106,50]},"visibility":"crate","docs":"Iterator over the contents of a `BitMask`, returning the indices of set\nbits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:2070:1606"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:2701:228-0:2068:1843","a:1:8249:5088-0:2068:1843","a:1:8250:5087-0:2068:1843","a:1:2684:220-0:2068:1843","a:1:2741:4891-0:2068:1843","b:1:2542-0:2068:1843","b:1:2248-0:2068:1843","b:1:2553-0:2068:1843","b:1:2251-0:2068:1843","b:1:7206-0:2068:1843","b:1:2538-0:2068:1843","b:1:3319-0:2068:1843","b:1:2548-0:2068:1843","b:4:684-0:2068:1843","0:62","0:2071","0:2072"]}}},"0:8:62":{"id":"0:8:62","crate_id":0,"name":"raw","span":{"filename":"src/raw/mod.rs","begin":[1,0],"end":[3378,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"raw\"))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2025:1628","0:25:286","0:42:1842","0:69:1847","0:71:1849","0:2074:1852","0:76:1861","0:77:1864","0:78:1867","0:79:1871","0:80:1873","0:81:1878","0:82:1879","0:83:1881","0:84:1891","0:89:1902","0:90:1910","0:2082:1913","0:95:1922","0:97:1927","0:119:2112","0:124:2115","0:255:2498","0:279:2295","0:305:2293","0:326:2318","0:359:2308","0:393:2304","0:397:2572"],"is_stripped":false}}},"0:1399:3900":{"id":"0:1399:3900","crate_id":0,"name":"replace_entry","span":{"filename":"src/map.rs","begin":[6146,4],"end":[6156,5]},"visibility":"public","docs":"Replaces the entry, returning the old key and value. The new key in the hash map will be\nthe key used to create this entry.\n\n# Panics\n\nWill panic if this OccupiedEntryRef was created through [`EntryRef::insert`].\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\nuse std::rc::Rc;\n\nlet mut map: HashMap<Rc<str>, u32> = HashMap::new();\nlet key: Rc<str> = Rc::from(\"Stringthing\");\n\nmap.insert(key.clone(), 15);\nassert_eq!(Rc::strong_count(&key), 2);\n\nmatch map.entry_ref(\"Stringthing\") {\n    EntryRef::Occupied(entry) => {\n        let (old_key, old_value): (Rc<str>, u32) = entry.replace_entry(16);\n        assert!(Rc::ptr_eq(&key, &old_key) && old_value == 15);\n    }\n    EntryRef::Vacant(_) => panic!(),\n}\n\nassert_eq!(Rc::strong_count(&key), 1);\nassert_eq!(map[\"Stringthing\"], 16);\n```","links":{"`EntryRef::insert`":"0:1364:2213"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:858:3267":{"id":"a:1:8250:5087-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:77:1864":{"id":"0:77:1864","crate_id":0,"name":"DELETED","span":{"filename":"src/raw/mod.rs","begin":[100,0],"end":[100,32]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Control byte value for a deleted bucket.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"u8"},"expr":"0b1000_0000","value":"128u8","is_literal":true}}},"b:1:2553-0:2082:1913":{"id":"b:1:2553-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:2062:2602":{"id":"b:1:2248-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:812:3251":{"id":"a:1:2741:4891-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:774:2940":{"id":"b:1:2251-0:774:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:828:3020":{"id":"0:828:3020","crate_id":0,"name":"Vacant","span":{"filename":"src/map.rs","begin":[2974,4],"end":[2974,45]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::{hash_map::RawEntryMut, HashMap};\nlet mut map: HashMap<&str, i32> = HashMap::new();\n\nmatch map.raw_entry_mut().from_key(\"a\") {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:830:1606"]},"discriminant":null}}},"a:1:8250:5087-0:1000:3019":{"id":"a:1:8250:5087-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:95:1922":{"id":"a:1:8249:5088-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:83:1881":{"id":"0:83:1881","crate_id":0,"name":"h2","span":{"filename":"src/raw/mod.rs","begin":[139,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Secondary hash function, saved in the low 7 bits of the control byte.","links":{},"attrs":["#[inline]","#[allow(clippy :: cast_possible_truncation)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hash",{"primitive":"u64"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:2068:1843":{"id":"a:1:8250:5087-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:982:3016":{"id":"b:1:2251-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:930:3057":{"id":"0:930:3057","crate_id":0,"name":"get_key_value_mut","span":{"filename":"src/map.rs","begin":[3747,4],"end":[3752,5]},"visibility":"public","docs":"Gets a mutable reference to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => {\n        let (inside_key, inside_value) = o.get_key_value_mut();\n        *inside_key = key_two.clone();\n        *inside_value = 100;\n    }\n}\nassert_eq!(map[&key_two], 100);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1273:811":{"id":"0:1273:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[4886,4],"end":[4888,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:982:3016":{"id":"0:982:3016","crate_id":0,"name":"Entry","span":{"filename":"src/map.rs","begin":[4170,0],"end":[4203,1]},"visibility":"public","docs":"A view into a single entry in a map, which may either be vacant or occupied.\n\nThis `enum` is constructed from the [`entry`] method on [`HashMap`].\n\n[`HashMap`]: struct.HashMap.html\n[`entry`]: struct.HashMap.html#method.entry\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert)\nlet entry: Entry<_, _, _> = map.entry(\"a\");\nlet _raw_o: OccupiedEntry<_, _, _> = entry.insert(1);\nassert_eq!(map.len(), 3);\n// Nonexistent key (insert)\nmap.entry(\"d\").insert(4);\n\n// Existing key (or_insert)\nlet v = map.entry(\"b\").or_insert(2);\nassert_eq!(std::mem::replace(v, 2), 20);\n// Nonexistent key (or_insert)\nmap.entry(\"e\").or_insert(5);\n\n// Existing key (or_insert_with)\nlet v = map.entry(\"c\").or_insert_with(|| 3);\nassert_eq!(std::mem::replace(v, 3), 30);\n// Nonexistent key (or_insert_with)\nmap.entry(\"f\").or_insert_with(|| 6);\n\nprintln!(\"Our HashMap: {:?}\", map);\n\nlet mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3), (\"d\", 4), (\"e\", 5), (\"f\", 6)]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"variants_stripped":false,"variants":["0:988:3018","0:991:3020"],"impls":["0:1304","0:1321","a:1:2701:228-0:982:3016","a:1:8249:5088-0:982:3016","a:1:8250:5087-0:982:3016","a:1:2684:220-0:982:3016","a:1:2741:4891-0:982:3016","b:1:2542-0:982:3016","b:1:2248-0:982:3016","b:1:2553-0:982:3016","b:1:2251-0:982:3016","b:1:2538-0:982:3016","b:1:3319-0:982:3016","b:1:2548-0:982:3016","0:994"]}}},"0:256:2494":{"id":"0:256:2494","crate_id":0,"name":"clone_from_spec","span":{"filename":"src/raw/mod.rs","begin":[2571,4],"end":[2571,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:873:3514":{"id":"0:873:3514","crate_id":0,"name":"from_key_hashed_nocheck","span":{"filename":"src/map.rs","begin":[3200,4],"end":[3205,5]},"visibility":"public","docs":"Creates a `RawEntryMut` from the given key and its hash.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nlet entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key_hashed_nocheck(hash, &key);\nentry.insert(key, 100);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":["#[inline]","#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:671:2510":{"id":"b:1:3319-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:686":{"id":"0:686","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2457,0],"end":[2468,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:690:2509","0:691:953","0:693:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:56:2492":{"id":"0:56:2492","crate_id":0,"name":"leading_zeros","span":{"filename":"src/raw/bitmask.rs","begin":[86,4],"end":[88,5]},"visibility":"crate","docs":"Returns the number of leading zeroes in the `BitMask`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1135:3180":{"id":"0:1135:3180","crate_id":0,"name":"OccupiedError","span":{"filename":"src/map.rs","begin":[4599,0],"end":[4604,1]},"visibility":"public","docs":"The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.\n\nContains the occupied entry, and the value that was not inserted.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, OccupiedError};\n\nlet mut map: HashMap<_, _> = [(\"a\", 10), (\"b\", 20)].into();\n\n// try_insert method returns mutable reference to the value if keys are vacant,\n// but if the map did have key present, nothing is updated, and the provided\n// value is returned inside `Err(_)` variant\nmatch map.try_insert(\"a\", 100) {\n    Err(OccupiedError { mut entry, value }) => {\n        assert_eq!(entry.key(), &\"a\");\n        assert_eq!(value, 100);\n        assert_eq!(entry.insert(100), 10)\n    }\n    _ => unreachable!(),\n}\nassert_eq!(map[&\"a\"], 100);\n```","links":{"HashMap::try_insert":"0:591:3179"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1141:3015","0:1142:2214"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:1135:3180","a:1:8249:5088-0:1135:3180","a:1:8250:5087-0:1135:3180","a:1:2684:220-0:1135:3180","a:1:2741:4891-0:1135:3180","b:1:2542-0:1135:3180","b:1:2248-0:1135:3180","b:1:2553-0:1135:3180","b:1:2251-0:1135:3180","b:1:2538-0:1135:3180","b:1:3319-0:1135:3180","b:1:2548-0:1135:3180","b:4:5644-0:1135:3180","0:1143","0:1149"]}}},"1:12049:19895":{"id":"1:12049:19895","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2317":{"id":"0:198:2317","crate_id":0,"name":"into_iter_from","span":{"filename":"src/raw/mod.rs","begin":[1482,4],"end":[1493,5]},"visibility":"public","docs":"Returns an iterator which consumes all elements from the table.\n\nIteration starts at the provided iterator's current location.\n\nIt is up to the caller to ensure that the iterator is valid for this\n`RawTable` and covers all items that remain in the table.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["iter",{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1240:953":{"id":"0:1240:953","crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[4824,4],"end":[4830,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2599,0],"end":[2684,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:263:2499"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1164:784":{"id":"0:1164:784","crate_id":0,"name":"into_iter","span":{"filename":"src/map.rs","begin":[4657,4],"end":[4659,5]},"visibility":"default","docs":"Creates an iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(&'a K, &'a V)`.\n\nReturn the same `Iter` struct as by the [`iter`] method on [`HashMap`].\n\n[`iter`]: struct.HashMap.html#method.iter\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet map_one: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\nlet mut map_two = HashMap::new();\n\nfor (key, value) in &map_one {\n    println!(\"Key: {}, Value: {}\", key, value);\n    map_two.insert_unique_unchecked(*key, *value);\n}\n\nassert_eq!(map_one, map_two);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Iter","id":"0:644:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2348":{"id":"0:215:2348","crate_id":0,"name":"find_insert_slot_in_group","span":{"filename":"src/raw/mod.rs","begin":[1666,4],"end":[1674,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Finds the position to insert something in a group.\nThis may have false positives and must be fixed up with `fix_insert_slot` before it's used.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["group",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["probe_seq",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ProbeSeq","id":"0:84:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:671:2510":{"id":"b:1:2553-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1287:2509":{"id":"0:1287:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4901,4],"end":[4901,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"b:1:2538-0:807:2860":{"id":"b:1:2538-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:153:2183":{"id":"0:153:2183","crate_id":0,"name":"clear_no_drop","span":{"filename":"src/raw/mod.rs","begin":[1017,4],"end":[1019,5]},"visibility":"public","docs":"Marks all table buckets as empty without dropping their contents.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:911:3549":{"id":"0:911:3549","crate_id":0,"name":"or_insert_with","span":{"filename":"src/map.rs","begin":[3425,4],"end":[3438,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns mutable references to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, String> = HashMap::new();\n\nmap.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {\n    (\"poneyland\", \"hoho\".to_string())\n});\n\nassert_eq!(map[\"poneyland\"], \"hoho\".to_string());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:858:3267":{"id":"b:1:2248-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231:2439":{"id":"0:231:2439","crate_id":0,"name":"replace_ctrl_h2","span":{"filename":"src/raw/mod.rs","begin":[2028,4],"end":[2033,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Replaces the hash in the control byte at the given index with the provided one,\nand possibly also replicates the new control byte at the end of the array of control\nbytes, returning the old control byte.\n\nThis function does not make any changes to the `data` parts of the table,\nor any changes to the the `items` or `growth_left` field of the table.\n\n# Safety\n\nThe safety rules are directly derived from the safety rules for [`RawTableInner::set_ctrl_h2`]\nand [`RawTableInner::ctrl`] methods. Thus, in order to uphold the safety contracts for both\nmethods, you must observe the following rules when calling this function:\n\n* The [`RawTableInner`] has already been allocated;\n\n* The `index` must not be greater than the `RawTableInner.bucket_mask`, i.e.\n  `index <= RawTableInner.bucket_mask` or, in other words, `(index + 1)` must\n  be no greater than the number returned by the function [`RawTableInner::buckets`].\n\nCalling this function on a table that has not been allocated results in [`undefined behavior`].\n\nSee also [`Bucket::as_ptr`] method, for more information about of properly removing\nor saving `data element` from / into the [`RawTable`] / [`RawTableInner`].\n\n[`RawTableInner::set_ctrl_h2`]: RawTableInner::set_ctrl_h2\n[`RawTableInner::buckets`]: RawTableInner::buckets\n[`Bucket::as_ptr`]: Bucket::as_ptr\n[`undefined behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{"`RawTableInner`":"0:124:2115","RawTableInner::set_ctrl_h2":"0:230:2366","Bucket::as_ptr":"0:110:314","RawTableInner::buckets":"0:234:1916","`RawTable`":"0:119:2112","`RawTableInner::ctrl`":"0:233:1868"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["hash",{"primitive":"u64"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:1062:3033":{"id":"a:1:8249:5088-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:2068:1843":{"id":"b:1:2248-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:1488:1827":{"id":"a:1:8250:5087-0:1488:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopeGuard","id":"0:1488:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1585:2784":{"id":"0:1585:2784","crate_id":0,"name":"with_hasher_in","span":{"filename":"src/set.rs","begin":[554,4],"end":[558,5]},"visibility":"public","docs":"Creates a new empty hash set which will use the given hasher to hash\nkeys.\n\nThe hash set is initially created with a capacity of 0, so it will not\nallocate until it is first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe HashSet to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_hasher(s);\nset.insert(2);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hasher",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1587:2192":{"id":"0:1587:2192","crate_id":0,"name":"hasher","span":{"filename":"src/set.rs","begin":[613,4],"end":[615,5]},"visibility":"public","docs":"Returns a reference to the set's [`BuildHasher`].\n\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet hasher = DefaultHashBuilder::default();\nlet set: HashSet<i32> = HashSet::with_hasher(hasher);\nlet hasher: &DefaultHashBuilder = set.hasher();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"S"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1895":{"id":"0:1895","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1938,0],"end":[1947,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1899:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:2089:1695":{"id":"b:1:2542-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12036:11808":{"id":"1:12036:11808","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:51699:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:43333:11774","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12037:5017":{"id":"1:12037:5017","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:43343:11701","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12039:16460":{"id":"1:12039:16460","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:12038:16469"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:43640:11793","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:709:2961":{"id":"b:1:2248-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1960":{"id":"0:1960","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2159,0],"end":[2234,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1965:2213","0:1966:3538","0:1967:2257"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8249:5088-0:1540:144":{"id":"a:1:8249:5088-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:124:2115":{"id":"a:1:2741:4891-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1415:2225":{"id":"0:1415:2225","crate_id":0,"name":"insert_entry","span":{"filename":"src/map.rs","begin":[6362,4],"end":[6378,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:495:290":{"id":"0:495:290","crate_id":0,"name":"allocator","span":{"filename":"src/map.rs","begin":[511,4],"end":[513,5]},"visibility":"public","docs":"Returns a reference to the underlying allocator.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"A"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1062:3033":{"id":"a:1:2684:220-0:1062:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"KeyOrRef","id":"0:1062:3033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12133:19754":{"id":"1:12133:19754","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:718:2509":{"id":"0:718:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[2520,4],"end":[2520,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"V"}}}},"0:1845:953":{"id":"0:1845:953","crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1814,4],"end":[1821,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:2056:1844":{"id":"a:1:2684:220-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1914":{"id":"0:1914","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1977,0],"end":[1993,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1919:2509","0:1920:953","0:1921:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:1922:3016":{"id":"b:1:2248-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363:795":{"id":"0:363:795","crate_id":0,"name":"iter","span":{"filename":"src/raw/mod.rs","begin":[3147,4],"end":[3147,20]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"0:533:3043":{"id":"0:533:3043","crate_id":0,"name":"get_inner","span":{"filename":"src/map.rs","begin":[1347,4],"end":[1357,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:1041:3031":{"id":"b:1:2538-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12087:4788":{"id":"1:12087:4788","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:11712:13646","`DoubleEndedIterator`":"1:7240:121","prim@char":"1:51699:419","str::matches":"1:12087:4788"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:43561:11788","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:658:2880":{"id":"a:1:8249:5088-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:218:2216":{"id":"0:218:2216","crate_id":0,"name":"find_insert_slot","span":{"filename":"src/raw/mod.rs","begin":[1758,4],"end":[1784,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Searches for an empty or deleted bucket which is suitable for inserting\na new element, returning the `index` for the new [`Bucket`].\n\nThis function does not make any changes to the `data` part of the table, or any\nchanges to the `items` or `growth_left` field of the table.\n\nThe table must have at least 1 empty or deleted `bucket`, otherwise this function\nwill never return (will go into an infinite loop) for tables larger than the group\nwidth, or return an index outside of the table indices range if the table is less\nthan the group width.\n\n# Note\n\nCalling this function is always safe, but attempting to write data at\nthe index returned by this function when the table is less than the group width\nand if there was not at least one empty bucket in the table will cause immediate\n[`undefined behavior`]. This is because in this case the function will return\n`self.bucket_mask + 1` as an index due to the trailing EMPTY control bytes outside\nthe table range.\n\n[`undefined behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{"`Bucket`":"0:97:1927"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:397:2572":{"id":"b:1:2553-0:397:2572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHashInner","id":"0:397:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:1117:3035":{"id":"a:1:8249:5088-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:8250:5087-0:1747:4467":{"id":"a:1:8250:5087-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2741:4891-0:1922:3016":{"id":"a:1:2741:4891-0:1922:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:1741:4449":{"id":"b:1:2248-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:1041:3031":{"id":"a:1:8250:5087-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:589:2213":{"id":"0:589:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[1747,4],"end":[1762,5]},"visibility":"public","docs":"Inserts a key-value pair into the map.\n\nIf the map did not have this key present, [`None`] is returned.\n\nIf the map did have this key present, the value is updated, and the old\nvalue is returned. The key is not updated, though; this matters for\ntypes that can be `==` without being identical. See the [`std::collections`]\n[module-level documentation] for more.\n\n[`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None\n[`std::collections`]: https://doc.rust-lang.org/std/collections/index.html\n[module-level documentation]: https://doc.rust-lang.org/std/collections/index.html#insert-and-complex-keys\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nassert_eq!(map.insert(37, \"a\"), None);\nassert_eq!(map.is_empty(), false);\n\nmap.insert(37, \"b\");\nassert_eq!(map.insert(37, \"c\"), Some(\"b\"));\nassert_eq!(map[&37], \"c\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["k",{"generic":"K"}],["v",{"generic":"V"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12072:21082":{"id":"1:12072:21082","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:11712:13646","str::split":"1:12060:2521","prim@char":"1:51699:419","str::split_terminator":"1:12069:21081"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:43425:11780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2119":{"id":"0:129:2119","crate_id":0,"name":"items","span":{"filename":"src/raw/mod.rs","begin":[798,4],"end":[798,16]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1900":{"id":"0:1900","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1949,0],"end":[1956,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1904:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:446:2740":{"id":"0:446:2740","crate_id":0,"name":"hash_builder","span":{"filename":"src/map.rs","begin":[189,4],"end":[189,30]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"S"}}},"b:1:2548-0:2056:1844":{"id":"b:1:2548-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1368:3834":{"id":"0:1368:3834","crate_id":0,"name":"or_insert_with_key","span":{"filename":"src/map.rs","begin":[5761,4],"end":[5773,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting, if empty, the result of the default function.\nThis method allows for generating key-derived values for insertion by providing the default\nfunction an access to the borrower form of the key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, usize> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count());\nassert_eq!(map[\"poneyland\"], 9);\n\n// existing key\n*map.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;\nassert_eq!(map[\"poneyland\"], 18);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:2056:1844":{"id":"a:1:8249:5088-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1771":{"id":"0:1771","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1686,0],"end":[1697,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["0:1774:2509","0:1775:953","0:1776:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2016-0:441:142":{"id":"0:2016-0:441:142","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,0],"end":[117,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::map::HashMap","name":"HashMap","id":"0:441:142","glob":false}}},"0:311:2135":{"id":"0:311:2135","crate_id":0,"name":"DATA_NEEDS_DROP","span":{"filename":"src/raw/mod.rs","begin":[2903,4],"end":[2903,57]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"_"}}},"a:1:2684:220-0:305:2293":{"id":"a:1:2684:220-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:510:2939":{"id":"0:510:2939","crate_id":0,"name":"extract_if","span":{"filename":"src/map.rs","begin":[974,4],"end":[985,5]},"visibility":"public","docs":"Drains elements which are true under the given predicate,\nand returns an iterator over the removed items.\n\nIn other words, move all pairs `(k, v)` such that `f(&k, &mut v)` returns `true` out\ninto another iterator.\n\nNote that `extract_if` lets you mutate every value in the filter closure, regardless of\nwhether you choose to keep or remove it.\n\nIf the returned `ExtractIf` is not exhausted, e.g. because it is dropped without iterating\nor the iteration short-circuits, then the remaining elements will be retained.\nUse [`retain()`] with a negated predicate if you do not need the returned iterator.\n\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();\n\nlet drained: HashMap<i32, i32> = map.extract_if(|k, _v| k % 2 == 0).collect();\n\nlet mut evens = drained.keys().cloned().collect::<Vec<_>>();\nlet mut odds = map.keys().cloned().collect::<Vec<_>>();\nevens.sort();\nodds.sort();\n\nassert_eq!(evens, vec![0, 2, 4, 6]);\nassert_eq!(odds, vec![1, 3, 5, 7]);\n\nlet mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();\n\n{   // Iterator is dropped without being consumed.\n    let d = map.extract_if(|k, _v| k % 2 != 0);\n}\n\n// ExtractIf was not exhausted, therefore no elements were drained.\nassert_eq!(map.len(), 8);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ExtractIf","id":"0:774:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2083:1362":{"id":"0:2083:1362","crate_id":0,"name":"size","span":{"filename":"src/raw/mod.rs","begin":[226,4],"end":[226,15]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1196":{"id":"0:1196","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4757,0],"end":[4775,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1200:2509","0:1201:953","0:1202:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8249:5088-0:2068:1843":{"id":"a:1:8249:5088-0:2068:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:412:2509":{"id":"0:412:2509","crate_id":0,"name":"Item","span":{"filename":"src/raw/mod.rs","begin":[3309,4],"end":[3309,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"b:1:2548-0:1135:3180":{"id":"b:1:2548-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:97:1927":{"id":"b:1:2251-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12060:2521":{"id":"1:12060:2521","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:11712:13646","`DoubleEndedIterator`":"1:7240:121","prim@char":"1:51699:419","str::split_whitespace":"1:12038:16469","str::rsplit":"1:12066:19888"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:43357:11436","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:1720:2940":{"id":"a:1:2684:220-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2072":{"id":"0:2072","crate_id":0,"name":null,"span":{"filename":"src/raw/bitmask.rs","begin":[105,15],"end":[105,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2073:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:812:3251":{"id":"b:1:2538-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:947:3659":{"id":"0:947:3659","crate_id":0,"name":"insert_hashed_nocheck","span":{"filename":"src/map.rs","begin":[4005,4],"end":[4016,5]},"visibility":"public","docs":"Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"c\";\nlet hash = compute_hash(map.hasher(), &key);\n\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {\n    RawEntryMut::Occupied(_) => panic!(),\n    RawEntryMut::Vacant(v) => assert_eq!(\n        v.insert_hashed_nocheck(hash, key, 300),\n        (&mut \"c\", &mut 300)\n    ),\n}\n\nassert_eq!(map[&\"c\"], 300);\n```","links":{},"attrs":["#[inline]","#[allow(clippy :: shadow_unrelated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:441:142":{"id":"a:1:8250:5087-0:441:142","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:794:2941":{"id":"b:1:3319-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2087:423":{"id":"0:2087:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/mod.rs","begin":[224,15],"end":[224,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1263":{"id":"0:1263","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4868,0],"end":[4883,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1267:2509","0:1268:953","0:1269:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:402:2349":{"id":"0:402:2349","crate_id":0,"name":"group","span":{"filename":"src/raw/mod.rs","begin":[3253,4],"end":[3253,16]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:1:2548-0:1026:3021":{"id":"b:1:2548-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1062:3033":{"id":"0:1062:3033","crate_id":0,"name":"KeyOrRef","span":{"filename":"src/map.rs","begin":[4427,0],"end":[4430,1]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:1066:3034","0:1069:3748"],"impls":["0:1072","a:1:2701:228-0:1062:3033","a:1:8249:5088-0:1062:3033","a:1:8250:5087-0:1062:3033","a:1:2684:220-0:1062:3033","a:1:2741:4891-0:1062:3033","b:1:2542-0:1062:3033","b:1:2248-0:1062:3033","b:1:2553-0:1062:3033","b:1:2251-0:1062:3033","b:1:2538-0:1062:3033","b:1:3319-0:1062:3033","b:1:2548-0:1062:3033","0:1077"]}}},"b:1:2248-0:681:2954":{"id":"b:1:2248-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:807:2860":{"id":"a:1:8250:5087-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1110":{"id":"0:1110","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4520,0],"end":[4529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1116:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1128":{"id":"0:1128","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4567,0],"end":[4573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1134:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1000:3019":{"id":"a:1:2741:4891-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1560":{"id":"0:1560","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[259,0],"end":[432,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1564:2128","0:1565:795","0:1566:811","0:1567:2186","0:1568:2307","0:1569:2918","0:1572:2939","0:1574:2185"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1707:2871":{"id":"b:1:3319-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1959:668":{"id":"0:1959:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2154,4],"end":[2156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1938:3019":{"id":"b:1:2548-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1171:2509":{"id":"0:1171:2509","crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[4663,4],"end":[4663,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]}}}},"a:1:2701:228-0:982:3016":{"id":"a:1:2701:228-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1851:668":{"id":"0:1851:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1836,4],"end":[1838,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:1041:3031":{"id":"b:1:2553-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1657:697":{"id":"0:1657:697","crate_id":0,"name":"from_iter","span":{"filename":"src/set.rs","begin":[1317,4],"end":[1321,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:2514":{"id":"0:283:2514","crate_id":0,"name":"next_ctrl","span":{"filename":"src/raw/mod.rs","begin":[2743,4],"end":[2743,24]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}}}},"0:636":{"id":"0:636","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2261,0],"end":[2278,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"ahash\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]},"len":"N"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:642:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:807:2860":{"id":"b:1:2248-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1125:729":{"id":"0:1125:729","crate_id":0,"name":"hash","span":{"filename":"src/map.rs","begin":[4562,4],"end":[4562,13]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:332:286":{"id":"0:332:286","crate_id":0,"name":"alloc","span":{"filename":"src/raw/mod.rs","begin":[3074,4],"end":[3074,12]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"A"}}},"0:1753":{"id":"0:1753","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1636,0],"end":[1644,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"items":["0:1758:2509","0:1759:2510","0:1760:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148:2165":{"id":"0:148:2165","crate_id":0,"name":"bucket","span":{"filename":"src/raw/mod.rs","begin":[952,4],"end":[956,5]},"visibility":"public","docs":"Returns a pointer to an element in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1295":{"id":"0:1295","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4918,0],"end":[4918,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1711:2510":{"id":"b:1:3319-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:621:668":{"id":"0:621:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2197,4],"end":[2199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1319:3582":{"id":"0:1319:3582","crate_id":0,"name":"and_replace_entry_with","span":{"filename":"src/map.rs","begin":[5167,4],"end":[5175,5]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nan occupied entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nlet entry = map\n    .entry(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| panic!());\n\nmatch entry {\n    Entry::Vacant(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n    }\n    Entry::Occupied(_) => panic!(),\n}\n\nmap.insert(\"poneyland\", 42);\n\nlet entry = map\n    .entry(\"poneyland\")\n    .and_replace_entry_with(|k, v| {\n        assert_eq!(k, &\"poneyland\");\n        assert_eq!(v, 42);\n        Some(v + 1)\n    });\n\nmatch entry {\n    Entry::Occupied(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n        assert_eq!(e.get(), &43);\n    }\n    Entry::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = map\n    .entry(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| None);\n\nmatch entry {\n    Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),\n    Entry::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:1859":{"id":"0:75:1859","crate_id":0,"name":"alloc_err","span":{"filename":"src/raw/mod.rs","begin":[88,4],"end":[93,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Error to return on allocation error.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["layout",{"resolved_path":{"name":"Layout","id":"1:44347:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:1878":{"id":"0:81:1878","crate_id":0,"name":"h1","span":{"filename":"src/raw/mod.rs","begin":[124,0],"end":[127,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Primary hash function, used to select the initial bucket to probe from.","links":{},"attrs":["#[inline]","#[allow(clippy :: cast_possible_truncation)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hash",{"primitive":"u64"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:359:2308":{"id":"a:1:2741:4891-0:359:2308","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:737:2843":{"id":"b:1:2251-0:737:2843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Keys","id":"0:737:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:1026:3021":{"id":"b:1:2251-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:1135:3180":{"id":"b:1:2553-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:1000:3019":{"id":"b:1:2553-0:1000:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197:2309":{"id":"0:197:2309","crate_id":0,"name":"drain_iter_from","span":{"filename":"src/raw/mod.rs","begin":[1466,4],"end":[1474,5]},"visibility":"public","docs":"Returns an iterator which removes all elements from the table without\nfreeing the memory.\n\nIteration starts at the provided iterator's current location.\n\nIt is up to the caller to ensure that the iterator is valid for this\n`RawTable` and covers all items that remain in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"RawDrain","id":"0:359:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:827:1606":{"id":"0:827:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[2960,13],"end":[2960,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:2081:423":{"id":"0:2081:423","crate_id":0,"name":"clone","span":{"filename":"src/raw/mod.rs","begin":[70,15],"end":[70,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2883,0],"end":[2883,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60:784":{"id":"0:60:784","crate_id":0,"name":"into_iter","span":{"filename":"src/raw/bitmask.rs","begin":[96,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:2528":{"id":"0:386:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/raw/mod.rs","begin":[3211,4],"end":[3213,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:658:2880":{"id":"0:658:2880","crate_id":0,"name":"IterMut","span":{"filename":"src/map.rs","begin":[2357,0],"end":[2361,1]},"visibility":"public","docs":"A mutable iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(&'a K, &'a mut V)`.\n\nThis `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`iter_mut`]: struct.HashMap.html#method.iter_mut\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();\n\nlet mut iter = map.iter_mut();\niter.next().map(|(_, v)| v.push_str(\" Mississippi\"));\niter.next().map(|(_, v)| v.push_str(\" Mississippi\"));\n\n// It is fused iterator\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n\nassert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());\nassert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:662:1659","0:663:860"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:667","a:1:2701:228-0:658:2880","a:1:8249:5088-0:658:2880","a:1:8250:5087-0:658:2880","a:1:2741:4891-0:658:2880","b:1:2542-0:658:2880","b:1:2248-0:658:2880","b:1:2553-0:658:2880","b:1:2251-0:658:2880","b:1:7206-0:658:2880","b:1:2538-0:658:2880","b:1:3319-0:658:2880","b:1:2548-0:658:2880","0:1210","0:1207","0:1203","0:1196","0:664"]}}},"0:901:3517":{"id":"0:901:3517","crate_id":0,"name":"from_hash","span":{"filename":"src/map.rs","begin":[3344,4],"end":[3349,5]},"visibility":"public","docs":"Access an immutable entry by hash and matching function.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::HashMap;\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nassert_eq!(map.raw_entry().from_hash(hash, |k| k == &key), Some((&\"a\", &100)));\n```","links":{},"attrs":["#[inline]","#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["is_match",{"generic":"F"}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7206-0:326:2318":{"id":"b:1:7206-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:1:2553-0:982:3016":{"id":"b:1:2553-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[512,0],"end":[616,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1584:290","0:1585:2784","0:1586:2801","0:1587:2192"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1604:4130":{"id":"0:1604:4130","crate_id":0,"name":"contains","span":{"filename":"src/set.rs","begin":[859,4],"end":[864,5]},"visibility":"public","docs":"Returns `true` if the set contains a value.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet set: HashSet<_> = [1, 2, 3].iter().cloned().collect();\nassert_eq!(set.contains(&1), true);\nassert_eq!(set.contains(&4), false);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1839":{"id":"0:1839","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1805,0],"end":[1828,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1844:2509","0:1845:953","0:1846:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1673":{"id":"0:1673","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1369,0],"end":[1391,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7211:4017","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1678:4038"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1921:2528":{"id":"0:1921:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1990,4],"end":[1992,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2092:1700":{"id":"0:2092:1700","crate_id":0,"name":"AllocError","span":{"filename":"src/lib.rs","begin":[161,4],"end":[164,5]},"visibility":"default","docs":"The memory allocator returned an error","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:2093:1702"],"fields_stripped":false}},"discriminant":null}}},"4:5384:2314":{"id":"4:5384:2314","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1269:2528":{"id":"0:1269:2528","crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[4880,4],"end":[4882,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1720:2940":{"id":"b:1:2548-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:2074:1852":{"id":"a:1:2741:4891-0:2074:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fallibility","id":"0:2074:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:393:2304":{"id":"b:1:2538-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:709:2961":{"id":"b:1:2538-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:95:1922":{"id":"a:1:8250:5087-0:95:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1366:3549":{"id":"0:1366:3549","crate_id":0,"name":"or_insert_with","span":{"filename":"src/map.rs","begin":[5730,4],"end":[5739,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_insert_with(|| 3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry_ref(\"poneyland\").or_insert_with(|| 10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:982:3016":{"id":"b:1:3319-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:1707:2871":{"id":"b:1:2548-0:1707:2871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:1711:2510":{"id":"a:1:2684:220-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:1727:4458":{"id":"b:1:3319-0:1727:4458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:994":{"id":"0:994","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4205,0],"end":[4212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:999:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1861":{"id":"0:1861","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1859,0],"end":[1882,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1866:2509","0:1867:953","0:1868:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:1747:4467":{"id":"b:1:2538-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:7206-0:1741:4449":{"id":"b:1:7206-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:244:2150":{"id":"0:244:2150","crate_id":0,"name":"free_buckets","span":{"filename":"src/raw/mod.rs","begin":[2353,4],"end":[2356,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["table_layout",{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:305:2293":{"id":"b:1:2553-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:722":{"id":"0:722","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2532,0],"end":[2537,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7263:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:726:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:850:3473":{"id":"a:1:8250:5087-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1310:2213":{"id":"0:1310:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[4945,4],"end":[4957,5]},"visibility":"public","docs":"Sets the value of the entry, and returns an OccupiedEntry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet entry = map.entry(\"horseyland\").insert(37);\n\nassert_eq!(entry.key(), &\"horseyland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"name":"OccupiedEntry","id":"0:1000:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1343:3583":{"id":"0:1343:3583","crate_id":0,"name":"replace_entry_with","span":{"filename":"src/map.rs","begin":[5535,4],"end":[5563,5]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nthe entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.insert(\"poneyland\", 42);\n\nlet entry = match map.entry(\"poneyland\") {\n    Entry::Occupied(e) => {\n        e.replace_entry_with(|k, v| {\n            assert_eq!(k, &\"poneyland\");\n            assert_eq!(v, 42);\n            Some(v + 1)\n        })\n    }\n    Entry::Vacant(_) => panic!(),\n};\n\nmatch entry {\n    Entry::Occupied(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n        assert_eq!(e.get(), &43);\n    }\n    Entry::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = match map.entry(\"poneyland\") {\n    Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),\n    Entry::Vacant(_) => panic!(),\n};\n\nmatch entry {\n    Entry::Vacant(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n    }\n    Entry::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1342:3923":{"id":"0:1342:3923","crate_id":0,"name":"replace_key","span":{"filename":"src/map.rs","begin":[5481,4],"end":[5484,5]},"visibility":"public","docs":"Replaces the key in the hash map with the key used to create this entry.\n\n# Panics\n\nWill panic if this OccupiedEntry was created through [`Entry::insert`].\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\nuse std::rc::Rc;\n\nlet mut map: HashMap<Rc<String>, usize> = HashMap::with_capacity(6);\nlet mut keys_one: Vec<Rc<String>> = Vec::with_capacity(6);\nlet mut keys_two: Vec<Rc<String>> = Vec::with_capacity(6);\n\nfor (value, key) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().enumerate() {\n    let rc_key = Rc::new(key.to_owned());\n    keys_one.push(rc_key.clone());\n    map.insert(rc_key.clone(), value);\n    keys_two.push(Rc::new(key.to_owned()));\n}\n\nassert!(\n    keys_one.iter().all(|key| Rc::strong_count(key) == 2)\n        && keys_two.iter().all(|key| Rc::strong_count(key) == 1)\n);\n\nreclaim_memory(&mut map, &keys_two);\n\nassert!(\n    keys_one.iter().all(|key| Rc::strong_count(key) == 1)\n        && keys_two.iter().all(|key| Rc::strong_count(key) == 2)\n);\n\nfn reclaim_memory(map: &mut HashMap<Rc<String>, usize>, keys: &[Rc<String>]) {\n    for key in keys {\n        if let Entry::Occupied(entry) = map.entry(key.clone()) {\n        // Replaces the entry's key with our version of it in `keys`.\n            entry.replace_key();\n        }\n    }\n}\n```","links":{"`Entry::insert`":"0:1310:2213"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"K"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1245:811":{"id":"0:1245:811","crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[4838,4],"end":[4840,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:658:2880":{"id":"a:1:8250:5087-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1579:2770":{"id":"0:1579:2770","crate_id":0,"name":"with_capacity_and_hasher","span":{"filename":"src/set.rs","begin":[505,4],"end":[509,5]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity, using\n`hasher` to hash the keys.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe HashSet to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_capacity_and_hasher(10, s);\nset.insert(1);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}],["hasher",{"generic":"S"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1659":{"id":"0:1659","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1326,0],"end":[1343,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"ahash\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"N"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1664:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1783":{"id":"0:1783","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1706,0],"end":[1710,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:1707:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"bindings":[]}}}},"items":["0:1785:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8249:5088-0:1715:2907":{"id":"a:1:8249:5088-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:858:3267":{"id":"a:1:2701:228-0:858:3267","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:1734:4439":{"id":"b:1:2248-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:727":{"id":"0:727","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2539,0],"end":[2539,73]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2088:2494":{"id":"0:2088:2494","crate_id":0,"name":"clone_from_spec","span":{"filename":"src/raw/mod.rs","begin":[2576,8],"end":[2578,9]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:2133":{"id":"0:143:2133","crate_id":0,"name":"with_capacity_in","span":{"filename":"src/raw/mod.rs","begin":[898,4],"end":[904,5]},"visibility":"public","docs":"Allocates a new hash table using the given allocator, with at least enough capacity for\ninserting the given number of elements without reallocating.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8250:5087-0:1741:4449":{"id":"a:1:8250:5087-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:168:2246":{"id":"0:168:2246","crate_id":0,"name":"find_or_find_insert_slot","span":{"filename":"src/raw/mod.rs","begin":[1256,4],"end":[1272,5]},"visibility":"public","docs":"Searches for an element in the table. If the element is not found,\nreturns `Err` with the position of a slot where an element with the\nsame hash could be inserted.\n\nThis function may resize the table if additional space is required for\ninserting an element.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"1:2926:2193","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:1949:3021":{"id":"a:1:2701:228-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:326:2318":{"id":"b:1:2251-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:1734:4439":{"id":"b:1:2538-0:1734:4439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Difference","id":"0:1734:4439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12032:21078":{"id":"1:12032:21078","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:51705:1397","crate::ops::IndexMut":"1:2985:4991","str::slice_unchecked":"1:12031:21077"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12090:21085":{"id":"1:12090:21085","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:11712:13646","`DoubleEndedIterator`":"1:7240:121","prim@char":"1:51699:419","str::matches":"1:12087:4788"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:43579:11789","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11732:13652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7206-0:658:2880":{"id":"b:1:7206-0:658:2880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1413:3606":{"id":"0:1413:3606","crate_id":0,"name":"into_key","span":{"filename":"src/map.rs","begin":[6322,4],"end":[6327,5]},"visibility":"public","docs":"Take ownership of the key.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nlet key: &str = \"poneyland\";\n\nmatch map.entry_ref(key) {\n    EntryRef::Occupied(_) => panic!(),\n    EntryRef::Vacant(v) => assert_eq!(v.into_key(), \"poneyland\".to_owned()),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"K"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1578:2814":{"id":"0:1578:2814","crate_id":0,"name":"with_hasher","span":{"filename":"src/set.rs","begin":[467,4],"end":[471,5]},"visibility":"public","docs":"Creates a new empty hash set which will use the given hasher to hash\nkeys.\n\nThe hash set is initially created with a capacity of 0, so it will not\nallocate until it is first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe HashSet to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_map::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_hasher(s);\nset.insert(2);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hasher",{"generic":"S"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2701:228-0:97:1927":{"id":"a:1:2701:228-0:97:1927","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:216:2247":{"id":"0:216:2247","crate_id":0,"name":"find_or_find_insert_slot_inner","span":{"filename":"src/raw/mod.rs","begin":[1682,4],"end":[1722,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Searches for an element in the table, or a potential slot where that element could be\ninserted.\n\nThis uses dynamic dispatch to reduce the amount of code generated, but that is\neliminated by LLVM optimizations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"primitive":"usize"}],"output":{"primitive":"bool"}}}},"generic_params":[]}],"lifetime":null}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41538:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"InsertSlot","id":"0:95:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1643":{"id":"0:1643","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1291,0],"end":[1299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1647:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:1938:3019":{"id":"a:1:2741:4891-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1569:2918":{"id":"0:1569:2918","crate_id":0,"name":"retain","span":{"filename":"src/set.rs","begin":[369,4],"end":[374,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&e)` returns `false`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet xs = [1,2,3,4,5,6];\nlet mut set: HashSet<i32> = xs.iter().cloned().collect();\nset.retain(|&k| k % 2 == 0);\nassert_eq!(set.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:305:2293":{"id":"a:1:8249:5088-0:305:2293","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIter","id":"0:305:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1685":{"id":"0:1685","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1407,0],"end":[1438,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"1:2817:4301","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"items":["0:1689:186","0:1690:364"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8249:5088-0:750:2853":{"id":"a:1:8249:5088-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:7206-0:807:2860":{"id":"b:1:7206-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:228:2418":{"id":"0:228:2418","crate_id":0,"name":"is_in_same_group","span":{"filename":"src/raw/mod.rs","begin":[1959,4],"end":[1964,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}],["new_i",{"primitive":"usize"}],["hash",{"primitive":"u64"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:279:2295":{"id":"b:1:2538-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:929:3049":{"id":"0:929:3049","crate_id":0,"name":"get_key_value","span":{"filename":"src/map.rs","begin":[3711,4],"end":[3716,5]},"visibility":"public","docs":"Gets a reference to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.get_key_value(), (&\"a\", &100)),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191:811":{"id":"0:191:811","crate_id":0,"name":"len","span":{"filename":"src/raw/mod.rs","begin":[1394,4],"end":[1396,5]},"visibility":"public","docs":"Returns the number of elements in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:999:668":{"id":"0:999:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4206,4],"end":[4211,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1595:2190":{"id":"0:1595:2190","crate_id":0,"name":"shrink_to","span":{"filename":"src/set.rs","begin":[714,4],"end":[716,5]},"visibility":"public","docs":"Shrinks the capacity of the set with a lower limit. It will drop\ndown no lower than the supplied limit while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\nPanics if the current capacity is smaller than the supplied\nminimum capacity.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::with_capacity(100);\nset.insert(1);\nset.insert(2);\nassert!(set.capacity() >= 100);\nset.shrink_to(10);\nassert!(set.capacity() >= 10);\nset.shrink_to(0);\nassert!(set.capacity() >= 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["min_capacity",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:1082:3032":{"id":"b:1:2248-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:305:2293":{"id":"0:305:2293","crate_id":0,"name":"RawIter","span":{"filename":"src/raw/mod.rs","begin":[2897,0],"end":[2900,1]},"visibility":"public","docs":"Iterator which returns a raw pointer to every full bucket in the table.\n\nFor maximum flexibility this iterator is not bound by a lifetime, but you\nmust observe several rules when using it:\n- You must not free the hash table while iterating (including via growing/shrinking).\n- It is fine to erase a bucket that has been yielded by the iterator.\n- Erasing a bucket that has not yet been yielded by the iterator may still\n  result in the iterator yielding that bucket (unless `reflect_remove` is called).\n- It is unspecified whether an element inserted after the iterator was\n  created will be yielded by that iterator (unless `reflect_insert` is called).\n- The order in which the iterator yields bucket is unspecified and may\n  change in the future.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:307:795","0:308:2119"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:309","a:1:2701:228-0:305:2293","a:1:8249:5088-0:305:2293","a:1:8250:5087-0:305:2293","a:1:2684:220-0:305:2293","a:1:2741:4891-0:305:2293","b:1:2542-0:305:2293","b:1:2248-0:305:2293","b:1:2553-0:305:2293","b:1:2251-0:305:2293","b:1:7206-0:305:2293","b:1:2538-0:305:2293","b:1:3319-0:305:2293","b:1:2548-0:305:2293","b:4:684-0:305:2293","0:324","0:316","0:322","0:313"]}}},"0:622":{"id":"0:622","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2202,0],"end":[2226,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:627:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1424":{"id":"0:1424","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[6401,0],"end":[6480,1]},"visibility":"default","docs":"Inserts all new key-values from the iterator and replaces values with existing\nkeys with new values returned from the iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7211:4017","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1429:4038"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2251-0:671:2510":{"id":"b:1:2251-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2047:832":{"id":"0:2047:832","crate_id":0,"name":"load","span":{"filename":"src/raw/sse2.rs","begin":[52,4],"end":[54,5]},"visibility":"crate","docs":"Loads a group of bytes starting at the given address.","links":{},"attrs":["#[inline]","#[allow(clippy :: cast_ptr_alignment)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2168":{"id":"0:149:2168","crate_id":0,"name":"erase_no_drop","span":{"filename":"src/raw/mod.rs","begin":[960,4],"end":[963,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Erases an element from the table without dropping it.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["item",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1365:3538":{"id":"0:1365:3538","crate_id":0,"name":"or_insert","span":{"filename":"src/map.rs","begin":[5700,4],"end":[5709,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_insert(3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry_ref(\"poneyland\").or_insert(10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Q"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1588":{"id":"0:1588","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[618,0],"end":[1224,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1592:2200","0:1593:2205","0:1594:2998","0:1595:2190","0:1596:4438","0:1598:4448","0:1600:4457","0:1602:63","0:1604:4130","0:1606:2257","0:1608:4482","0:1609:4491","0:1612:4495","0:1616:3015","0:1617:4522","0:1619:4529","0:1621:4536","0:1622:2213","0:1623:3163","0:1624:2314","0:1625:2179","0:1627:4090"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:865":{"id":"0:865","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3151,0],"end":[3206,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:871:3513","0:873:3514"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12041:21080":{"id":"1:12041:21080","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:43621:11791","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:4891-0:2062:2602":{"id":"a:1:2741:4891-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2538-0:124:2115":{"id":"b:1:2538-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1277":{"id":"0:1277","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4892,0],"end":[4898,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["0:1280:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:4891-0:982:3016":{"id":"a:1:2741:4891-0:982:3016","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Entry","id":"0:982:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:2089:1695":{"id":"b:1:3319-0:2089:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TryReserveError","id":"0:2089:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2701:228-0:1938:3019":{"id":"a:1:2701:228-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:393:2304":{"id":"b:1:2248-0:393:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterHash","id":"0:393:2304","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:2082:1913":{"id":"a:1:8249:5088-0:2082:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TableLayout","id":"0:2082:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1094":{"id":"0:1094","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4501,0],"end":[4509,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8250:5087-0:1082:3032":{"id":"a:1:8250:5087-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:484":{"id":"0:484","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[422,0],"end":[506,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:488:2814","0:489:2770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2701:228-0:1041:3031":{"id":"a:1:2701:228-0:1041:3031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EntryRef","id":"0:1041:3031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:676":{"id":"0:676","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2413,0],"end":[2422,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:680:795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:4:684-0:1540:144":{"id":"b:4:684-0:1540:144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["4:686:3748","4:687:4173","4:688:11014"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8250:5087-0:671:2510":{"id":"a:1:8250:5087-0:671:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2684:220-0:2062:2602":{"id":"a:1:2684:220-0:2062:2602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BitMask","id":"0:2062:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1652:694":{"id":"0:1652:694","crate_id":0,"name":"from","span":{"filename":"src/set.rs","begin":[1305,4],"end":[1307,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["map",{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"tuple":[]}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:664":{"id":"0:664","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2366,0],"end":[2366,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:658:2880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:1747:4467":{"id":"b:1:2548-0:1747:4467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Union","id":"0:1747:4467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[3113,0],"end":[3126,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"nightly\"))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:346:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1616:3015":{"id":"0:1616:3015","crate_id":0,"name":"entry","span":{"filename":"src/set.rs","begin":[1020,4],"end":[1025,5]},"visibility":"public","docs":"Gets the given value's corresponding entry in the set for in-place manipulation.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_set::Entry::*;\n\nlet mut singles = HashSet::new();\nlet mut dupes = HashSet::new();\n\nfor ch in \"a short treatise on fungi\".chars() {\n    if let Vacant(dupe_entry) = dupes.entry(ch) {\n        // We haven't already seen a duplicate, so\n        // check if we've at least seen it once.\n        match singles.entry(ch) {\n            Vacant(single_entry) => {\n                // We found a new character for the first time.\n                single_entry.insert()\n            }\n            Occupied(single_entry) => {\n                // We've already seen this once, \"move\" it to dupes.\n                single_entry.remove();\n                dupe_entry.insert();\n            }\n        }\n    }\n}\n\nassert!(!singles.contains(&'t') && dupes.contains(&'t'));\nassert!(singles.contains(&'u') && !dupes.contains(&'u'));\nassert!(!singles.contains(&'v') && !dupes.contains(&'v'));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"Entry","id":"0:1922:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1117:3035":{"id":"b:1:2251-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:1720:2940":{"id":"b:1:2542-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:326:2318":{"id":"a:1:2741:4891-0:326:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8249:5088-0:279:2295":{"id":"a:1:8249:5088-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:946:2213":{"id":"0:946:2213","crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[3964,4],"end":[3971,5]},"visibility":"public","docs":"Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"c\") {\n    RawEntryMut::Occupied(_) => panic!(),\n    RawEntryMut::Vacant(v) => assert_eq!(v.insert(\"c\", 300), (&mut \"c\", &mut 300)),\n}\n\nassert_eq!(map[&\"c\"], 300);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1938:3019":{"id":"b:1:2251-0:1938:3019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntry","id":"0:1938:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:234:1916":{"id":"0:234:1916","crate_id":0,"name":"buckets","span":{"filename":"src/raw/mod.rs","begin":[2120,4],"end":[2122,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:531:3049":{"id":"0:531:3049","crate_id":0,"name":"get_key_value","span":{"filename":"src/map.rs","begin":[1335,4],"end":[1344,5]},"visibility":"public","docs":"Returns the key-value pair corresponding to the supplied key.\n\nThe supplied key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));\nassert_eq!(map.get_key_value(&2), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:1082:3032":{"id":"b:1:2553-0:1082:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedEntryRef","id":"0:1082:3032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:114:2075":{"id":"0:114:2075","crate_id":0,"name":"write","span":{"filename":"src/raw/mod.rs","begin":[623,4],"end":[625,5]},"visibility":"crate","docs":"Overwrites a memory location with the given `value` without reading\nor dropping the old value (like [`ptr::write`] function).\n\n# Safety\n\nSee [`ptr::write`] for safety concerns.\n\n# Note\n\n[`Hash`] and [`Eq`] on the new `T` value and its borrowed form *must* match\nthose for the old `T` value, as the map will not re-evaluate where the new\nvalue should go, meaning the value may become \"lost\" if their location\ndoes not reflect their state.\n\n[`ptr::write`]: https://doc.rust-lang.org/core/ptr/fn.write.html\n[`Hash`]: https://doc.rust-lang.org/core/hash/trait.Hash.html\n[`Eq`]: https://doc.rust-lang.org/core/cmp/trait.Eq.html","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:2077:1854":{"id":"0:2077:1854","crate_id":0,"name":"Infallible","span":{"filename":"src/raw/mod.rs","begin":[73,4],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1966:3538":{"id":"0:1966:3538","crate_id":0,"name":"or_insert","span":{"filename":"src/set.rs","begin":[2203,4],"end":[2211,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting if it was vacant.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\n\n// nonexistent key\nset.entry(\"poneyland\").or_insert();\nassert!(set.contains(\"poneyland\"));\n\n// existing key\nset.entry(\"poneyland\").or_insert();\nassert!(set.contains(\"poneyland\"));\nassert_eq!(set.len(), 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1937:668":{"id":"0:1937:668","crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2067,4],"end":[2072,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12013:21073":{"id":"1:12013:21073","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8249:5088-0:709:2961":{"id":"a:1:8249:5088-0:709:2961","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2553-0:763:2907":{"id":"b:1:2553-0:763:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:763:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:794:2941":{"id":"a:1:8249:5088-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:506:2186":{"id":"0:506:2186","crate_id":0,"name":"is_empty","span":{"filename":"src/map.rs","begin":[845,4],"end":[847,5]},"visibility":"public","docs":"Returns `true` if the map contains no elements.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\nassert!(a.is_empty());\na.insert(1, \"a\");\nassert!(!a.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:850:3473":{"id":"b:1:2548-0:850:3473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawVacantEntryMut","id":"0:850:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:7206-0:279:2295":{"id":"b:1:7206-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:7208:2509","1:7209:2510","1:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[327,0],"end":[420,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"ahash\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HashMap","id":"0:441:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"resolved_path":{"name":"DefaultHashBuilder","id":"0:440:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:482:2124","0:483:2133"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:602:3266":{"id":"0:602:3266","crate_id":0,"name":"raw_entry","span":{"filename":"src/map.rs","begin":[2087,4],"end":[2089,5]},"visibility":"public","docs":"Creates a raw immutable entry builder for the HashMap.\n\nRaw entries provide the lowest level of control for searching and\nmanipulating a map. They must be manually initialized with a hash and\nthen manually searched.\n\nThis is useful for\n* Hash memoization\n* Using a search key that doesn't work with the Borrow trait\n* Using custom comparison logic without newtype wrappers\n\nUnless you are in such a situation, higher-level and more foolproof APIs like\n`get` should be preferred.\n\nImmutable raw entries have very limited use; you might instead want `raw_entry_mut`.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nfor k in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] {\n    let hash = compute_hash(map.hasher(), k);\n    let v = map.get(&k).cloned();\n    let kv = v.as_ref().map(|v| (&k, v));\n\n    println!(\"Key: {} and value: {:?}\", k, v);\n\n    assert_eq!(map.raw_entry().from_key(&k), kv);\n    assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);\n    assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RawEntryBuilder","id":"0:858:3267","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2684:220-0:794:2941":{"id":"a:1:2684:220-0:794:2941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIfInner","id":"0:794:2941","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:124:2115":{"id":"b:1:3319-0:124:2115","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawTableInner","id":"0:124:2115","args":{"angle_bracketed":{"args":[{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:279:2295":{"id":"b:1:3319-0:279:2295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:649:860":{"id":"0:649:860","crate_id":0,"name":"marker","span":{"filename":"src/map.rs","begin":[2310,4],"end":[2310,39]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"1:2706:1829","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"V"}}}]}}],"bindings":[]}}}}}},"0:951:2225":{"id":"0:951:2225","crate_id":0,"name":"insert_entry","span":{"filename":"src/map.rs","begin":[4072,4],"end":[4088,5]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1967:2257":{"id":"0:1967:2257","crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[2228,4],"end":[2233,5]},"visibility":"public","docs":"Returns a reference to this entry's value.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\nset.entry(\"poneyland\").or_insert();\n// existing key\nassert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");\n// nonexistent key\nassert_eq!(set.entry(\"horseland\").get(), &\"horseland\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1838:423":{"id":"0:1838:423","crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[1797,4],"end":[1802,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:2056:1844":{"id":"b:1:2248-0:2056:1844","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Group","id":"0:2056:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:1693"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:812:3251":{"id":"b:1:2553-0:812:3251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryBuilderMut","id":"0:812:3251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2093:1702":{"id":"0:2093:1702","crate_id":0,"name":"layout","span":{"filename":"src/lib.rs","begin":[163,8],"end":[163,36]},"visibility":"default","docs":"The layout of the allocation request that failed.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"alloc::alloc::Layout","id":"1:44347:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:1:2741:4891-0:807:2860":{"id":"a:1:2741:4891-0:807:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ValuesMut","id":"0:807:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1336:2257":{"id":"0:1336:2257","crate_id":0,"name":"get","span":{"filename":"src/map.rs","begin":[5278,4],"end":[5280,5]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nmatch map.entry(\"poneyland\") {\n    Entry::Vacant(_) => panic!(),\n    Entry::Occupied(entry) => assert_eq!(entry.get(), &12),\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1280:668":{"id":"0:1280:668","crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[4893,4],"end":[4897,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:1117:3035":{"id":"b:1:2548-0:1117:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntryRef","id":"0:1117:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8249:5088-0:1711:2510":{"id":"a:1:8249:5088-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8249:5088","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:7210:784":{"id":"1:7210:784","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:958":{"id":"0:958","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4097,0],"end":[4104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:963:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1311:3538":{"id":"0:1311:3538","crate_id":0,"name":"or_insert","span":{"filename":"src/map.rs","begin":[4978,4],"end":[4987,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_insert(3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry(\"poneyland\").or_insert(10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1949:3021":{"id":"b:1:2251-0:1949:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1949:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1622:2213":{"id":"0:1622:2213","crate_id":0,"name":"insert","span":{"filename":"src/set.rs","begin":[1112,4],"end":[1114,5]},"visibility":"public","docs":"Adds a value to the set.\n\nIf the set did not have this value present, `true` is returned.\n\nIf the set did have this value present, `false` is returned.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::new();\n\nassert_eq!(set.insert(2), true);\nassert_eq!(set.insert(2), false);\nassert_eq!(set.len(), 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12063:16464":{"id":"1:12063:16464","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:51699:419","self::pattern":"1:11712:13646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:11535:11439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11717:12320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:856:2114":{"id":"0:856:2114","crate_id":0,"name":"table","span":{"filename":"src/map.rs","begin":[3109,4],"end":[3109,38]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"RawTable","id":"0:119:2112","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}}}},"a:1:8250:5087-0:681:2954":{"id":"a:1:8250:5087-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8250:5087","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:750:2853":{"id":"b:1:2251-0:750:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Values","id":"0:750:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:564:3115":{"id":"0:564:3115","crate_id":0,"name":"get_many_key_value_unchecked_mut","span":{"filename":"src/map.rs","begin":[1674,4],"end":[1683,5]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once, with immutable\nreferences to the corresponding keys, without validating that the values are unique.\n\nReturns an array of length `N` with the results of each query. `None` will be returned if\nany of the keys are missing.\n\nFor a safe alternative see [`get_many_key_value_mut`](`HashMap::get_many_key_value_mut`).\n\n# Safety\n\nCalling this method with overlapping keys is *[undefined behavior]* even if the resulting\nreferences are not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n]);\nassert_eq!(\n    got,\n    Some([\n        (&\"Bodleian Library\".to_string(), &mut 1602),\n        (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),\n    ]),\n);\n// Missing keys result in None\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Gewandhaus\",\n]);\nassert_eq!(got, None);\n```","links":{"`HashMap::get_many_key_value_mut`":"0:557:3112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"V"}}}]},"len":"N"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Equivalent","id":"0:2018:1683","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:675:1659":{"id":"0:675:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2410,4],"end":[2410,33]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RawIntoIter","id":"0:326:2318","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"0:881:3517":{"id":"0:881:3517","crate_id":0,"name":"from_hash","span":{"filename":"src/map.rs","begin":[3233,4],"end":[3238,5]},"visibility":"public","docs":"Creates a `RawEntryMut` from the given hash and matching function.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nlet entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_hash(hash, |k| k == &key);\nentry.insert(key, 100);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":["#[inline]","#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["is_match",{"generic":"F"}]],"output":{"resolved_path":{"name":"RawEntryMut","id":"0:819:3464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:663:860":{"id":"0:663:860","crate_id":0,"name":"marker","span":{"filename":"src/map.rs","begin":[2360,4],"end":[2360,43]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"1:2706:1829","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"V"}}}]}}],"bindings":[]}}}}}},"0:993:1606":{"id":"0:993:1606","crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[4202,11],"end":[4202,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"1:12010":{"id":"1:12010","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:12011:811","1:12012:2186","1:12013:21073","1:12014:21074","1:12016:21075","1:12019:19747","1:12020:21076","1:12021:314","1:12022:2278","1:12023:2257","1:12025:2259","1:12027:17016","1:12029:2280","1:12031:21077","1:12032:21078","1:12033:19878","1:12034:19879","1:12035:11795","1:12036:11808","1:12037:5017","1:12038:16469","1:12039:16460","1:12040:21079","1:12041:21080","1:12042:16474","1:12043:4130","1:12046:19894","1:12049:19895","1:12052:2176","1:12056:10326","1:12060:2521","1:12063:16464","1:12066:19888","1:12069:21081","1:12072:21082","1:12075:19890","1:12078:19892","1:12081:21083","1:12084:21084","1:12087:4788","1:12090:21085","1:12093:21086","1:12096:21087","1:12099:21088","1:12101:21089","1:12103:21090","1:12105:21091","1:12106:21092","1:12107:21093","1:12110:21094","1:12113:19896","1:12116:19897","1:12119:21095","1:12122:21096","1:12125:21097","1:12128:21098","1:12130:19750","1:12131:19751","1:12132:19753","1:12133:19754","1:12134:19755","1:12135:21099","1:12137:13514","1:12138:21100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5383:21761":{"id":"4:5383:21761","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:280:11280","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"4:6990:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"4:280:11280","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"4:6990:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/raw/mod.rs","begin":[2846,0],"end":[2856,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawIterRange","id":"0:279:2295","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:296:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1697":{"id":"0:1697","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1473,0],"end":[1503,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"1:2822:4302","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HashSet","id":"0:1540:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}}],"bindings":[]}}}}}},"items":["0:1700:186","0:1701:367"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:685:1659":{"id":"0:685:1659","crate_id":0,"name":"inner","span":{"filename":"src/map.rs","begin":[2454,4],"end":[2454,28]},"visibility":{"restricted":{"parent":"0:415:859","path":"::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"IntoIter","id":"0:671:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}}}},"b:1:2538-0:831:3469":{"id":"b:1:2538-0:831:3469","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawOccupiedEntryMut","id":"0:831:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:1715:2907":{"id":"b:1:2548-0:1715:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:134:2132":{"id":"0:134:2132","crate_id":0,"name":"with_capacity","span":{"filename":"src/raw/mod.rs","begin":[826,4],"end":[828,5]},"visibility":"public","docs":"Allocates a new hash table with at least enough capacity for inserting\nthe given number of elements without reallocating.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2018:1683":{"id":"0:2018:1683","crate_id":0,"name":"Equivalent","span":{"filename":"src/lib.rs","begin":[131,0],"end":[141,1]},"visibility":"public","docs":"Key equivalence trait.\n\nThis trait defines the function used to compare the input value with the\nmap keys (or set values) during a lookup operation such as [`HashMap::get`]\nor [`HashSet::contains`].\nIt is provided with a blanket implementation based on the\n[`Borrow`](core::borrow::Borrow) trait.\n\n# Correctness\n\nEquivalent values must hash to the same value.","links":{"core::borrow::Borrow":"1:2242:97","`HashMap::get`":"0:529:2257","`HashSet::contains`":"0:1604:4130"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:2020:1690"],"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:2021"]}}},"0:514:2960":{"id":"0:514:2960","crate_id":0,"name":"into_values","span":{"filename":"src/map.rs","begin":[1061,4],"end":[1065,5]},"visibility":"public","docs":"Creates a consuming iterator visiting all the values in arbitrary order.\nThe map cannot be used after calling this.\nThe iterator element type is `V`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\nlet mut vec: Vec<i32> = map.into_values().collect();\n\n// The `IntoValues` iterator produces values in arbitrary order, so\n// the values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [1, 2, 3]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1804":{"id":"0:1804","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1743,0],"end":[1758,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:1715:2907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1807:2509","0:1808:953","0:1809:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:233:1868":{"id":"0:233:1868","crate_id":0,"name":"ctrl","span":{"filename":"src/raw/mod.rs","begin":[2113,4],"end":[2117,5]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Returns a pointer to a control byte.\n\n# Safety\n\nFor the allocated [`RawTableInner`], the result is [`Undefined Behavior`],\nif the `index` is greater than the `self.bucket_mask + 1 + Group::WIDTH`.\nIn that case, calling this function with `index == self.bucket_mask + 1 + Group::WIDTH`\nwill return a pointer to the end of the allocated table and it is useless on its own.\n\nCalling this function with `index >= self.bucket_mask + 1 + Group::WIDTH` on a\ntable that has not been allocated results in [`Undefined Behavior`].\n\nSo to satisfy both requirements you should always follow the rule that\n`index < self.bucket_mask + 1 + Group::WIDTH`\n\nCalling this function on [`RawTableInner`] that are not already allocated is safe\nfor read-only purpose.\n\nSee also [`Bucket::as_ptr()`] method, for more information about of properly removing\nor saving `data element` from / into the [`RawTable`] / [`RawTableInner`].\n\n[`Bucket::as_ptr()`]: Bucket::as_ptr()\n[`Undefined Behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{"`RawTableInner`":"0:124:2115","Bucket::as_ptr()":"0:110:314","`RawTable`":"0:119:2112"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1559:2133":{"id":"0:1559:2133","crate_id":0,"name":"with_capacity_in","span":{"filename":"src/set.rs","begin":[252,4],"end":[256,5]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`ahash::RandomState`] or [`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_capacity_and_hasher_in`](HashSet::with_capacity_and_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::with_capacity(10);\nassert!(set.capacity() >= 10);\n```","links":{"`ahash::RandomState`":"6:813:10910","`HashSet`":"0:1540:144","HashSet::with_capacity_and_hasher_in":"0:1586:2801"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:2234":{"id":"0:166:2234","crate_id":0,"name":"replace_bucket_with","span":{"filename":"src/raw/mod.rs","begin":[1229,4],"end":[1247,5]},"visibility":"public","docs":"Temporary removes a bucket, applying the given function to the removed\nelement and optionally put back the returned value in the same bucket.\n\nReturns `true` if the bucket still contains an element\n\nThis does not check if the given bucket is actually occupied.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bucket",{"resolved_path":{"name":"Bucket","id":"0:97:1927","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}],["f",{"generic":"F"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:2236","args":{"parenthesized":{"inputs":[{"generic":"T"}],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:403:1842":{"id":"0:403:1842","crate_id":0,"name":"bitmask","span":{"filename":"src/raw/mod.rs","begin":[3256,4],"end":[3256,24]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BitMaskIter","id":"0:2068:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:1:2538-0:681:2954":{"id":"b:1:2538-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:4891-0:681:2954":{"id":"a:1:2741:4891-0:681:2954","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:4891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoKeys","id":"0:681:2954","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:681:2954":{"id":"0:681:2954","crate_id":0,"name":"IntoKeys","span":{"filename":"src/map.rs","begin":[2453,0],"end":[2455,1]},"visibility":"public","docs":"An owning iterator over the keys of a `HashMap` in arbitrary order.\nThe iterator element type is `K`.\n\nThis `struct` is created by the [`into_keys`] method on [`HashMap`].\nSee its documentation for more.\nThe map cannot be used after calling that method.\n\n[`into_keys`]: struct.HashMap.html#method.into_keys\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut keys = map.into_keys();\nlet mut vec = vec![keys.next(), keys.next(), keys.next()];\n\n// The `IntoKeys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(1), Some(2), Some(3)]);\n\n// It is fused iterator\nassert_eq!(keys.next(), None);\nassert_eq!(keys.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:685:1659"],"fields_stripped":false}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"name":"Global","id":"5:1043:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["a:1:2701:228-0:681:2954","a:1:8249:5088-0:681:2954","a:1:8250:5087-0:681:2954","a:1:2684:220-0:681:2954","a:1:2741:4891-0:681:2954","b:1:2542-0:681:2954","b:1:2248-0:681:2954","b:1:2553-0:681:2954","b:1:2251-0:681:2954","b:1:7206-0:681:2954","b:1:2538-0:681:2954","b:1:3319-0:681:2954","b:1:2548-0:681:2954","0:703","0:686","0:699","0:694"]}}},"0:80:1873":{"id":"0:80:1873","crate_id":0,"name":"special_is_empty","span":{"filename":"src/raw/mod.rs","begin":[116,0],"end":[119,1]},"visibility":{"restricted":{"parent":"0:8:62","path":"::raw"}},"docs":"Checks whether a special control value is EMPTY (just check 1 bit).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ctrl",{"primitive":"u8"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:1927":{"id":"0:97:1927","crate_id":0,"name":"Bucket","span":{"filename":"src/raw/mod.rs","begin":[277,0],"end":[283,1]},"visibility":"public","docs":"A reference to a hash table bucket containing a `T`.\n\nThis is usually just a pointer to the element itself. However if the element\nis a ZST, then we instead track the index of the element in the table so\nthat `erase` works properly.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:99:1087"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:105","a:1:2701:228-0:97:1927","a:1:8249:5088-0:97:1927","a:1:8250:5087-0:97:1927","a:1:2741:4891-0:97:1927","b:1:2542-0:97:1927","b:1:2248-0:97:1927","b:1:2553-0:97:1927","b:1:2251-0:97:1927","b:1:2538-0:97:1927","b:1:3319-0:97:1927","b:1:2548-0:97:1927","b:4:684-0:97:1927","0:100","0:102"]}}},"0:174:2259":{"id":"0:174:2259","crate_id":0,"name":"get_mut","span":{"filename":"src/raw/mod.rs","begin":[1318,4],"end":[1324,5]},"visibility":"public","docs":"Gets a mutable reference to an element in the table.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"Option","id":"1:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:758:423":{"id":"0:758:423","crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[2632,4],"end":[2636,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:520:2200":{"id":"0:520:2200","crate_id":0,"name":"reserve","span":{"filename":"src/map.rs","begin":[1101,4],"end":[1104,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Panics\n\nPanics if the new capacity exceeds [`isize::MAX`] bytes and [`abort`] the program\nin case of allocation error. Use [`try_reserve`](HashMap::try_reserve) instead\nif you want to handle memory allocation failure.\n\n[`isize::MAX`]: https://doc.rust-lang.org/std/primitive.isize.html\n[`abort`]: https://doc.rust-lang.org/alloc/alloc/fn.handle_alloc_error.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<&str, i32> = HashMap::new();\n// Map is empty and doesn't allocate memory\nassert_eq!(map.capacity(), 0);\n\nmap.reserve(10);\n\n// And now map can hold at least 10 elements\nassert!(map.capacity() >= 10);\n```","links":{"HashMap::try_reserve":"0:521:2205"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:1135:3180":{"id":"b:1:2251-0:1135:3180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OccupiedError","id":"0:1135:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2253:4081"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:1711:2510":{"id":"b:1:2548-0:1711:2510","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1711:2510","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1346":{"id":"0:1346","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[5566,0],"end":[5651,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1352:1691","0:1353:3606","0:1354:2213","0:1355:2225"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1852":{"id":"0:1852","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1841,0],"end":[1847,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"1:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"BuildHasher","id":"1:9405:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:7588:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Intersection","id":"0:1727:4458","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1741:4449":{"id":"b:1:3319-0:1741:4449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SymmetricDifference","id":"0:1741:4449","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12021:314":{"id":"1:12021:314","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:12022:2278","`u8`":"1:51716:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:714":{"id":"0:714","crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2519,0],"end":[2530,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoValues","id":"0:709:2961","args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:718:2509","0:719:953","0:721:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:1026:3021":{"id":"b:1:2538-0:1026:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VacantEntry","id":"0:1026:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:2541:3751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:1720:2940":{"id":"b:1:3319-0:1720:2940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["1:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1822":{"id":"0:1822","crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1774,0],"end":[1791,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Allocator","id":"5:50:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"1:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:2929:2175","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["find","take","partial_cmp_by","unzip","fold","collect_into","min","chain","scan","intersperse_with","skip","gt","by_ref","eq_by","cycle","reduce","partition","min_by","flat_map","filter_map","next_chunk","ge","is_sorted","collect","array_chunks","try_reduce","partition_in_place","min_by_key","flatten","copied","peekable","last","lt","filter","is_sorted_by","sum","find_map","for_each","is_partitioned","max_by","fuse","cmp","enumerate","skip_while","advance_by","position","cloned","eq","rev","is_sorted_by_key","count","product","try_find","try_fold","max_by_key","inspect","size_hint","take_while","nth","all","ne","partial_cmp","__iterator_get_unchecked","cmp_by","zip","any","try_for_each","rposition","step_by","try_collect","map_while","le","intersperse","map","max"],"trait":{"name":"Iterator","id":"1:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExtractIf","id":"0:1720:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"bindings":[]}}}},"items":["0:1826:2509","0:1827:953","0:1829:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"1:46158:11877":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:42674:4967":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"0:858:3267":{"crate_id":0,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:51720:1495":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"0:7:1823":{"crate_id":0,"path":["hashbrown","macros","default_fn"],"kind":"macro"},"1:41445:2509":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"0:469:2744":{"crate_id":0,"path":["hashbrown","map","make_hash"],"kind":"function"},"1:44283:211":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:9813:222":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"4:963:11286":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:44104:11836":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:8675:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:102:11280":{"crate_id":5,"path":["allocator_api2","stable","boxed","Box"],"kind":"struct"},"1:4322:11332":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"0:763:2907":{"crate_id":0,"path":["hashbrown","map","Drain"],"kind":"struct"},"0:2033:2588":{"crate_id":0,"path":["hashbrown","raw","sse2","BITMASK_STRIDE"],"kind":"constant"},"1:2911:4297":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:20869:13705":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:41512:5085":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:43425:11780":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:7263:2562":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:44076:11829":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:8250:5087":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:9405:2625":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:2780:4977":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:2354:189":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:40083:13537":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:47770:10315":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:21665:11451":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"0:78:1867":{"crate_id":0,"path":["hashbrown","raw","is_full"],"kind":"function"},"1:11717:12320":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"0:279:2295":{"crate_id":0,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:40076:11704":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:1544:11316":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:11726:13653":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:40487:4877":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"4:1716:11306":{"crate_id":4,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:3163:4997":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:39192:198":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:6768:4830":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"4:7148:13966":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:47402:11927":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:51712:742":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"0:812:3251":{"crate_id":0,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:5987:4879":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:2822:4302":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:51722:1553":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:47648:11932":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:4386:4956":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:40367:4869":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"0:1117:3035":{"crate_id":0,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:40389:4870":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"0:2056:1844":{"crate_id":0,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:11732:13652":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:6977:4834":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:10804:12329":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:20742:13708":{"crate_id":1,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"1:43315:11772":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:42705:11762":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"4:4137:11316":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:20879:4919":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:21443:18422":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:44112:11838":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:22260:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:9117:132":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"0:2035:2586":{"crate_id":0,"path":["hashbrown","raw","sse2","BITMASK_ITER_MASK"],"kind":"constant"},"1:4019:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:2151:589":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"0:1747:4467":{"crate_id":0,"path":["hashbrown","set","Union"],"kind":"struct"},"1:40424:4873":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"4:7052:198":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:9147:120":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"4:5818:11322":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"4:3163:19535":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:43946:11816":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"0:441:142":{"crate_id":0,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:2317:125":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"0:991:3020":{"crate_id":0,"path":["hashbrown","map","Entry","Vacant"],"kind":"variant"},"1:43184:11767":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:42160:4944":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:4782:18043":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:40196:11334":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:740:244":{"crate_id":5,"path":["allocator_api2","stable","vec","Vec"],"kind":"struct"},"1:40399:4871":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"4:1422:2860":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"4:2077:11308":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:47706:10311":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:3152:234":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"0:36:1839":{"crate_id":0,"path":["hashbrown","raw","alloc","inner","do_alloc"],"kind":"function"},"1:3931:11316":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:51699:419":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:23037:5275":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:43857:11811":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"0:750:2853":{"crate_id":0,"path":["hashbrown","map","Values"],"kind":"struct"},"1:51711:745":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:39365:12336":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"4:6180:11291":{"crate_id":4,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:51705:1397":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:20841:13711":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:4761:389":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:9368:141":{"crate_id":1,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"1:3234:5003":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:44096:11834":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:2788:4982":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:39075:5004":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"0:1949:3021":{"crate_id":0,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"0:709:2961":{"crate_id":0,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:0:443":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"4:1463:12300":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:2515:133":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"0:1049:3018":{"crate_id":0,"path":["hashbrown","map","EntryRef","Occupied"],"kind":"variant"},"1:10244:11782":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:7595:4848":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"8:54:12293":{"crate_id":8,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"0:25:286":{"crate_id":0,"path":["hashbrown","raw","alloc"],"kind":"module"},"1:1467:1830":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:30288:68":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:5468:11316":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:40726:4845":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:21879:14901":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:51710:643":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:41581:2871":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:0:497":{"crate_id":1,"path":["core"],"kind":"module"},"1:43301:11769":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:20564:18424":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"4:7266:12311":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"4:1242:3180":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"4:7211:11422":{"crate_id":4,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"4:5191:11286":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:11265:12330":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:49668:13716":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"0:1450:4052":{"crate_id":0,"path":["hashbrown","map","assert_covariance"],"kind":"function"},"1:21718:11452":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"0:1720:2940":{"crate_id":0,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"0:1707:2871":{"crate_id":0,"path":["hashbrown","set","Iter"],"kind":"struct"},"0:1930:3020":{"crate_id":0,"path":["hashbrown","set","Entry","Vacant"],"kind":"variant"},"4:1413:2853":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"0:2090:1698":{"crate_id":0,"path":["hashbrown","TryReserveError","CapacityOverflow"],"kind":"variant"},"4:7181:11419":{"crate_id":4,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:4602:13530":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:51697:371":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:30266:1832":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"4:7044:2510":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:21004:11448":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:42658:4968":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:43525:11786":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:12330:14606":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:2843:4987":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"4:1042:12847":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:21945:11479":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:39982:14911":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:40050:11700":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"0:737:2843":{"crate_id":0,"path":["hashbrown","map","Keys"],"kind":"struct"},"4:3622:11286":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:3142:4995":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:41538:210":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:43763:11799":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:43255:11446":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:43611:11790":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:39176:200":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:40255:4299":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:40022:11697":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:43163:11444":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"4:2905:3748":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:41243:11726":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:2706:1829":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"0:1066:3034":{"crate_id":0,"path":["hashbrown","map","KeyOrRef","Borrowed"],"kind":"variant"},"1:40149:11707":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"0:2075:1853":{"crate_id":0,"path":["hashbrown","raw","Fallibility","Fallible"],"kind":"variant"},"1:43792:11809":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:2692:4888":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:40246:4853":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"4:7255:11425":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:40408:4872":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"4:3129:19534":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"0:1082:3032":{"crate_id":0,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:9410:2629":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"4:2906:19322":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"0:440:2628":{"crate_id":0,"path":["hashbrown","map","DefaultHashBuilder"],"kind":"typedef"},"0:2062:2602":{"crate_id":0,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:12295:136":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:43579:11789":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:2684:220":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:40670:4833":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:2744:4893":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"5:655:2510":{"crate_id":5,"path":["allocator_api2","stable","vec","into_iter","IntoIter"],"kind":"struct"},"0:1711:2510":{"crate_id":0,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"0:397:2572":{"crate_id":0,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"0:30:1659":{"crate_id":0,"path":["hashbrown","raw","alloc","inner"],"kind":"module"},"1:20984:13700":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:12597:1840":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:21559:14179":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:20596:18874":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"4:6248:2907":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:7161:4850":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:45592:11858":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"4:7022:11303":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"0:825:3018":{"crate_id":0,"path":["hashbrown","map","RawEntryMut","Occupied"],"kind":"variant"},"1:40438:4874":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:21337:13713":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:47464:11928":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"0:393:2304":{"crate_id":0,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"0:359:2308":{"crate_id":0,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:41462:2880":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:39998:11695":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:40206:12337":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:40448:4859":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:30360:14922":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:41203:155":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:42393:11749":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:12501:107":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"0:42:1842":{"crate_id":0,"path":["hashbrown","raw","bitmask"],"kind":"module"},"1:20594:18872":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:41631:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:3644:2510":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:47862:10319":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:2800:4981":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"4:2916:12622":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"0:414:1665":{"crate_id":0,"path":["hashbrown","external_trait_impls"],"kind":"module"},"1:45413:11851":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"0:124:2115":{"crate_id":0,"path":["hashbrown","raw","RawTableInner"],"kind":"struct"},"0:326:2318":{"crate_id":0,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"0:119:2112":{"crate_id":0,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:2922:2508":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:45662:11861":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:40116:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"4:3088:95":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:21839:17325":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:40693:4837":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"4:7241:224":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"1:41911:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:10286:12327":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:20579:18871":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:20982:14179":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"4:863:11302":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:46682:11895":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:7240:121":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"0:415:859":{"crate_id":0,"path":["hashbrown","map"],"kind":"module"},"1:39552:14784":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:11279:13654":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"4:3184:4467":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"4:5239:13985":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"6:99:14026":{"crate_id":6,"path":["ahash","fallback_hash","AHasherStr"],"kind":"struct"},"1:21083:14179":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:44291:195":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"4:4366:11316":{"crate_id":4,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"0:69:1847":{"crate_id":0,"path":["hashbrown","raw","invalid_mut"],"kind":"function"},"1:39341:11560":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:40286:4862":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:2758:4303":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:44389:11847":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:22557:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:20909:13712":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:2701:228":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"4:6446:11286":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:9370:145":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:41831:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:9106:210":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:42421:110":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"4:4005:11286":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:43921:11813":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:1667:1087":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:46416:11890":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"4:3150:4449":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:41951:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:9142:112":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:21107:14179":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:39970:11692":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:30232:1831":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:43479:11783":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:2812:4300":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:43561:11788":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:43407:11779":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:51713:743":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"4:6597:11327":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:2589:116":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"0:1069:3748":{"crate_id":0,"path":["hashbrown","map","KeyOrRef","Owned"],"kind":"variant"},"1:43969:11826":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:41470:2510":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:47747:10314":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:32056:12334":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"0:0:1703":{"crate_id":0,"path":["hashbrown"],"kind":"module"},"0:988:3018":{"crate_id":0,"path":["hashbrown","map","Entry","Occupied"],"kind":"variant"},"1:51719:1498":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:41368:11741":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"4:265:11286":{"crate_id":4,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"8:16:11395":{"crate_id":8,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"1:43461:11782":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:45681:11862":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:20577:18869":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:9155:4947":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:2963:5000":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:39334:4996":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:43778:11806":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:42174:4947":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:30302:14921":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"4:4336:11318":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:9159:4948":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:20938:13698":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:51717:1496":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"4:7224:11424":{"crate_id":4,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:2506:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:41530:193":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"4:7089:2510":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:4808:795":{"crate_id":1,"path":["core","iter"],"kind":"module"},"5:1093:11282":{"crate_id":5,"path":["allocator_api2","stable","vec","splice","Splice"],"kind":"struct"},"1:46212:11879":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:51718:1497":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:42403:68":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:9295:12322":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"4:1454:198":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"4:2116:11402":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:1747:11427":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:419:11281":{"crate_id":5,"path":["allocator_api2","stable","raw_vec","RawVec"],"kind":"struct"},"1:6585:4851":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:40347:4868":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:44084:11831":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:14:2075":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:43631:11792":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"4:2908:11405":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"0:1000:3019":{"crate_id":0,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:10203:12325":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"4:5712:2907":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"1:41394:181":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:40102:11705":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:2242:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:2603:128":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"0:1741:4449":{"crate_id":0,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:47800:10317":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"0:2014:1672":{"crate_id":0,"path":["hashbrown","hash_set"],"kind":"module"},"5:1065:1695":{"crate_id":5,"path":["allocator_api2","stable","raw_vec","TryReserveError"],"kind":"struct"},"1:9161:4949":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:75:14024":{"crate_id":6,"path":["ahash","fallback_hash","AHasherU64"],"kind":"struct"},"0:1984:4052":{"crate_id":0,"path":["hashbrown","set","assert_covariance"],"kind":"function"},"4:3547:2880":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:2695:225":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:6674:4861":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:22491:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"0:79:1871":{"crate_id":0,"path":["hashbrown","raw","is_special"],"kind":"function"},"1:1630:588":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:42917:11766":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:45938:11870":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:39114:5001":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:1733:4938":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:2898:117":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"8:156:12295":{"crate_id":8,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"1:2518:238":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:21900:14906":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:39302:4993":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:7588:1828":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"4:4047:2880":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:45367:11849":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"4:689:111":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:40306:4864":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:44100:11835":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:790:2630":{"crate_id":6,"path":["ahash","fallback_hash","AHasher"],"kind":"struct"},"1:30272:4909":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:1077:13966":{"crate_id":5,"path":["allocator_api2","stable","raw_vec","TryReserveErrorKind"],"kind":"enum"},"1:41589:2880":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:2738:4890":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:43084:12340":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:2741:4891":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:44326:11956":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"8:162:12296":{"crate_id":8,"path":["once_cell","race","OnceBool"],"kind":"struct"},"1:43956:11820":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:44334:11844":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"4:2407:11409":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:43343:11701":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"0:1488:1827":{"crate_id":0,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:2792:4980":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:25847:5276":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"4:880:2871":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:42031:12321":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:43656:11700":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"0:850:3473":{"crate_id":0,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:22227:178":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:2833:4985":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:9151:4945":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"0:255:2498":{"crate_id":0,"path":["hashbrown","raw","RawTableClone"],"kind":"trait"},"1:41332:11740":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"0:1493:1826":{"crate_id":0,"path":["hashbrown","scopeguard","guard"],"kind":"function"},"1:40133:17322":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"0:76:1861":{"crate_id":0,"path":["hashbrown","raw","EMPTY"],"kind":"constant"},"1:7591:4847":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:5528:4866":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:46606:11893":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"4:6294:11286":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"4:0:286":{"crate_id":4,"path":["alloc"],"kind":"module"},"0:90:1910":{"crate_id":0,"path":["hashbrown","raw","bucket_mask_to_capacity"],"kind":"function"},"4:6695:244":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"4:3521:163":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:21332:13703":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"4:3975:2907":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"0:2025:1628":{"crate_id":0,"path":["hashbrown","raw","sse2"],"kind":"module"},"1:3370:13496":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"0:831:3469":{"crate_id":0,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:43210:4852":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:44273:205":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"4:5485:11289":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:50:1840":{"crate_id":5,"path":["allocator_api2","stable","alloc","Allocator"],"kind":"trait"},"1:46014:11873":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:47675:10308":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:45844:11868":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:42683:145":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"0:2012:1670":{"crate_id":0,"path":["hashbrown","hash_map"],"kind":"module"},"0:671:2510":{"crate_id":0,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:41751:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"4:5798:70":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"1:22392:5279":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:47666:5009":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:813:10910":{"crate_id":6,"path":["ahash","random_state","RandomState"],"kind":"struct"},"2:229:210":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:1052:1700":{"crate_id":5,"path":["allocator_api2","stable","alloc","AllocError"],"kind":"struct"},"5:809:11295":{"crate_id":5,"path":["allocator_api2","stable","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"4:1995:12301":{"crate_id":4,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:41454:2871":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:41597:2510":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:9145:112":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:43375:11440":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:20804:13710":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:42498:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:10092:12323":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:39358:12335":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:45746:11864":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"4:6367:2510":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:43135:11441":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:45561:11857":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:1600:1363":{"crate_id":1,"path":["core","mem","size_of"],"kind":"function"},"0:1938:3019":{"crate_id":0,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:2749:4895":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:51706:1481":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"0:1922:3016":{"crate_id":0,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:40042:11690":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:8817:668":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:2264:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:51703:312":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"4:7081:2510":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"0:807:2860":{"crate_id":0,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"0:774:2940":{"crate_id":0,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:2245:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"0:1734:4439":{"crate_id":0,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:41791:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:51724:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"4:1213:3021":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:41345:13576":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"0:2074:1852":{"crate_id":0,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:87:14025":{"crate_id":6,"path":["ahash","fallback_hash","AHasherFixed"],"kind":"struct"},"1:9592:11343":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:20729:13707":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:7211:4017":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:44131:122":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"5:616:11286":{"crate_id":5,"path":["allocator_api2","stable","vec","drain","drop","DropGuard"],"kind":"struct"},"1:22359:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"4:3673:11398":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:11783:13661":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:32060:11551":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:45459:11853":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:46292:11880":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"4:1314:94":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:46111:11876":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:45543:11856":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"4:6764:11295":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"4:780:96":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:47610:11931":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"4:3124:4439":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"8:128:11278":{"crate_id":8,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"4:280:11280":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"1:9961:2871":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"0:460:2745":{"crate_id":0,"path":["hashbrown","map","equivalent_key"],"kind":"function"},"1:39955:11690":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:41479:5084":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:2753:4974":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"4:1228:3019":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:9157:194":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:47686:10309":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:45792:11866":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:45521:11855":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"0:794:2941":{"crate_id":0,"path":["hashbrown","map","ExtractIfInner"],"kind":"struct"},"1:47214:11925":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"4:5035:11322":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"1:21116:11448":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"4:6990:1841":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"0:2031:2584":{"crate_id":0,"path":["hashbrown","raw","sse2","BitMaskWord"],"kind":"typedef"},"1:7632:17271":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:1756:4937":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:22425:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:45822:11867":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:40699:4839":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:2746:106":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:2696:109":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:47823:10318":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:51702:1049":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"4:3534:2871":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:22590:5280":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:10258:11783":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:2932:2236":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:30041:5273":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:43333:11774":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:44152:11841":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"0:82:1879":{"crate_id":0,"path":["hashbrown","raw","MIN_HASH_LEN"],"kind":"constant"},"1:45622:11859":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"0:89:1902":{"crate_id":0,"path":["hashbrown","raw","capacity_to_buckets"],"kind":"function"},"4:783:11298":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:40069:11703":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:51716:1499":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:6917:4832":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:4406:4897":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:39216:199":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"4:1058:12620":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:21771:11453":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:2691:1685":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:40268:4854":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:4332:4955":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:11424:11776":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:2817:4301":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:41991:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:4141:11395":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"4:4818:204":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"1:39961:11691":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:7165:4849":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:20549:18424":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"0:71:1849":{"crate_id":0,"path":["hashbrown","raw","offset_from"],"kind":"function"},"1:21114:13706":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"4:5908:11316":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"4:6999:2510":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:11535:11439":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:570:2907":{"crate_id":5,"path":["allocator_api2","stable","vec","drain","Drain"],"kind":"struct"},"1:4183:4954":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:12357:192":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"4:680:231":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"4:5834:12623":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"0:2034:2587":{"crate_id":0,"path":["hashbrown","raw","sse2","BITMASK_MASK"],"kind":"constant"},"1:11672:5274":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"0:2068:1843":{"crate_id":0,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"0:1481:1668":{"crate_id":0,"path":["hashbrown","scopeguard"],"kind":"module"},"0:8:62":{"crate_id":0,"path":["hashbrown","raw"],"kind":"module"},"1:40057:13536":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"0:77:1864":{"crate_id":0,"path":["hashbrown","raw","DELETED"],"kind":"constant"},"1:4042:13515":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:45892:11869":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:51700:1515":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:45437:11852":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:41606:183":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"0:828:3020":{"crate_id":0,"path":["hashbrown","map","RawEntryMut","Vacant"],"kind":"variant"},"1:43223:12343":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:51698:936":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"4:7338:11282":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"0:83:1881":{"crate_id":0,"path":["hashbrown","raw","h2"],"kind":"function"},"4:7005:11417":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:3317:69":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"4:4167:11316":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:44080:11830":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"0:982:3016":{"crate_id":0,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:2856:4990":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"4:4399:11318":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"4:1404:2843":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"0:2089:1695":{"crate_id":0,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:20770:4919":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"6:148:14019":{"crate_id":6,"path":["ahash","random_state","DefaultRandomSource"],"kind":"struct"},"1:20990:13702":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"4:7136:1695":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"4:6739:11291":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:40121:11706":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:32020:1854":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:2805:4983":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:40684:4835":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"0:1135:3180":{"crate_id":0,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:40277:4855":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"4:2189:11408":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:39280:203":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:2796:4979":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:3157:135":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:43884:11812":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:21431:11450":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:2470:4941":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:9803:14179":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"4:4207:2871":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"4:3688:12301":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:9107:4943":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"4:4321:245":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:9149:4944":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:10053:11439":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:43265:12345":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:21978:5282":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:1043:1841":{"crate_id":5,"path":["allocator_api2","stable","alloc","global","Global"],"kind":"struct"},"1:3182:19141":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:784:11291":{"crate_id":5,"path":["allocator_api2","stable","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"4:7060:11418":{"crate_id":4,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:8356:12320":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"4:35:11281":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:43935:13668":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:12703:1620":{"crate_id":1,"path":["core","core_arch","arch","x86_64"],"kind":"module"},"1:47324:11926":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"4:633:12297":{"crate_id":4,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"0:5:1655":{"crate_id":0,"path":["hashbrown","macros"],"kind":"module"},"1:47072:11924":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"3:0:4806":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:43357:11436":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:40012:11696":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:44364:4824":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:21966:5278":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"4:1612:11286":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:2774:4978":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:1637:4906":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:30836:183":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"4:2087:11400":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:45491:11854":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:22326:177":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"0:465:1690":{"crate_id":0,"path":["hashbrown","map","equivalent"],"kind":"function"},"1:39379:11561":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:42695:11759":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"5:0:1704":{"crate_id":5,"path":["allocator_api2"],"kind":"module"},"1:42458:68":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:11712:13646":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"1:2161:4919":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:43640:11793":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:41871:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:51721:789":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:46189:11878":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:40324:11711":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:12308:151":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"4:2169:21847":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:39258:201":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"4:7014:2907":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"8:0:10904":{"crate_id":8,"path":["once_cell"],"kind":"module"},"1:2847:4988":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:1821:1833":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"0:1513:1669":{"crate_id":0,"path":["hashbrown","set"],"kind":"module"},"1:2839:4986":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:9362:141":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:11500:11787":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:9985:2880":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:10272:12326":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"4:2912:12621":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"7:0:1812":{"crate_id":7,"path":["cfg_if"],"kind":"module"},"4:1078:12848":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:41671:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"4:6097:13997":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"1:2768:4975":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"0:819:3464":{"crate_id":0,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:40163:13547":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"typedef"},"0:2092:1700":{"crate_id":0,"path":["hashbrown","TryReserveError","AllocError"],"kind":"variant"},"0:6:1812":{"crate_id":0,"path":["hashbrown","macros","cfg_if"],"kind":"macro"},"0:1062:3033":{"crate_id":0,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:21803:11459":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:43173:12342":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:11484:11784":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:2981:2626":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:4007:12314":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:43621:11791":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:2763:4976":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:45644:11860":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:20768:16830":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:4260:12317":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:44092:11833":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:42713:11763":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"0:1715:2907":{"crate_id":0,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:11938:112":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:43665:11690":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:10010:11436":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"4:3753:11306":{"crate_id":4,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:47572:11930":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:21787:11454":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:47732:10313":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"0:2082:1913":{"crate_id":0,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:40708:4841":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"4:3276:11306":{"crate_id":4,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"0:81:1878":{"crate_id":0,"path":["hashbrown","raw","h1"],"kind":"function"},"1:2469:14179":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"4:7321:11306":{"crate_id":4,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:4251:207":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:9153:4946":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:40718:4843":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:40034:11699":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:51704:1367":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"0:2032:2585":{"crate_id":0,"path":["hashbrown","raw","sse2","NonZeroBitMaskWord"],"kind":"typedef"},"1:43809:11810":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"4:7030:19532":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"0:658:2880":{"crate_id":0,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:40338:4867":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:43674:11699":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:10130:12324":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:42449:71":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:45391:11850":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:21862:11466":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"0:1927:3018":{"crate_id":0,"path":["hashbrown","set","Entry","Occupied"],"kind":"variant"},"1:30466:14907":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:43236:11445":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:20760:13704":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:5380:11316":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:2504:1846":{"crate_id":1,"path":["core","convert","identity"],"kind":"function"},"1:40296:4863":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:1916:4822":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"4:7164:102":{"crate_id":4,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"4:3117:2871":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:46370:11889":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:47721:10312":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:21088:13699":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:5586:4856":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:42433:14916":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:3510:2907":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:7318:159":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:4110:12315":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:51714:744":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"4:815:11300":{"crate_id":4,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:12382:12332":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:2985:4991":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"0:95:1922":{"crate_id":0,"path":["hashbrown","raw","InsertSlot"],"kind":"struct"},"1:43989:11828":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"5:713:11286":{"crate_id":5,"path":["allocator_api2","stable","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:43153:12341":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"0:1727:4458":{"crate_id":0,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:41226:11724":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:21827:5277":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:46060:11875":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:40226:4852":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:42666:11758":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:2512:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:22458:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:47785:10316":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:2348:182":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:2851:4989":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:40315:4865":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:3995:12313":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:2929:2175":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:51715:740":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"4:6578:11289":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"0:1026:3021":{"crate_id":0,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:20922:14179":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"4:1443:2961":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:39236:202":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"4:1366:2880":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:21916:14913":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:32147:4896":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:41260:13575":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"0:305:2293":{"crate_id":0,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"4:4914:11316":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:43649:11794":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:7198:134":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"0:455:2743":{"crate_id":0,"path":["hashbrown","map","make_hasher"],"kind":"function"},"4:3158:4458":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:8249:5088":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"0:1041:3031":{"crate_id":0,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:43741:13667":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2827:4984":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:4433:4957":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:47695:10310":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:9526:11340":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:45990:11872":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:42476:128":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:46446:11891":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"4:7195:17322":{"crate_id":4,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:6721:12849":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:8843:12744":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:42913:11765":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:40376:4857":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:44164:13674":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:42167:4946":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:40459:4875":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:42898:11764":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:22524:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"0:1052:3020":{"crate_id":0,"path":["hashbrown","map","EntryRef","Vacant"],"kind":"variant"},"1:44108:11837":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:44088:11832":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:4:1014":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:7202:152":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"0:2077:1854":{"crate_id":0,"path":["hashbrown","raw","Fallibility","Infallible"],"kind":"variant"},"6:0:1617":{"crate_id":6,"path":["ahash"],"kind":"module"},"1:11461:11781":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:45968:11871":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"4:5235:13984":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"1:2312:188":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:41289:11733":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:43245:12344":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:11249:13615":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"4:1351:2871":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:2509:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"0:84:1891":{"crate_id":0,"path":["hashbrown","raw","ProbeSeq"],"kind":"struct"},"1:41380:11744":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:51709:642":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"4:1197:3016":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:46036:11874":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:22293:176":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:8838:17270":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8251:5086":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"0:1540:144":{"crate_id":0,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:3169:4999":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:3197:5002":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:4255:12316":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"4:1981:11398":{"crate_id":4,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:41711:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:21854:11465":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:39372:4955":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:30864:5290":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:2694:226":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:2522:237":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:46866:11897":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:41309:17323":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:2163:4920":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:9624:11348":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:20536:5290":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:46716:11896":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"4:2636:11413":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:43327:11773":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:46652:11894":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:40473:4876":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"4:3775:11286":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:45699:11863":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:11737:13651":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:51723:1126":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:2784:4199":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:43507:11785":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"4:6607:11328":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"4:129:1825":{"crate_id":4,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"4:1382:2510":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:42153:4945":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"0:2018:1683":{"crate_id":0,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:3382:12312":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"4:211:11296":{"crate_id":4,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:47526:11929":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:21561:13701":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:729:11289":{"crate_id":5,"path":["allocator_api2","stable","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"4:1432:2954":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:45347:11848":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:21952:5281":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:44376:1700":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:44347:161":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:3079:4994":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:9609:11344":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:2926:2193":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"0:681:2954":{"crate_id":0,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"0:644:2871":{"crate_id":0,"path":["hashbrown","map","Iter"],"kind":"struct"},"0:80:1873":{"crate_id":0,"path":["hashbrown","raw","special_is_empty"],"kind":"function"},"0:97:1927":{"crate_id":0,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:41521:5076":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:12512:11353":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:39161:4992":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:10771:12328":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:40356:4878":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:10165:11440":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:43144:11442":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:4377:11333":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:46528:11892":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:1012:1834":{"crate_id":1,"path":["core","hint"],"kind":"module"},"1:40677:11718":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:8670:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"4:5642:232":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"}},"external_crates":{"7":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"once_cell","html_root_url":null},"5":{"name":"allocator_api2","html_root_url":null},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"ahash","html_root_url":null},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}