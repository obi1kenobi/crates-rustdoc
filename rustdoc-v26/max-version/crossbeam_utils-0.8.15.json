{"root":"0:0:1663","crate_version":"0.8.15","includes_private":true,"index":{"b:2:3319-0:585:2528":{"id":"b:2:3319-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2545-0:361:1659":{"id":"b:2:2545-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2547:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[311,0],"end":[323,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:76:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282:1926":{"id":"0:282:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:567:2762":{"id":"a:2:2684:220-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:664:2895":{"id":"0:664:2895","crate_id":0,"name":"handle","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[481,4],"end":[481,48]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":"A join handle to the spawned thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"thread::JoinHandle","id":"1:554:2900","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:12103:35842":{"id":"2:12103:35842","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[85,0],"end":[85,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:465:2613":{"id":"0:465:2613","crate_id":0,"name":"unpark","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[393,4],"end":[415,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:634:2891":{"id":"0:634:2891","crate_id":0,"name":"handles","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[198,4],"end":[198,60]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":"The list of the thread join handles.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:6695:244","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"thread::JoinHandle","id":"1:554:2900","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[75,0],"end":[85,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:196:273"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:101:1987":{"id":"b:2:2548-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[917,0],"end":[937,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:832","0:105:1396","0:106:1841","0:107:440"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12046:28797":{"id":"2:12046:28797","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312:1930":{"id":"0:312:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:676:2526":{"id":"b:2:2548-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:554:668":{"id":"0:554:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[537,4],"end":[541,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:676:2526":{"id":"b:2:2542-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:585:2528":{"id":"b:2:2538-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3321:1491":{"id":"2:3321:1491","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39341:7113","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436:2583":{"id":"0:436:2583","crate_id":0,"name":"park","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[107,4],"end":[109,5]},"visibility":"public","docs":"Blocks the current thread until the token is made available.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\n// Make the token available.\nu.unpark();\n\n// Wakes up immediately and consumes the token.\np.park();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:632:2889":{"id":"b:2:2542-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:185:1784":{"id":"b:2:3319-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:653:2922":{"id":"0:653:2922","crate_id":0,"name":"spawn","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[413,4],"end":[469,5]},"visibility":"public","docs":"Spawns a scoped thread with this configuration.\n\nThe scoped thread is passed a reference to this scope as an argument, which can be used for\nspawning nested threads.\n\nThe returned handle can be used to manually join the thread before the scope exits.\n\n# Errors\n\nUnlike the [`Scope::spawn`] method, this method yields an\n[`io::Result`] to capture any failure to create the thread at\nthe OS level.\n\n[`io::Result`]: std::io::Result\n\n# Panics\n\nPanics if a thread name was set and it contained null bytes.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle = s.builder()\n        .spawn(|_| {\n            println!(\"A child thread is running\");\n            42\n        })\n        .unwrap();\n\n    // Join the thread and retrieve its result.\n    let res = handle.join().unwrap();\n    assert_eq!(res, 42);\n}).unwrap();\n```","links":{"std::io::Result":"1:2867:210","`Scope::spawn`":"0:640:2922"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2867:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2932:2448","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:1914":{"id":"0:246:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:652:2960":{"id":"0:652:2960","crate_id":0,"name":"stack_size","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[371,4],"end":[374,5]},"visibility":"public","docs":"Sets the size of the stack for the new thread.\n\nThe stack size is measured in bytes.\n\nFor more information about the stack size for threads, see [here][stack-size].\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.builder()\n        .stack_size(32 * 1024)\n        .spawn(|_| println!(\"Running a child thread\"))\n        .unwrap();\n}).unwrap();\n```\n\n[stack-size]: std::thread#stack-size","links":{"std::thread#stack-size":"1:307:1449"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["size",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:648":{"id":"0:648","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[324,0],"end":[470,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["0:651:917","0:652:2960","0:653:2922"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:1782-0:394:2365":{"id":"a:2:8250:1782-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:43:1774":{"id":"b:2:2251-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:497:2525":{"id":"b:2:2248-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79:1914":{"id":"0:79:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[770,4],"end":[773,5]},"visibility":"public","docs":"Applies logical \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(true);\n\nassert_eq!(a.fetch_and(true), true);\nassert_eq!(a.load(), true);\n\nassert_eq!(a.fetch_and(false), true);\nassert_eq!(a.load(), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"bool"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:567:2762":{"id":"a:2:2741:2497-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:574:2774":{"id":"b:2:2542-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:185:1784":{"id":"b:2:2248-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:416:2520":{"id":"0:416:2520","crate_id":0,"name":"parker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[1,0],"end":[416,1]},"visibility":{"restricted":{"parent":"0:386:1421","path":"::sync"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:428:2523","0:444:2524","0:456:2579","0:457:2622","0:458:2623","0:459:2578"],"is_stripped":false}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[500,0],"end":[506,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:543:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2552:1478":{"id":"2:2552:1478","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:192:2486":{"id":"a:2:2701:228-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:257:1914":{"id":"0:257:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:325:1934":{"id":"0:325:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:561:552":{"id":"0:561:552","crate_id":0,"name":"deref","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[553,4],"end":[555,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446":{"id":"0:446","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[222,0],"end":[222,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:586:2577":{"id":"0:586:2577","crate_id":0,"name":"inner","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[47,4],"end":[47,21]},"visibility":{"restricted":{"parent":"0:579:2522","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:2547:694":{"id":"2:2547:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"primitive":"never"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:939":{"id":"0:405:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[25,4],"end":[31,5]},"visibility":"crate","docs":"Creates a new empty cell.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12011:811":{"id":"2:12011:811","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11888:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:524:668":{"id":"0:524:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[445,4],"end":[467,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12087:2288":{"id":"2:12087:2288","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11712:15326","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:2288"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43561:7314","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:101:1987":{"id":"a:2:2701:228-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:1782-0:632:2889":{"id":"a:2:8250:1782-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:386:1421":{"id":"0:386:1421","crate_id":0,"name":"sync","span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[1,0],"end":[17,36]},"visibility":"public","docs":"Thread synchronization primitives.\n\n* [`Parker`], a thread parking primitive.\n* [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.\n* [`WaitGroup`], for synchronizing the beginning or end of some computation.","links":{"`WaitGroup`":"0:585:2528","`ShardedLock`":"0:497:2525","`Parker`":"0:428:2523"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:387:2349","0:416:2520","0:466:2521","0:579:2522","0:602-0:428:2523","0:603-0:444:2524","0:605-0:497:2525","0:606-0:676:2526","0:607-0:682:2527","0:608-0:585:2528"],"is_stripped":false}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[22,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:405:939","0:406:2543","0:408:2529","0:409:2545","0:412:2544"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:58:1835":{"id":"0:58:1835","crate_id":0,"name":"is_lock_free","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[126,4],"end":[128,5]},"visibility":"public","docs":"Returns `true` if operations on values of this type are lock-free.\n\nIf the compiler or the platform doesn't support the necessary atomic instructions,\n`AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\n// This type is internally represented as `AtomicUsize` so we can just use atomic\n// operations provided by it.\nassert_eq!(AtomicCell::<usize>::is_lock_free(), true);\n\n// A wrapper struct around `isize`.\nstruct Foo {\n    bar: isize,\n}\n// `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.\nassert_eq!(AtomicCell::<Foo>::is_lock_free(), true);\n\n// Operations on zero-sized types are always lock-free.\nassert_eq!(AtomicCell::<()>::is_lock_free(), true);\n\n// Very large types cannot be represented as any of the standard atomic types, so atomic\n// operations on them will have to use global locks for synchronization.\nassert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:1934":{"id":"0:295:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:1910":{"id":"0:223:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[72,0],"end":[72,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicI8","id":"2:41631:84","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:340:2026","0:341:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:352:2026":{"id":"0:352:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[76,0],"end":[76,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"i32"}}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,22],"end":[61,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::default::Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:371:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:1783-0:459:2578":{"id":"a:2:8249:1783-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:2497-0:585:2528":{"id":"a:2:2741:2497-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:665:1156":{"id":"0:665:1156","crate_id":0,"name":"result","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[484,4],"end":[484,27]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":"Holds the result of the inner closure.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:92:1936":{"id":"0:92:1936","crate_id":0,"name":"can_transmute","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[864,0],"end":[867,1]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"Returns `true` if values of type `A` can be transmuted into values of type `B`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2039":{"id":"0:123:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[26,4],"end":[26,40]},"visibility":"default","docs":"Loads a value from the atomic using a \"consume\" memory ordering.\n\nThis is similar to the \"acquire\" ordering, except that an ordering is\nonly guaranteed with operations that \"depend on\" the result of the load.\nHowever consume loads are usually much faster than acquire loads on\narchitectures with a weak memory model since they don't require memory\nfence instructions.\n\nThe exact definition of \"depend on\" is a bit vague, but it works as you\nwould expect in practice since a lot of software, especially the Linux\nkernel, rely on this behavior.\n\nThis is currently only implemented on ARM and AArch64, where a fence\ncan be avoided. On other architectures this will fall back to a simple\n`load(Ordering::Acquire)`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2701:228-0:574:2774":{"id":"a:2:2701:228-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"items":["0:306:1901","0:307:1910","0:308:1914","0:309:1918","0:310:1922","0:311:1926","0:312:1930","0:314:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322:1926":{"id":"0:322:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2006":{"id":"0:190:2006","crate_id":0,"name":"validate_read","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[40,4],"end":[43,5]},"visibility":"crate","docs":"Returns `true` if the current stamp is equal to `stamp`.\n\nThis method should be called after optimistic reads to check whether they are valid. The\nargument `stamp` should correspond to the one returned by method `optimistic_read`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["stamp",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:1930":{"id":"0:261:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2545-0:43:1774":{"id":"b:2:2545-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2547:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:50":{"id":"0:50","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[53,0],"end":[53,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:169:2144":{"id":"0:169:2144","crate_id":0,"name":"spin","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[146,4],"end":[157,5]},"visibility":"public","docs":"Backs off in a lock-free loop.\n\nThis method should be used when we need to retry an operation because another thread made\nprogress.\n\nThe processor may yield using the *YIELD* or *PAUSE* instruction.\n\n# Examples\n\nBacking off in a lock-free loop:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicUsize;\nuse std::sync::atomic::Ordering::SeqCst;\n\nfn fetch_mul(a: &AtomicUsize, b: usize) -> usize {\n    let backoff = Backoff::new();\n    loop {\n        let val = a.load(SeqCst);\n        if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {\n            return val;\n        }\n        backoff.spin();\n    }\n}\n\nlet a = AtomicUsize::new(7);\nassert_eq!(fetch_mul(&a, 8), 7);\nassert_eq!(a.load(SeqCst), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:192:2486":{"id":"b:2:2542-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205:1926":{"id":"0:205:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:1918":{"id":"0:280:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[292,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:398:1804":{"id":"0:398:1804","crate_id":0,"name":"value","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[14,4],"end":[14,37]},"visibility":{"restricted":{"parent":"0:387:2349","path":"::sync::once_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnsafeCell","id":"2:4406:1778","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MaybeUninit","id":"2:30266:1781","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:8250:1782-0:361:1659":{"id":"a:2:8250:1782-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:394:2365":{"id":"0:394:2365","crate_id":0,"name":"OnceLock","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[10,0],"end":[17,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:396:2348","0:397:2529","0:398:1804"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:403","a:2:8249:1783-0:394:2365","a:2:8250:1782-0:394:2365","a:2:2741:2497-0:394:2365","b:2:2542-0:394:2365","b:2:2248-0:394:2365","b:2:2553-0:394:2365","b:2:2251-0:394:2365","b:2:2538-0:394:2365","b:2:3319-0:394:2365","b:2:2548-0:394:2365","0:413","0:399","0:401"]}}},"0:56:939":{"id":"0:56:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[67,4],"end":[71,5]},"visibility":"public","docs":"Creates a new atomic cell initialized with `val`.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:444:2524":{"id":"b:5:684-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3321","5:687:3322","5:688:3323"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[297,0],"end":[301,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:453:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:357":{"id":"0:357","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[80,0],"end":[80,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicI64","id":"2:41871:83","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:358:2026","0:359:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:462:2580":{"id":"0:462:2580","crate_id":0,"name":"cvar","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[318,4],"end":[318,17]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Condvar","id":"1:5719:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2542-0:101:1987":{"id":"b:2:2542-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:459:2578":{"id":"0:459:2578","crate_id":0,"name":"Inner","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[315,0],"end":[319,1]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:460:1384","0:461:1903","0:462:2580"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:463","a:2:2701:228-0:459:2578","a:2:8249:1783-0:459:2578","a:2:8250:1782-0:459:2578","a:2:2684:220-0:459:2578","a:2:2741:2497-0:459:2578","b:2:2542-0:459:2578","b:2:2248-0:459:2578","b:2:2553-0:459:2578","b:2:2251-0:459:2578","b:2:2538-0:459:2578","b:2:3319-0:459:2578","b:2:2548-0:459:2578"]}}},"b:2:2251-0:494:2636":{"id":"b:2:2251-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:497:2525":{"id":"b:2:2538-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[523,0],"end":[534,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:551:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:567:2762":{"id":"b:2:2248-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:607-0:682:2527":{"id":"0:607-0:682:2527","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[16,64],"end":[16,85]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"inner":{"import":{"source":"self::sharded_lock::ShardedLockWriteGuard","name":"ShardedLockWriteGuard","id":"0:682:2527","glob":false}}},"a:2:2684:220-0:632:2889":{"id":"a:2:2684:220-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:692:2931":{"id":"a:2:2701:228-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12040:28129":{"id":"2:12040:28129","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43611:4040","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:1910":{"id":"0:267:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:1918":{"id":"0:247:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270:1922":{"id":"0:270:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:1914":{"id":"0:308:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:1815":{"id":"0:143:1815","crate_id":0,"name":"into_inner","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Returns the inner value.\n\n# Examples\n\n```\nuse crossbeam_utils::CachePadded;\n\nlet padded_value = CachePadded::new(7);\nlet value = padded_value.into_inner();\nassert_eq!(value, 7);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:35846":{"id":"2:12110:35846","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:676:2526":{"id":"0:676:2526","crate_id":0,"name":"ShardedLockReadGuard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[484,0],"end":[488,1]},"visibility":"public","docs":"A guard used to release the shared read access of a [`ShardedLock`] when dropped.","links":{"`ShardedLock`":"0:497:2525"},"attrs":["#[clippy::has_significant_drop]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:679:1903","0:680:1902","0:681:2576"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8249:1783-0:676:2526","a:2:8250:1782-0:676:2526","a:2:2684:220-0:676:2526","a:2:2741:2497-0:676:2526","b:2:2542-0:676:2526","b:2:2248-0:676:2526","b:2:2553-0:676:2526","b:2:2251-0:676:2526","b:2:2538-0:676:2526","b:2:3319-0:676:2526","b:2:2548-0:676:2526","b:5:5644-0:676:2526","0:537","0:541","0:544","0:535"]}}},"b:2:2553-0:101:1987":{"id":"b:2:2553-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[73,0],"end":[73,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicU16","id":"2:41751:88","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:343:2026","0:344:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:543:668":{"id":"0:543:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[501,4],"end":[505,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:579:2522":{"id":"0:579:2522","crate_id":0,"name":"wait_group","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[1,0],"end":[145,1]},"visibility":{"restricted":{"parent":"0:386:1421","path":"::sync"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:585:2528","0:587:2578"],"is_stripped":false}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[848,0],"end":[853,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:88:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:350:2039":{"id":"0:350:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[75,0],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:939":{"id":"0:167:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[95,4],"end":[97,5]},"visibility":"public","docs":"Creates a new `Backoff`.\n\n# Examples\n\n```\nuse crossbeam_utils::Backoff;\n\nlet backoff = Backoff::new();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[223,0],"end":[223,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:1782-0:692:2931":{"id":"a:2:8250:1782-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12090:35837":{"id":"2:12090:35837","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11712:15326","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:2288"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43579:7315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293:1926":{"id":"0:293:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:273":{"id":"0:196:273","crate_id":0,"name":"abort","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[78,4],"end":[84,5]},"visibility":"crate","docs":"Releases the lock without incrementing the stamp.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[74,0],"end":[74,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicI16","id":"2:41711:81","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:346:2026","0:347:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:43:1774":{"id":"b:2:2248-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12072:35834":{"id":"2:12072:35834","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11712:15326","str::split":"2:12060:28128","prim@char":"1:11888:419","str::split_terminator":"2:12069:35833"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43425:7311","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:1934":{"id":"0:208:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:1914":{"id":"0:213:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:2039":{"id":"0:329:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[68,0],"end":[68,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:448":{"id":"0:448","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[225,0],"end":[295,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:449:2613","0:450:2602","0:451:2606"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:640:2922":{"id":"0:640:2922","crate_id":0,"name":"spawn","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[248,4],"end":[257,5]},"visibility":"public","docs":"Spawns a scoped thread.\n\nThis method is similar to the [`spawn`] function in Rust's standard library. The difference\nis that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,\nallowing it to reference variables outside the scope.\n\nThe scoped thread is passed a reference to this scope as an argument, which can be used for\nspawning nested threads.\n\nThe returned [handle](ScopedJoinHandle) can be used to manually\n[join](ScopedJoinHandle::join) the thread before the scope exits.\n\nThis will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the\nstack size or the name of the thread, use this API instead.\n\n[`spawn`]: std::thread::spawn\n\n# Panics\n\nPanics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]\nto recover from such errors.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle = s.spawn(|_| {\n        println!(\"A child thread is running\");\n        42\n    });\n\n    // Join the thread and retrieve its result.\n    let res = handle.join().unwrap();\n    assert_eq!(res, 42);\n}).unwrap();\n```","links":{"`ScopedThreadBuilder`":"0:692:2931","ScopedJoinHandle":"0:661:2924","`ScopedThreadBuilder::spawn`":"0:653:2922","ScopedJoinHandle::join":"0:670:2896","std::thread::spawn":"1:493:2922"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'scope","mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2932:2448","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:494:2636":{"id":"a:2:2741:2497-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245:1910":{"id":"0:245:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:1930":{"id":"0:250:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2525":{"id":"0:497:2525","crate_id":0,"name":"ShardedLock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[76,0],"end":[82,1]},"visibility":"public","docs":"A sharded reader-writer lock.\n\nThis lock is equivalent to [`RwLock`], except read operations are faster and write operations\nare slower.\n\nA `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a\nsingle cache line. Read operations will pick one of the shards depending on the current thread\nand lock it. Write operations need to lock all shards in succession.\n\nBy splitting the lock into shards, concurrent read operations will in most cases choose\ndifferent shards and thus update different cache lines, which is good for scalability. However,\nwrite operations need to do more work and are therefore slower than usual.\n\nThe priority policy of the lock is dependent on the underlying operating system's\nimplementation, and this type does not guarantee that any particular policy will be used.\n\n# Poisoning\n\nA `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be\npoisoned if a panic occurs while a write operation is in progress. If a panic occurs in any\nread operation, the lock will not be poisoned.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(5);\n\n// Any number of read locks can be held at once.\n{\n    let r1 = lock.read().unwrap();\n    let r2 = lock.read().unwrap();\n    assert_eq!(*r1, 5);\n    assert_eq!(*r2, 5);\n} // Read locks are dropped at this point.\n\n// However, only one write lock may be held.\n{\n    let mut w = lock.write().unwrap();\n    *w += 1;\n    assert_eq!(*w, 6);\n} // Write lock is dropped here.\n```\n\n[`RwLock`]: std::sync::RwLock","links":{"std::sync::RwLock":"1:6586:217"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:499:2673","0:500:1804"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:509","0:514","a:2:2741:2497-0:497:2525","b:2:2542-0:497:2525","b:2:2545-0:497:2525","b:2:2248-0:497:2525","b:2:2553-0:497:2525","b:2:2251-0:497:2525","b:2:2538-0:497:2525","b:2:3319-0:497:2525","b:2:2548-0:497:2525","0:529","0:522","0:507","0:501","0:532","0:505","0:503"]}}},"2:12014:35827":{"id":"2:12014:35827","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:1875":{"id":"0:117:1875","crate_id":0,"name":"atomic_compare_exchange_weak","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[1072,0],"end":[1121,1]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"Atomically compares data at `dst` to `current` and, if equal byte-for-byte, exchanges data at\n`dst` with `new`.\n\nReturns the old value on success, or the current value at `dst` on failure.\n\nThis operation uses the `AcqRel` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":["#[allow(clippy :: let_unit_value)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}],["current",{"generic":"T"}],["new",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:585:2528":{"id":"b:2:2251-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12119:35847":{"id":"2:12119:35847","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:1901":{"id":"0:200:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:394:2365":{"id":"b:2:2251-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189:2004":{"id":"0:189:2004","crate_id":0,"name":"optimistic_read","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[26,4],"end":[33,5]},"visibility":"crate","docs":"If not locked, returns the current stamp.\n\nThis method should be called before optimistic reads.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:557:668":{"id":"0:557:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[545,4],"end":[547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:43:1774":{"id":"b:2:2548-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:101:1987":{"id":"b:2:2248-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374:729":{"id":"0:374:729","crate_id":0,"name":"hash","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,31],"end":[61,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408:2529":{"id":"0:408:2529","crate_id":0,"name":"is_initialized","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[66,4],"end":[68,5]},"visibility":{"restricted":{"parent":"0:387:2349","path":"::sync::once_lock"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:415:588":{"id":"0:415:588","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[97,4],"end":[102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:431":{"id":"0:431","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[59,0],"end":[59,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:192:2486":{"id":"b:2:2251-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:676:2526":{"id":"b:2:2553-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:444:2524":{"id":"b:2:2542-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:459:2578":{"id":"b:2:2538-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:596:588":{"id":"0:596:588","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[119,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:444:2524":{"id":"a:2:2741:2497-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:59:1396":{"id":"0:59:1396","crate_id":0,"name":"store","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[143,4],"end":[151,5]},"visibility":"public","docs":"Stores `val` into the atomic cell.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n\nassert_eq!(a.load(), 7);\na.store(8);\nassert_eq!(a.load(), 8);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:1845":{"id":"0:115:1845","crate_id":0,"name":"atomic_swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[1048,0],"end":[1062,1]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"Atomically swaps data at `dst` with `val`.\n\nThis operation uses the `AcqRel` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}],["val",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:1914":{"id":"0:202:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2250:2275":{"id":"2:2250:2275","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:361:1659":{"id":"b:2:2548-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338:2039":{"id":"0:338:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[71,0],"end":[71,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:682:2527":{"id":"b:5:5644-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193:1903":{"id":"0:193:1903","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[69,4],"end":[69,26]},"visibility":{"restricted":{"parent":"0:178:1770","path":"::atomic::seq_lock"}},"docs":"The parent lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:170:2165":{"id":"0:170:2165","crate_id":0,"name":"snooze","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[209,4],"end":[233,5]},"visibility":"public","docs":"Backs off in a blocking loop.\n\nThis method should be used when we need to wait for another thread to make progress.\n\nThe processor may yield using the *YIELD* or *PAUSE* instruction and the current thread\nmay yield by giving up a timeslice to the OS scheduler.\n\nIn `#[no_std]` environments, this method is equivalent to [`spin`].\n\nIf possible, use [`is_completed`] to check when it is advised to stop using backoff and\nblock the current thread using a different synchronization mechanism instead.\n\n[`spin`]: Backoff::spin\n[`is_completed`]: Backoff::is_completed\n\n# Examples\n\nWaiting for an [`AtomicBool`] to become `true`:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::Arc;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\nuse std::thread;\nuse std::time::Duration;\n\nfn spin_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        backoff.snooze();\n    }\n}\n\nlet ready = Arc::new(AtomicBool::new(false));\nlet ready2 = ready.clone();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(100));\n    ready2.store(true, SeqCst);\n});\n\nassert_eq!(ready.load(SeqCst), false);\nspin_wait(&ready);\nassert_eq!(ready.load(SeqCst), true);\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`AtomicBool`]: std::sync::atomic::AtomicBool","links":{"Backoff::spin":"0:169:2144","Backoff::is_completed":"0:171:2172","std::sync::atomic::AtomicBool":"2:8670:79"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:1804":{"id":"0:500:1804","crate_id":0,"name":"value","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[81,4],"end":[81,24]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"The internal data.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnsafeCell","id":"2:4406:1778","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"0:234:1910":{"id":"0:234:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:459:2578":{"id":"b:2:2542-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:597":{"id":"0:597","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[129,0],"end":[138,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:598:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:704":{"id":"0:704","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[554,8],"end":[564,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"JoinHandleExt","id":"1:4508:2995","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:706:2997","0:707:2998"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:659":{"id":"0:659","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[473,0],"end":[473,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88:694":{"id":"0:88:694","crate_id":0,"name":"from","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[850,4],"end":[852,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176-0:164:1661":{"id":"0:176-0:164:1661","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/lib.rs","begin":[93,0],"end":[93,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::backoff::Backoff","name":"Backoff","id":"0:164:1661","glob":false}}},"0:565:2711":{"id":"0:565:2711","crate_id":0,"name":"current_index","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[572,0],"end":[574,1]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"Returns a `usize` that identifies the current thread.\n\nEach thread is associated with an 'index'. While there are no particular guarantees, indices\nusually tend to be consecutive numbers between 0 and the number of running threads.\n\nSince this function accesses TLS, `None` might be returned if the current thread's TLS is\ntearing down.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12038:33419":{"id":"2:12038:33419","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12039:33411"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43631:7317","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:682:2527":{"id":"0:682:2527","crate_id":0,"name":"ShardedLockWriteGuard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[516,0],"end":[519,1]},"visibility":"public","docs":"A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","links":{"`ShardedLock`":"0:497:2525"},"attrs":["#[clippy::has_significant_drop]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:685:1903","0:686:2576"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8249:1783-0:682:2527","a:2:8250:1782-0:682:2527","a:2:2684:220-0:682:2527","a:2:2741:2497-0:682:2527","b:2:2542-0:682:2527","b:2:2248-0:682:2527","b:2:2553-0:682:2527","b:2:2251-0:682:2527","b:2:2538-0:682:2527","b:2:3319-0:682:2527","b:2:2548-0:682:2527","b:5:5644-0:682:2527","0:547","0:555","0:549","0:558","0:562","0:552"]}}},"2:12060:28128":{"id":"2:12060:28128","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11712:15326","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split_whitespace":"2:12038:33419","str::rsplit":"2:12066:29272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43357:4044","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12133:28642":{"id":"2:12133:28642","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:43:1774":{"id":"a:2:2741:2497-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:635:2522":{"id":"0:635:2522","crate_id":0,"name":"wait_group","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[201,4],"end":[201,25]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":"Used to wait until all subscopes all dropped.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:8249:1783-0:692:2931":{"id":"a:2:8249:1783-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:602-0:428:2523":{"id":"0:602-0:428:2523","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[14,23],"end":[14,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parker::Parker","name":"Parker","id":"0:428:2523","glob":false}}},"2:12020:35829":{"id":"2:12020:35829","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:43:1774":{"id":"b:2:3319-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[68,0],"end":[68,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicBool","id":"2:8670:79","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:328:2026","0:329:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:332:2039":{"id":"0:332:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[69,0],"end":[69,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:494:2636":{"id":"b:2:3319-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:497:2525":{"id":"b:2:2548-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[145,0],"end":[442,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:516:2684","0:517:2700","0:518:2710","0:519:1817","0:520:2733","0:521:1904"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:1782-0:459:2578":{"id":"a:2:8250:1782-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:589:504":{"id":"0:589:504","crate_id":0,"name":"count","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[53,4],"end":[53,23]},"visibility":{"restricted":{"parent":"0:579:2522","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}},"0:450:2602":{"id":"0:450:2602","crate_id":0,"name":"into_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Converts an `Unparker` into a raw pointer.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::{Parker, Unparker};\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\nlet raw = Unparker::into_raw(u);\n# let _ = unsafe { Unparker::from_raw(raw) };\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[96,0],"end":[103,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:415:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:449:2613":{"id":"0:449:2613","crate_id":0,"name":"unpark","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[253,4],"end":[255,5]},"visibility":"public","docs":"Atomically makes the token available if it is not already.\n\nThis method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is\nany.\n\n# Examples\n\n```\nuse std::thread;\nuse std::time::Duration;\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(500));\n    u.unpark();\n});\n\n// Wakes up when `u.unpark()` provides the token.\np.park();\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`park`]: Parker::park\n[`park_timeout`]: Parker::park_timeout","links":{"Parker::park":"0:436:2583","Parker::park_timeout":"0:437:2587"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:1841":{"id":"0:106:1841","crate_id":0,"name":"swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[925,4],"end":[925,49]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_val",{"tuple":[]}],["_order",{"resolved_path":{"name":"Ordering","id":"2:41606:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:632:2889":{"id":"0:632:2889","crate_id":0,"name":"Scope","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[196,0],"end":[205,1]},"visibility":"public","docs":"A scope for spawning threads.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:634:2891","0:635:2522","0:636:2576"],"fields_stripped":false}},"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:638","a:2:8249:1783-0:632:2889","a:2:8250:1782-0:632:2889","a:2:2684:220-0:632:2889","a:2:2741:2497-0:632:2889","b:2:2542-0:632:2889","b:2:2248-0:632:2889","b:2:2553-0:632:2889","b:2:2251-0:632:2889","b:2:2538-0:632:2889","b:2:3319-0:632:2889","b:2:2548-0:632:2889","0:646","0:637"]}}},"0:191:1904":{"id":"0:191:1904","crate_id":0,"name":"write","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[47,4],"end":[63,5]},"visibility":"crate","docs":"Grabs the lock for writing.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:692:2931":{"id":"b:2:3319-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:394:2365":{"id":"b:2:2548-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:307:1910":{"id":"0:307:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12093:35838":{"id":"2:12093:35838","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11712:15326","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::rmatch_indices":"2:12096:35839"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43507:7312","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12041:35832":{"id":"2:12041:35832","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43621:7316","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:1922":{"id":"0:204:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:2348":{"id":"0:396:2348","crate_id":0,"name":"once","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[11,4],"end":[11,14]},"visibility":{"restricted":{"parent":"0:387:2349","path":"::sync::once_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Once","id":"1:6369:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:5646:1455":{"id":"5:5646:1455","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:676:2526":{"id":"b:5:5644-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:2497-0:574:2774":{"id":"a:2:2741:2497-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12056:3265":{"id":"2:12056:3265","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:361:1659":{"id":"b:2:2248-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:101:1987":{"id":"b:2:2251-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:341:2039":{"id":"0:341:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[72,0],"end":[72,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:1934":{"id":"0:263:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:1783-0:567:2762":{"id":"a:2:8249:1783-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:1782-0:444:2524":{"id":"a:2:8250:1782-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:45:1804":{"id":"0:45:1804","crate_id":0,"name":"value","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[46,4],"end":[46,37]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"The inner value.\n\nIf this value can be transmuted into a primitive atomic type, it will be treated as such.\nOtherwise, all potentially concurrent operations on this data will be protected by a global\nlock.\n\nUsing MaybeUninit to prevent code outside the cell from observing partially initialized state:\n<https://github.com/crossbeam-rs/crossbeam/issues/833>\n\nNote:\n- we'll never store uninitialized `T` due to our API only using initialized `T`.\n- this `MaybeUninit` does *not* fix <https://github.com/crossbeam-rs/crossbeam/issues/315>.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnsafeCell","id":"2:4406:1778","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MaybeUninit","id":"2:30266:1781","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:279:1914":{"id":"0:279:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2041":{"id":"0:125:2041","crate_id":0,"name":"impl_atomic","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[53,0],"end":[66,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"macro":"macro_rules! impl_atomic {\n    ($atomic:ident, $val:ty) => { ... };\n}"}},"0:560:230":{"id":"0:560:230","crate_id":0,"name":"Target","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[551,4],"end":[551,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:356:2039":{"id":"0:356:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[78,0],"end":[78,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:101:1987":{"id":"b:2:2538-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[544,0],"end":[548,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:557:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:343:2026":{"id":"0:343:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[73,0],"end":[73,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u16"}}}},"0:513:1815":{"id":"0:513:1815","crate_id":0,"name":"into_inner","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[133,4],"end":[142,5]},"visibility":"public","docs":"Consumes this lock, returning the underlying data.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(String::new());\n{\n    let mut s = lock.write().unwrap();\n    *s = \"modified\".to_owned();\n}\nassert_eq!(lock.into_inner().unwrap(), \"modified\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"LockResult","id":"1:6492:2360","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:519:1817":{"id":"0:519:1817","crate_id":0,"name":"read","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[284,4],"end":[302,5]},"visibility":"public","docs":"Locks with shared read access, blocking the current thread until it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which hold the lock.\nThere may be other readers currently inside the lock when this method returns. This method\ndoes not provide any guarantees with respect to the ordering of whether contentious readers\nor writers will acquire the lock first.\n\nReturns a guard which will release the shared access when dropped.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Panics\n\nThis method might panic when called if the lock is already held by the current thread.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\nuse std::sync::Arc;\nuse std::thread;\n\nlet lock = Arc::new(ShardedLock::new(1));\nlet c_lock = lock.clone();\n\nlet n = lock.read().unwrap();\nassert_eq!(*n, 1);\n\nthread::spawn(move || {\n    let r = c_lock.read();\n    assert!(r.is_ok());\n}).join().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LockResult","id":"1:6492:2360","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:570:2768":{"id":"0:570:2768","crate_id":0,"name":"next_index","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[585,4],"end":[585,21]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"The next index to allocate if the free list is empty.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2553-0:585:2528":{"id":"b:2:2553-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:43:1774":{"id":"0:43:1774","crate_id":0,"name":"AtomicCell","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[33,0],"end":[47,1]},"visibility":"public","docs":"A thread-safe mutable memory location.\n\nThis type is equivalent to [`Cell`], except it can also be shared among multiple threads.\n\nOperations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using\nglobal locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether\natomic instructions or locks will be used.\n\nAtomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.\n\n[`Cell`]: std::cell::Cell\n[`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free\n[`Acquire`]: std::sync::atomic::Ordering::Acquire\n[`Release`]: std::sync::atomic::Ordering::Release","links":{"std::sync::atomic::Ordering::Acquire":"2:41611:66","std::cell::Cell":"2:4183:2089","std::sync::atomic::Ordering::Release":"2:41609:209","AtomicCell::is_lock_free":"0:58:1835"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:45:1804"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:54","0:62","0:65","0:68","0:199","0:210","0:221","0:232","0:243","0:254","0:265","0:276","0:287","0:296","0:305","0:316","0:78","a:2:2741:2497-0:43:1774","b:2:2542-0:43:1774","b:2:2545-0:43:1774","b:2:2248-0:43:1774","b:2:2553-0:43:1774","b:2:2251-0:43:1774","b:2:2538-0:43:1774","b:2:3319-0:43:1774","b:2:2548-0:43:1774","0:52","0:46","0:86","0:50","0:74","0:89","0:83","0:48"]}}},"0:328:2026":{"id":"0:328:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[68,0],"end":[68,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"bool"}}}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,48],"end":[61,50]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:576:2775":{"id":"0:576:2775","crate_id":0,"name":"thread_id","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[605,4],"end":[605,23]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"ThreadId","id":"1:7595:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:594:2628":{"id":"0:594:2628","crate_id":0,"name":"wait","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[103,4],"end":[115,5]},"visibility":"public","docs":"Drops this reference and waits until all other references are dropped.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::WaitGroup;\nuse std::thread;\n\nlet wg = WaitGroup::new();\n\nthread::spawn({\n    let wg = wg.clone();\n    move || {\n        // Block until both threads have reached `wait()`.\n        wg.wait();\n    }\n});\n\n// Block until both threads have reached `wait()`.\nwg.wait();\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:1922":{"id":"0:292:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:495:1903":{"id":"0:495:1903","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[21,4],"end":[21,20]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"The inner reader-writer lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RwLock","id":"1:6586:217","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}},"b:2:2538-0:587:2578":{"id":"b:2:2538-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:444:2524":{"id":"b:2:2553-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:1782-0:574:2774":{"id":"a:2:8250:1782-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:454":{"id":"0:454","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[303,0],"end":[309,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:455:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:1922":{"id":"0:259:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:164:1661":{"id":"b:2:2553-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111:1857":{"id":"0:111:1857","crate_id":0,"name":"atomic_load","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[987,0],"end":[1023,1]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"Atomically reads data from `src`.\n\nThis operation uses the `Acquire` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:60:1841":{"id":"0:60:1841","crate_id":0,"name":"swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Stores `val` into the atomic cell and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n\nassert_eq!(a.load(), 7);\nassert_eq!(a.swap(8), 7);\nassert_eq!(a.load(), 8);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:164:1661":{"id":"a:2:2741:2497-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:646":{"id":"0:646","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[280,0],"end":[284,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:647:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:192:2486":{"id":"b:2:2538-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3:1071":{"id":"0:3:1071","crate_id":0,"name":"primitive","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[65,0],"end":[65,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]","#[allow(unused_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:4:1421"],"is_stripped":false}}},"0:71:439":{"id":"0:71:439","crate_id":0,"name":"compare_exchange","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[270,4],"end":[272,5]},"visibility":"public","docs":"If the current value equals `current`, stores `new` into the atomic cell.\n\nThe return value is a result indicating whether the new value was written and containing\nthe previous value. On success this value is guaranteed to be equal to `current`.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(1);\n\nassert_eq!(a.compare_exchange(2, 3), Err(1));\nassert_eq!(a.load(), 1);\n\nassert_eq!(a.compare_exchange(1, 2), Ok(1));\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["current",{"generic":"T"}],["new",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201:1910":{"id":"0:201:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:268:1914":{"id":"0:268:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"isize"}}],"bindings":[]}}}},"items":["0:317:1901","0:318:1910","0:319:1914","0:320:1918","0:321:1922","0:322:1926","0:323:1930","0:325:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331:2026":{"id":"0:331:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[69,0],"end":[69,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"2:12135:35851":{"id":"2:12135:35851","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4535:35851"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43656:7250","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:1926":{"id":"0:227:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:428:2523":{"id":"b:2:2553-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5401:28644":{"id":"5:5401:28644","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12133:28642"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:444:2524":{"id":"b:2:2548-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5399:36506":{"id":"5:5399:36506","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2500","`String`":"5:7241:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2500","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:4082","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321:1922":{"id":"0:321:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:164:1661":{"id":"b:2:3319-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12021:314":{"id":"2:12021:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12022:29238","`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:1384":{"id":"0:460:1384","crate_id":0,"name":"state","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[316,4],"end":[316,22]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"AtomicUsize","id":"2:41991:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2548-0:164:1661":{"id":"b:2:2548-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108:341":{"id":"0:108:341","crate_id":0,"name":"atomic","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[939,0],"end":[967,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"macro":"macro_rules! atomic {\n    (@check, $t:ty, $atomic:ty, $a:ident, $atomic_op:expr) => { ... };\n    ($t:ty, $a:ident, $atomic_op:expr, $fallback_op:expr) => { ... };\n}"}},"0:439:2575":{"id":"0:439:2575","crate_id":0,"name":"unparker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[169,4],"end":[171,5]},"visibility":"public","docs":"Returns a reference to an associated [`Unparker`].\n\nThe returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\n// Make the token available.\nu.unpark();\n// Wakes up immediately and consumes the token.\np.park();\n```\n\n[`park`]: Parker::park\n[`park_timeout`]: Parker::park_timeout","links":{"`Unparker`":"0:444:2524"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222:1901":{"id":"0:222:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:1918":{"id":"0:214:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[83,0],"end":[86,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicPtr","id":"2:8675:86","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:128:2026","0:360:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:1782-0:682:2527":{"id":"a:2:8250:1782-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:43:1774":{"id":"b:2:2542-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:567:2762":{"id":"b:2:2548-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:574:2774":{"id":"b:2:3319-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12031:35830":{"id":"2:12031:35830","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11894:1397","str::slice_mut_unchecked":"2:12032:35831","crate::ops::Index":"2:2981:2449"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:1922":{"id":"0:248:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:380:613":{"id":"0:380:613","crate_id":0,"name":"eq","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,37],"end":[61,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154":{"id":"0:154","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[187,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:156:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:441:2606":{"id":"0:441:2606","crate_id":0,"name":"from_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[203,4],"end":[208,5]},"visibility":"public","docs":"Converts a raw pointer into a `Parker`.\n\n# Safety\n\nThis method is safe to use only with pointers returned by [`Parker::into_raw`].\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet raw = Parker::into_raw(p);\nlet p = unsafe { Parker::from_raw(raw) };\n```","links":{"`Parker::into_raw`":"0:440:2602"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:428:2523":{"id":"0:428:2523","crate_id":0,"name":"Parker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[54,0],"end":[57,1]},"visibility":"public","docs":"A thread parking primitive.\n\nConceptually, each `Parker` has an associated token which is initially not present:\n\n* The [`park`] method blocks the current thread unless or until the token is available, at\n  which point it automatically consumes the token.\n\n* The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for\n  a specified maximum time.\n\n* The [`unpark`] method atomically makes the token available if it wasn't already. Because the\n  token is initially absent, [`unpark`] followed by [`park`] will result in the second call\n  returning immediately.\n\nIn other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using\n[`park`] and [`unpark`].\n\n# Examples\n\n```\nuse std::thread;\nuse std::time::Duration;\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\n// Make the token available.\nu.unpark();\n// Wakes up immediately and consumes the token.\np.park();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(500));\n    u.unpark();\n});\n\n// Wakes up when `u.unpark()` provides the token.\np.park();\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`park`]: Parker::park\n[`park_timeout`]: Parker::park_timeout\n[`park_deadline`]: Parker::park_deadline\n[`unpark`]: Unparker::unpark","links":{"Parker::park":"0:436:2583","Parker::park_deadline":"0:438:2592","Parker::park_timeout":"0:437:2587","Unparker::unpark":"0:449:2613"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:429:2575","0:430:2576"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:434","a:2:2701:228-0:428:2523","a:2:8249:1783-0:428:2523","a:2:8250:1782-0:428:2523","a:2:2741:2497-0:428:2523","b:2:2542-0:428:2523","b:2:2248-0:428:2523","b:2:2553-0:428:2523","b:2:2251-0:428:2523","b:2:2538-0:428:2523","b:2:3319-0:428:2523","b:2:2548-0:428:2523","0:432","0:442","0:431"]}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i8"}}],"bindings":[]}}}},"items":["0:211:1901","0:212:1910","0:213:1914","0:214:1918","0:215:1922","0:216:1926","0:217:1930","0:219:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:685:1903":{"id":"0:685:1903","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[517,4],"end":[517,28]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2553-0:192:2486":{"id":"b:2:2553-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:444:2524":{"id":"b:2:3319-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:456:2579":{"id":"0:456:2579","crate_id":0,"name":"EMPTY","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[311,0],"end":[311,23]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"usize"},"expr":"0","value":"0usize","is_literal":true}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[321,0],"end":[416,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:464:2583","0:465:2613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:1783-0:676:2526":{"id":"a:2:8249:1783-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:574:2774":{"id":"b:2:2251-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:606-0:676:2526":{"id":"0:606-0:676:2526","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[16,42],"end":[16,62]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"inner":{"import":{"source":"self::sharded_lock::ShardedLockReadGuard","name":"ShardedLockReadGuard","id":"0:676:2526","glob":false}}},"0:70:1868":{"id":"0:70:1868","crate_id":0,"name":"compare_and_swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[245,4],"end":[250,5]},"visibility":"public","docs":"If the current value equals `current`, stores `new` into the atomic cell.\n\nThe return value is always the previous value. If it is equal to `current`, then the value\nwas updated.\n\n# Examples\n\n```\n# #![allow(deprecated)]\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(1);\n\nassert_eq!(a.compare_and_swap(2, 3), 1);\nassert_eq!(a.load(), 1);\n\nassert_eq!(a.compare_and_swap(1, 2), 1);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[deprecated(note = \"Use `compare_exchange` instead\")]"],"deprecation":{"since":null,"note":"Use `compare_exchange` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["current",{"generic":"T"}],["new",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:1804":{"id":"0:363:1804","crate_id":0,"name":"value","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[129,4],"end":[129,12]},"visibility":{"restricted":{"parent":"0:131:1658","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[179,0],"end":[185,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:153:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:517:2700":{"id":"0:517:2700","crate_id":0,"name":"get_mut","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[189,4],"end":[198,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the lock mutably, no actual locking needs to take place.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet mut lock = ShardedLock::new(0);\n*lock.get_mut().unwrap() = 10;\nassert_eq!(*lock.read().unwrap(), 10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LockResult","id":"1:6492:2360","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:1783-0:585:2528":{"id":"a:2:8249:1783-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:588:2580":{"id":"0:588:2580","crate_id":0,"name":"cvar","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[52,4],"end":[52,17]},"visibility":{"restricted":{"parent":"0:579:2522","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Condvar","id":"1:5719:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:238:1926":{"id":"0:238:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:692:2931":{"id":"a:2:2684:220-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:661:2924":{"id":"b:2:2251-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:346:2026":{"id":"0:346:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[74,0],"end":[74,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"i16"}}}},"2:12019:29134":{"id":"2:12019:29134","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11279:15327"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12022:29238":{"id":"2:12022:29238","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12084:35836":{"id":"2:12084:35836","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2253:26150":{"id":"2:2253:26150","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:361:1659":{"id":"0:361:1659","crate_id":0,"name":"CachePadded","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[128,0],"end":[130,1]},"visibility":"public","docs":"Pads and aligns a value to the length of a cache line.\n\nIn concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of\ndata are not placed into the same cache line. Updating an atomic value invalidates the whole\ncache line it belongs to, which makes the next access to the same cache line slower for other\nCPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other\ncached data.\n\n# Size and alignment\n\nCache lines are assumed to be N bytes long, depending on the architecture:\n\n* On x86-64, aarch64, and powerpc64, N = 128.\n* On arm, mips, mips64, and riscv64, N = 32.\n* On s390x, N = 256.\n* On all others, N = 64.\n\nNote that N is just a reasonable guess and is not guaranteed to match the actual cache line\nlength of the machine the program is running on. On modern Intel architectures, spatial\nprefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that\ncache lines are 128 bytes long.\n\nThe size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate\na value of type `T`.\n\nThe alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.\n\n# Examples\n\nAlignment and padding:\n\n```\nuse crossbeam_utils::CachePadded;\n\nlet array = [CachePadded::new(1i8), CachePadded::new(2i8)];\nlet addr1 = &*array[0] as *const i8 as usize;\nlet addr2 = &*array[1] as *const i8 as usize;\n\nassert!(addr2 - addr1 >= 32);\nassert_eq!(addr1 % 32, 0);\nassert_eq!(addr2 % 32, 0);\n```\n\nWhen building a concurrent queue with a head and a tail index, it is wise to place them in\ndifferent cache lines so that concurrent threads pushing and popping elements don't invalidate\neach other's cache lines:\n\n```\nuse crossbeam_utils::CachePadded;\nuse std::sync::atomic::AtomicUsize;\n\nstruct Queue<T> {\n    head: CachePadded<AtomicUsize>,\n    tail: CachePadded<AtomicUsize>,\n    buffer: *mut T,\n}\n```","links":{},"attrs":["#[repr(align(128))]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:363:1804"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:140","a:2:8249:1783-0:361:1659","a:2:8250:1782-0:361:1659","a:2:2741:2497-0:361:1659","b:2:2542-0:361:1659","b:2:2545-0:361:1659","b:2:2248-0:361:1659","b:2:2553-0:361:1659","b:2:2251-0:361:1659","b:2:2538-0:361:1659","b:2:3319-0:361:1659","b:2:2548-0:361:1659","b:5:684-0:361:1659","0:376","0:369","0:367","0:151","0:383","0:144","0:148","0:138","0:364","0:372","0:378","0:381","0:136","0:154"]}}},"0:203:1918":{"id":"0:203:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:4:1421":{"id":"0:4:1421","crate_id":0,"name":"sync","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[66,4],"end":[66,23]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:5:341"],"is_stripped":false}}},"0:61:314":{"id":"0:61:314","crate_id":0,"name":"as_ptr","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[182,4],"end":[184,5]},"visibility":"public","docs":"Returns a raw pointer to the underlying data in this atomic cell.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(5);\n\nlet ptr = a.as_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:1934":{"id":"0:230:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[76,0],"end":[76,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicI32","id":"2:41791:82","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:352:2026","0:353:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:587:2578":{"id":"b:2:2548-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"items":["0:277:1901","0:278:1910","0:279:1914","0:280:1918","0:281:1922","0:282:1926","0:283:1930","0:285:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:574:2774":{"id":"b:2:2538-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12131:29138":{"id":"2:12131:29138","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39552:29133","Self::is_ascii":"2:12130:28645"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39552:29133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:544":{"id":"0:544","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[508,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:546:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:459:2578":{"id":"a:2:2684:220-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:520:2733":{"id":"0:520:2733","crate_id":0,"name":"try_write","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[328,4],"end":[376,5]},"visibility":"public","docs":"Attempts to acquire this lock with exclusive write access.\n\nIf the access could not be granted at this time, an error is returned. Otherwise, a guard\nis returned which will release the exclusive access when it is dropped. This method does\nnot provide any guarantees with respect to the ordering of whether contentious readers or\nwriters will acquire the lock first.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(1);\n\nlet n = lock.read().unwrap();\nassert_eq!(*n, 1);\n\nassert!(lock.try_write().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TryLockResult","id":"1:6494:2363","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:1783-0:574:2774":{"id":"a:2:8249:1783-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:192:2486":{"id":"0:192:2486","crate_id":0,"name":"SeqLockWriteGuard","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[67,0],"end":[73,1]},"visibility":"crate","docs":"An RAII guard that releases the lock and increments the stamp when dropped.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:193:1903","0:194:1384"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:195","a:2:2701:228-0:192:2486","a:2:8249:1783-0:192:2486","a:2:8250:1782-0:192:2486","a:2:2684:220-0:192:2486","a:2:2741:2497-0:192:2486","b:2:2542-0:192:2486","b:2:2248-0:192:2486","b:2:2553-0:192:2486","b:2:2251-0:192:2486","b:2:2538-0:192:2486","b:2:3319-0:192:2486","b:2:2548-0:192:2486","0:197"]}}},"0:178:1770":{"id":"0:178:1770","crate_id":0,"name":"seq_lock","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[1,0],"end":[112,1]},"visibility":{"restricted":{"parent":"0:25:341","path":"::atomic"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:185:1784","0:192:2486"],"is_stripped":false}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:36502","5:5384:2014","5:5387:36503","5:5390:36504","5:5398:36505","5:5399:36506","5:5400:4068","5:5401:28644","5:5402:28643"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"items":["0:255:1901","0:256:1910","0:257:1914","0:258:1918","0:259:1922","0:260:1926","0:261:1930","0:263:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:682:2527":{"id":"a:2:2684:220-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:666:1449":{"id":"0:666:1449","crate_id":0,"name":"thread","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[487,4],"end":[487,26]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":"A handle to the the spawned thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"thread::Thread","id":"1:7616:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12113:27360":{"id":"2:12113:27360","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:459:2578":{"id":"b:2:3319-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12078:29276":{"id":"2:12078:29276","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11888:419","str::splitn":"2:12075:29274","self::pattern":"2:11712:15326"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43479:7062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2541:3259":{"id":"2:2541:3259","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:361:1659":{"id":"b:2:2542-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:164:1661":{"id":"a:2:2701:228-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,37],"end":[61,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:380:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:593:939":{"id":"0:593:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Creates a new wait group and returns the single reference to it.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::WaitGroup;\n\nlet wg = WaitGroup::new();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:1903":{"id":"0:95:1903","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[879,0],"end":[910,1]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"Returns a reference to the global lock associated with the `AtomicCell` at address `addr`.\n\nThis function is used to protect atomic data which doesn't fit into any of the primitive atomic\ntypes in `std::sync::atomic`. Operations on such atomics must therefore use a global lock.\n\nHowever, there is not only one global lock but an array of many locks, and one of them is\npicked based on the given address. Having many locks reduces contention and improves\nscalability.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["addr",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[558,0],"end":[562,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2911:2042","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:564:554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:164:1661":{"id":"b:2:2538-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:344:2039":{"id":"0:344:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[73,0],"end":[73,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[90,0],"end":[143,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:511:939","0:513:1815"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:585:2528":{"id":"0:585:2528","crate_id":0,"name":"WaitGroup","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[46,0],"end":[48,1]},"visibility":"public","docs":"Enables threads to synchronize the beginning or end of some computation.\n\n# Wait groups vs barriers\n\n`WaitGroup` is very similar to [`Barrier`], but there are a few differences:\n\n* [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to\n  register more threads.\n\n* A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`\n  synchronizes threads only once.\n\n* All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose\n  to either wait for other threads or to continue without blocking.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::WaitGroup;\nuse std::thread;\n\n// Create a new wait group.\nlet wg = WaitGroup::new();\n\nfor _ in 0..4 {\n    // Create another reference to the wait group.\n    let wg = wg.clone();\n\n    thread::spawn(move || {\n        // Do some work.\n\n        // Drop the reference to the wait group.\n        drop(wg);\n    });\n}\n\n// Block until all threads have finished their work.\nwg.wait();\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`Barrier`]: std::sync::Barrier","links":{"std::sync::Barrier":"1:5686:2354"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:586:2577"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:592","a:2:2701:228-0:585:2528","a:2:8249:1783-0:585:2528","a:2:8250:1782-0:585:2528","a:2:2684:220-0:585:2528","a:2:2741:2497-0:585:2528","b:2:2542-0:585:2528","b:2:2248-0:585:2528","b:2:2553-0:585:2528","b:2:2251-0:585:2528","b:2:2538-0:585:2528","b:2:3319-0:585:2528","b:2:2548-0:585:2528","b:5:684-0:585:2528","0:595","0:597","0:590","0:599"]}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[223,0],"end":[307,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:70:1868","0:71:439","0:72:652"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:574:2774":{"id":"a:2:2684:220-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:692:2931":{"id":"b:2:2248-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104:832":{"id":"0:104:832","crate_id":0,"name":"load","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[919,4],"end":[919,39]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_order",{"resolved_path":{"name":"Ordering","id":"2:41606:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:1910":{"id":"0:278:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:1930":{"id":"0:283:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304:1934":{"id":"0:304:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,37],"end":[61,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:164:1661":{"id":"a:2:2684:220-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:428:2523":{"id":"b:2:2538-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:574:2774":{"id":"b:2:2248-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226:1922":{"id":"0:226:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:632:2889":{"id":"b:2:2553-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:603-0:444:2524":{"id":"0:603-0:444:2524","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[14,31],"end":[14,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parker::Unparker","name":"Unparker","id":"0:444:2524","glob":false}}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[84,0],"end":[281,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:167:939","0:168:2135","0:169:2144","0:170:2165","0:171:2172"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:185:1784":{"id":"a:2:2701:228-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:131:1658":{"id":"0:131:1658","crate_id":0,"name":"cache_padded","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[1,0],"end":[191,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:361:1659"],"is_stripped":false}}},"0:445:2577":{"id":"0:445:2577","crate_id":0,"name":"inner","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[219,4],"end":[219,21]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:12027:2544":{"id":"2:12027:2544","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12036:7327":{"id":"2:12036:7327","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43333:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355:2026":{"id":"0:355:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[78,0],"end":[78,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u64"}}}},"0:551:588":{"id":"0:551:588","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[524,4],"end":[533,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:575:769":{"id":"0:575:769","crate_id":0,"name":"index","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[604,4],"end":[604,16]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2542-0:585:2528":{"id":"b:2:2542-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:433:60":{"id":"0:433:60","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[62,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:1926":{"id":"0:249:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12101:35841":{"id":"2:12101:35841","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12116:29279":{"id":"2:12116:29279","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:2602":{"id":"0:440:2602","crate_id":0,"name":"into_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[184,4],"end":[186,5]},"visibility":"public","docs":"Converts a `Parker` into a raw pointer.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet raw = Parker::into_raw(p);\n# let _ = unsafe { Parker::from_raw(raw) };\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:192:2486":{"id":"b:2:3319-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:1782-0:567:2762":{"id":"a:2:8250:1782-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:192:2486":{"id":"b:2:2548-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:109:1836":{"id":"0:109:1836","crate_id":0,"name":"atomic_is_lock_free","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[970,0],"end":[981,1]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"Returns `true` if operations on `AtomicCell<T>` are lock-free.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:2544":{"id":"0:412:2544","crate_id":0,"name":"get_unchecked","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[90,4],"end":[93,5]},"visibility":{"restricted":{"parent":"0:387:2349","path":"::sync::once_lock"}},"docs":"# Safety\n\nThe value must be initialized","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:682:2527":{"id":"b:2:2248-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:1783-0:185:1784":{"id":"a:2:8249:1783-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:215:1922":{"id":"0:215:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:668":{"id":"0:173:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[284,4],"end":[289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:697":{"id":"0:697","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[318,9],"end":[318,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["0:700:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:130-0:121:1775":{"id":"0:130-0:121:1775","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/mod.rs","begin":[37,0],"end":[37,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::consume::AtomicConsume","name":"AtomicConsume","id":"0:121:1775","glob":false}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32020:7889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:647:668":{"id":"0:647:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[281,4],"end":[283,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:1772":{"id":"0:26:1772","crate_id":0,"name":"atomic_cell","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[2,0],"end":[1121,1]},"visibility":{"restricted":{"parent":"0:25:341","path":"::atomic"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic_cas))]","#[cfg(not(crossbeam_loom))]","#![allow(clippy :: unit_arg)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:43:1774","0:77:1893","0:92:1936","0:95:1903","0:101:1987","0:108:341","0:109:1836","0:111:1857","0:113:1842","0:115:1845","0:117:1875"],"is_stripped":false}}},"b:2:3319-0:428:2523":{"id":"b:2:3319-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:567:2762":{"id":"b:2:2538-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:590":{"id":"0:590","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[56,0],"end":[65,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:591:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:661:2924":{"id":"b:2:2553-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:661:2924":{"id":"0:661:2924","crate_id":0,"name":"ScopedJoinHandle","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[479,0],"end":[491,1]},"visibility":"public","docs":"A handle that can be used to join its scoped thread.\n\nThis struct is created by the [`Scope::spawn`] method and the\n[`ScopedThreadBuilder::spawn`] method.","links":{"`ScopedThreadBuilder::spawn`":"0:653:2922","`Scope::spawn`":"0:640:2922"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:664:2895","0:665:1156","0:666:1449","0:667:2576"],"fields_stripped":false}},"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:668","a:2:8249:1783-0:661:2924","a:2:8250:1782-0:661:2924","a:2:2741:2497-0:661:2924","b:2:2542-0:661:2924","b:2:2248-0:661:2924","b:2:2553-0:661:2924","b:2:2251-0:661:2924","b:2:2538-0:661:2924","b:2:3319-0:661:2924","b:2:2548-0:661:2924","0:704","0:673","0:659","0:657"]}}},"a:2:8249:1783-0:444:2524":{"id":"a:2:8249:1783-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:121:1775":{"id":"0:121:1775","crate_id":0,"name":"AtomicConsume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[7,0],"end":[27,1]},"visibility":"public","docs":"Trait which allows reading from primitive atomic types with \"consume\" ordering.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:122:2026","0:123:2039"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:339","0:354","0:327","0:336","0:351","0:345","0:126","0:342","0:330","0:348","0:357","0:333"]}}},"0:406:2543":{"id":"0:406:2543","crate_id":0,"name":"get_or_init","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[48,4],"end":[63,5]},"visibility":"crate","docs":"Gets the contents of the cell, initializing it with `f` if the cell\nwas empty.\n\nMany threads may call `get_or_init` concurrently with different\ninitializing functions, but it is guaranteed that only one function\nwill be executed.\n\n# Panics\n\nIf `f` panics, the panic is propagated to the caller, and the cell\nremains uninitialized.\n\nIt is an error to reentrantly initialize the cell from `f`. The\nexact outcome is unspecified. Current implementation deadlocks, but\nthis may be changed to a panic in the future.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2932:2448","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:185:1784":{"id":"b:2:2251-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:334:2026":{"id":"0:334:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[70,0],"end":[70,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"isize"}}}},"a:2:8249:1783-0:494:2636":{"id":"a:2:8249:1783-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12075:29274":{"id":"2:12075:29274","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326","str::rsplitn":"2:12078:29276"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43461:7061","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[165,0],"end":[171,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:146:230","0:147:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194:1384":{"id":"0:194:1384","crate_id":0,"name":"state","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[72,4],"end":[72,16]},"visibility":{"restricted":{"parent":"0:178:1770","path":"::atomic::seq_lock"}},"docs":"The stamp before locking.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[173,0],"end":[177,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2911:2042","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:150:554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:638":{"id":"0:638","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[209,0],"end":[278,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["0:640:2922","0:644:2925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:1783-0:164:1661":{"id":"a:2:8249:1783-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:595":{"id":"0:595","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[118,0],"end":[127,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:596:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:361:1659":{"id":"b:2:2553-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:239:1930":{"id":"0:239:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:494:2636":{"id":"b:2:2538-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:679:1903":{"id":"0:679:1903","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[485,4],"end":[485,28]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:206:1930":{"id":"0:206:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:539:230":{"id":"0:539:230","crate_id":0,"name":"Target","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[493,4],"end":[493,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:302:1926":{"id":"0:302:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:567:2762":{"id":"b:2:2542-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:511:939":{"id":"0:511:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[100,4],"end":[112,5]},"visibility":"public","docs":"Creates a new sharded reader-writer lock.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(5);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:587:2578":{"id":"b:2:2553-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:592":{"id":"0:592","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[67,0],"end":[116,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:593:939","0:594:2628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:494:2636":{"id":"b:2:2248-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:676:2526":{"id":"b:2:3319-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[75,0],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicU32","id":"2:41831:89","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:349:2026","0:350:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:85:60":{"id":"0:85:60","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[843,4],"end":[845,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:2349":{"id":"0:387:2349","crate_id":0,"name":"once_lock","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[5,0],"end":[103,1]},"visibility":{"restricted":{"parent":"0:386:1421","path":"::sync"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:394:2365"],"is_stripped":false}}},"0:122:2026":{"id":"0:122:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[9,4],"end":[9,13]},"visibility":"default","docs":"Type returned by `load_consume`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"b:2:2251-0:676:2526":{"id":"b:2:2251-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12105:35843":{"id":"2:12105:35843","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:428:2523":{"id":"a:2:2741:2497-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:587:2578":{"id":"0:587:2578","crate_id":0,"name":"Inner","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[51,0],"end":[54,1]},"visibility":{"restricted":{"parent":"0:579:2522","path":"::sync::wait_group"}},"docs":"Inner state of a `WaitGroup`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:588:2580","0:589:504"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2701:228-0:587:2578","a:2:8249:1783-0:587:2578","a:2:8250:1782-0:587:2578","a:2:2684:220-0:587:2578","a:2:2741:2497-0:587:2578","b:2:2542-0:587:2578","b:2:2248-0:587:2578","b:2:2553-0:587:2578","b:2:2251-0:587:2578","b:2:2538-0:587:2578","b:2:3319-0:587:2578","b:2:2548-0:587:2578"]}}},"a:2:2701:228-0:494:2636":{"id":"a:2:2701:228-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2741:2497-0:587:2578":{"id":"a:2:2741:2497-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:266:1901":{"id":"0:266:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:1783-0:632:2889":{"id":"a:2:8249:1783-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:567:2762":{"id":"0:567:2762","crate_id":0,"name":"ThreadIndices","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[577,0],"end":[586,1]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"The global registry keeping track of registered threads and indices.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:568:2764","0:569:2766","0:570:2768"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2701:228-0:567:2762","a:2:8249:1783-0:567:2762","a:2:8250:1782-0:567:2762","a:2:2684:220-0:567:2762","a:2:2741:2497-0:567:2762","b:2:2542-0:567:2762","b:2:2248-0:567:2762","b:2:2553-0:567:2762","b:2:2251-0:567:2762","b:2:2538-0:567:2762","b:2:3319-0:567:2762","b:2:2548-0:567:2762"]}}},"b:2:3319-0:632:2889":{"id":"b:2:3319-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:670:2896":{"id":"0:670:2896","crate_id":0,"name":"join","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[522,4],"end":[531,5]},"visibility":"public","docs":"Waits for the thread to finish and returns its result.\n\nIf the child thread panics, an error is returned. Note that if panics are implemented by\naborting the process, no error is returned; see the notes of [std::panic::catch_unwind].\n\n# Panics\n\nThis function may panic on some platforms if a thread attempts to join itself or otherwise\nmay create a deadlock with joining threads.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));\n    let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));\n\n    // Join the first thread and verify that it succeeded.\n    let res = handle1.join();\n    assert!(res.is_ok());\n\n    // Join the second thread and verify that it panicked.\n    let res = handle2.join();\n    assert!(res.is_err());\n}).unwrap();\n```","links":{"std::panic::catch_unwind":"1:4899:2404"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"thread::Result","id":"1:528:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12032:35831":{"id":"2:12032:35831","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11894:1397","crate::ops::IndexMut":"2:2985:2450","str::slice_unchecked":"2:12031:35830"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12039:33411":{"id":"2:12039:33411","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12038:33419"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43640:7318","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:1773":{"id":"0:119:1773","crate_id":0,"name":"consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[1,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:25:341","path":"::atomic"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:121:1775","0:124:2040","0:125:2041"],"is_stripped":false}}},"a:2:8249:1783-0:587:2578":{"id":"a:2:8249:1783-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:499:2673":{"id":"0:499:2673","crate_id":0,"name":"shards","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[78,4],"end":[78,37]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"A list of locks protecting the internal data.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:280:2500","args":{"angle_bracketed":{"args":[{"type":{"slice":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}],"bindings":[]}}}}}},"b:2:2553-0:682:2527":{"id":"b:2:2553-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:1782-0:428:2523":{"id":"a:2:8250:1782-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:444:2524":{"id":"b:2:2248-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:310:1922":{"id":"0:310:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:692:2931":{"id":"a:2:2741:2497-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:496:2641":{"id":"0:496:2641","crate_id":0,"name":"write_guard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[27,4],"end":[27,66]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"The write-guard keeping this shard locked.\n\nWrite operations will lock each shard and store the guard here. These guards get dropped at\nthe same time the big guard is dropped.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnsafeCell","id":"2:4406:1778","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"1:9038:219","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:2684:220-0:192:2486":{"id":"a:2:2684:220-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12130:28645":{"id":"2:12130:28645","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:1918":{"id":"0:269:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:459:2578":{"id":"b:2:2548-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:438:2592":{"id":"0:438:2592","crate_id":0,"name":"park_deadline","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[145,4],"end":[147,5]},"visibility":"public","docs":"Blocks the current thread until the token is made available, or until a certain deadline.\n\n# Examples\n\n```\nuse std::time::{Duration, Instant};\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet deadline = Instant::now() + Duration::from_millis(500);\n\n// Waits for the token to become available, but will not wait longer than 500 ms.\np.park_deadline(deadline);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9043:2549","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:1901":{"id":"0:297:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:1926":{"id":"0:216:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291:1918":{"id":"0:291:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}},"items":["0:222:1901","0:223:1910","0:224:1914","0:225:1918","0:226:1922","0:227:1926","0:228:1930","0:230:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[69,0],"end":[69,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicUsize","id":"2:41991:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:331:2026","0:332:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:164:1661":{"id":"b:2:2251-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[444,0],"end":[468,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:524:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[550,0],"end":[556,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:560:230","0:561:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397:2529":{"id":"0:397:2529","crate_id":0,"name":"is_initialized","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[13,4],"end":[13,30]},"visibility":{"restricted":{"parent":"0:387:2349","path":"::sync::once_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"AtomicBool","id":"2:8670:79","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:577":{"id":"0:577","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[608,0],"end":[614,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:578:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:2497-0:497:2525":{"id":"a:2:2741:2497-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12122:35848":{"id":"2:12122:35848","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1926":{"id":"0:82:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[836,4],"end":[839,5]},"visibility":"public","docs":"Applies logical \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(true);\n\nassert_eq!(a.fetch_xor(false), true);\nassert_eq!(a.load(), true);\n\nassert_eq!(a.fetch_xor(true), true);\nassert_eq!(a.load(), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"bool"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:2130":{"id":"0:165:2130","crate_id":0,"name":"step","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[81,4],"end":[81,19]},"visibility":{"restricted":{"parent":"0:158:1660","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Cell","id":"2:4183:2089","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:260:1926":{"id":"0:260:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:587:2578":{"id":"b:2:2248-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12107:35845":{"id":"2:12107:35845","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11737:15323","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:1914":{"id":"0:235:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:185:1784":{"id":"b:2:2538-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[492,0],"end":[498,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:539:230","0:540:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232":{"id":"0:232","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i16"}}],"bindings":[]}}}},"items":["0:233:1901","0:234:1910","0:235:1914","0:236:1918","0:237:1922","0:238:1926","0:239:1930","0:241:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:281:1922":{"id":"0:281:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:1914":{"id":"0:319:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:35828":{"id":"2:12016:35828","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12014:35827"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158:1660":{"id":"0:158:1660","crate_id":0,"name":"backoff","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[1,0],"end":[296,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:162:2090","0:163:2091","0:164:1661"],"is_stripped":false}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[753,0],"end":[840,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"bool"}}],"bindings":[]}}}},"items":["0:79:1914","0:80:1918","0:81:1922","0:82:1926"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:314:1934":{"id":"0:314:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:394:2365":{"id":"b:2:2248-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[61,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:433:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81:1922":{"id":"0:81:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[815,4],"end":[818,5]},"visibility":"public","docs":"Applies logical \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(false);\n\nassert_eq!(a.fetch_or(false), false);\nassert_eq!(a.load(), false);\n\nassert_eq!(a.fetch_or(true), false);\nassert_eq!(a.load(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"bool"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:676:2526":{"id":"a:2:2684:220-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:661:2924":{"id":"b:2:2248-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:458:2623":{"id":"0:458:2623","crate_id":0,"name":"NOTIFIED","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[313,0],"end":[313,26]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"usize"},"expr":"2","value":"2usize","is_literal":true}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[536,0],"end":[542,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:554:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:687:2758":{"id":"0:687:2758","crate_id":0,"name":"REGISTRATION","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[616,0],"end":[636,1]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"$crate::thread::LocalKey","id":"1:413:165","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:675:668":{"id":"0:675:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[586,4],"end":[588,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:494:2636":{"id":"b:2:2542-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12066:29272":{"id":"2:12066:29272","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11712:15326","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split":"2:12060:28128"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43375:7059","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[133,0],"end":[133,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:394:2365":{"id":"b:2:3319-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:569:2766":{"id":"0:569:2766","crate_id":0,"name":"free_list","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[582,4],"end":[582,25]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"A list of free indices.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Vec","id":"5:6695:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}},"0:219:1934":{"id":"0:219:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:494:2636":{"id":"b:2:2548-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:636:2576":{"id":"0:636:2576","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[204,4],"end":[204,44]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":"Borrows data with invariant lifetime `'env`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"2:2706:2381","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'env","mutable":true,"type":{"borrowed_ref":{"lifetime":"'env","mutable":false,"type":{"tuple":[]}}}}}}],"bindings":[]}}}}}},"0:651:917":{"id":"0:651:917","crate_id":0,"name":"name","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[346,4],"end":[349,5]},"visibility":"public","docs":"Sets the name for the new thread.\n\nThe name must not contain null bytes (`\\0`).\n\nFor more information about named threads, see [here][naming-threads].\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\nuse std::thread::current;\n\nthread::scope(|s| {\n    s.builder()\n        .name(\"my thread\".to_string())\n        .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))\n        .unwrap();\n}).unwrap();\n```\n\n[naming-threads]: std::thread#naming-threads","links":{"std::thread#naming-threads":"1:307:1449"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["name",{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:567:2762":{"id":"b:2:2553-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:1782-0:494:2636":{"id":"a:2:8250:1782-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:692:2931":{"id":"b:2:2538-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:661:2924":{"id":"b:2:2538-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5383:36502":{"id":"5:5383:36502","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2500","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:4082","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2500","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:4082","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:608-0:585:2528":{"id":"0:608-0:585:2528","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[17,0],"end":[17,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::wait_group::WaitGroup","name":"WaitGroup","id":"0:585:2528","glob":false}}},"a:2:2684:220-0:585:2528":{"id":"a:2:2684:220-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:164:1661":{"id":"b:2:2248-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12134:28641":{"id":"2:12134:28641","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:457:2622":{"id":"0:457:2622","crate_id":0,"name":"PARKED","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[312,0],"end":[312,24]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"usize"},"expr":"1","value":"1usize","is_literal":true}}},"0:311:1926":{"id":"0:311:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:1783-0:682:2527":{"id":"a:2:8249:1783-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:101:1987":{"id":"a:2:2684:220-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:686:3321":{"id":"5:686:3321","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:233:1901":{"id":"0:233:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:1783-0:361:1659":{"id":"a:2:8249:1783-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:692:2931":{"id":"b:2:2542-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:157-0:361:1659":{"id":"0:157-0:361:1659","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/lib.rs","begin":[90,0],"end":[90,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::cache_padded::CachePadded","name":"CachePadded","id":"0:361:1659","glob":false}}},"2:12012:2897":{"id":"2:12012:2897","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12042:33424":{"id":"2:12042:33424","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43649:7076","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[283,0],"end":[290,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:173:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:171:2172":{"id":"0:171:2172","crate_id":0,"name":"is_completed","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[278,4],"end":[280,5]},"visibility":"public","docs":"Returns `true` if exponential backoff has completed and blocking the thread is advised.\n\n# Examples\n\nWaiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::Arc;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\nuse std::thread;\nuse std::time::Duration;\n\nfn blocking_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        if backoff.is_completed() {\n            thread::park();\n        } else {\n            backoff.snooze();\n        }\n    }\n}\n\nlet ready = Arc::new(AtomicBool::new(false));\nlet ready2 = ready.clone();\nlet waiter = thread::current();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(100));\n    ready2.store(true, SeqCst);\n    waiter.unpark();\n});\n\nassert_eq!(ready.load(SeqCst), false);\nblocking_wait(&ready);\nassert_eq!(ready.load(SeqCst), true);\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`AtomicBool`]: std::sync::atomic::AtomicBool","links":{"std::sync::atomic::AtomicBool":"2:8670:79"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12096:35839":{"id":"2:12096:35839","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11712:15326","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::match_indices":"2:12093:35838"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43525:7313","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:680:1902":{"id":"0:680:1902","crate_id":0,"name":"_guard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[486,4],"end":[486,35]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"RwLockReadGuard","id":"1:9033:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"tuple":[]}}],"bindings":[]}}}}}},"0:359:2039":{"id":"0:359:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[80,0],"end":[80,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2545-0:497:2525":{"id":"b:2:2545-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2547:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[206,0],"end":[221,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:67:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:696:2925":{"id":"0:696:2925","crate_id":0,"name":"builder","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[321,4],"end":[321,28]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"thread::Builder","id":"1:7590:2932","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12035:7077":{"id":"2:12035:7077","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43327:7069","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:661:2924":{"id":"b:2:2542-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:1918":{"id":"0:80:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[794,4],"end":[797,5]},"visibility":"public","docs":"Applies logical \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(true);\n\nassert_eq!(a.fetch_nand(false), true);\nassert_eq!(a.load(), true);\n\nassert_eq!(a.fetch_nand(true), true);\nassert_eq!(a.load(), false);\n\nassert_eq!(a.fetch_nand(false), false);\nassert_eq!(a.load(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"bool"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:692:2931":{"id":"0:692:2931","crate_id":0,"name":"ScopedThreadBuilder","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[319,0],"end":[322,1]},"visibility":"public","docs":"Configures the properties of a new thread.\n\nThe two configurable properties are:\n\n- [`name`]: Specifies an [associated name for the thread][naming-threads].\n- [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].\n\nThe [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the\nthread handle with the given configuration.\n\nThe [`Scope::spawn`] method uses a builder with default configuration and unwraps its return\nvalue. You may want to use this builder when you want to recover from a failure to launch a\nthread.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.builder()\n        .spawn(|_| println!(\"Running a child thread\"))\n        .unwrap();\n}).unwrap();\n```\n\n[`name`]: ScopedThreadBuilder::name\n[`stack_size`]: ScopedThreadBuilder::stack_size\n[`spawn`]: ScopedThreadBuilder::spawn\n[`io::Result`]: std::io::Result\n[naming-threads]: std::thread#naming-threads\n[stack-size]: std::thread#stack-size","links":{"ScopedThreadBuilder::spawn":"0:653:2922","ScopedThreadBuilder::stack_size":"0:652:2960","std::thread#naming-threads":"1:307:1449","std::thread#stack-size":"1:307:1449","std::io::Result":"1:2867:210","ScopedThreadBuilder::name":"0:651:917","`Scope::spawn`":"0:640:2922"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:695:2886","0:696:2925"],"fields_stripped":false}},"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:648","a:2:2701:228-0:692:2931","a:2:8249:1783-0:692:2931","a:2:8250:1782-0:692:2931","a:2:2684:220-0:692:2931","a:2:2741:2497-0:692:2931","b:2:2542-0:692:2931","b:2:2248-0:692:2931","b:2:2553-0:692:2931","b:2:2251-0:692:2931","b:2:2538-0:692:2931","b:2:3319-0:692:2931","b:2:2548-0:692:2931","0:697"]}}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,9],"end":[61,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:366:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301:1922":{"id":"0:301:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,31],"end":[61,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:374:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:256:1910":{"id":"0:256:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:1661":{"id":"0:164:1661","crate_id":0,"name":"Backoff","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[80,0],"end":[82,1]},"visibility":"public","docs":"Performs exponential backoff in spin loops.\n\nBacking off in spin loops reduces contention and improves overall performance.\n\nThis primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS\nscheduler, and tell when is a good time to block the thread using a different synchronization\nmechanism. Each step of the back off procedure takes roughly twice as long as the previous\nstep.\n\n# Examples\n\nBacking off in a lock-free loop:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicUsize;\nuse std::sync::atomic::Ordering::SeqCst;\n\nfn fetch_mul(a: &AtomicUsize, b: usize) -> usize {\n    let backoff = Backoff::new();\n    loop {\n        let val = a.load(SeqCst);\n        if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {\n            return val;\n        }\n        backoff.spin();\n    }\n}\n```\n\nWaiting for an [`AtomicBool`] to become `true`:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\n\nfn spin_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        backoff.snooze();\n    }\n}\n```\n\nWaiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.\nNote that whoever sets the atomic variable to `true` must notify the parked thread by calling\n[`unpark()`]:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\nuse std::thread;\n\nfn blocking_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        if backoff.is_completed() {\n            thread::park();\n        } else {\n            backoff.snooze();\n        }\n    }\n}\n```\n\n[`is_completed`]: Backoff::is_completed\n[`std::thread::park()`]: std::thread::park\n[`Condvar`]: std::sync::Condvar\n[`AtomicBool`]: std::sync::atomic::AtomicBool\n[`unpark()`]: std::thread::Thread::unpark","links":{"std::thread::Thread::unpark":"1:521:2613","std::sync::atomic::AtomicBool":"2:8670:79"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:165:2130"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:166","a:2:2701:228-0:164:1661","a:2:8249:1783-0:164:1661","a:2:8250:1782-0:164:1661","a:2:2684:220-0:164:1661","a:2:2741:2497-0:164:1661","b:2:2542-0:164:1661","b:2:2248-0:164:1661","b:2:2553-0:164:1661","b:2:2251-0:164:1661","b:2:2538-0:164:1661","b:2:3319-0:164:1661","b:2:2548-0:164:1661","0:172","0:174"]}}},"0:657":{"id":"0:657","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[472,0],"end":[472,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12069:35833":{"id":"2:12069:35833","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11712:15326","str::split":"2:12060:28128","prim@char":"1:11888:419","`DoubleEndedIterator`":"2:7240:121","str::rsplit_terminator":"2:12072:35834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43407:7310","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5387:36503":{"id":"5:5387:36503","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:587:2578":{"id":"b:2:2251-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:692:2931":{"id":"b:2:2548-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147:552":{"id":"0:147:552","crate_id":0,"name":"deref","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:682:2527":{"id":"a:2:2741:2497-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12081:35835":{"id":"2:12081:35835","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12013:35826":{"id":"2:12013:35826","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:428:2523":{"id":"b:2:2248-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[57,0],"end":[185,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:56:939","0:57:1815","0:58:1835","0:59:1396","0:60:1841","0:61:314"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:371:60":{"id":"0:371:60","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,22],"end":[61,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:1384":{"id":"0:186:1384","crate_id":0,"name":"state","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[12,4],"end":[12,22]},"visibility":{"restricted":{"parent":"0:178:1770","path":"::atomic::seq_lock"}},"docs":"The current state of the lock.\n\nAll bits except the least significant one hold the current stamp. When locked, the state\nequals 1 and doesn't contain a valid stamp.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"AtomicUsize","id":"2:41991:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:337:2026":{"id":"0:337:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[71,0],"end":[71,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"b:2:3319-0:361:1659":{"id":"b:2:3319-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:156:694":{"id":"0:156:694","crate_id":0,"name":"from","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[188,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:585:2528":{"id":"a:2:2701:228-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:632:2889":{"id":"b:2:2538-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12106:35844":{"id":"2:12106:35844","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[78,0],"end":[78,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicU64","id":"2:41911:90","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:355:2026","0:356:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:271:1926":{"id":"0:271:1926","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:1914":{"id":"0:299:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:1396":{"id":"0:105:1396","crate_id":0,"name":"store","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[922,4],"end":[922,50]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_val",{"tuple":[]}],["_order",{"resolved_path":{"name":"Ordering","id":"2:41606:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:688:3323":{"id":"5:688:3323","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:361:1659":{"id":"b:5:684-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:686:3321","5:687:3322","5:688:3323"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[84,0],"end":[84,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:185:1784":{"id":"b:2:2542-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:318:1910":{"id":"0:318:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:1783-0:192:2486":{"id":"a:2:8249:1783-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:394:2365":{"id":"b:2:2542-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:546:668":{"id":"0:546:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[509,4],"end":[511,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12034:29262":{"id":"2:12034:29262","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12033:29261"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[87,0],"end":[95,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:198:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:428:2523":{"id":"a:2:2701:228-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12029:29237":{"id":"2:12029:29237","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:681:2576":{"id":"0:681:2576","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[487,4],"end":[487,48]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"2:2706:2381","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"1:9033:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:2741:2497-0:361:1659":{"id":"a:2:2741:2497-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:2497-0:394:2365":{"id":"a:2:2741:2497-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:444:2524":{"id":"0:444:2524","crate_id":0,"name":"Unparker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[218,0],"end":[220,1]},"visibility":"public","docs":"Unparks a thread parked by the associated [`Parker`].","links":{"`Parker`":"0:428:2523"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:445:2577"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:448","a:2:8249:1783-0:444:2524","a:2:8250:1782-0:444:2524","a:2:2741:2497-0:444:2524","b:2:2542-0:444:2524","b:2:2248-0:444:2524","b:2:2553-0:444:2524","b:2:2251-0:444:2524","b:2:2538-0:444:2524","b:2:3319-0:444:2524","b:2:2548-0:444:2524","b:5:684-0:444:2524","0:447","0:454","0:452","0:446"]}}},"0:272:1930":{"id":"0:272:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:101:1987":{"id":"b:2:3319-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:497:2525":{"id":"b:2:2251-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[55,0],"end":[55,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[842,0],"end":[846,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:85:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:518:2710":{"id":"0:518:2710","crate_id":0,"name":"try_read","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[224,4],"end":[246,5]},"visibility":"public","docs":"Attempts to acquire this lock with shared read access.\n\nIf the access could not be granted at this time, an error is returned. Otherwise, a guard\nis returned which will release the shared access when it is dropped. This method does not\nprovide any guarantees with respect to the ordering of whether contentious readers or\nwriters will acquire the lock first.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(1);\n\nmatch lock.try_read() {\n    Ok(n) => assert_eq!(*n, 1),\n    Err(_) => unreachable!(),\n};\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TryLockResult","id":"1:6494:2363","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:588":{"id":"0:198:588","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[89,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:585:2528":{"id":"b:2:2248-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:1782-0:661:2924":{"id":"a:2:8250:1782-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12099:35840":{"id":"2:12099:35840","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:36505":{"id":"5:5398:36505","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:285:1934":{"id":"0:285:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77:1893":{"id":"0:77:1893","crate_id":0,"name":"impl_arithmetic","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[325,0],"end":[720,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"macro":"macro_rules! impl_arithmetic {\n    ($t:ty, fallback, $example:tt) => { ... };\n    ($t:ty, $atomic:ty, $example:tt) => { ... };\n}"}},"0:347:2039":{"id":"0:347:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[74,0],"end":[74,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:444:2524":{"id":"b:2:2251-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124:2040":{"id":"0:124:2040","crate_id":0,"name":"impl_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[44,0],"end":[51,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]","#[cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))]"],"deprecation":null,"inner":{"macro":"macro_rules! impl_consume {\n    () => { ... };\n}"}},"0:429:2575":{"id":"0:429:2575","crate_id":0,"name":"unparker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[55,4],"end":[55,22]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}}},"items":["0:288:1901","0:289:1910","0:290:1914","0:291:1918","0:292:1922","0:293:1926","0:294:1930","0:295:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:497:2525":{"id":"b:2:2553-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:574:2774":{"id":"b:2:2548-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:547":{"id":"0:547","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[521,0],"end":[521,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:692:2931":{"id":"b:2:2251-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:150:554":{"id":"0:150:554","crate_id":0,"name":"deref_mut","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[174,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:676:2526":{"id":"a:2:2741:2497-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:164:1661":{"id":"b:2:2542-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:1783-0:101:1987":{"id":"a:2:8249:1783-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:358:2026":{"id":"0:358:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[80,0],"end":[80,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"i64"}}}},"2:12138:35852":{"id":"2:12138:35852","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4533:35852"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43674:7249","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430:2576":{"id":"0:430:2576","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[56,4],"end":[56,35]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"2:2706:2381","args":{"angle_bracketed":{"args":[{"type":{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}}],"bindings":[]}}}}}},"0:571:2769":{"id":"0:571:2769","crate_id":0,"name":"thread_indices","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[588,0],"end":[598,1]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:1918":{"id":"0:236:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[50,0],"end":[50,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:64:1855":{"id":"0:64:1855","crate_id":0,"name":"take","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[201,4],"end":[203,5]},"visibility":"public","docs":"Takes the value of the atomic cell, leaving `Default::default()` in its place.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(5);\nlet five = a.take();\n\nassert_eq!(five, 5);\nassert_eq!(a.into_inner(), 0);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:60":{"id":"0:175:60","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[293,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:185:1784":{"id":"a:2:2741:2497-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[71,0],"end":[71,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicU8","id":"2:41671:91","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:337:2026","0:338:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494:2636":{"id":"0:494:2636","crate_id":0,"name":"Shard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[19,0],"end":[28,1]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"A shard containing a single reader-writer lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:495:1903","0:496:2641"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2701:228-0:494:2636","a:2:8249:1783-0:494:2636","a:2:8250:1782-0:494:2636","a:2:2684:220-0:494:2636","a:2:2741:2497-0:494:2636","b:2:2542-0:494:2636","b:2:2248-0:494:2636","b:2:2553-0:494:2636","b:2:2251-0:494:2636","b:2:2538-0:494:2636","b:2:3319-0:494:2636","b:2:2548-0:494:2636"]}}},"0:0:1663":{"id":"0:0:1663","crate_id":0,"name":"crossbeam_utils","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[1,0],"end":[104,1]},"visibility":"public","docs":"Miscellaneous tools for concurrent programming.\n\n## Atomics\n\n* [`AtomicCell`], a thread-safe mutable memory location.\n* [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.\n\n## Thread synchronization\n\n* [`Parker`], a thread parking primitive.\n* [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.\n* [`WaitGroup`], for synchronizing the beginning or end of some computation.\n\n## Utilities\n\n* [`Backoff`], for exponential backoff in spin loops.\n* [`CachePadded`], for padding and aligning a value to the length of a cache line.\n* [`scope`], for spawning threads that borrow local variables from the stack.\n\n[`AtomicCell`]: atomic::AtomicCell\n[`AtomicConsume`]: atomic::AtomicConsume\n[`Parker`]: sync::Parker\n[`ShardedLock`]: sync::ShardedLock\n[`WaitGroup`]: sync::WaitGroup\n[`scope`]: thread::scope","links":{"atomic::AtomicConsume":"0:121:1775","atomic::AtomicCell":"0:43:1774","sync::Parker":"0:428:2523","`CachePadded`":"0:361:1659","sync::WaitGroup":"0:585:2528","thread::scope":"0:625:2886","`Backoff`":"0:164:1661","sync::ShardedLock":"0:497:2525"},"attrs":["#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms),\nallow(dead_code, unused_assignments, unused_variables))))]","#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3:1071","0:25:341","0:131:1658","0:158:1660","0:386:1421","0:609:1449","0:157-0:361:1659","0:176-0:164:1661"],"is_stripped":false}}},"a:2:8250:1782-0:101:1987":{"id":"a:2:8250:1782-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:1782-0:185:1784":{"id":"a:2:8250:1782-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:459:2578":{"id":"b:2:2248-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[20,0],"end":[20,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:459:2578":{"id":"b:2:2251-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12025:2700":{"id":"2:12025:2700","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212:1910":{"id":"0:212:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[70,0],"end":[70,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:121:1775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::sync::atomic::AtomicIsize","id":"2:41951:85","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:334:2026","0:335:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:587:2578":{"id":"b:2:2542-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:1783-0:394:2365":{"id":"a:2:8249:1783-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:2497-0:632:2889":{"id":"a:2:2741:2497-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:1782-0:585:2528":{"id":"a:2:8250:1782-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:695:2886":{"id":"0:695:2886","crate_id":0,"name":"scope","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[320,4],"end":[320,30]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'scope","mutable":false,"type":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}}},"0:455:423":{"id":"0:455:423","crate_id":0,"name":"clone","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[304,4],"end":[308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:497:2525":{"id":"b:2:2542-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57:1815":{"id":"0:57:1815","crate_id":0,"name":"into_inner","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[88,4],"end":[96,5]},"visibility":"public","docs":"Consumes the atomic and returns the contained value.\n\nThis is safe because passing `self` by value guarantees that no other threads are\nconcurrently accessing the atomic data.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\nlet v = a.into_inner();\n\nassert_eq!(v, 7);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:101:1987":{"id":"a:2:2741:2497-0:101:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicUnit","id":"0:101:1987","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:185:1784":{"id":"b:2:2553-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12137:9996":{"id":"2:12137:9996","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4536:9996"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43665:7019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5402:28643":{"id":"5:5402:28643","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12134:28641"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:682:2527":{"id":"b:2:2538-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:623:2876":{"id":"0:623:2876","crate_id":0,"name":"SharedOption","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[126,0],"end":[126,45]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:700:668":{"id":"0:700:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[318,9],"end":[318,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[49,0],"end":[49,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:531:60":{"id":"0:531:60","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[471,4],"end":[473,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:1918":{"id":"0:225:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:534:694":{"id":"0:534:694","crate_id":0,"name":"from","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[477,4],"end":[479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:1934":{"id":"0:252:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2544:694":{"id":"2:2544:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:360:2039":{"id":"0:360:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[85,4],"end":[85,19]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:1904":{"id":"0:521:1904","crate_id":0,"name":"write","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[408,4],"end":[441,5]},"visibility":"public","docs":"Locks with exclusive write access, blocking the current thread until it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which hold the lock.\nThere may be other readers currently inside the lock when this method returns. This method\ndoes not provide any guarantees with respect to the ordering of whether contentious readers\nor writers will acquire the lock first.\n\nReturns a guard which will release the exclusive access when dropped.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Panics\n\nThis method might panic when called if the lock is already held by the current thread.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(1);\n\nlet mut n = lock.write().unwrap();\n*n = 2;\n\nassert!(lock.try_read().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LockResult","id":"1:6492:2360","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:1782-0:164:1661":{"id":"a:2:8250:1782-0:164:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Backoff","id":"0:164:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12010":{"id":"2:12010","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12011:811","2:12012:2897","2:12013:35826","2:12014:35827","2:12016:35828","2:12019:29134","2:12020:35829","2:12021:314","2:12022:29238","2:12023:1849","2:12025:2700","2:12027:2544","2:12029:29237","2:12031:35830","2:12032:35831","2:12033:29261","2:12034:29262","2:12035:7077","2:12036:7327","2:12037:7013","2:12038:33419","2:12039:33411","2:12040:28129","2:12041:35832","2:12042:33424","2:12043:29278","2:12046:28797","2:12049:28799","2:12052:3303","2:12056:3265","2:12060:28128","2:12063:29270","2:12066:29272","2:12069:35833","2:12072:35834","2:12075:29274","2:12078:29276","2:12081:35835","2:12084:35836","2:12087:2288","2:12090:35837","2:12093:35838","2:12096:35839","2:12099:35840","2:12101:35841","2:12103:35842","2:12105:35843","2:12106:35844","2:12107:35845","2:12110:35846","2:12113:27360","2:12116:29279","2:12119:35847","2:12122:35848","2:12125:35849","2:12128:35850","2:12130:28645","2:12131:29138","2:12132:28646","2:12133:28642","2:12134:28641","2:12135:35851","2:12137:9996","2:12138:35852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:587:2578":{"id":"a:2:2701:228-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[135,0],"end":[163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:142:939","0:143:1815"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:192:2486":{"id":"b:2:2248-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12043:29278":{"id":"2:12043:29278","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:1901":{"id":"0:317:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451:2606":{"id":"0:451:2606","crate_id":0,"name":"from_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[290,4],"end":[294,5]},"visibility":"public","docs":"Converts a raw pointer into an `Unparker`.\n\n# Safety\n\nThis method is safe to use only with pointers returned by [`Unparker::into_raw`].\n\n# Examples\n\n```\nuse crossbeam_utils::sync::{Parker, Unparker};\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\nlet raw = Unparker::into_raw(u);\nlet u = unsafe { Unparker::from_raw(raw) };\n```","links":{"`Unparker::into_raw`":"0:450:2602"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":false,"type":{"tuple":[]}}}]],"output":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:682:2527":{"id":"b:2:2548-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:188:939":{"id":"0:188:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[16,4],"end":[20,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5390:36504":{"id":"5:5390:36504","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290:1914":{"id":"0:290:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:686:2576":{"id":"0:686:2576","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[518,4],"end":[518,49]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"2:2706:2381","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"1:9038:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"5:687:3322":{"id":"5:687:3322","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:567:2762":{"id":"a:2:2701:228-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12023:1849":{"id":"2:12023:1849","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:394:2365":{"id":"b:2:2538-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:497:2525":{"id":"b:2:3319-0:497:2525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"items":["0:244:1901","0:245:1910","0:246:1914","0:247:1918","0:248:1922","0:249:1926","0:250:1930","0:252:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:230":{"id":"0:146:230","crate_id":0,"name":"Target","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[166,4],"end":[166,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12037:7013":{"id":"2:12037:7013","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43343:4043","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:621:2875":{"id":"0:621:2875","crate_id":0,"name":"SharedVec","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[125,0],"end":[125,39]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:6695:244","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"2:2557:1477":{"id":"2:2557:1477","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241:1934":{"id":"0:241:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:540:552":{"id":"0:540:552","crate_id":0,"name":"deref","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[495,4],"end":[497,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:568:2764":{"id":"0:568:2764","crate_id":0,"name":"mapping","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[579,4],"end":[579,37]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"Mapping from `ThreadId` to thread index.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"HashMap","id":"1:731:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ThreadId","id":"1:7595:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"primitive":"usize"}}],"bindings":[]}}}}}},"0:353:2039":{"id":"0:353:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[76,0],"end":[76,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163:2091":{"id":"0:163:2091","crate_id":0,"name":"YIELD_LIMIT","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[6,0],"end":[6,28]},"visibility":{"restricted":{"parent":"0:158:1660","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"u32"},"expr":"10","value":"10u32","is_literal":true}}},"0:644:2925":{"id":"0:644:2925","crate_id":0,"name":"builder","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[272,4],"end":[277,5]},"visibility":"public","docs":"Creates a builder that can configure a thread before spawning.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.builder()\n        .spawn(|_| println!(\"A child thread is running\"))\n        .unwrap();\n}).unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'scope","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129-0:43:1774":{"id":"0:129-0:43:1774","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/mod.rs","begin":[36,0],"end":[36,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic_cas))]","#[cfg(not(crossbeam_loom))]"],"deprecation":null,"inner":{"import":{"source":"self::atomic_cell::AtomicCell","name":"AtomicCell","id":"0:43:1774","glob":false}}},"b:2:2251-0:632:2889":{"id":"b:2:2251-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:632:2889":{"id":"b:2:2548-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:676:2526":{"id":"b:2:2248-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:676:2526":{"id":"b:2:2538-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:442":{"id":"0:442","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[211,0],"end":[215,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:443:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12049:28799":{"id":"2:12049:28799","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:306:1901":{"id":"0:306:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[76,0],"end":[209,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:435:939","0:436:2583","0:437:2587","0:438:2592","0:439:2575","0:440:2602","0:441:2606"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:255:1901":{"id":"0:255:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:609:1449":{"id":"0:609:1449","crate_id":0,"name":"thread","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[1,0],"end":[589,1]},"visibility":"public","docs":"Threads that can borrow variables from the stack.\n\nCreate a scope when spawned threads need to access variables on the stack:\n\n```\nuse crossbeam_utils::thread;\n\nlet people = vec![\n    \"Alice\".to_string(),\n    \"Bob\".to_string(),\n    \"Carol\".to_string(),\n];\n\nthread::scope(|s| {\n    for person in &people {\n        s.spawn(move |_| {\n            println!(\"Hello, {}!\", person);\n        });\n    }\n}).unwrap();\n```\n\n# Why scoped threads?\n\nSuppose we wanted to re-write the previous example using plain threads:\n\n```compile_fail,E0597\nuse std::thread;\n\nlet people = vec![\n    \"Alice\".to_string(),\n    \"Bob\".to_string(),\n    \"Carol\".to_string(),\n];\n\nlet mut threads = Vec::new();\n\nfor person in &people {\n    threads.push(thread::spawn(move || {\n        println!(\"Hello, {}!\", person);\n    }));\n}\n\nfor thread in threads {\n    thread.join().unwrap();\n}\n```\n\nThis doesn't work because the borrow checker complains about `people` not living long enough:\n\n```text\nerror[E0597]: `people` does not live long enough\n  --> src/main.rs:12:20\n   |\n12 |     for person in &people {\n   |                    ^^^^^^ borrowed value does not live long enough\n...\n21 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n```\n\nThe problem here is that spawned threads are not allowed to borrow variables on stack because\nthe compiler cannot prove they will be joined before `people` is destroyed.\n\nScoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined\nbefore the scope ends.\n\n# How scoped threads work\n\nIf a variable is borrowed by a thread, the thread must complete before the variable is\ndestroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the\n`'static` lifetime because the borrow checker cannot be sure when the thread will complete.\n\nA scope creates a clear boundary between variables outside the scope and threads inside the\nscope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.\nThis way we guarantee to the borrow checker that scoped threads only live within the scope and\ncan safely access variables outside it.\n\n# Nesting scoped threads\n\nSometimes scoped threads need to spawn more threads within the same scope. This is a little\ntricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such\ncannot be borrowed by scoped threads:\n\n```compile_fail,E0373,E0521\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.spawn(|_| {\n        // Not going to compile because we're trying to borrow `s`,\n        // which lives *inside* the scope! :(\n        s.spawn(|_| println!(\"nested thread\"));\n    });\n});\n```\n\nFortunately, there is a solution. Every scoped thread is passed a reference to its scope as an\nargument, which can be used for spawning nested threads:\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    // Note the `|s|` here.\n    s.spawn(|s| {\n        // Yay, this works because we're using a fresh argument `s`! :)\n        s.spawn(|_| println!(\"nested thread\"));\n    });\n}).unwrap();\n```","links":{"`std::thread::spawn`":"1:493:2922"},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:621:2875","0:623:2876","0:625:2886","0:632:2889","0:692:2931","0:661:2924"],"is_stripped":false}}},"0:76:588":{"id":"0:76:588","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[312,4],"end":[322,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:668":{"id":"0:91:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[856,4],"end":[860,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:1918":{"id":"0:320:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:341":{"id":"0:25:341","crate_id":0,"name":"atomic","span":{"filename":"crossbeam-utils/src/atomic/mod.rs","begin":[1,0],"end":[37,37]},"visibility":"public","docs":"Atomic types.\n\n* [`AtomicCell`], a thread-safe mutable memory location.\n* [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","links":{"`AtomicConsume`":"0:121:1775","`AtomicCell`":"0:43:1774"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:178:1770","0:26:1772","0:119:1773","0:129-0:43:1774","0:130-0:121:1775"],"is_stripped":false}}},"a:2:2701:228-0:459:2578":{"id":"a:2:2701:228-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12033:29261":{"id":"2:12033:29261","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12034:29262"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:567:2762":{"id":"b:2:3319-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:567:2762":{"id":"b:2:2251-0:567:2762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadIndices","id":"0:567:2762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:1783-0:428:2523":{"id":"a:2:8249:1783-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[132,0],"end":[132,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:1782-0:587:2578":{"id":"a:2:8250:1782-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:211:1901":{"id":"0:211:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349:2026":{"id":"0:349:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[75,0],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:2538-0:444:2524":{"id":"b:2:2538-0:444:2524","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Unparker","id":"0:444:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:707:2998":{"id":"0:707:2998","crate_id":0,"name":"into_pthread_t","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[561,12],"end":[563,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RawPthread","id":"1:4507:2996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:2545":{"id":"0:409:2545","crate_id":0,"name":"initialize","span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[71,4],"end":[85,5]},"visibility":{"restricted":{"parent":"0:387:2349","path":"::sync::once_lock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2932:2448","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:605-0:497:2525":{"id":"0:605-0:497:2525","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[16,29],"end":[16,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"inner":{"import":{"source":"self::sharded_lock::ShardedLock","name":"ShardedLock","id":"0:497:2525","glob":false}}},"a:2:8250:1782-0:676:2526":{"id":"a:2:8250:1782-0:676:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:494:2636":{"id":"a:2:2684:220-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:113:1842":{"id":"0:113:1842","crate_id":0,"name":"atomic_store","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[1029,0],"end":[1042,1]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"Atomically writes `val` to `dst`.\n\nThis operation uses the `Release` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}],["val",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:598:423":{"id":"0:598:423","crate_id":0,"name":"clone","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[130,4],"end":[137,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:1987":{"id":"0:101:1987","crate_id":0,"name":"AtomicUnit","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[915,0],"end":[915,18]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":"An atomic `()`.\n\nAll operations are noops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["0:103","a:2:2701:228-0:101:1987","a:2:8249:1783-0:101:1987","a:2:8250:1782-0:101:1987","a:2:2684:220-0:101:1987","a:2:2741:2497-0:101:1987","b:2:2542-0:101:1987","b:2:2248-0:101:1987","b:2:2553-0:101:1987","b:2:2251-0:101:1987","b:2:2538-0:101:1987","b:2:3319-0:101:1987","b:2:2548-0:101:1987"]}}},"0:298:1910":{"id":"0:298:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:587:2578":{"id":"b:2:3319-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:1784":{"id":"0:185:1784","crate_id":0,"name":"SeqLock","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[7,0],"end":[13,1]},"visibility":"crate","docs":"A simple stamped lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:186:1384"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:187","a:2:2701:228-0:185:1784","a:2:8249:1783-0:185:1784","a:2:8250:1782-0:185:1784","a:2:2684:220-0:185:1784","a:2:2741:2497-0:185:1784","b:2:2542-0:185:1784","b:2:2248-0:185:1784","b:2:2553-0:185:1784","b:2:2251-0:185:1784","b:2:2538-0:185:1784","b:2:3319-0:185:1784","b:2:2548-0:185:1784"]}}},"0:637":{"id":"0:637","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[207,0],"end":[207,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:335:2039":{"id":"0:335:2039","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[70,0],"end":[70,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:121:1775","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:440":{"id":"0:107:440","crate_id":0,"name":"compare_exchange_weak","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[928,4],"end":[936,5]},"visibility":{"restricted":{"parent":"0:26:1772","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_current",{"tuple":[]}],["_new",{"tuple":[]}],["_success",{"resolved_path":{"name":"Ordering","id":"2:41606:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_failure",{"resolved_path":{"name":"Ordering","id":"2:41606:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244:1901":{"id":"0:244:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u32"}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[187,0],"end":[204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:64:1855"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:43:1774":{"id":"b:2:2553-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:466:2521":{"id":"0:466:2521","crate_id":0,"name":"sharded_lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[1,0],"end":[636,1]},"visibility":{"restricted":{"parent":"0:386:1421","path":"::sync"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:493:2634","0:494:2636","0:497:2525","0:676:2526","0:682:2527","0:565:2711","0:567:2762","0:571:2769","0:574:2774","0:687:2758"],"is_stripped":false}}},"0:532":{"id":"0:532","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[476,0],"end":[480,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:534:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:692:2931":{"id":"b:2:2553-0:692:2931","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedThreadBuilder","id":"0:692:2931","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:162:2090":{"id":"0:162:2090","crate_id":0,"name":"SPIN_LIMIT","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[5,0],"end":[5,26]},"visibility":{"restricted":{"parent":"0:158:1660","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"u32"},"expr":"6","value":"6u32","is_literal":true}}},"0:625:2886":{"id":"0:625:2886","crate_id":0,"name":"scope","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[151,0],"end":[193,1]},"visibility":"public","docs":"Creates a new scope for spawning threads.\n\nAll child threads that haven't been manually joined will be automatically joined just before\nthis function invocation ends. If all joined threads have successfully completed, `Ok` is\nreturned with the return value of `f`. If any of the joined threads has panicked, an `Err` is\nreturned containing errors from panicked threads. Note that if panics are implemented by\naborting the process, no error is returned; see the notes of [std::panic::catch_unwind].\n\n**Note:** Since Rust 1.63, this function is soft-deprecated in favor of the more efficient [`std::thread::scope`].\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nlet var = vec![1, 2, 3];\n\nthread::scope(|s| {\n    s.spawn(|_| {\n        println!(\"A child thread borrowing `var`: {:?}\", var);\n    });\n}).unwrap();\n```","links":{"std::panic::catch_unwind":"1:4899:2404","`std::thread::scope`":"1:373:2886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"thread::Result","id":"1:528:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2932:2448","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}],"output":{"generic":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12063:29270":{"id":"2:12063:29270","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11535:7056","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2497-0:459:2578":{"id":"a:2:2741:2497-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:684-0:585:2528":{"id":"b:5:684-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3321","5:687:3322","5:688:3323"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:632:2889":{"id":"b:2:2248-0:632:2889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Scope","id":"0:632:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2250:2275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,48],"end":[61,50]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:437:2587":{"id":"0:437:2587","crate_id":0,"name":"park_timeout","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[124,4],"end":[129,5]},"visibility":"public","docs":"Blocks the current thread until the token is made available, but only for a limited time.\n\n# Examples\n\n```\nuse std::time::Duration;\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\n\n// Waits for the token to become available, but will not wait longer than 500 ms.\np.park_timeout(Duration::from_millis(500));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"resolved_path":{"name":"Duration","id":"2:44131:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:494:2636":{"id":"b:2:2553-0:494:2636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Shard","id":"0:494:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:578:588":{"id":"0:578:588","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[609,4],"end":[613,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461:1903":{"id":"0:461:1903","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[317,4],"end":[317,19]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Mutex","id":"1:6296:166","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}},"b:2:2548-0:661:2924":{"id":"b:2:2548-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[490,0],"end":[490,69]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockReadGuard","id":"0:676:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:289:1910":{"id":"0:289:1910","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:185:1784":{"id":"a:2:2684:220-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:294:1930":{"id":"0:294:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_max(2), 7);\nassert_eq!(a.load(), 7);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:361:1659":{"id":"b:2:2538-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:428:2523":{"id":"b:2:2548-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12128:35850":{"id":"2:12128:35850","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11673:127","`FromStr`":"2:11672:10153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11672:10153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11672:10153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12132:28646":{"id":"2:12132:28646","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:939":{"id":"0:142:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[145,4],"end":[147,5]},"visibility":"public","docs":"Pads and aligns a value to the length of a cache line.\n\n# Examples\n\n```\nuse crossbeam_utils::CachePadded;\n\nlet padded_value = CachePadded::new(1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[855,0],"end":[861,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:91:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:168:2135":{"id":"0:168:2135","crate_id":0,"name":"reset","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[110,4],"end":[112,5]},"visibility":"public","docs":"Resets the `Backoff`.\n\n# Examples\n\n```\nuse crossbeam_utils::Backoff;\n\nlet backoff = Backoff::new();\nbackoff.reset();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:1922":{"id":"0:237:1922","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i16"}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:435:939":{"id":"0:435:939","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[87,4],"end":[89,5]},"visibility":"public","docs":"Creates a new `Parker`.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\n```\n","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:587:2578":{"id":"a:2:2684:220-0:587:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:587:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:128:2026":{"id":"0:128:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[84,4],"end":[84,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}}}},"2:12052:3303":{"id":"2:12052:3303","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:428:2523":{"id":"b:2:2542-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:667:2576":{"id":"0:667:2576","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[490,4],"end":[490,36]},"visibility":{"restricted":{"parent":"0:609:1449","path":"::thread"}},"docs":"Borrows the parent scope with lifetime `'scope`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"PhantomData","id":"2:2706:2381","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'scope","mutable":false,"type":{"tuple":[]}}}}],"bindings":[]}}}}}},"0:303:1930":{"id":"0:303:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_max(2), 7);\nassert_eq!(a.load(), 7);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:600:668":{"id":"0:600:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[141,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5:341":{"id":"0:5:341","crate_id":0,"name":"atomic","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[67,8],"end":[67,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:366:423":{"id":"0:366:423","crate_id":0,"name":"clone","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,9],"end":[61,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:361:1659":{"id":"b:2:2251-0:361:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:153:668":{"id":"0:153:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[180,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[15,0],"end":[64,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:188:939","0:189:2004","0:190:2006","0:191:1904"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:399":{"id":"0:399","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/once_lock.rs","begin":[19,0],"end":[19,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:300:1918":{"id":"0:300:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i128"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:2634":{"id":"0:493:2634","crate_id":0,"name":"NUM_SHARDS","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[16,0],"end":[16,28]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"The number of shards per sharded lock. Must be a power of two.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"usize"},"expr":"8","value":"8usize","is_literal":true}}},"0:672:1449":{"id":"0:672:1449","crate_id":0,"name":"thread","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[545,4],"end":[547,5]},"visibility":"public","docs":"Returns a handle to the underlying thread.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle = s.spawn(|_| println!(\"A child thread is running\"));\n    println!(\"The child thread ID: {:?}\", handle.thread().id());\n}).unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"thread::Thread","id":"1:7616:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5384:2014":{"id":"5:5384:2014","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:706:2997":{"id":"0:706:2997","crate_id":0,"name":"as_pthread_t","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[555,12],"end":[560,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RawPthread","id":"1:4507:2996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:1930":{"id":"0:228:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:1918":{"id":"0:258:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i32"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:453:668":{"id":"0:453:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[298,4],"end":[300,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:1782-0:192:2486":{"id":"a:2:8250:1782-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:516:2684":{"id":"0:516:2684","crate_id":0,"name":"is_poisoned","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Returns `true` if the lock is poisoned.\n\nIf another thread can still access the lock, it may become poisoned at any time. A `false`\nresult should not be trusted without additional synchronization.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\nuse std::sync::Arc;\nuse std::thread;\n\nlet lock = Arc::new(ShardedLock::new(0));\nlet c_lock = lock.clone();\n\nlet _ = thread::spawn(move || {\n    let _lock = c_lock.write().unwrap();\n    panic!(); // the lock gets poisoned\n}).join();\nassert_eq!(lock.is_poisoned(), true);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:682:2527":{"id":"b:2:2251-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67:832":{"id":"0:67:832","crate_id":0,"name":"load","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Loads a value from the atomic cell.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n\nassert_eq!(a.load(), 7);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:652":{"id":"0:72:652","crate_id":0,"name":"fetch_update","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[294,4],"end":[306,5]},"visibility":"public","docs":"Fetches the value, and applies a function to it that returns an optional\nnew value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n`Err(previous_value)`.\n\nNote: This may call the function multiple times if the value has been changed from other threads in\nthe meantime, as long as the function returns `Some(_)`, but the function will have been applied\nonly once to the stored value.\n\n# Examples\n\n```rust\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\nassert_eq!(a.fetch_update(|_| None), Err(7));\nassert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));\nassert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2929:1888","args":{"parenthesized":{"inputs":[{"generic":"T"}],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309:1918":{"id":"0:309:1918","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:564:554":{"id":"0:564:554","crate_id":0,"name":"deref_mut","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[559,4],"end":[561,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[88,0],"end":[88,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:599":{"id":"0:599","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[140,0],"end":[145,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:600:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:673":{"id":"0:673","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[585,0],"end":[589,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:675:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12125:35849":{"id":"2:12125:35849","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:15326"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:7051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199":{"id":"0:199","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:200:1901","0:201:1910","0:202:1914","0:203:1918","0:204:1922","0:205:1926","0:206:1930","0:208:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:574:2774":{"id":"b:2:2553-0:574:2774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Registration","id":"0:574:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:668":{"id":"0:668","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[493,0],"end":[548,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:670:2896","0:672:1449"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:288:1901":{"id":"0:288:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u128"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367":{"id":"0:367","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,16],"end":[61,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachePadded","id":"0:361:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:224:1914":{"id":"0:224:1914","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u16"}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:574:2774":{"id":"0:574:2774","crate_id":0,"name":"Registration","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[603,0],"end":[606,1]},"visibility":{"restricted":{"parent":"0:466:2521","path":"::sync::sharded_lock"}},"docs":"A registration of a thread with an index.\n\nWhen dropped, unregisters the thread and frees the reserved index.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:575:769","0:576:2775"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2701:228-0:574:2774","a:2:8249:1783-0:574:2774","a:2:8250:1782-0:574:2774","a:2:2684:220-0:574:2774","a:2:2741:2497-0:574:2774","b:2:2542-0:574:2774","b:2:2248-0:574:2774","b:2:2553-0:574:2774","b:2:2251-0:574:2774","b:2:2538-0:574:2774","b:2:3319-0:574:2774","b:2:2548-0:574:2774","0:577"]}}},"a:2:2741:2497-0:661:2924":{"id":"a:2:2741:2497-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:340:2026":{"id":"0:340:2026","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[72,0],"end":[72,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"i8"}}}},"0:443:668":{"id":"0:443:668","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[212,4],"end":[214,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:591:60":{"id":"0:591:60","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[57,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:185:1784":{"id":"b:2:2548-0:185:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLock","id":"0:185:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217:1930":{"id":"0:217:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i8"}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:394:2365":{"id":"b:2:2553-0:394:2365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnceLock","id":"0:394:2365","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:585:2528":{"id":"b:2:2548-0:585:2528","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WaitGroup","id":"0:585:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:274:1934":{"id":"0:274:1934","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"u64"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:682:2527":{"id":"b:2:2542-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"items":["0:266:1901","0:267:1910","0:268:1914","0:269:1918","0:270:1922","0:271:1926","0:272:1930","0:274:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:529":{"id":"0:529","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[470,0],"end":[474,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:531:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:1783-0:661:2924":{"id":"a:2:8249:1783-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:428:2523":{"id":"b:2:2251-0:428:2523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parker","id":"0:428:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:26150"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[87,0],"end":[87,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLock","id":"0:497:2525","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323:1930":{"id":"0:323:1930","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"isize"}]],"output":{"primitive":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:43:1774":{"id":"b:2:2538-0:43:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:682:2527":{"id":"b:2:3319-0:682:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ShardedLockWriteGuard","id":"0:682:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464:2583":{"id":"0:464:2583","crate_id":0,"name":"park","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[322,4],"end":[391,5]},"visibility":{"restricted":{"parent":"0:416:2520","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Instant","id":"1:9043:2549","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:661:2924":{"id":"b:2:3319-0:661:2924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ScopedJoinHandle","id":"0:661:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277:1901":{"id":"0:277:1901","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["val",{"primitive":"i64"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5400:4068":{"id":"5:5400:4068","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:459:2578":{"id":"b:2:2553-0:459:2578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inner","id":"0:459:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AtomicCell","id":"0:43:1774","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i128"}}],"bindings":[]}}}},"items":["0:297:1901","0:298:1910","0:299:1914","0:300:1918","0:301:1922","0:302:1926","0:303:1930","0:304:1934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:2497-0:192:2486":{"id":"a:2:2741:2497-0:192:2486","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SeqLockWriteGuard","id":"0:192:2486","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"17:13865:6425":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:6587:8718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:480:4317":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:40306:7024":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:2668:6455":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:8838:34012":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:12194:5955":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:22425:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"18:574:5436":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:2817:2437":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:42476:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:39358:6733":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:1846:4392":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:40699:4071":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:7821:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:41462:3744":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:10258:7062":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:43935:15339":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:2805:2439":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:8953:4604":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:1715:8096":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:32020:7889":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:47695:4952":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:12461:6012":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:11393:5020":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:41589:3744":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:13639:6368":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:41615:221":{"crate_id":2,"path":["core","sync","atomic","Ordering","SeqCst"],"kind":"foreign_type"},"2:42449:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:4510:6480":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:46416:7395":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:8825:5025":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:3931:3761":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:8598:22258":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:13332:6266":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:44131:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:7697:4743":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:953:6928":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"18:491:5435":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"18:671:5460":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:5988:8630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:8047:4074":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:43792:7328":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:7081:3270":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44376:4935":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:43265:4391":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"11:840:4366":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13233:6245":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:8968:5029":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:4176:5010":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:4183:2089":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:9218:4606":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:47648:7442":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:41631:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:7538:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:10000:4395":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:13211:6239":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:8420:22252":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:5847:6523":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:3225:6466":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:4553:8262":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:8683:4617":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:10092:7057":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:10692:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:40367:7034":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:7572:36954":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:44283:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:8260:5017":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:7181:4968":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:4074:32005":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:41831:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"11:2204:36937":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:5032:8450":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:12019:5665":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:1568:4264":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:307:1449":{"crate_id":1,"path":["std","thread"],"kind":"module"},"2:45521:7354":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:46528:7397":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:4141:2387":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"9:174:4770":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:7669:4740":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:8075:4070":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:21443:34935":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:1908:17238":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:20596:35279":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:1544:3761":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"5:1042:36608":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:11893:1367":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:10931:4339":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:2407:4374":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:4827:8347":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:2933:5489":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:4371:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:11870:27448":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:4019:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:9106:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:5693:2355":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:7626:6770":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"9:325:7893":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:13399:6288":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:11891:1049":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:41581:3743":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:13744:6396":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:10286:7064":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:4920:8397":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"18:481:5434":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:13265:6252":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:9148:36964":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:6621:2747":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:1667:1087":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12419:6005":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:12622:4633":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"11:2219:3235":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:10798:22260":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"5:2087:6995":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:20729:10176":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:12522:6026":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:1947:5485":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"18:727:4598":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:39334:2455":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:7932:7491":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:2448:6447":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"0:125:2041":{"crate_id":0,"path":["crossbeam_utils","atomic","consume","impl_atomic"],"kind":"macro"},"1:1589:6937":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:3680:5019":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"0:43:1774":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","AtomicCell"],"kind":"struct"},"17:10104:4629":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:11220:5782":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:8166:7501":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:11813:5898":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:2800:2434":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:7318:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:2550:4305":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:5967:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:47800:7444":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"11:1843:3270":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:7557:4737":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"0:3:1071":{"crate_id":0,"path":["crossbeam_utils","primitive"],"kind":"module"},"2:47572:7440":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:43357:4044":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:532:7932":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"14:0:2179":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:8242:7506":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:1916:3567":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:4416:8198":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11821:5900":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12293:5988":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:5773:8519":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:2692:2382":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:6607:4288":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"6:1614:8028":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:5571:4908":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:4737:4322":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:13689:6380":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:4377:2377":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:10505:5713":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:7198:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:573:7954":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:4784:8331":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:10722:27453":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:5987:7030":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:5051:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"12:0:2178":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:41711:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:45437:7351":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:487:5480":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10015:5649":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"18:564:4593":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"0:4:1421":{"crate_id":0,"path":["crossbeam_utils","primitive","sync"],"kind":"module"},"17:9653:5619":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:8748:5039":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:6674:15533":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"11:1524:21268":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:3030:6465":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:3975:4264":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:12634:6041":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:11721:5863":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:41203:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:12550:6030":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:12033:5933":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:13842:6421":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:8195:22237":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:4431:8204":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:4256:5011":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"9:352:21204":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:25847:4813":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:11069:22263":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"0:178:1770":{"crate_id":0,"path":["crossbeam_utils","atomic","seq_lock"],"kind":"module"},"2:22524:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:9157:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:2753:2425":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:2357:6443":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:41226:4943":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:46866:7402":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:7252:8843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:40206:7260":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:4251:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:562:7949":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:11902:5912":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:6373:2358":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:7164:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:40121:7258":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:1366:3744":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:3881:10087":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:8160:7499":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:11265:7067":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:40163:10046":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"5:2912:4379":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:9265:5591":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:2215:4032":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:482:7904":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:43343:4043":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:47686:4962":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:7791:7487":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"0:585:2528":{"crate_id":0,"path":["crossbeam_utils","sync","wait_group","WaitGroup"],"kind":"struct"},"1:8762:7527":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"11:1071:36943":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4439:8207":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:1787:5484":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:4480:6479":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:2932:2448":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:8784:3743":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:4596:6483":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:13135:6222":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:6293:6582":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:41597:3270":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:45892:7367":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:5305:6499":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:8337:7516":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"7:32:21175":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:11471:4902":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:7596:22198":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:4404:8189":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:7595:2632":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:3300:6467":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:5829:8543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:32060:7108":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:4872:6491":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:20869:10174":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:21862:7089":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:6002:8633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:2839:2442":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:43946:7332":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:5528:7028":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"18:96:26100":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:1034:5483":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:10316:5697":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:911:4235":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:8129:6831":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:46370:7394":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:43969:7340":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"5:1612:4242":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:13433:6296":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:10682:4834":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:13041:6205":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:12085:5939":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:6696:22194":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:11712:15326":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:530:3148":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:11500:7479":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:30836:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"0:387:2349":{"crate_id":0,"path":["crossbeam_utils","sync","once_lock"],"kind":"module"},"5:2116:4784":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:4624:6484":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:2967:21332":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:1539:7981":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:3749:6470":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:5843:8554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"11:867:6929":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"0:567:2762":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ThreadIndices"],"kind":"struct"},"1:1561:3743":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:45347:7347":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:11091:2549":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:926:4783":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:1682:8080":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:47823:7445":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:5900:8584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:4773:8323":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"11:97:4362":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:4609:8275":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:6907:4331":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"14:187:21280":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:1078:36606":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:45491:7353":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"11:816:6933":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:10670:5732":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:5502:10158":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:40684:2357":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:35:4239":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4767:8320":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:21839:34067":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:11688:4348":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:7471:7554":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:42666:4817":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:4328:5012":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:46716:7401":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:1978:5488":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:12138:5946":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:12923:6164":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:10303:5696":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:1637:2396":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:39192:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:13506:6313":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:1413:4781":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"11:1866:6936":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:42913:8959":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:39552:29133":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:4679:10103":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:45592:7357":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:39216:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"0:457:2622":{"crate_id":0,"path":["crossbeam_utils","sync","parker","PARKED"],"kind":"constant"},"16:6558:6603":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:13777:6403":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:6488:6592":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:4433:2379":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:6400:6588":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:43479:7062":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:43665:7019":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:4903:2406":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:20760:10173":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"15:0:2180":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:13419:6294":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:42683:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:40034:7249":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:10712:22369":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"0:692:2931":{"crate_id":0,"path":["crossbeam_utils","thread","ScopedThreadBuilder"],"kind":"struct"},"1:5320:7472":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:6755:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"0:164:1661":{"crate_id":0,"path":["crossbeam_utils","backoff","Backoff"],"kind":"struct"},"11:0:2177":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:8753:4619":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:43809:7329":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:2822:2438":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:7485:8856":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:7015:31999":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"11:1634:4237":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:8025:6821":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:3775:4242":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:3168:4063":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:43611:4040":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:7846:7490":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:7781:5539":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:1721:8097":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:2862:6462":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9917:4627":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:1404:4780":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:11913:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:10000:5646":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:5032:6496":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:3911:10089":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:10942:4340":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:5741:22189":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:8319:2410":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:5708:4695":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4478:8224":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:7044:3270":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:4167:3761":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:9772:5627":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:3995:10097":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:45746:7363":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:40133:34064":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"0:444:2524":{"crate_id":0,"path":["crossbeam_utils","sync","parker","Unparker"],"kind":"struct"},"2:12357:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:10068:5657":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:7854:4054":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:6919:36952":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:11879:5909":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:2742:6458":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:4255:2369":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:5785:8523":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"14:165:21273":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"0:0:1663":{"crate_id":0,"path":["crossbeam_utils"],"kind":"module"},"2:11732:15324":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:10681:5733":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:10835:5013":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:9410:3690":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:7230:8842":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:9350:36963":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:3925:10090":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:40268:4398":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:13121:6219":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:13066:6215":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:4698:8288":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:8215:8969":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:4327:6476":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:43407:7310":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:506:7912":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:8960:4835":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:6180:4280":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:9107:3496":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"18:515:5433":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:6821:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:8788:4620":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:43989:7080":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:2931:21331":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:3170:4064":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:7224:7014":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:9734:5626":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:4790:8334":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:11484:5816":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:11532:5828":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"11:731:4780":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:8982:26302":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:42695:7290":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:10080:5658":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:4096:10112":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:8496:7525":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:45681:7361":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:8170:6835":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13385:6281":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:9853:5632":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:13219:6242":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:10203:7060":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:12597:10009":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:21431:4805":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:41289:4815":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:373:2886":{"crate_id":1,"path":["std","thread","scoped","scope"],"kind":"function"},"1:8918:2578":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:5908:3761":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:4845:10139":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:12331:5993":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:9670:5622":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:11585:5841":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:47526:7439":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:7862:4056":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"0:609:1449":{"crate_id":0,"path":["crossbeam_utils","thread"],"kind":"module"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:43656:7250":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:11912:1126":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:4757:8314":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:501:3146":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:9028:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"6:7578:8875":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:119:15892":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:9683:5623":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:43741:15338":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:10244:7061":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:13053:6210":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:43210:7261":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:4578:8742":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:7693:7485":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:20938:10167":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:11895:1481":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:9038:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:4641:8278":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"0:466:2521":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock"],"kind":"module"},"2:43135:7296":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:6008:8636":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:5386:4602":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:39379:4940":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:1752:8109":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:22458:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:6332:2747":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:11355:4644":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:7711:6772":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:13659:6374":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:6369:2357":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:3383:4031":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:45391:7349":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:4294:8116":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:936:10003":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:22590:4950":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:2738:3217":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:10691:22368":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"5:6248:4264":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:9062:3224":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:10283:5695":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:4110:2386":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:43857:7330":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:40708:4301":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:9003:1659":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"11:1144:6932":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:7677:10033":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:47464:7438":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:8356:7051":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:5402:4603":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:8134:4042":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:43163:7298":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:43579:7315":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:494:5035":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:6728:6641":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:4760:10102":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:4707:8293":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:12894:6153":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:20984:10169":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:5563:4323":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"13:110:36944":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:40408:7036":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:21879:33138":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:4322:2375":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:40356:7269":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:8389:22251":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:45662:7360":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:5717:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:40399:4798":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:41530:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:13651:6371":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"0:574:2774":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","Registration"],"kind":"struct"},"5:2908:4377":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:9877:7282":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"11:757:4264":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:1622:8033":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:1555:7989":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:40076:7253":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:4797:8336":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"18:113:26101":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:9374:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:4726:8301":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:41309:34065":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:44389:7346":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:6776:8808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:8360:22250":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"18:766:26111":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:11424:7070":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:6116:8662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:6474:4727":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:44080:8961":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:41345:7466":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:4681:3239":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:8214:6733":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:5015:8442":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:41445:3269":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:20841:10180":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:5370:5016":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:40149:7259":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:22293:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:10:1014":{"crate_id":1,"path":["std","panic"],"kind":"macro"},"16:4702:6485":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"11:399:36939":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:1995:4381":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"18:599:36970":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6854:6659":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:9721:5625":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:11891:5911":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:7321:4235":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"18:719:5468":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:8091:4038":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:4508:2995":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10897:5751":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:13678:6379":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:10314:7526":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:40196:4295":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:618:7453":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:6981:6674":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:3973:10093":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:21083:10074":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:39961:7242":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:2360:10065":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:5995:8632":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:11892:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:9081:3225":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:46036:7372":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:5235:15314":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:1931:653":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:5880:8568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:7683:4742":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:9155:3500":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"18:736:26110":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6179:4702":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:2830:4907":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"18:660:5454":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"11:783:4236":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:43884:7079":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:40424:5451":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:7528:4335":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:45844:7366":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10705:5735":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:7838:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"0:676:2526":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ShardedLockReadGuard"],"kind":"struct"},"0:579:2522":{"crate_id":0,"path":["crossbeam_utils","sync","wait_group"],"kind":"module"},"16:55:6812":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"5:1432:4782":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:11060:4633":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:10840:5749":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6164:6567":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:11237:8978":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:6057:8650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:13292:6256":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:5693:4692":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12307:5990":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:7798:4834":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:21337:10182":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:22326:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:2869:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:13453:6302":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"0:117:1875":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_compare_exchange_weak"],"kind":"function"},"1:1572:4235":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:493:2922":{"crate_id":1,"path":["std","thread","spawn"],"kind":"function"},"16:7467:6762":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"11:744:4781":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:4:1014":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:13612:6356":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:2916:4380":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:39998:7246":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:7670:4825":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:7808:7488":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"11:652:3744":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:4047:3744":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"0:565:2711":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","current_index"],"kind":"function"},"5:2189:4787":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:22491:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:13367:6277":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"11:1035:6930":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:5963:6538":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:2161:3547":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:9370:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:3815:6472":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:10491:5712":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:12536:6027":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:6739:4280":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:45644:7359":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:42421:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:5755:8506":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:8171:10082":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:9876:5538":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:9038:36960":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:2985:2450":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11195:7475":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:4042:15299":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"9:52:4755":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:47721:4963":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:8427:10152":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:1048:6684":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:41454:3743":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:10165:7059":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:2788:2435":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:42160:3497":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:3208:4065":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"7:0:1543":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:3150:6937":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:11299:5801":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:8220:10116":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:4459:8216":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:3197:2383":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:11911:1553":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:40315:7027":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:10670:7549":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:1821:7463":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:6376:4725":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:45968:7369":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:6800:8818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:8632:22236":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:1242:6932":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:8264:8727":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:9409:22270":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:7588:3745":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"11:2087:6930":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:46014:7371":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:13240:6247":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:39970:7243":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:9803:10074":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:8180:22201":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:4743:8308":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:10647:8974":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:12483:6023":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11653:5861":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:41751:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"18:80:26099":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:39114:2460":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:44326:4937":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:3355:3761":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:21854:7088":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"0:428:2523":{"crate_id":0,"path":["crossbeam_utils","sync","parker","Parker"],"kind":"struct"},"16:5367:21303":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:12382:7083":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:10440:5708":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:1443:4783":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:8234:7499":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:9405:3689":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:10615:5728":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:6494:2363":{"crate_id":1,"path":["std","sync","poison","TryLockResult"],"kind":"typedef"},"17:10555:5716":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:13791:6410":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:42174:3500":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:9512:5608":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:4576:8740":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:9362:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:47402:7437":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:3753:4235":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:11372:5019":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:45543:7355":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:1657:8061":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:8777:444":{"crate_id":2,"path":["core","sync","atomic","compiler_fence"],"kind":"function"},"17:10857:22261":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:2346:10061":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:44108:8968":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:9228:36966":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:3060:4073":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:39280:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:4861:1014":{"crate_id":1,"path":["std","panic"],"kind":"module"},"1:11904:740":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:30360:33154":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:41871:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:13316:6264":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:43621:7316":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:11770:5888":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:5071:6497":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:6651:8746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:7588:6769":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:4366:3761":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:2963:2459":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"0:95:1903":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","lock"],"kind":"function"},"5:6990:4082":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:5334:5014":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:4789:6488":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:3163:35620":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"18:636:5453":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:11909:1495":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:8736:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:13101:4654":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:4398:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:10761:22259":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:11520:5825":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:46606:7398":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:9523:5609":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:40438:7038":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:5712:4264":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:8786:1654":{"crate_id":2,"path":["core","sync","atomic","spin_loop_hint"],"kind":"function"},"11:2060:6684":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:500:7909":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"0:131:1658":{"crate_id":0,"path":["crossbeam_utils","cache_padded"],"kind":"module"},"2:3510:4264":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:40102:7257":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:7241:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:6706:8758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4845:8356":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"18:521:26112":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:7635:6771":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:11899:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:8955:4827":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:45792:7364":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:4728:6486":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:5643:6511":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:12433:6007":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:535:4674":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:11910:789":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:11434:4901":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:922:4782":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"18:644:5436":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:8776:5021":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:11109:5763":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"0:26:1772":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell"],"kind":"module"},"0:121:1775":{"crate_id":0,"path":["crossbeam_utils","atomic","consume","AtomicConsume"],"kind":"trait"},"17:12646:6048":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:6307:4720":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:3063:5499":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:5886:6525":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:8250:1782":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:6022:22191":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:6628:8745":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:9178:5590":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:10948:4341":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:10626:5729":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"5:7030:35617":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:12576:6032":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:10923:4637":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"11:1859:6935":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:5959:8617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:7022:4253":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:568:7952":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:5439:5013":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"0:587:2578":{"crate_id":0,"path":["crossbeam_utils","sync","wait_group","Inner"],"kind":"struct"},"1:4574:8738":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:4260:2370":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:9534:5610":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:3142:5490":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:44092:8964":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:4005:4242":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:7572:3158":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:867:3270":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:42167:3499":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:7293:6714":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:5104:6498":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:43236:7302":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:8256:22235":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:4527:8251":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:2758:2430":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:10712:4038":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:9796:5628":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:554:2900":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:3292:4049":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:12126:5945":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:7568:8873":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:2784:2431":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:11168:7551":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:1736:8104":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"11:991:6684":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:10826:4929":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:526:7929":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:4991:8435":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:5920:4671":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"0:458:2623":{"crate_id":0,"path":["crossbeam_utils","sync","parker","NOTIFIED"],"kind":"constant"},"0:687:2758":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","REGISTRATION"],"kind":"constant"},"6:7258:8845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:7942:4057":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:638:7456":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:4602:15383":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:13443:6299":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:8800:3270":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:3129:26514":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:783:4245":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:12542:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:4639:10141":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:1351:3743":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"15:219:4748":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"17:242:5475":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:6764:4291":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:13721:6395":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:4125:10115":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:39236:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4911:8391":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:40022:7248":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"11:665:3270":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"8:0:1662":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12158:5949":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:4970:8428":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:4845:6490":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:13488:6310":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"11:1879:6938":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:5719:1655":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:6890:4731":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:10771:7065":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:8283:22248":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:40376:7035":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:10847:27449":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:8667:4603":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:2744:3219":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:1062:4369":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11969:5924":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:633:6992":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:46446:7396":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:7837:6784":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:21916:33148":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:2796:2432":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:21:681":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:6943:22195":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:9322:36967":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:40459:4042":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"9:388:21190":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:5764:2364":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:9043:2549":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:39258:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"5:1228:4369":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:43561:7314":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:6492:2360":{"crate_id":1,"path":["std","sync","poison","LockResult"],"kind":"typedef"},"17:13249:6248":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:6236:4687":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"11:1852:4235":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:40693:7045":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:4932:8406":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:4629:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:20579:35276":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"11:119:4229":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:43763:7320":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:20879:3547":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"17:11615:5853":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:8893:2356":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"18:681:5461":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:11249:15576":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:13499:6311":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:10598:5752":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"0:77:1893":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","impl_arithmetic"],"kind":"macro"},"6:5947:8610":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:7509:4922":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:11901:742":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"20:0:1662":{"crate_id":20,"path":["cfg_if"],"kind":"module"},"17:8909:4043":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:7411:4684":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:7659:10000":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"0:571:2769":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","thread_indices"],"kind":"function"},"6:6668:8747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:875:4780":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:1588:8012":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:10527:22367":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:1525:7976":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:8251:2416":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:41512:2415":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:8548:22256":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:3622:4242":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:12308:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"11:2076:4369":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:11924:5919":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:9946:5642":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:11410:5812":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"14:215:6922":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:43255:7303":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:42705:4818":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:11493:7479":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:4980:8429":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:7263:2498":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:11500:7075":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"0:623:2876":{"crate_id":0,"path":["crossbeam_utils","thread","SharedOption"],"kind":"typedef"},"17:11993:5925":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:2691:2400":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:4037:6475":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:1981:4056":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:11898:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:4507:2996":{"crate_id":1,"path":["std","os","unix","thread","RawPthread"],"kind":"typedef"},"2:9609:4305":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:9138:5589":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:7859:22200":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:4486:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:1844:4089":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"10:44:4753":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:3872:6473":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:13194:6234":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:45622:7358":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:43223:7301":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"0:621:2875":{"crate_id":0,"path":["crossbeam_utils","thread","SharedVec"],"kind":"typedef"},"2:21561:10170":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:40448:7271":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:11556:5830":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:9488:5607":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:12372:5998":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:6188:4323":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"0:25:341":{"crate_id":0,"path":["crossbeam_utils","atomic"],"kind":"module"},"1:3677:5018":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:12318:5991":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:247:5476":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:4719:8300":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:4414:10117":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:3899:6474":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"11:1126:6931":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:9424:5600":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:355:2889":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:20577:35274":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:7165:15530":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:9120:28478":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"6:474:7899":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:5910:4323":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:8485:7524":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:2477:4052":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:1514:7971":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:30232:1780":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:10272:7063":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11544:5829":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:43956:7336":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"0:101:1987":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","AtomicUnit"],"kind":"struct"},"0:162:2090":{"crate_id":0,"path":["crossbeam_utils","backoff","SPIN_LIMIT"],"kind":"constant"},"2:41260:10083":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:30272:2401":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:22260:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:10092:5659":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"10:36:7892":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:13698:6382":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:9159:3501":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13857:6422":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:3547:3744":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:7275:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6390:6587":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:11234:5783":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:4336:4270":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:10462:2978":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:9641:5617":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:43184:7299":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:8208:7466":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"11:768:4235":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:2470:4906":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:857:3744":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:46158:7375":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:6351:22192":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:4899:2404":{"crate_id":1,"path":["std","panic","catch_unwind"],"kind":"function"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:8792:7529":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:9895:5638":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:11905:1499":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:3247:4061":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:2572:6451":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:13159:6224":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:930:6925":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:9866:5633":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:10138:5034":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:13376:6280":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:9469:5603":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7259:2414":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:46189:7376":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:4782:34559":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:11282:5798":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:11907:1497":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:11889:1515":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:7257:26562":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:10334:4606":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12592:6034":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:11243:8979":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:13344:6272":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:7014:4264":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:23037:4812":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:6597:4287":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:8156:4746":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:8490:22254":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:123:15893":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:4207:3743":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:12980:6198":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"11:1009:4369":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:8870:10164":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:40670:7043":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:4941:8412":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:4538:8256":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:9188:36962":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"11:305:7884":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"5:1382:3270":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:44084:8962":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:8249:1783":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:7478:4921":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:11737:15323":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:888:4781":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"9:445:21189":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:20909:10181":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:2832:4321":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:2387:2190":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:13411:6291":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:6868:4688":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:2905:4905":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:20770:3547":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:8730:7526":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"0:416:2520":{"crate_id":0,"path":["crossbeam_utils","sync","parker"],"kind":"module"},"2:41479:2414":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:11027:27446":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:3534:3743":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:4757:6487":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:7497:8858":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:4952:8417":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:11894:1397":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:10628:7543":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:9498:4624":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:9147:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:8670:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:43375:7059":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:211:4241":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"0:92:1936":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","can_transmute"],"kind":"function"},"1:7509:4333":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:11783:15332":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:4137:3761":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:5811:6516":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:6101:4329":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:47675:4954":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:7509:8860":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"0:394:2365":{"crate_id":0,"path":["crossbeam_utils","sync","once_lock","OnceLock"],"kind":"struct"},"18:590:5440":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:5944:6531":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:10657:7487":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"6:4499:8235":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:7697:7107":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:11468:8981":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:41521:3070":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:11903:744":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:22392:3152":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:6935:6663":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:6585:3278":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:5077:8475":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:11837:7557":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:1532:7979":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:8103:4039":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:40726:7049":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:7632:34013":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:21107:10074":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:4492:8232":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:43674:7249":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:2906:35438":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:5071:8472":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:41538:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:3933:10091":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:42393:8951":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:1594:6938":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"0:115:1845":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_swap"],"kind":"function"},"5:6097:10259":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:6009:4325":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:7591:3746":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:7161:15531":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:30288:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:2792:2433":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10580:5724":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:41394:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:10936:4639":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:7052:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:5570:4324":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:21718:7086":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:10989:5492":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"18:690:5463":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"6:5974:8619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:40012:7247":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:41380:4947":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:5677:22188":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:2594:6452":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"0:632:2889":{"crate_id":0,"path":["crossbeam_utils","thread","Scope"],"kind":"struct"},"17:9557:4606":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:3995:7020":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:6575:22193":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:44152:3227":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:4904:6492":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:4681:10105":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:11717:7051":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:5065:8470":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:5630:6506":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:4688:8281":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:8310:22249":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:10478:5711":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"18:609:5447":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:2879:4904":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:7488:6765":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:10416:5706":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:3644:3270":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:12178:5950":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:32056:7107":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:5857:8555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:7460:5481":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:2642:6454":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:40677:7044":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:7595:15529":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:45367:7348":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:0:1389":{"crate_id":1,"path":["std"],"kind":"module"},"0:111:1857":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_load"],"kind":"function"},"16:6132:6564":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:8410:7519":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:4999:8437":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:40042:7019":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"11:279:4363":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:6482:2361":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:2856:2446":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:1650:8057":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:4969:6494":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:7077:22196":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:7519:6767":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:579:7957":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:4104:10113":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:6569:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"14:221:6924":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:10422:4061":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:40255:4041":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:562:5481":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:2540:4053":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:20742:10177":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"2:11726:5464":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:6110:8661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:4406:1778":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:547:7941":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:44100:8966":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:12770:6050":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:39302:2452":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:6768:15525":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:41911:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:4821:8346":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:43507:7312":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:45459:7352":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:3163:2456":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:21088:10168":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:1467:1779":{"crate_id":2,"path":["core","mem"],"kind":"module"},"0:361:1659":{"crate_id":0,"path":["crossbeam_utils","cache_padded","CachePadded"],"kind":"struct"},"16:6717:6640":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:8226:7505":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:10050:7534":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:47324:7436":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:7211:7011":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:9959:5643":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:7937:4833":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:39955:7019":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:7437:6753":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:20804:10179":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"5:2077:3146":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:41991:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:5616:6502":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:45699:7362":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:8823:4621":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"11:1561:6934":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:4540:6481":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:6506:6600":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:6819:6655":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:20564:34937":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:2206:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"0:192:2486":{"crate_id":0,"path":["crossbeam_utils","atomic","seq_lock","SeqLockWriteGuard"],"kind":"struct"},"17:12046:5934":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:541:7938":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:10635:4632":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:5354:5015":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:5834:4382":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:39176:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:1709:8093":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:5557:4691":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:43461:7061":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:6431:6590":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:7803:6780":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:154:4226":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:1785:7462":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:2847:2444":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"5:3129:35619":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:10804:7066":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:43631:7317":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:11573:5838":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:844:3743":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:11900:745":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:8256:6842":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:10452:5709":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:21332:10172":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:7491:8857":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:11861:5908":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:6724:8768":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:9973:5644":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:4521:8248":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:6460:4726":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:21952:4939":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:6876:4730":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:6538:2366":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:9478:5605":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:5586:4796":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:9596:5613":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"5:3673:4056":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:4990:7471":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:5021:7471":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9577:5612":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:1668:8069":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:11938:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"14:7:6917":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:2636:8879":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:7555:8872":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:6865:9359":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:13309:6263":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:6904:4732":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:5035:2353":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:8843:4799":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:4112:10114":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:2768:2426":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:10209:7473":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:20594:35277":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:6085:4315":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:11887:936":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4509:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:6552:2367":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:2694:6456":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:4932:6493":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:40226:7261":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:47747:4956":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:1546:7984":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:42898:7294":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:45561:7356":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:6793:6654":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13082:6218":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:9098:5588":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:21116:4803":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:40116:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"18:699:4596":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:44088:8963":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:9295:7053":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:9545:5578":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:11319:5811":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:30302:33153":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:7571:10074":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:9985:3744":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:6598:8723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:11641:5858":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"11:1873:6937":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:3158:6935":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13024:6203":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:40389:7270":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:4449:8213":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:420:5479":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:8479:3743":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:6814:8827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:11888:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:40473:7040":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"10:0:2176":{"crate_id":10,"path":["adler"],"kind":"module"},"6:7532:8866":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:41671:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:12098:5941":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:13477:6306":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:2614:4055":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:6201:6569":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"5:6446:4242":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"14:202:15340":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:4392:8184":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:3382:7018":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"0:158:1660":{"crate_id":0,"path":["crossbeam_utils","backoff"],"kind":"module"},"17:10125:5660":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:4559:8264":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:3782:6471":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:9149:3497":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:4803:8339":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:9624:4310":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"11:1050:21267":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:3465:4036":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:21004:4803":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:3079:2453":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:11072:5038":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"5:4399:4270":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:6520:6602":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:2774:2429":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:9826:5630":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:5594:4911":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:5468:3761":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"18:582:3247":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:2574:4045":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:11339:4640":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:4386:2378":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:11015:7527":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:9386:4337":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"11:1540:4372":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13516:6318":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:7065:6683":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:44076:8960":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:4472:8221":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:13324:6265":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:40246:7263":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"18:531:5437":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:39075:2461":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"5:2169:36582":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:9275:36958":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:4890:8376":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:43333:7308":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:6578:4276":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:6767:6653":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4318:8133":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:8141:4043":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:12449:6010":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:3234:2384":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:5485:4276":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:4571:8273":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4857:8360":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:587:7962":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:12236:5976":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"11:821:6925":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:2867:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:9381:7486":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:20536:3247":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:44104:8967":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:10721:5737":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:3210:4066":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:7317:36953":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:43245:4390":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:5779:8522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:6254:4717":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:6442:6591":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:5862:8556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:11422:5815":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:2524:6449":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:41791:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:44364:4936":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:11844:5905":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9628:5616":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:3370:15358":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:12295:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"0:124:2040":{"crate_id":0,"path":["crossbeam_utils","atomic","consume","impl_consume"],"kind":"macro"},"1:8854:10162":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:4619:8276":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"14:31:6917":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:12496:6024":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:12259:5985":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:6671:6628":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:8082:4072":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:42153:3498":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"0:494:2636":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","Shard"],"kind":"struct"},"16:5655:4912":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:43525:7313":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:42031:2315":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:20990:10171":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:40347:7029":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:5797:4701":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:1783:7461":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:1700:8087":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:9098:3159":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:5724:6512":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:10652:8976":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:3249:4062":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:46212:7377":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:5779:4697":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:959:6929":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:9340:5593":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:11258:5797":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:11535:7056":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:13803:6412":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:21978:10086":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:1756:3564":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:6917:4070":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:42433:6799":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:6327:4724":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:863:4250":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"18:652:5436":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:9886:5635":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4546:8260":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:1564:7995":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:43778:7325":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:7089:3270":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:11054:3224":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:4898:8381":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"11:1839:3743":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:44347:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:901:4264":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:11372:4646":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:3446:6468":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:9907:4626":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:9986:5645":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:7449:6754":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:9617:5615":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:7757:6773":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"0:163:2091":{"crate_id":0,"path":["crossbeam_utils","backoff","YIELD_LIMIT"],"kind":"constant"},"13:226:4752":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:361:2924":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:45938:7368":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:2337:4663":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:9028:5587":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:8090:6827":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4732:8304":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:3169:2458":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:8154:4040":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:2764:6459":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:4400:6477":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:9813:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:7529:4735":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:12835:6101":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:7443:8855":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:7544:8868":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:5818:2353":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:9592:4304":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:22227:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:6662:6627":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:11902:743":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:47785:7443":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:2763:2427":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"18:707:5464":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:6545:8694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"0:113:1842":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_store"],"kind":"function"},"0:185:1784":{"crate_id":0,"path":["crossbeam_utils","atomic","seq_lock","SeqLock"],"kind":"struct"},"1:11210:7476":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"15:180:21286":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:11449:4839":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:4875:8371":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:8838:10163":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:8047:6822":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:7644:9999":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:2720:6457":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:3117:3743":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"0:625:2886":{"crate_id":0,"path":["crossbeam_utils","thread","scope"],"kind":"function"},"1:528:210":{"crate_id":1,"path":["std","thread","Result"],"kind":"typedef"},"17:10354:5699":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:13879:6428":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:46060:7373":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:7202:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12113:5944":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:12345:5994":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"11:2212:7890":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12282:5986":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:6553:8699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:47666:4951":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"11:1847:4264":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:42674:3691":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:30864:3247":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:10545:5492":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:4307:8125":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"0:493:2634":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","NUM_SHARDS"],"kind":"constant"},"6:6605:8727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:8651:4602":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:2780:2428":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:5346:6500":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:3585:6469":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:6830:8833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:10419:4065":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:7148:3236":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"11:828:10003":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:11331:5018":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:2208:7464":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4590:8274":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:41332:7285":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:43301:7304":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11628:5857":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:2470:15394":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:880:3743":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:2298:21305":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:4423:8202":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:4960:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:1821:2385":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:20549:34937":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:4667:8280":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:4751:8312":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:7266:7016":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:1728:8100":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:40057:15389":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:1197:6684":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:2404:6445":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:3939:10092":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:2290:430":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:5816:8534":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:4642:10117":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:44291:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:41606:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:5191:4242":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:1747:8882":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:3276:4235":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:13564:6355":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:5798:8524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:3135:28056":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:2372:10071":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:8142:6834":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:4288:8115":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:8664:341":{"crate_id":2,"path":["core","sync","atomic"],"kind":"module"},"6:6016:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:975:5482":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:42498:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:42458:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:43921:7331":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:4653:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:7767:22199":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:1895:4965":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:10569:5720":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:7616:2978":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:3688:4381":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:5499:8648":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"5:7060:4788":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"0:386:1421":{"crate_id":0,"path":["crossbeam_utils","sync"],"kind":"module"},"17:12563:6031":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:4818:6489":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:21803:4807":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:40050:7250":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:11672:10153":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:5976:4676":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:6151:8687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"9:481:21188":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11832:5903":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:10270:5693":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:32147:3222":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:9380:22269":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:41368:4946":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:20768:33665":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:13426:6295":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:4331:8143":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:4947:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:2926:2447":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"0:459:2578":{"crate_id":0,"path":["crossbeam_utils","sync","parker","Inner"],"kind":"struct"},"17:386:5477":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:10465:5710":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:5809:8532":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"18:507:5436":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:43144:7297":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:8147:4044":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:3987:10095":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:10010:4044":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:9526:4303":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"6:488:7907":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:8931:4623":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"11:393:36942":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:9117:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:7665:4084":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:45822:7365":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:7743:4744":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:8912:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:11461:28519":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"16:6218:6572":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:7244:36956":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:10039:5653":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"0:497:2525":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ShardedLock"],"kind":"struct"},"17:10743:5742":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:12072:5937":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:40277:4794":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:6024:8641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:1519:7973":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:39372:2376":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:13821:6418":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:6047:8647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:1576:8004":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:4445:6478":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"5:1716:4235":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:6409:2365":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:917:6933":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:6321:4722":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:46292:7378":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:2163:3548":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:43425:7311":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"14:160:6917":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:554:7944":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:11854:4840":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:1565:3270":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"0:682:2527":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ShardedLockWriteGuard"],"kind":"struct"},"11:675:4782":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13169:6225":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:8858:4622":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:7543:4736":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:4808:795":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:9108:36961":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:10226:4396":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:47610:7441":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:45413:7350":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:6136:8676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:1422:6933":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:2319:6442":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:6691:8754":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:21827:7087":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:5239:15315":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"14:40:5798":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:9443:5602":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:22359:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"5:815:4248":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"5:7195:34064":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:12224:5974":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:3875:10088":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:4383:8179":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:12006:5928":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"9:0:2175":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:20922:10074":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:8806:5024":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:44334:7343":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:42658:3692":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:44112:4802":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:45990:7370":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:1583:6936":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:6361:4915":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:947:4366":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:2426:6446":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:1919:22300":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:3266:5491":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:9981:7463":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:643:9998":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:10416:4063":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:9184:4089":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:21945:8884":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:13469:6305":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:3401:4033":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:2843:2443":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:12510:6025":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:49668:10185":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:13625:6362":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:40487:7041":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:11011:5754":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:11225:7478":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:8573:22257":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:10649:5730":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:10589:5725":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:6578:8717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:280:2500":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"0:108:341":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic"],"kind":"macro"},"2:43327:7069":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:5418:6501":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:5000:6495":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"0:456:2579":{"crate_id":0,"path":["crossbeam_utils","sync","parker","EMPTY"],"kind":"constant"},"1:8469:7468":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"5:4732:668":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:585:9995":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:6336:6583":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:1924:10044":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:4836:8350":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:6990:6677":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:4436:10118":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:5747:8504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:12501:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:7103:5029":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:20982:10074":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:47770:4964":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:39161:2451":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:11446:4897":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:8979:36959":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"11:2157:21261":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:11145:4342":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:9566:5591":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:3615:10084":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13461:6303":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:8718:4618":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"18:0:2183":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:11600:5847":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:6785:8811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:6721:32807":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:9151:3498":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:2851:2445":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:5686:2354":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:7029:6678":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:9312:5592":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:676:4488":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:3132:28057":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:44096:8965":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:30266:1781":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:10053:7056":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:10428:5707":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:8443:22253":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:8109:6830":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:2706:2381":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:7786:7486":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"9:421:21191":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:9033:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:6757:10165":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:2362:10066":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:7366:22197":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:12358:5995":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:5385:7473":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"5:963:4242":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:11090:5760":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:7503:8859":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:10257:5692":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:2922:1892":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:2546:6450":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:21771:4806":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:39365:7114":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:2211:1817":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:13257:6250":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"11:638:3743":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:10052:5655":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:9153:3499":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:14:1904":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:8521:22255":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:1577:6935":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:3458:4034":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:10885:4636":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"6:5935:8605":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:0:2181":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:2469:10074":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"0:109:1836":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_is_lock_free"],"kind":"function"},"1:8948:7532":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:3782:5020":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:10130:7058":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:8072:6825":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"0:661:2924":{"crate_id":0,"path":["crossbeam_utils","thread","ScopedJoinHandle"],"kind":"struct"},"16:6544:4728":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:30466:33144":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:12902:6156":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:11162:4829":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:2786:6460":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:6848:8836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11886:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:4865:8365":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:5998:22190":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:3640:5503":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:11003:5039":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"4:0:2174":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:2827:2440":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"18:614:36969":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:6700:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:46682:7400":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:3142:2454":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"0:119:1773":{"crate_id":0,"path":["crossbeam_utils","atomic","consume"],"kind":"module"},"2:22557:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:1071:6930":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:2616:6453":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"5:7005:7008":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:60:36938":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13033:6204":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:3983:10094":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:7526:8865":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:6367:3270":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:11459:4903":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:6695:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:703:4783":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:2749:3221":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:5870:8561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:42917:7054":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:11193:5774":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:21665:7085":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:9142:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:44273:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"18:755:5474":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:635:7454":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:40286:7264":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:47214:7435":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:46111:7374":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13015:6199":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:2741:2497":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:6977:2348":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:11035:4802":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:12059:5936":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:11946:5920":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:10865:5021":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:10660:4633":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"5:6999:3270":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:47706:4955":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:13667:6375":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:62:15838":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"5:2905:3321":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12403:6004":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:4007:7021":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:46652:7399":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:8387:7290":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:4813:8342":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:7255:7015":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:10967:5752":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:9161:3502":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:7520:8864":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:9453:22271":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"11:326:4231":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"11:1091:4370":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"18:624:36971":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:47862:7446":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:11906:1496":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:9748:4606":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:8286:7467":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:21114:10175":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4564:10092":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:40718:7047":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:4332:2376":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"18:538:4591":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:10516:5714":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:4344:8153":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:4761:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:3325:4071":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:21900:33143":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:11484:7074":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:6685:8752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:11859:10001":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:43649:7076":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:1733:3565":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:7042:6681":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:10357:4338":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"9:234:7290":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:1594:8014":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:9068:36965":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:11391:4653":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:43640:7318":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:2808:6461":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:42403:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:11163:5770":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:11800:5896":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:4683:10106":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:30041:10085":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:11308:4344":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:21966:7101":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"20:4:1662":{"crate_id":20,"path":["cfg_if","cfg_if"],"kind":"macro"},"17:9822:5629":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:12915:6163":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"5:4914:3761":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:1080:6932":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"17:13181:6228":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"15:198:21287":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:13356:6273":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:2929:1888":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:1609:8026":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:11279:15327":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:10735:5740":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"5:7136:3235":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:6485:2362":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:7338:4282":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:11461:7073":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:47072:7434":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:40324:7266":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:1058:4373":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"11:2192:7886":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:0:2182":{"crate_id":17,"path":["object"],"kind":"module"},"16:2502:6448":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:12330:32875":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:4568:6482":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:10822:7485":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:8907:4826":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:11785:5892":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:6294:4242":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:9933:4614":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:12512:4315":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:13812:6416":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:12799:6070":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:7498:6766":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:10026:5650":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:9961:3743":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:40338:4797":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:6535:4228":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:8817:668":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:40069:7252":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"5:3184:6938":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:1692:8086":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:4851:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:265:4242":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:2911:2042":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"11:359:4233":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:11908:1498":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:39341:7113":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:9696:4624":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:7335:36957":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:1213:6930":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:13145:6223":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:40296:4795":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:43153:4387":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:5022:8445":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:4377:8177":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:7590:2932":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:4466:8219":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10377:5700":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:4854:10140":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:12607:6038":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:7016:4918":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:10702:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:10142:22342":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:3449:27898":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:13763:6401":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:2344:3538":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:8925:27361":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:6133:4828":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"5:3124:6936":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"11:2198:7887":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:3182:35325":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:11037:22262":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12388:6000":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"7:79:21182":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:2981:2449":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:11502:5824":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:653:16248":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:41951:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:44164:15616":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:1463:6994":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:11136:5764":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:5058:8467":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:41470:3270":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:43315:7307":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:43084:7295":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:6243:36955":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:47732:4953":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"0:5:341":{"crate_id":0,"path":["crossbeam_utils","primitive","sync","atomic"],"kind":"module"},"16:2378:6444":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:10823:5558":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:7211:2499":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:8124:4041":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:21559:10074":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"13:0:2173":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:42713:4819":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:2833:2441":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:21787:4789":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:3047:21333":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:5380:3761":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:8675:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:6061:21304":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:595:7967":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"11:859:6928":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:2812:2436":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:3440:3496":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:43173:4389":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:41243:4945":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:7240:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"9:502:4930":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:40083:15390":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:10402:5702":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12959:6193":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:39982:33146":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:9839:5631":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"}},"external_crates":{"20":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}