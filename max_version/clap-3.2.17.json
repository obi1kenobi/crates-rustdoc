{"root":"0:0:1723","crate_version":"3.2.17","includes_private":true,"index":{"0:3565:3100":{"id":"0:3565:3100","crate_id":0,"name":"SubcommandRequiredElseHelp","span":{"filename":"src/builder/app_settings.rs","begin":[177,4],"end":[177,30]},"visibility":"default","docs":"Deprecated, replaced with [`Command::subcommand_required`] combined with\n[`Command::arg_required_else_help`].","links":{"`Command::subcommand_required`":"0:4456:1667","`Command::arg_required_else_help`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::subcommand_required` combined with `Command::arg_required_else_help`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::subcommand_required` combined with `Command::arg_required_else_help`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3444:4503":{"id":"0:3444:4503","crate_id":0,"name":"from_ref","span":{"filename":"src/util/id.rs","begin":[41,4],"end":[47,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5226:1542":{"id":"0:5226:1542","crate_id":0,"name":"0","span":{"filename":"src/mkeymap.rs","begin":[28,9],"end":[28,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"44:3537:13647":{"id":"44:3537:13647","crate_id":44,"name":"MachHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:3538:9673","44:3539:13619","44:3540:14379","44:3541:13262","44:3542:56760","44:3543:73812","44:3544:73620","44:3545:73621","44:3546:14597","44:3547:14719","44:3548:14720","44:3549:14724","44:3550:14509","44:3551:14725","44:3552:653","44:3553:2747","44:3556:73813","44:3557:13309","44:3558:74066","44:3561:14689"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2061:7563":{"id":"0:2061:7563","crate_id":0,"name":"argument_not_found_auto","span":{"filename":"src/error/mod.rs","begin":[581,4],"end":[586,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1916":{"id":"0:1916","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[57,0],"end":[57,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"regex\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::regex::RegexRef","name":"RegexRef","id":"0:4724:1700","glob":false}},"2:13498:793":{"id":"2:13498:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2427:922":{"id":"0:2427:922","crate_id":0,"name":"next","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1470,4],"end":[1472,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2024:7472":{"id":"0:2024:7472","crate_id":0,"name":"set_message","span":{"filename":"src/error/mod.rs","begin":[202,4],"end":[205,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["message",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<Message>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9339:7908-0:4724:1700":{"id":"a:2:9339:7908-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4962:408":{"id":"0:4962:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,16],"end":[67,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1600:7050":{"id":"0:1600:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[1470,4],"end":[1470,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"bool"}}},"0:4094":{"id":"0:4094","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,29],"end":[5273,38]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4657:2904":{"id":"a:2:9340:7907-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:431:2900":{"id":"0:431:2900","crate_id":0,"name":"value_hint","span":{"filename":"src/builder/arg.rs","begin":[1513,4],"end":[1516,5]},"visibility":"public","docs":"Provide the shell a hint about how to complete this argument.\n\nSee [`ValueHint`][crate::ValueHint] for more information.\n\n**NOTE:** implicitly sets [`Arg::takes_value(true)`].\n\nFor example, to take a username as argument:\n\n```\n# use clap::{Arg, ValueHint};\nArg::new(\"user\")\n    .short('u')\n    .long(\"user\")\n    .value_hint(ValueHint::Username);\n```\n\nTo take a full command line and its arguments (for example, when writing a command wrapper):\n\n```\n# use clap::{Command, Arg, ValueHint};\nCommand::new(\"prog\")\n    .trailing_var_arg(true)\n    .arg(\n        Arg::new(\"command\")\n            .takes_value(true)\n            .multiple_values(true)\n            .value_hint(ValueHint::CommandWithArguments)\n    );\n```","links":{"crate::ValueHint":"0:4588:1673"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value_hint",{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4742:7344":{"id":"0:4742:7344","crate_id":0,"name":"Flag","span":{"filename":"src/builder/debug_asserts.rs","begin":[352,0],"end":[355,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:4744:1653","0:4748:1654"],"impls":["a:2:3310:6658-0:4742:7344","a:2:3269:211-0:4742:7344","a:2:9340:7907-0:4742:7344","a:2:9339:7908-0:4742:7344","a:2:3281:220-0:4742:7344","b:2:3198-0:4742:7344","b:2:2872-0:4742:7344","b:2:2869-0:4742:7344","b:2:4002-0:4742:7344","b:2:3202-0:4742:7344","b:2:3213-0:4742:7344","b:2:3208-0:4742:7344","b:31:25-0:4742:7344","0:4752","0:4754","0:1801","0:1803","0:1806"]}},"0:4498:408":{"id":"0:4498:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/command.rs","begin":[77,16],"end":[77,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5060:7463":{"id":"0:5060:7463","crate_id":0,"name":"source","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[18,4],"end":[18,31]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:3310:6658-0:4892:7456":{"id":"a:2:3310:6658-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:5020:1678":{"id":"b:2:3213-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3049:1702":{"id":"0:3049:1702","crate_id":0,"name":"output","span":{"filename":"src/output/mod.rs","begin":[1,0],"end":[7,34]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3050:2603","0:3223:5461","0:3310:660"],"is_stripped":false}},"0:5110:8389":{"id":"0:5110:8389","crate_id":0,"name":"ParseResult","span":{"filename":"src/parser/parser.rs","begin":[1690,0],"end":[1715,1]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":"Recoverable Parsing results.","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5111:8392","0:5114:8373","0:5117:8361","0:5119:8403","0:5121:8399","0:5125:8402","0:5127:8394","0:5129:8396","0:5131:8390"],"impls":["a:2:3310:6658-0:5110:8389","a:2:3269:211-0:5110:8389","a:2:9340:7907-0:5110:8389","a:2:9339:7908-0:5110:8389","a:2:3281:220-0:5110:8389","b:2:3198-0:5110:8389","b:2:2872-0:5110:8389","b:2:2869-0:5110:8389","b:2:4002-0:5110:8389","b:2:3202-0:5110:8389","b:2:3213-0:5110:8389","b:2:3208-0:5110:8389","b:5:787-0:5110:8389","0:5133","0:5135","0:5136","0:5139"]}},"0:1053:2677":{"id":"0:1053:2677","crate_id":0,"name":"is_set","span":{"filename":"src/builder/command.rs","begin":[3405,4],"end":[3407,5]},"visibility":"public","docs":"Check if the given [`AppSettings`] variant is currently set on the `Command`.\n\nThis checks both [local] and [global settings].\n\n[local]: Command::setting()\n[global settings]: Command::global_setting()","links":{"Command::setting()":"0:4456:1667","Command::global_setting()":"0:4456:1667","`AppSettings`":"0:3542:1669"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3205:8722":{"id":"0:3205:8722","crate_id":0,"name":"write_templated_help","span":{"filename":"src/output/help.rs","begin":[1004,4],"end":[1103,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Write help to stream for the parser in the format defined by the template.\n\nFor details about the template language see [`Command::help_template`].\n\n[`Command::help_template`]: Command::help_template()","links":{"Command::help_template()":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["template",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3143:8773":{"id":"0:3143:8773","crate_id":0,"name":"write_after_help","span":{"filename":"src/output/help.rs","begin":[407,4],"end":[421,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3039:4839":{"id":"0:3039:4839","crate_id":0,"name":"_build","span":{"filename":"src/mkeymap.rs","begin":[139,4],"end":[143,5]},"visibility":"crate","docs":"We need a lazy build here since some we may change args after creating\nthe map, you can checkout who uses `args_mut`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3124:7574":{"id":"0:3124:7574","crate_id":0,"name":"warning","span":{"filename":"src/output/help.rs","begin":[144,4],"end":[146,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5269:8971":{"id":"a:2:9339:7908-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2561:3373":{"id":"0:2561:3373","crate_id":0,"name":"num_vals","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[137,4],"end":[139,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4080:3370":{"id":"b:5:787-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13597:3432":{"id":"2:13597:3432","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:473:4146":{"id":"0:473:4146","crate_id":0,"name":"default_missing_value_os","span":{"filename":"src/builder/arg.rs","begin":[2313,4],"end":[2315,5]},"visibility":"public","docs":"Value for the argument when the flag is present but no value is specified.\n\nSee [`Arg::default_missing_value`].\n\n[`Arg::default_missing_value`]: Arg::default_missing_value()\n[`OsStr`]: std::ffi::OsStr","links":{"Arg::default_missing_value()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["val",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1394:2909":{"id":"0:1394:2909","crate_id":0,"name":"ValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[59,0],"end":[59,41]},"visibility":"public","docs":"Parse/validate argument values\n\nSpecified with [`Arg::value_parser`][crate::Arg::value_parser].\n\n`ValueParser` defines how to convert a raw argument value into a validated and typed value for\nuse within an application.\n\nSee\n- [`value_parser!`] for automatically selecting an implementation for a given type\n- [`ValueParser::new`] for additional [`TypedValueParser`] that can be used\n\n# Example\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"color\")\n            .long(\"color\")\n            .value_parser([\"always\", \"auto\", \"never\"])\n            .default_value(\"auto\")\n    )\n    .arg(\n        clap::Arg::new(\"hostname\")\n            .long(\"hostname\")\n            .value_parser(clap::builder::NonEmptyStringValueParser::new())\n            .takes_value(true)\n            .required(true)\n    )\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(clap::value_parser!(u16).range(3000..))\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut(\n    [\"cmd\", \"--hostname\", \"rust-lang.org\", \"--port\", \"3001\"]\n).unwrap();\n\nlet color: &String = m.get_one(\"color\")\n    .expect(\"default\");\nassert_eq!(color, \"auto\");\n\nlet hostname: &String = m.get_one(\"hostname\")\n    .expect(\"required\");\nassert_eq!(hostname, \"rust-lang.org\");\n\nlet port: u16 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```","links":{"crate::Arg::value_parser":"0:3972:1654","`ValueParser::new`":"0:1394:2909","`TypedValueParser`":"0:1462:2908","`value_parser!`":"0:1706:2901"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:1396:1542"],"impls":["0:1409","0:1416","a:2:3310:6658-0:1394:2909","a:2:3269:211-0:1394:2909","a:2:9340:7907-0:1394:2909","a:2:9339:7908-0:1394:2909","a:2:3281:220-0:1394:2909","b:2:3198-0:1394:2909","b:2:2872-0:1394:2909","b:2:2869-0:1394:2909","b:2:4002-0:1394:2909","b:2:3202-0:1394:2909","b:2:3213-0:1394:2909","b:2:3208-0:1394:2909","b:5:787-0:1394:2909","0:1421","0:1426","0:1428","0:1430","0:1432","0:1434","0:1436","0:1438","0:1444","0:1446"]}},"b:2:8483-0:5038:1676":{"id":"b:2:8483-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8485:2763","2:8486:8270","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:5261:2691":{"id":"0:5261:2691","crate_id":0,"name":"Colorizer","span":{"filename":"src/output/fmt.rs","begin":[15,0],"end":[20,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:5262:6646","0:5263:7465","0:5264:8970"],"impls":["0:3332","0:3344","a:2:3310:6658-0:5261:2691","a:2:3269:211-0:5261:2691","a:2:9340:7907-0:5261:2691","a:2:9339:7908-0:5261:2691","a:2:3281:220-0:5261:2691","b:2:3198-0:5261:2691","b:2:2872-0:5261:2691","b:2:2869-0:5261:2691","b:2:4002-0:5261:2691","b:2:3202-0:5261:2691","b:2:3213-0:5261:2691","b:2:3208-0:5261:2691","b:5:6413-0:5261:2691","b:5:787-0:5261:2691","0:2088","0:5265","0:5267","0:3359"]}},"2:31975:74219":{"id":"2:31975:74219","crate_id":2,"name":"checked_pow","span":null,"visibility":"public","docs":"Checked exponentiation. Computes `self.pow(exp)`, returning `None` if\noverflow occurred.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(2u64.checked_pow(5), Some(32));\nassert_eq!(u64::MAX.checked_pow(2), None);\n```","links":{},"attrs":["#[stable(feature = \"no_panic_pow\", since = \"1.34.0\")]","#[rustc_const_stable(feature = \"const_int_pow\", since = \"1.50.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["exp",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3399:652":{"id":"0:3399:652","crate_id":0,"name":"finish","span":{"filename":"src/util/fnv.rs","begin":[33,4],"end":[35,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4232:5189":{"id":"0:4232:5189","crate_id":0,"name":"bits","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u32"}},"0:3744:3234":{"id":"0:3744:3234","crate_id":0,"name":"COLOR_ALWAYS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4152":{"id":"0:4152","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[1,40],"end":[1,42]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:563:2583":{"id":"0:563:2583","crate_id":0,"name":"get_value_names","span":{"filename":"src/builder/arg.rs","begin":[4421,4],"end":[4427,5]},"visibility":"public","docs":"Get the names of values for this argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4172:1671":{"id":"0:4172:1671","crate_id":0,"name":"ArgSettings","span":{"filename":"src/builder/arg_settings.rs","begin":[34,0],"end":[268,1]},"visibility":"public","docs":"Various settings that apply to arguments and may be set, unset, and checked via getter/setter\nmethods [`Arg::setting`], [`Arg::unset_setting`], and [`Arg::is_set`]. This is what the\n[`Arg`] methods which accept a `bool` use internally.\n\n[`Arg`]: crate::Arg\n[`Arg::setting`]: crate::Arg::setting()\n[`Arg::unset_setting`]: crate::Arg::unset_setting()\n[`Arg::is_set`]: crate::Arg::is_set()","links":{"crate::Arg::is_set()":"0:3972:1654","crate::Arg":"0:3972:1654","crate::Arg::setting()":"0:3972:1654","crate::Arg::unset_setting()":"0:3972:1654"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:4173:3588","0:4175:3776","0:4177:3639","0:4181:3942","0:4183:3636","0:4185:3168","0:4187:3673","0:4189:3976","0:4191:3147","0:4193:4015","0:4195:3172","0:4197:3068","0:4201:3953","0:4203:3569","0:4205:4319","0:4207:3913","0:4211:4327","0:4213:4335","0:4215:4347","0:4217:4353","0:4219:3938","0:4221:3616"],"impls":["a:2:3310:6658-0:4172:1671","a:2:3269:211-0:4172:1671","a:2:9340:7907-0:4172:1671","a:2:9339:7908-0:4172:1671","a:2:3281:220-0:4172:1671","b:2:3198-0:4172:1671","b:2:2872-0:4172:1671","b:2:2869-0:4172:1671","b:2:4002-0:4172:1671","b:2:3202-0:4172:1671","b:2:3213-0:4172:1671","b:2:3208-0:4172:1671","b:5:787-0:4172:1671","0:4223","0:4225","0:4226","0:4228","0:4229","0:4453","0:741"]}},"b:2:3202-0:3211:5214":{"id":"b:2:3202-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:5319:1660":{"id":"a:2:3310:6658-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3372:9217":{"id":"2:3372:9217","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4306:5186":{"id":"0:4306:5186","crate_id":0,"name":"HIDDEN_LONG_H","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:2724:8438":{"id":"0:2724:8438","crate_id":0,"name":"parse_subcommand","span":{"filename":"src/parser/parser.rs","begin":[664,4],"end":[711,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sc_name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["raw_args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"clap_lex::RawArgs","id":"29:75:5440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["args_cursor",{"kind":"resolved_path","inner":{"name":"clap_lex::ArgCursor","id":"29:90:6493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["keep_state",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:1849":{"id":"0:113:1849","crate_id":0,"name":"repl","span":{"filename":"src/_cookbook/repl.rs","begin":[1,0],"end":[5,7]},"visibility":"public","docs":"# Example: Command REPL (Builder API)\n\n```rust\nuse std::io::Write;\n\nuse clap::Command;\n\nfn main() -> Result<(), String> {\n    loop {\n        let line = readline()?;\n        let line = line.trim();\n        if line.is_empty() {\n            continue;\n        }\n\n        match respond(line) {\n            Ok(quit) => {\n                if quit {\n                    break;\n                }\n            }\n            Err(err) => {\n                write!(std::io::stdout(), \"{}\", err).map_err(|e| e.to_string())?;\n                std::io::stdout().flush().map_err(|e| e.to_string())?;\n            }\n        }\n    }\n\n    Ok(())\n}\n\nfn respond(line: &str) -> Result<bool, String> {\n    let args = shlex::split(line).ok_or(\"error: Invalid quoting\")?;\n    let matches = cli()\n        .try_get_matches_from(&args)\n        .map_err(|e| e.to_string())?;\n    match matches.subcommand() {\n        Some((\"ping\", _matches)) => {\n            write!(std::io::stdout(), \"Pong\").map_err(|e| e.to_string())?;\n            std::io::stdout().flush().map_err(|e| e.to_string())?;\n        }\n        Some((\"quit\", _matches)) => {\n            write!(std::io::stdout(), \"Exiting ...\").map_err(|e| e.to_string())?;\n            std::io::stdout().flush().map_err(|e| e.to_string())?;\n            return Ok(true);\n        }\n        Some((name, _matches)) => unimplemented!(\"{}\", name),\n        None => unreachable!(\"subcommand required\"),\n    }\n\n    Ok(false)\n}\n\nfn cli() -> Command<'static> {\n    // strip out usage\n    const PARSER_TEMPLATE: &str = \"\\\n        {all-args}\n    \";\n    // strip out name/version\n    const APPLET_TEMPLATE: &str = \"\\\n        {about-with-newline}\\n\\\n        {usage-heading}\\n    {usage}\\n\\\n        \\n\\\n        {all-args}{after-help}\\\n    \";\n\n    Command::new(\"repl\")\n        .multicall(true)\n        .arg_required_else_help(true)\n        .subcommand_required(true)\n        .subcommand_value_name(\"APPLET\")\n        .subcommand_help_heading(\"APPLETS\")\n        .help_template(PARSER_TEMPLATE)\n        .subcommand(\n            Command::new(\"ping\")\n                .about(\"Get a response\")\n                .help_template(APPLET_TEMPLATE),\n        )\n        .subcommand(\n            Command::new(\"quit\")\n                .alias(\"exit\")\n                .about(\"Quit the REPL\")\n                .help_template(APPLET_TEMPLATE),\n        )\n}\n\nfn readline() -> Result<String, String> {\n    write!(std::io::stdout(), \"$ \").map_err(|e| e.to_string())?;\n    std::io::stdout().flush().map_err(|e| e.to_string())?;\n    let mut buffer = String::new();\n    std::io::stdin()\n        .read_line(&mut buffer)\n        .map_err(|e| e.to_string())?;\n    Ok(buffer)\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:2:3208-0:4688:2914":{"id":"b:2:3208-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:581:4744":{"id":"0:581:4744","crate_id":0,"name":"get_action","span":{"filename":"src/builder/arg.rs","begin":[4564,4],"end":[4567,5]},"visibility":"public","docs":"Behavior when parsing the argument","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"super::ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1814:7380":{"id":"0:1814:7380","crate_id":0,"name":"assert_app_flags","span":{"filename":"src/builder/debug_asserts.rs","begin":[428,0],"end":[464,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1057:6326":{"id":"0:1057:6326","crate_id":0,"name":"get_subcommands_mut","span":{"filename":"src/builder/command.rs","begin":[3439,4],"end":[3441,5]},"visibility":"public","docs":"Iterate through the set of subcommands, getting a mutable reference to each.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4921:7467":{"id":"0:4921:7467","crate_id":0,"name":"Backtrace","span":{"filename":"src/error/mod.rs","begin":[1115,0],"end":[1115,39]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"debug\")]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4923:1542"],"impls":["0:2090","a:2:3310:6658-0:4921:7467","a:2:3269:211-0:4921:7467","a:2:9340:7907-0:4921:7467","a:2:9339:7908-0:4921:7467","a:2:3281:220-0:4921:7467","b:2:3198-0:4921:7467","b:2:2872-0:4921:7467","b:2:2869-0:4921:7467","b:2:4002-0:4921:7467","b:2:3202-0:4921:7467","b:2:3213-0:4921:7467","b:2:3208-0:4921:7467","b:5:6413-0:4921:7467","0:4924","0:2092"]}},"0:5157:6728":{"id":"0:5157:6728","crate_id":0,"name":"Short","span":{"filename":"src/parser/parser.rs","begin":[1726,4],"end":[1726,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3269:211-0:3211:5214":{"id":"a:2:3269:211-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:5278:115":{"id":"0:5278:115","crate_id":0,"name":"Default","span":{"filename":"src/output/fmt.rs","begin":[141,4],"end":[141,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:8488:9169":{"id":"2:8488:9169","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8490:3464","2:8492:10915","2:8493:10916"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5304:660":{"id":"0:5304:660","crate_id":0,"name":"fmt","span":{"filename":"src/util/graph.rs","begin":[16,9],"end":[16,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2751:8540":{"id":"0:2751:8540","crate_id":0,"name":"add_default_value","span":{"filename":"src/parser/parser.rs","begin":[1441,4],"end":[1574,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:574:4730":{"id":"0:574:4730","crate_id":0,"name":"is_required_set","span":{"filename":"src/builder/arg.rs","begin":[4517,4],"end":[4519,5]},"visibility":"public","docs":"Reports whether [`Arg::required`] is set","links":{"`Arg::required`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4245":{"id":"0:4245","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4246:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:32033:74263":{"id":"2:32033:74263","crate_id":2,"name":"min_value","span":null,"visibility":"public","docs":"New code should prefer to use\n[`u64::MIN`] instead.\n\nReturns the smallest value that can be represented by this integer type.","links":{"`u64::MIN`":"1:16024:9076"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_promotable]","#[rustc_const_stable(feature = \"const_max_value\", since = \"1.32.0\")]","#[deprecated(since = \"TBD\", note =\n\"replaced by the `MIN` associated constant on this type\")]"],"deprecation":{"since":"TBD","note":"replaced by the `MIN` associated constant on this type"},"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2444":{"id":"0:2444","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1527,0],"end":[1531,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2446:8271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2052:7131":{"id":"0:2052:7131","crate_id":0,"name":"invalid_utf8","span":{"filename":"src/error/mod.rs","begin":[419,4],"end":[425,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5250":{"id":"0:5250","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[8,9],"end":[8,13]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4227:604":{"id":"0:4227:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/arg_settings.rs","begin":[32,16],"end":[32,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4673":{"id":"0:4673","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1090,22],"end":[1090,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4675:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:575:4732":{"id":"0:575:4732","crate_id":0,"name":"is_multiple_values_set","span":{"filename":"src/builder/arg.rs","begin":[4522,4],"end":[4524,5]},"visibility":"public","docs":"Report whether [`Arg::multiple_values`] is set","links":{"`Arg::multiple_values`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4588:1673":{"id":"b:2:3198-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:32010:74246":{"id":"2:32010:74246","crate_id":2,"name":"div_euclid","span":null,"visibility":"public","docs":"Performs Euclidean division.\n\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to `self / rhs`.\n\n# Panics\n\nThis function will panic if `rhs` is 0.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(7u64.div_euclid(4), 1); // or any other integer type\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5785:12303":{"id":"1:5785:12303","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5786:31044"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:4933:7836":{"id":"b:5:6413-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3980:2901":{"id":"0:3980:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/arg.rs","begin":[68,4],"end":[68,55]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"super::ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4996:660":{"id":"0:4996:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1341,16],"end":[1341,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4813:216":{"id":"0:4813:216","crate_id":0,"name":"String","span":{"filename":"src/error/context.rs","begin":[50,4],"end":[50,18]},"visibility":"default","docs":"A single value","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:2743:8395":{"id":"0:2743:8395","crate_id":0,"name":"resolve_pending","span":{"filename":"src/parser/parser.rs","begin":[1117,4],"end":[1136,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4957:298":{"id":"0:4957:298","crate_id":0,"name":"args","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[75,4],"end":[75,45]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"IndexMap","id":"31:409:7924","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:298:126":{"id":"0:298:126","crate_id":0,"name":"Err","span":{"filename":"src/builder/app_settings.rs","begin":[676,4],"end":[676,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:5:787-0:5305:3334":{"id":"b:5:787-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8486:8270":{"id":"2:8486:8270","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"b:2:2869-0:4947:3033":{"id":"b:2:2869-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4078":{"id":"0:4078","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5190,27],"end":[5190,36]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4079:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:31977:74220":{"id":"2:31977:74220","crate_id":2,"name":"saturating_add_signed","span":null,"visibility":"public","docs":"Saturating addition with a signed integer. Computes `self + rhs`,\nsaturating at the numeric bounds instead of overflowing.\n\n# Examples\n\nBasic usage:\n\n```\n# #![feature(mixed_integer_ops)]\nassert_eq!(1u64.saturating_add_signed(2), 3);\nassert_eq!(1u64.saturating_add_signed(-2), 0);\nassert_eq!((u64::MAX - 2).saturating_add_signed(4), u64::MAX);\n```","links":{},"attrs":["#[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1355:4806":{"id":"0:1355:4806","crate_id":0,"name":"from_usage","span":{"filename":"src/builder/usage_parser.rs","begin":[41,4],"end":[44,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["usage",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3046:181":{"id":"0:3046:181","crate_id":0,"name":"Output","span":{"filename":"src/mkeymap.rs","begin":[162,4],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}},"0:446:3887":{"id":"0:446:3887","crate_id":0,"name":"validator_regex","span":{"filename":"src/builder/arg.rs","begin":[1563,4],"end":[1576,5]},"visibility":"public","docs":"Deprecated in [Issue #3743](https://github.com/clap-rs/clap/issues/3743), replaced with [`Arg::value_parser(...)`]","links":{},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Deprecated in Issue #3743; eplaced with `Arg::value_parser(...)`\")]","#[cfg(feature = \"regex\")]","#[must_use]"],"deprecation":{"since":"3.2.0","note":"Deprecated in Issue #3743; eplaced with `Arg::value_parser(...)`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["regex",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}],["err_message",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<RegexRef<'help>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3358:9211":{"id":"2:3358:9211","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:476:4143":{"id":"0:476:4143","crate_id":0,"name":"default_missing_values_os","span":{"filename":"src/builder/arg.rs","begin":[2337,4],"end":[2340,5]},"visibility":"public","docs":"Value for the argument when the flag is present but no value is specified.\n\nSee [`Arg::default_missing_values`].\n\n[`Arg::default_missing_values`]: Arg::default_missing_values()\n[`OsStr`]: std::ffi::OsStr","links":{"Arg::default_missing_values()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3741:3228":{"id":"0:3741:3228","crate_id":0,"name":"NEXT_LINE_HELP","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1644:1664":{"id":"0:1644:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1819,4],"end":[1819,16]},"visibility":"default","docs":"Generated parser, usually [`ValueParser`].\n\nIt should at least be a type that supports `Into<ValueParser>`.  A non-`ValueParser` type\nallows the caller to do further initialization on the parser.","links":{"`ValueParser`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:13509:31601":{"id":"2:13509:31601","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16021:9073"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:3503:1652":{"id":"a:2:3269:211-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:5010:7834":{"id":"a:2:3310:6658-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1116:6419":{"id":"0:1116:6419","crate_id":0,"name":"is_args_conflicts_with_subcommands_set","span":{"filename":"src/builder/command.rs","begin":[3766,4],"end":[3768,5]},"visibility":"public","docs":"Report whether [`Command::args_conflicts_with_subcommands`] is set","links":{"`Command::args_conflicts_with_subcommands`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4799":{"id":"0:4799","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[2,22],"end":[2,27]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4800:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4742:7344":{"id":"a:2:3269:211-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5144:7886":{"id":"0:5144:7886","crate_id":0,"name":"raw_vals","span":{"filename":"src/parser/parser.rs","begin":[1721,4],"end":[1721,38]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:2869-0:5245:2692":{"id":"b:2:2869-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1528":{"id":"0:1528","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[991,0],"end":[1042,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1529:7050","0:1530:7090","0:1531:2747","0:1537:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2552:4706":{"id":"0:2552:4706","crate_id":0,"name":"get_index","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[89,4],"end":[91,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2548:7871":{"id":"0:2548:7871","crate_id":0,"name":"inc_occurrences","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[71,4],"end":[73,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[deprecated(since = \"3.2.0\")]"],"deprecation":{"since":"3.2.0","note":null},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4968:907":{"id":"0:4968:907","crate_id":0,"name":"ne","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,32],"end":[67,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4724:1700":{"id":"0:4724:1700","crate_id":0,"name":"RegexRef","span":{"filename":"src/builder/regex.rs","begin":[10,0],"end":[15,1]},"visibility":"public","docs":"Contains either a regular expression or a set of them or a reference to one.\n\nSee [Arg::validator_regex(][crate::Arg::validator_regex] to set this on an argument.","links":{"crate::Arg::validator_regex":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:4726:7323","0:4729:7322"],"impls":["0:1745","a:2:3310:6658-0:4724:1700","a:2:3269:211-0:4724:1700","a:2:9340:7907-0:4724:1700","a:2:9339:7908-0:4724:1700","a:2:3281:220-0:4724:1700","b:2:3198-0:4724:1700","b:2:2872-0:4724:1700","b:2:2869-0:4724:1700","b:2:4002-0:4724:1700","b:2:3202-0:4724:1700","b:2:3213-0:4724:1700","b:2:3208-0:4724:1700","b:5:787-0:4724:1700","0:4732","0:4735","0:1748","0:1751","0:1754","0:1757","0:1760","0:1764"]}},"0:5330:408":{"id":"0:5330:408","crate_id":0,"name":"clone","span":{"filename":"src/util/color.rs","begin":[2,22],"end":[2,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:120:1695":{"id":"0:120:1695","crate_id":0,"name":"_faq","span":{"filename":"src/_faq.rs","begin":[1,0],"end":[95,3]},"visibility":"public","docs":"# Documentation: FAQ\n\n1. [Comparisons](#comparisons)\n   1. [How does `clap` compare to structopt?](#how-does-clap-compare-to-structopt)\n   2. [What are some reasons to use `clap`? (The Pitch)](#what-are-some-reasons-to-use-clap-the-pitch)\n   3. [What are some reasons *not* to use `clap`? (The Anti Pitch)](#what-are-some-reasons-not-to-use-clap-the-anti-pitch)\n   4. [Reasons to use `clap`](#reasons-to-use-clap)\n2. [How many approaches are there to create a parser?](#how-many-approaches-are-there-to-create-a-parser)\n3. [When should I use the builder vs derive APIs?](#when-should-i-use-the-builder-vs-derive-apis)\n4. [Why is there a default subcommand of help?](#why-is-there-a-default-subcommand-of-help)\n\n### Comparisons\n\nFirst, let me say that these comparisons are highly subjective, and not meant\nin a critical or harsh manner. All the argument parsing libraries out there (to\ninclude `clap`) have their own strengths and weaknesses. Sometimes it just\ncomes down to personal taste when all other factors are equal. When in doubt,\ntry them all and pick one that you enjoy :) There's plenty of room in the Rust\ncommunity for multiple implementations!\n\nFor less detailed but more broad comparisons, see\n[argparse-benchmarks](https://github.com/rust-cli/argparse-benchmarks-rs).\n\n#### How does `clap` compare to [structopt](https://github.com/TeXitoi/structopt)?\n\nSimple! `clap` *is* `structopt`.  `structopt` started as a derive API built on\ntop of clap v2.  With clap v3, we've forked structopt and integrated it\ndirectly into clap.  structopt is in\n[maintenance mode](https://github.com/TeXitoi/structopt/issues/516#issuecomment-989566094)\nwith the release of `clap_derive`.\n\nThe benefits of integrating `structopt` and `clap` are:\n- Easier cross-linking in documentation\n- [Documentation parity](../examples)\n- Tighter design feedback loop, ensuring all new features are designed with\n  derives in mind and easier to change `clap` in response to `structopt` bugs.\n- Clearer endorsement of `structopt`\n\nSee also\n- [`clap` v3 CHANGELOG](../CHANGELOG.md#300---2021-12-31)\n- [`structopt` migration guide](../CHANGELOG.md#migrate-structopt)\n\n#### What are some reasons to use `clap`? (The Pitch)\n\n`clap` is as fast, and as lightweight as possible while still giving all the features you'd expect from a modern argument parser. In fact, for the amount and type of features `clap` offers it remains about as fast as `getopts`. If you use `clap` when just need some simple arguments parsed, you'll find it's a walk in the park. `clap` also makes it possible to represent extremely complex, and advanced requirements, without too much thought. `clap` aims to be intuitive, easy to use, and fully capable for wide variety use cases and needs.\n\n#### What are some reasons *not* to use `clap`? (The Anti Pitch)\n\nDepending on the style in which you choose to define the valid arguments, `clap` can be very verbose. `clap` also offers so many finetuning knobs and dials, that learning everything can seem overwhelming. I strive to keep the simple cases simple, but when turning all those custom dials it can get complex. `clap` is also opinionated about parsing. Even though so much can be tweaked and tuned with `clap` (and I'm adding more all the time), there are still certain features which `clap` implements in specific ways which may be contrary to some users use-cases.\n\n#### Reasons to use `clap`\n\n * You want all the nice CLI features your users may expect, yet you don't want to implement them all yourself. You'd like to focus your application, not argument parsing.\n * In addition to the point above; you don't want to sacrifice performance to get all those nice features\n * You have complex requirements/conflicts between your various valid args.\n * You want to use subcommands (although other libraries also support subcommands, they are not nearly as feature rich as those provided by `clap`)\n * You want some sort of custom validation built into the argument parsing process, instead of as part of your application (which allows for earlier failures, better error messages, more cohesive experience, etc.)\n\n### How many approaches are there to create a parser?\n\nThe following APIs are supported:\n- [Derive][crate::_derive::_tutorial]\n- [Builder][crate::_tutorial]\n\nPreviously, we supported:\n- [YAML](https://github.com/clap-rs/clap/issues/3087)\n- [docopt](http://docopt.org/)-inspired [usage parser](https://github.com/clap-rs/clap/issues/3086)\n- [`clap_app!`](https://github.com/clap-rs/clap/issues/2835)\n\nThere are also experiments with other APIs:\n- [fncmd](https://github.com/yuhr/fncmd): function attribute\n- [clap-serde](https://github.com/aobatact/clap-serde): create an `Command` from a deserializer\n\n### When should I use the builder vs derive APIs?\n\nOur default answer is to use the [Derive API][crate::_derive::_tutorial]:\n- Easier to read, write, and modify\n- Easier to keep the argument declaration and reading of argument in sync\n- Easier to reuse, e.g. [clap-verbosity-flag](https://crates.io/crates/clap-verbosity-flag)\n\nThe [Builder API][crate::_tutorial] is a lower-level API that someone might want to use for\n- Faster compile times if you aren't already using other procedural macros\n- More flexibility, e.g. you can look up an [arguments values][crate::ArgMatches::get_many],\n  their [ordering with other arguments][crate::ArgMatches::indices_of], and [what set\n  them][crate::ArgMatches::value_source].  The Derive API can only report values and not\n  indices of or other data.\n\nYou can [interop between Derive and Builder APIs][crate::_derive#mixing-builder-and-derive-apis].\n\n### Why is there a default subcommand of help?\n\nThere is only a default subcommand of `help` when other subcommands have been defined manually. So it's opt-in(ish), being that you only get a `help` subcommand if you're actually using subcommands.\n\nAlso, if the user defined a `help` subcommand themselves, the auto-generated one wouldn't be added (meaning it's only generated if the user hasn't defined one themselves).\n","links":{"crate::_derive#mixing-builder-and-derive-apis":"0:115:1694","crate::_derive::_tutorial":"0:116:1697","crate::_tutorial":"0:122:1697","crate::ArgMatches::value_source":"0:4953:1658","crate::ArgMatches::get_many":"0:4953:1658","crate::ArgMatches::indices_of":"0:4953:1658"},"attrs":["#[cfg(feature = \"unstable-doc\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:5:6413-0:4886:127":{"id":"b:5:6413-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:1397:7028":{"id":"a:2:3269:211-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:4080:3370":{"id":"a:2:3269:211-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5235:907":{"id":"0:5235:907","crate_id":0,"name":"ne","span":{"filename":"src/mkeymap.rs","begin":[25,16],"end":[25,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4680":{"id":"0:4680","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1288,9],"end":[1288,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:3096:3014":{"id":"a:2:3281:220-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:5288":{"id":"0:5288","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[135,40],"end":[135,42]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2836:8577":{"id":"0:2836:8577","crate_id":0,"name":"validate_arg_values","span":{"filename":"src/parser/validator.rs","begin":[91,4],"end":[165,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["ma",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1297":{"id":"0:1297","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[5142,0],"end":[5146,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:1298:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5047:660":{"id":"0:5047:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1592,16],"end":[1592,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:5174:8567":{"id":"b:5:787-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:3252:5215":{"id":"a:2:9339:7908-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"5:6091:9025":{"id":"5:6091:9025","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4235":{"id":"0:4235","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4236:604","0:4237:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1751":{"id":"0:1751","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[32,0],"end":[36,1]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"25:2978:7322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1753:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1030:4674":{"id":"0:1030:4674","crate_id":0,"name":"get_help_heading","span":{"filename":"src/builder/command.rs","begin":[3344,4],"end":[3346,5]},"visibility":"public","docs":"Deprecated, replaced with [`Command::get_next_help_heading`]","links":{"`Command::get_next_help_heading`":"0:4456:1667"},"attrs":["#[inline]","#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `App::get_next_help_heading`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `App::get_next_help_heading`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4657:2904":{"id":"b:2:3213-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4187:3673":{"id":"0:4187:3673","crate_id":0,"name":"TakesValue","span":{"filename":"src/builder/arg_settings.rs","begin":[105,4],"end":[105,14]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::takes_value`] and [`Arg::is_takes_value_set`]","links":{"`Arg::takes_value`":"0:3972:1654","`Arg::is_takes_value_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::takes_value` and `Arg::is_takes_value_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::takes_value` and `Arg::is_takes_value_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:2404":{"id":"0:2404","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1406,0],"end":[1415,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["sum","enumerate","array_chunks","reduce","try_collect","skip_while","next_chunk","advance_by","cmp","eq","peekable","max_by","cloned","collect","product","is_sorted_by_key","try_reduce","ge","collect_into","count","map_while","last","nth","any","copied","max","all","max_by_key","__iterator_get_unchecked","cmp_by","try_find","position","partition","scan","step_by","take","flatten","partial_cmp_by","rposition","lt","size_hint","partition_in_place","fuse","intersperse","partial_cmp","chain","skip","filter_map","find","eq_by","unzip","is_partitioned","rev","inspect","intersperse_with","filter","take_while","find_map","try_for_each","min","ne","is_sorted","fold","cycle","try_fold","by_ref","for_each","flat_map","min_by_key","le","zip","min_by","map","gt","is_sorted_by"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2407:2763","0:2408:922","0:2409:5300"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:3252:5215":{"id":"b:2:3202-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:719:681":{"id":"0:719:681","crate_id":0,"name":"from","span":{"filename":"src/builder/arg_group.rs","begin":[481,4],"end":[528,5]},"visibility":"default","docs":"Deprecated in [Issue #3087](https://github.com/clap-rs/clap/issues/3087), maybe [`clap::Parser`][crate::Parser] would fit your use case?","links":{"crate::Parser":"0:164:1664"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["y",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Yaml","id":"20:620:1717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1285:4862":{"id":"0:1285:4862","crate_id":0,"name":"get_display_order","span":{"filename":"src/builder/command.rs","begin":[5034,4],"end":[5036,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6413-0:4921:7467":{"id":"b:5:6413-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,48],"end":[113,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::ArgFlags","name":"ArgFlags","id":"0:4157:1670","glob":false}},"0:942:2565":{"id":"0:942:2565","crate_id":0,"name":"about","span":{"filename":"src/builder/command.rs","begin":[1480,4],"end":[1483,5]},"visibility":"public","docs":"Sets the program's description for the short help (`-h`).\n\nIf [`Command::long_about`] is not specified, this message will be displayed for `--help`.\n\n**NOTE:** Only `Command::about` (short format) is used in completion\nscript generation in order to be concise.\n\nSee also [`crate_description!`](crate::crate_description!).\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .about(\"Does really amazing things for great people\")\n# ;\n```","links":{"`Command::long_about`":"0:4456:1667","crate::crate_description!":"0:137:2549"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["about",{"kind":"generic","inner":"O"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2308:2489":{"id":"0:2308:2489","crate_id":0,"name":"value_of","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[350,4],"end":[355,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_one()`]","links":{"`ArgMatches::get_one()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `ArgMatches::get_one()`\")]","#[track_caller]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_one()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4688:2914":{"id":"b:5:787-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1371:6769":{"id":"0:1371:6769","crate_id":0,"name":"default_value_end","span":{"filename":"src/builder/usage_parser.rs","begin":[239,0],"end":[241,1]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["b",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1666:2901":{"id":"0:1666:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1866,4],"end":[1870,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3498:1705":{"id":"0:3498:1705","crate_id":0,"name":"INVALID_UTF8","span":{"filename":"src/lib.rs","begin":[191,0],"end":[191,65]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"unexpected invalid UTF-8 code point\"","value":null,"is_literal":true}},"0:4797":{"id":"0:4797","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[2,15],"end":[2,20]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4798:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4629:2907":{"id":"a:2:9340:7907-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2031:7506":{"id":"0:2031:7506","crate_id":0,"name":"insert_context_unchecked","span":{"filename":"src/error/mod.rs","begin":[234,4],"end":[241,5]},"visibility":"crate","docs":"Does not verify if `ContextKind` is already present","links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["kind",{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4482:5261":{"id":"0:4482:5261","crate_id":0,"name":"template","span":{"filename":"src/builder/command.rs","begin":[103,4],"end":[103,32]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"b:5:787-0:4910:7462":{"id":"b:5:787-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3737:3221":{"id":"0:3737:3221","crate_id":0,"name":"ALLOW_UNK_SC","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4697:408":{"id":"0:4697:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[1550,15],"end":[1550,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4946:408":{"id":"0:4946:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/any_value.rs","begin":[1,9],"end":[1,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5063:4095":{"id":"0:5063:4095","crate_id":0,"name":"vals","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[21,4],"end":[21,28]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[3055,0],"end":[4251,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":"# Advanced Argument Relations","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:498:2658","0:500:3361","0:502:4400","0:504:4401","0:506:4418","0:508:4423","0:510:4434","0:512:4452","0:515:4467","0:518:4479","0:520:4502","0:523:4512","0:526:4529","0:528:4544","0:531:4558","0:534:4573","0:536:4584","0:537:4649","0:539:4661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1509:7090":{"id":"0:1509:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[884,4],"end":[927,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:299:2510":{"id":"0:299:2510","crate_id":0,"name":"from_str","span":{"filename":"src/builder/app_settings.rs","begin":[677,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5319:1660":{"id":"b:2:2872-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2368:7988":{"id":"0:2368:7988","crate_id":0,"name":"try_get_many","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1096,4],"end":[1113,5]},"visibility":"public","docs":"Non-panicking version of [`ArgMatches::get_many`]","links":{"`ArgMatches::get_many`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4897:7464":{"id":"0:4897:7464","crate_id":0,"name":"help_flag","span":{"filename":"src/error/mod.rs","begin":[62,4],"end":[62,35]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:3984:3361":{"id":"0:3984:3361","crate_id":0,"name":"groups","span":{"filename":"src/builder/arg.rs","begin":[72,4],"end":[72,30]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:9339:7908-0:5196:5213":{"id":"a:2:9339:7908-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2473:2763":{"id":"0:2473:2763","crate_id":0,"name":"Item","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1601,4],"end":[1601,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"a:2:3281:220-0:5245:2692":{"id":"a:2:3281:220-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3417:2589":{"id":"0:3417:2589","crate_id":0,"name":"id","span":{"filename":"src/util/id.rs","begin":[1,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:3374:1659","path":"::util"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5305:3334","0:3442:9013"],"is_stripped":false}},"0:3750:3245":{"id":"0:3750:3245","crate_id":0,"name":"DONT_COLLAPSE_ARGS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:2582":{"id":"0:2582","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[7,0],"end":[7,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg_matches::RawValues","name":"RawValues","id":"0:5010:7834","glob":false}},"b:2:2872-0:4105:1655":{"id":"b:2:2872-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3593:3158":{"id":"0:3593:3158","crate_id":0,"name":"DisableHelpSubcommand","span":{"filename":"src/builder/app_settings.rs","begin":[331,4],"end":[331,25]},"visibility":"default","docs":"Deprecated, replaced with [`Command::disable_help_subcommand`] and\n[`Command::is_disable_help_subcommand_set`]","links":{"`Command::is_disable_help_subcommand_set`":"0:4456:1667","`Command::disable_help_subcommand`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::disable_help_subcommand` and `Command::is_disable_help_subcommand_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::disable_help_subcommand` and `Command::is_disable_help_subcommand_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:278:2921":{"id":"0:278:2921","crate_id":0,"name":"CountType","span":{"filename":"src/builder/action.rs","begin":[325,0],"end":[325,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"0:2092":{"id":"0:2092","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1125,0],"end":[1130,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"debug\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2093:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:954:1504":{"id":"0:954:1504","crate_id":0,"name":"version","span":{"filename":"src/builder/command.rs","begin":[1612,4],"end":[1615,5]},"visibility":"public","docs":"Sets the version for the short version (`-V`) and help messages.\n\nIf [`Command::long_version`] is not specified, this message will be displayed for `--version`.\n\n**Pro-tip:** Use `clap`s convenience macro [`crate_version!`] to\nautomatically set your application's version to the same thing as your\ncrate at compile time.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .version(\"v0.1.24\")\n# ;\n```\n[`crate_version!`]: ./macro.crate_version!.html","links":{"`Command::long_version`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ver",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1493:59":{"id":"0:1493:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[756,4],"end":[758,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:167:2759":{"id":"0:167:2759","crate_id":0,"name":"parse_from","span":{"filename":"src/derive.rs","begin":[101,4],"end":[117,5]},"visibility":"default","docs":"Parse from iterator, exit on error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4948:1429":{"id":"0:4948:1429","crate_id":0,"name":"type_id","span":{"filename":"src/parser/matches/any_value.rs","begin":[43,4],"end":[43,29]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"std::any::TypeId","id":"2:46111:7917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:742:126":{"id":"0:742:126","crate_id":0,"name":"Err","span":{"filename":"src/builder/arg_settings.rs","begin":[335,4],"end":[335,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"44:5142:13941":{"id":"44:5142:13941","crate_id":44,"name":"ImageThunkData","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5143:61","44:5144:73881","44:5145:13994","44:5146:268"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4583:6730":{"id":"0:4583:6730","crate_id":0,"name":"prev","span":{"filename":"src/builder/usage_parser.rs","begin":[25,4],"end":[25,20]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2310:8056":{"id":"0:2310:8056","crate_id":0,"name":"value_of_lossy","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[363,4],"end":[368,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_one()`]","links":{"`ArgMatches::get_one()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `ArgMatches::get_one()`\")]","#[track_caller]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_one()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3298:8910":{"id":"0:3298:8910","crate_id":0,"name":"needs_options_tag","span":{"filename":"src/output/usage.rs","begin":[292,4],"end":[325,5]},"visibility":{"restricted":{"parent":"0:3223:5461","path":"::output::usage"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4291:5173":{"id":"0:4291:5173","crate_id":0,"name":"GLOBAL","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1454":{"id":"0:1454","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[564,0],"end":[602,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"std::any::Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AnyValueParser","id":"0:1448:7030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"P"},"items":["0:1457:7090","0:1458:2747","0:1459:1429","0:1460:3893","0:1461:7127"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2474:922":{"id":"0:2474:922","crate_id":0,"name":"next","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1603,4],"end":[1605,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4782:7532":{"id":"0:4782:7532","crate_id":0,"name":"SuggestedCommand","span":{"filename":"src/error/context.rs","begin":[26,4],"end":[26,20]},"visibility":"default","docs":"Potential fix for the user","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9339:7908-0:3972:1654":{"id":"a:2:9339:7908-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:4666:7199":{"id":"0:4666:7199","crate_id":0,"name":"bounds","span":{"filename":"src/builder/value_parser.rs","begin":[1092,4],"end":[1092,56]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"std::ops::Bound","id":"2:46071:7200","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"std::ops::Bound","id":"2:46071:7200","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}]}},"0:5117:8361":{"id":"0:5117:8361","crate_id":0,"name":"ValuesDone","span":{"filename":"src/parser/parser.rs","begin":[1693,4],"end":[1693,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:5269:8971":{"id":"b:2:2872-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1667":{"id":"0:1667","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1872,0],"end":[1879,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":["0:1668:1664","0:1669:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:4997:7835":{"id":"b:2:2869-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/derive.rs","begin":[562,0],"end":[572,1]},"visibility":{"restricted":{"parent":"0:147:547","path":"::derive"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Subcommand","id":"0:207:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Subcommand","id":"0:207:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:247:2858","0:248:2859","0:249:2861"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4807:7450":{"id":"a:2:3310:6658-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4990:793":{"id":"0:4990:793","crate_id":0,"name":"len","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1345,4],"end":[1345,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:4002-0:4724:1700":{"id":"b:2:4002-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4505":{"id":"0:4505","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[77,34],"end":[77,36]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22831:12685":{"id":"2:22831:12685","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22832:12678","2:22833:15935","2:22834:24098","2:22835:24099","2:22836:10037","2:22837:24100","2:22838:24101","2:22839:24102","2:22840:24103","2:22841:24104","2:22842:24105","2:22843:24106","2:22844:24107","2:22845:24108","2:22846:24109","2:22847:24110","2:22848:24111","2:22849:24112","2:22850:24113","2:22851:24114","2:22852:24115","2:22853:24116","2:22854:24117","2:22855:24118","2:22856:24119"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:3252:5215":{"id":"b:2:3208-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:741":{"id":"0:741","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[334,0],"end":[370,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":"Deprecated in [Issue #3087](https://github.com/clap-rs/clap/issues/3087), maybe [`clap::Parser`][crate::Parser] would fit your use case?","links":{"crate::Parser":"0:164:1664"},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:742:126","0:743:2510"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5189":{"id":"0:5189","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[9,20],"end":[9,22]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:3542:1669":{"id":"a:2:9339:7908-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:3252:5215":{"id":"a:2:3269:211-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:414:2677":{"id":"0:414:2677","crate_id":0,"name":"is_set","span":{"filename":"src/builder/arg.rs","begin":[826,4],"end":[828,5]},"visibility":"public","docs":"Check if the [`ArgSettings`] variant is currently set on the argument.\n\n[`ArgSettings`]: crate::ArgSettings","links":{"crate::ArgSettings":"0:4172:1671"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1992":{"id":"0:1992","crate_id":0,"name":null,"span":{"filename":"src/error/kind.rs","begin":[398,0],"end":[434,1]},"visibility":{"restricted":{"parent":"0:1991:782","path":"::error::kind"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1993:306"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13522:2579":{"id":"2:13522:2579","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49528:9264","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1663:2901":{"id":"0:1663:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1858,4],"end":[1862,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5127:8394":{"id":"0:5127:8394","crate_id":0,"name":"EqualsNotProvided","span":{"filename":"src/parser/parser.rs","begin":[1706,4],"end":[1708,5]},"visibility":"default","docs":"Equals required but not provided.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"struct","variant_inner":["0:5128:2580"]}},"a:2:3281:220-0:3542:1669":{"id":"a:2:3281:220-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:2688:1664":{"id":"a:2:3281:220-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:4997:7835":{"id":"b:2:3202-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3040:5313":{"id":"0:3040:5313","crate_id":0,"name":"remove_by_name","span":{"filename":"src/mkeymap.rs","begin":[147,4],"end":[153,5]},"visibility":"crate","docs":"Remove an arg in the graph by Id, usually used by `mut_arg`. Return\n`Some(arg)` if removed.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2312:8058":{"id":"0:2312:8058","crate_id":0,"name":"value_of_os","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[376,4],"end":[381,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_one()`]","links":{"`ArgMatches::get_one()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `ArgMatches::get_one()`\")]","#[track_caller]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_one()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2823:3377":{"id":"a:2:3281:220-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5069:408":{"id":"0:5069:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[15,16],"end":[15,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4764:7518":{"id":"0:4764:7518","crate_id":0,"name":"InvalidArg","span":{"filename":"src/error/context.rs","begin":[8,4],"end":[8,14]},"visibility":"default","docs":"The cause of the error","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:5010:7834":{"id":"b:2:2872-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:2823:3377":{"id":"b:2:3202-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:5291:9008":{"id":"b:2:2869-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:924:5582":{"id":"0:924:5582","crate_id":0,"name":"disable_help_flag","span":{"filename":"src/builder/command.rs","begin":[1174,4],"end":[1180,5]},"visibility":"public","docs":"Disables `-h` and `--help` flag.\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```rust\n# use clap::{Command, ErrorKind};\nlet res = Command::new(\"myprog\")\n    .disable_help_flag(true)\n    .try_get_matches_from(vec![\n        \"myprog\", \"-h\"\n    ]);\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31984:1529":{"id":"2:31984:1529","crate_id":2,"name":"wrapping_sub","span":null,"visibility":"public","docs":"Wrapping (modular) subtraction. Computes `self - rhs`,\nwrapping around at the boundary of the type.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.wrapping_sub(100), 0);\nassert_eq!(100u64.wrapping_sub(u64::MAX), 101);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:5305:3334":{"id":"b:2:3198-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4556:6725":{"id":"b:2:3213-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3781:10059":{"id":"0:3781:10059","crate_id":0,"name":"toggle","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Toggles the specified flags in-place.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3417:9222":{"id":"2:3417:9222","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:4742:7344":{"id":"b:2:4002-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:273:3030":{"id":"0:273:3030","crate_id":0,"name":"default_value_parser","span":{"filename":"src/builder/action.rs","begin":[289,4],"end":[303,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"super::ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1748":{"id":"0:1748","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[26,0],"end":[30,1]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"25:2978:7322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1750:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3104:9401":{"id":"2:3104:9401","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3310:6658-0:3393:9003":{"id":"a:2:3310:6658-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4219:3938":{"id":"0:4219:3938","crate_id":0,"name":"AllowInvalidUtf8","span":{"filename":"src/builder/arg_settings.rs","begin":[258,4],"end":[258,20]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::allow_invalid_utf8`] and [`Arg::is_allow_invalid_utf8_set`]","links":{"`Arg::is_allow_invalid_utf8_set`":"0:3972:1654","`Arg::allow_invalid_utf8`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::allow_invalid_utf8` and `Arg::is_allow_invalid_utf8_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::allow_invalid_utf8` and `Arg::is_allow_invalid_utf8_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4305:5185":{"id":"0:4305:5185","crate_id":0,"name":"HIDDEN_SHORT_H","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:5062:1429":{"id":"0:5062:1429","crate_id":0,"name":"type_id","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[20,4],"end":[20,31]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:3269:211-0:4629:2907":{"id":"a:2:3269:211-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:248:2859":{"id":"0:248:2859","crate_id":0,"name":"augment_subcommands_for_update","span":{"filename":"src/derive.rs","begin":[566,4],"end":[568,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3648:7019":{"id":"2:3648:7019","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:7204","2:3651:7209","2:3652:2678"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:4684:408":{"id":"0:4684:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[1288,15],"end":[1288,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4080:3370":{"id":"a:2:9340:7907-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:7907-0:4635:2919":{"id":"a:2:9340:7907-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:593:4768":{"id":"0:593:4768","crate_id":0,"name":"is_hide_short_help_set","span":{"filename":"src/builder/arg.rs","begin":[4634,4],"end":[4636,5]},"visibility":"public","docs":"Report whether [`Arg::hide_short_help`] is set","links":{"`Arg::hide_short_help`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4197:3068":{"id":"0:4197:3068","crate_id":0,"name":"AllowHyphenValues","span":{"filename":"src/builder/arg_settings.rs","begin":[154,4],"end":[154,21]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::allow_hyphen_values`] and\n[`Arg::is_allow_hyphen_values_set`]","links":{"`Arg::is_allow_hyphen_values_set`":"0:3972:1654","`Arg::allow_hyphen_values`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::allow_hyphen_values` and `Arg::is_allow_hyphen_values_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::allow_hyphen_values` and `Arg::is_allow_hyphen_values_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1461:7127":{"id":"0:1461:7127","crate_id":0,"name":"clone_any","span":{"filename":"src/builder/value_parser.rs","begin":[599,4],"end":[601,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"AnyValueParser","id":"0:1448:7030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:635:4850":{"id":"0:635:4850","crate_id":0,"name":"name_no_brackets","span":{"filename":"src/builder/arg.rs","begin":[5030,4],"end":[5056,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4833:1674":{"id":"b:5:787-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1806":{"id":"0:1806","crate_id":0,"name":null,"span":{"filename":"src/builder/debug_asserts.rs","begin":[382,0],"end":[386,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:1807:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:4635:2919":{"id":"a:2:3281:220-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5170:604":{"id":"0:5170:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/parser.rs","begin":[1724,29],"end":[1724,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4706:2918":{"id":"b:2:3202-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1910":{"id":"0:1910","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[51,0],"end":[51,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::PathBufValueParser","name":"PathBufValueParser","id":"0:4641:2920","glob":false}},"b:2:4002-0:4635:2919":{"id":"b:2:4002-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"33:89:9672":{"id":"33:89:9672","crate_id":33,"name":"Fragment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:90:1523","33:91:30799","33:92:30800"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1437:681":{"id":"0:1437:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[474,4],"end":[477,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"resolved_path","inner":{"name":"std::ops::RangeFull","id":"2:45940:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4101":{"id":"0:4101","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,44],"end":[5273,54]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4102:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,62],"end":[109,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::derive::Parser","name":"Parser","id":"0:164:1664","glob":false}},"44:3777:14379":{"id":"44:3777:14379","crate_id":44,"name":"Segment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:3778:9673","44:3779:13619","44:3780:13262","44:3781:73908","44:3782:2562","44:3783:14728","44:3784:14731","44:3786:14732","44:3787:14733","44:3788:14734","44:3789:14735","44:3790:14458","44:3791:14459","44:3792:14736","44:3793:653","44:3794:899","44:3795:73845","44:3796:9353","44:3799:13189"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13516:29566":{"id":"2:13516:29566","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:5097:1542":{"id":"0:5097:1542","crate_id":0,"name":"0","span":{"filename":"src/parser/parser.rs","begin":[1683,8],"end":[1683,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1635:920":{"id":"0:1635:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[1742,4],"end":[1744,5]},"visibility":"public","docs":"Parse non-empty string values","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4926:5216":{"id":"a:2:9340:7907-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1372:2900":{"id":"0:1372:2900","crate_id":0,"name":"value_hint","span":{"filename":"src/builder/value_hint.rs","begin":[1,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4588:1673"],"is_stripped":false}},"0:3785:10085":{"id":"0:3785:10085","crate_id":0,"name":"difference","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns the difference between the flags in `self` and `other`.\n\nSpecifically, the returned set contains all flags present in\n`self`, except for the ones present in `other`.\n\nIt is also conceptually equivalent to the \"bit-clear\" operation:\n`flags & !other` (and this syntax is also supported).\n\nThis is equivalent to using the `-` operator (e.g.\n[`ops::Sub`]), as in `flags - other`.\n\n[`ops::Sub`]: https://doc.rust-lang.org/std/ops/trait.Sub.html","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:590:4762":{"id":"0:590:4762","crate_id":0,"name":"is_hide_possible_values_set","span":{"filename":"src/builder/arg.rs","begin":[4617,4],"end":[4619,5]},"visibility":"public","docs":"Report whether [`Arg::hide_possible_values`] is set","links":{"`Arg::hide_possible_values`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1606:59":{"id":"0:1606:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[1507,4],"end":[1509,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:2688:1664":{"id":"a:2:9340:7907-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3180":{"id":"0:3180","crate_id":0,"name":null,"span":{"filename":"src/output/help.rs","begin":[822,0],"end":[995,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["0:3184:8839","0:3190:8849","0:3195:8847","0:3198:8857","0:3200:8859"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4688:2914":{"id":"a:2:9340:7907-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:673:4271":{"id":"0:673:4271","crate_id":0,"name":"set_explicit","span":{"filename":"src/builder/arg.rs","begin":[5281,4],"end":[5283,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["explicit",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:979:5890":{"id":"0:979:5890","crate_id":0,"name":"allow_negative_numbers","span":{"filename":"src/builder/command.rs","begin":[2095,4],"end":[2101,5]},"visibility":"public","docs":"Allows negative numbers to pass as values.\n\nThis is similar to [`Command::allow_hyphen_values`] except that it only allows numbers,\nall other undefined leading hyphens will fail to parse.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"myprog\")\n    .allow_negative_numbers(true)\n    .arg(Arg::new(\"num\"))\n    .try_get_matches_from(vec![\n        \"myprog\", \"-20\"\n    ]);\nassert!(res.is_ok());\nlet m = res.unwrap();\nassert_eq!(m.value_of(\"num\").unwrap(), \"-20\");\n```","links":{"`Command::allow_hyphen_values`":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4063:3357":{"id":"b:2:3213-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5016:408":{"id":"0:5016:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1460,9],"end":[1460,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31987:74225":{"id":"2:31987:74225","crate_id":2,"name":"wrapping_div_euclid","span":null,"visibility":"public","docs":"Wrapping Euclidean division. Computes `self.div_euclid(rhs)`.\nWrapped division on unsigned types is just normal division.\nThere's no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to `self.wrapping_div(rhs)`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.wrapping_div_euclid(10), 10);\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1448:7030":{"id":"0:1448:7030","crate_id":0,"name":"AnyValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[539,0],"end":[562,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"A type-erased wrapper for [`TypedValueParser`].","links":{"`TypedValueParser`":"0:1462:2908"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1449:7090","0:1450:2747","0:1451:1429","0:1452:3893","0:1453:7127"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"implementations":["0:1454"]}},"b:2:2872-0:4530:1672":{"id":"b:2:2872-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:421:2597":{"id":"0:421:2597","crate_id":0,"name":"takes_value","span":{"filename":"src/builder/arg.rs","begin":[926,4],"end":[932,5]},"visibility":"public","docs":"Specifies that the argument takes a value at run time.\n\n**NOTE:** values for arguments may be specified in any of the following methods\n\n- Using a space such as `-o value` or `--option value`\n- Using an equals and no space such as `-o=value` or `--option=value`\n- Use a short and no space such as `-ovalue`\n\n**NOTE:** By default, args which allow [multiple values] are delimited by commas, meaning\n`--option=val1,val2,val3` is three values for the `--option` argument. If you wish to\nchange the delimiter to another character you can use [`Arg::value_delimiter(char)`],\nalternatively you can turn delimiting values **OFF** by using\n[`Arg::use_value_delimiter(false)`][Arg::use_value_delimiter]\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"mode\")\n        .long(\"mode\")\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"prog\", \"--mode\", \"fast\"\n    ]);\n\nassert!(m.contains_id(\"mode\"));\nassert_eq!(m.value_of(\"mode\"), Some(\"fast\"));\n```\n[`Arg::value_delimiter(char)`]: Arg::value_delimiter()\n[multiple values]: Arg::multiple_values","links":{"Arg::use_value_delimiter":"0:3972:1654","Arg::value_delimiter()":"0:3972:1654","Arg::multiple_values":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1409":{"id":"0:1409","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[73,0],"end":[221,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1410:920","0:1412:360","0:1413:2573","0:1414:4753","0:1415:7087"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5019:660":{"id":"0:5019:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1460,16],"end":[1460,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1680:1664":{"id":"0:1680:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1903,4],"end":[1903,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}}}},"0:3563:3096":{"id":"0:3563:3096","crate_id":0,"name":"SubcommandRequired","span":{"filename":"src/builder/app_settings.rs","begin":[166,4],"end":[166,22]},"visibility":"default","docs":"Deprecated, replaced with [`Command::subcommand_required`] and\n[`Command::is_subcommand_required_set`]","links":{"`Command::is_subcommand_required_set`":"0:4456:1667","`Command::subcommand_required`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::subcommand_required` and `Command::is_subcommand_required_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::subcommand_required` and `Command::is_subcommand_required_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4092":{"id":"0:4092","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,22],"end":[5273,27]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4093:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2501:8062":{"id":"0:2501:8062","crate_id":0,"name":"unwrap_string","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1692,0],"end":[1699,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[track_caller]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2083":{"id":"0:2083","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1070,0],"end":[1099,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2084:671","0:2085:7492"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:5269:8971":{"id":"a:2:3310:6658-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1221:5495":{"id":"0:1221:5495","crate_id":0,"name":"_render_version","span":{"filename":"src/builder/command.rs","begin":[4783,4],"end":[4801,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["use_long",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2750:8434":{"id":"0:2750:8434","crate_id":0,"name":"add_defaults","span":{"filename":"src/parser/parser.rs","begin":[1430,4],"end":[1439,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3334:7584":{"id":"0:3334:7584","crate_id":0,"name":"good","span":{"filename":"src/output/fmt.rs","begin":[33,4],"end":[35,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Into<String>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3792:354":{"id":"0:3792:354","crate_id":0,"name":"bitor_assign","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Adds the set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3559:3089":{"id":"0:3559:3089","crate_id":0,"name":"InferLongArgs","span":{"filename":"src/builder/app_settings.rs","begin":[148,4],"end":[148,17]},"visibility":"default","docs":"Deprecated, replaced with [`Command::infer_long_args`]","links":{"`Command::infer_long_args`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::infer_long_args`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::infer_long_args`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4006:3383":{"id":"0:4006:3383","crate_id":0,"name":"default_missing_vals","span":{"filename":"src/builder/arg.rs","begin":[94,4],"end":[94,54]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}},"0:4949:1432":{"id":"0:4949:1432","crate_id":0,"name":"type_name","span":{"filename":"src/parser/matches/any_value.rs","begin":[45,4],"end":[45,27]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:3723":{"id":"0:3723","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3724:3204","0:3725:3205","0:3726:3206","0:3727:3207","0:3728:3208","0:3729:3209","0:3730:3210","0:3731:3211","0:3732:3212","0:3733:3213","0:3734:3215","0:3735:3217","0:3736:3219","0:3737:3221","0:3738:3223","0:3739:3225","0:3740:3226","0:3741:3228","0:3742:3230","0:3743:3232","0:3744:3234","0:3745:3035","0:3746:3237","0:3747:3239","0:3748:3241","0:3749:3243","0:3750:3245","0:3751:3246","0:3752:3248","0:3753:3250","0:3754:3252","0:3755:3253","0:3756:3255","0:3757:3257","0:3758:3259","0:3759:3261","0:3760:3263","0:3761:3265","0:3762:3267","0:3763:3269","0:3764:3271","0:3765:3273","0:3766:3275","0:3767:3277","0:3768:3279","0:3769:2671","0:3770:276","0:3771:5189","0:3772:10037","0:3773:10040","0:3774:10049","0:3775:2564","0:3776:10052","0:3777:10054","0:3778:2678","0:3779:2673","0:3780:2674","0:3781:10059","0:3782:2675","0:3783:10068","0:3784:62","0:3785:10085","0:3786:10096","0:3787:10106"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:197:2802":{"id":"0:197:2802","crate_id":0,"name":"into_app_for_update","span":{"filename":"src/derive.rs","begin":[279,4],"end":[279,54]},"visibility":"default","docs":"Deprecated, replaced with `CommandFactory::command_for_update`","links":{},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `CommandFactory::command_for_update\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `CommandFactory::command_for_update"},"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2371:8015":{"id":"0:2371:8015","crate_id":0,"name":"try_get_raw","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1116,4],"end":[1129,5]},"visibility":"public","docs":"Non-panicking version of [`ArgMatches::get_raw`]","links":{"`ArgMatches::get_raw`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1525":{"id":"0:1525","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[984,0],"end":[989,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1526:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:138:500":{"id":"0:138:500","crate_id":0,"name":"crate_name","span":{"filename":"src/macros.rs","begin":[303,0],"end":[307,1]},"visibility":"public","docs":"Allows you to pull the name from your Cargo.toml at compile time.\n\n# Examples\n\n```no_run\n# #[macro_use]\n# extern crate clap;\n# use clap::Command;\n# fn main() {\nlet m = Command::new(crate_name!())\n            .get_matches();\n# }\n```","links":{},"attrs":["#[cfg(feature = \"cargo\")]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! crate_name {\n    () => { ... };\n}"},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,82],"end":[109,91]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::derive::ValueEnum","name":"ValueEnum","id":"0:211:1666","glob":false}},"a:2:3281:220-0:4231:2672":{"id":"a:2:3281:220-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13510:4858":{"id":"2:13510:4858","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4666:9494":{"id":"1:4666:9494","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:12445","1:4668:23613","1:4670:23614","1:4671:23615","1:4672:9495","1:4673:23616","1:4674:23617","1:4676:23618","1:4677:10928","1:4678:6751","1:4679:6367","1:4681:6567"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1577:7050":{"id":"0:1577:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[1379,4],"end":[1379,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:5301:1542":{"id":"0:5301:1542","crate_id":0,"name":"0","span":{"filename":"src/util/graph.rs","begin":[17,32],"end":[17,45]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:3784:62":{"id":"0:3784:62","crate_id":0,"name":"union","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns the union of between the flags in `self` and `other`.\n\nSpecifically, the returned set contains all flags which are\npresent in *either* `self` *or* `other`, including any which are\npresent in both (see [`Self::symmetric_difference`] if that\nis undesirable).\n\nThis is equivalent to using the `|` operator (e.g.\n[`ops::BitOr`]), as in `flags | other`.\n\n[`ops::BitOr`]: https://doc.rust-lang.org/std/ops/trait.BitOr.html","links":{"`Self::symmetric_difference`":"0:3647:2672"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4012":{"id":"0:4012","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[60,9],"end":[60,16]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4014:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3380:9214":{"id":"2:3380:9214","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:2823:3377":{"id":"b:2:3213-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1991:782":{"id":"0:1991:782","crate_id":0,"name":"kind","span":{"filename":"src/error/kind.rs","begin":[1,0],"end":[440,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4833:1674"],"is_stripped":false}},"0:4887:2669":{"id":"0:4887:2669","crate_id":0,"name":"inner","span":{"filename":"src/error/mod.rs","begin":[41,4],"end":[41,26]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3213-0:5092:7833":{"id":"b:2:3213-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1670":{"id":"0:1670","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1880,0],"end":[1887,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":["0:1671:1664","0:1672:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:5031:8079":{"id":"b:5:787-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:478:4198":{"id":"0:478:4198","crate_id":0,"name":"env_os","span":{"filename":"src/builder/arg.rs","begin":[2491,4],"end":[2494,5]},"visibility":"public","docs":"Read from `name` environment variable when argument is not present.\n\nSee [`Arg::env`].","links":{"`Arg::env`":"0:3972:1654"},"attrs":["#[cfg(feature = \"env\")]","#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4974:899":{"id":"0:4974:899","crate_id":0,"name":"name","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1317,4],"end":[1317,27]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3389:6486":{"id":"0:3389:6486","crate_id":0,"name":"key","span":{"filename":"src/util/fnv.rs","begin":[10,4],"end":[10,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4148":{"id":"0:4148","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[1,29],"end":[1,38]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4150:604","0:4151:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4910:7462":{"id":"a:2:3269:211-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:4761:7449":{"id":"a:2:3310:6658-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2355:8213":{"id":"0:2355:8213","crate_id":0,"name":"remove_subcommand","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[979,4],"end":[981,5]},"visibility":"public","docs":"Return the name and `ArgMatches` of the current [subcommand].\n\nSubcommand values are put in a child [`ArgMatches`]\n\nReturns `None` if the subcommand wasn't present at runtime,\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\n let mut app_m = Command::new(\"git\")\n     .subcommand(Command::new(\"clone\"))\n     .subcommand(Command::new(\"push\"))\n     .subcommand(Command::new(\"commit\"))\n     .subcommand_required(true)\n     .get_matches();\n\nlet (name, sub_m) = app_m.remove_subcommand().expect(\"required\");\nmatch (name.as_str(), sub_m) {\n    (\"clone\",  sub_m) => {}, // clone was used\n    (\"push\",   sub_m) => {}, // push was used\n    (\"commit\", sub_m) => {}, // commit was used\n    (name, _)         => unimplemented!(\"{}\", name),\n}\n```\n\nAnother useful scenario is when you want to support third party, or external, subcommands.\nIn these cases you can't know the subcommand name ahead of time, so use a variable instead\nwith pattern matching!\n\n```rust\n# use clap::Command;\n// Assume there is an external subcommand named \"subcmd\"\nlet mut app_m = Command::new(\"myprog\")\n    .allow_external_subcommands(true)\n    .get_matches_from(vec![\n        \"myprog\", \"subcmd\", \"--option\", \"value\", \"-fff\", \"--flag\"\n    ]);\n\n// All trailing arguments will be stored under the subcommand's sub-matches using an empty\n// string argument name\nmatch app_m.remove_subcommand() {\n    Some((external, mut sub_m)) => {\n         let ext_args: Vec<String> = sub_m.remove_many(\"\")\n            .expect(\"`file`is required\")\n            .collect();\n         assert_eq!(external, \"subcmd\");\n         assert_eq!(ext_args, [\"--option\", \"value\", \"-fff\", \"--flag\"]);\n    },\n    _ => {},\n}\n```\n[subcommand]: crate::Command::subcommand","links":{"crate::Command::subcommand":"0:4456:1667","`ArgMatches`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4114":{"id":"0:4114","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[80,9],"end":[80,16]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4116:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4929":{"id":"0:4929","crate_id":0,"name":null,"span":{"filename":"src/parser/arg_matcher.rs","begin":[16,9],"end":[16,14]},"visibility":{"restricted":{"parent":"0:2095:7828","path":"::parser::arg_matcher"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4930:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4641:2920":{"id":"b:2:4002-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3726:3206":{"id":"0:3726:3206","crate_id":0,"name":"ARG_REQUIRED_ELSE_HELP","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:5220:7335":{"id":"0:5220:7335","crate_id":0,"name":"KeyType","span":{"filename":"src/mkeymap.rs","begin":[26,0],"end":[30,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5221:6728","0:5224:6729","0:5227:7399"],"impls":["0:3007","a:2:3310:6658-0:5220:7335","a:2:3269:211-0:5220:7335","a:2:9340:7907-0:5220:7335","a:2:9339:7908-0:5220:7335","a:2:3281:220-0:5220:7335","b:2:3198-0:5220:7335","b:2:2872-0:5220:7335","b:2:2869-0:5220:7335","b:2:4002-0:5220:7335","b:2:3202-0:5220:7335","b:2:3213-0:5220:7335","b:2:3208-0:5220:7335","b:5:787-0:5220:7335","b:31:25-0:5220:7335","0:5230","0:5232","0:5233","0:5236","0:5237","0:5239","0:5242","0:3009","0:3011","0:3013","0:3015","0:3017","0:3044"]}},"0:4928:7837":{"id":"0:4928:7837","crate_id":0,"name":"pending","span":{"filename":"src/parser/arg_matcher.rs","begin":[19,4],"end":[19,31]},"visibility":{"restricted":{"parent":"0:2095:7828","path":"::parser::arg_matcher"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:5192":{"id":"0:5192","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[9,24],"end":[9,29]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5193:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:916:5537":{"id":"0:916:5537","crate_id":0,"name":"args_override_self","span":{"filename":"src/builder/command.rs","begin":[966,4],"end":[972,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgAction::Set`][super::ArgAction::Set]","links":{"super::ArgAction::Set":"0:3503:1652"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::action(ArgAction::Set)`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::action(ArgAction::Set)`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2576:604":{"id":"0:2576:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[197,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1028:6298":{"id":"0:1028:6298","crate_id":0,"name":"get_about","span":{"filename":"src/builder/command.rs","begin":[3326,4],"end":[3328,5]},"visibility":"public","docs":"Get the help message specified via [`Command::about`].\n\n[`App::about`]: Command::about()","links":{"`Command::about`":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2190:1484":{"id":"0:2190:1484","crate_id":0,"name":"unwrap","span":{"filename":"src/parser/error.rs","begin":[25,4],"end":[36,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["r",{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5014":{"id":"0:5014","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1460,9],"end":[1460,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5016:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5216:660":{"id":"0:5216:660","crate_id":0,"name":"fmt","span":{"filename":"src/mkeymap.rs","begin":[15,33],"end":[15,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2557:8246":{"id":"0:2557:8246","crate_id":0,"name":"raw_vals_flatten","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[110,4],"end":[112,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4892:7456":{"id":"b:2:3213-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4346:352":{"id":"0:4346:352","crate_id":0,"name":"bitand_assign","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Disables all flags disabled in the set.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5209":{"id":"0:5209","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[15,29],"end":[15,31]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2193":{"id":"0:2193","crate_id":0,"name":null,"span":{"filename":"src/parser/error.rs","begin":[41,0],"end":[56,1]},"visibility":{"restricted":{"parent":"0:2185:1656","path":"::parser::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2194:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2958":{"id":"0:2958","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[21,0],"end":[21,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::matches::RawValues","name":"RawValues","id":"0:5010:7834","glob":false}},"0:1338:681":{"id":"0:1338:681","crate_id":0,"name":"from","span":{"filename":"src/builder/possible_value.rs","begin":[250,4],"end":[252,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4886:127":{"id":"a:2:9340:7907-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:3503:1652":{"id":"b:2:3202-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13539:2881":{"id":"2:13539:2881","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47591:176","self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1760":{"id":"0:1760","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[50,0],"end":[56,1]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1762:127","0:1763:1416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3169":{"id":"0:3169","crate_id":0,"name":null,"span":{"filename":"src/output/help.rs","begin":[737,0],"end":[819,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Methods to write a single subcommand","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["0:3173:8826","0:3175:8829","0:3178:8835","0:3179:5324"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4761:7449":{"id":"b:2:4002-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:549:4678":{"id":"0:549:4678","crate_id":0,"name":"get_visible_short_aliases","span":{"filename":"src/builder/arg.rs","begin":[4305,4],"end":[4317,5]},"visibility":"public","docs":"Get visible short aliases for this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3396":{"id":"0:3396","crate_id":0,"name":null,"span":{"filename":"src/util/fnv.rs","begin":[26,0],"end":[30,1]},"visibility":{"restricted":{"parent":"0:3375:8994","path":"::util::fnv"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3397:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:4647:2916":{"id":"a:2:9339:7908-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3762:3267":{"id":"0:3762:3267","crate_id":0,"name":"SUBCOMMAND_PRECEDENCE_OVER_ARG","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:3599:3168":{"id":"0:3599:3168","crate_id":0,"name":"Hidden","span":{"filename":"src/builder/app_settings.rs","begin":[362,4],"end":[362,10]},"visibility":"default","docs":"Deprecated, replaced with [`Command::hide`] and [`Command::is_hide_set`]","links":{"`Command::hide`":"0:4456:1667","`Command::is_hide_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::hide` and `Command::is_hide_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::hide` and `Command::is_hide_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:2744:8477":{"id":"0:2744:8477","crate_id":0,"name":"react","span":{"filename":"src/parser/parser.rs","begin":[1138,4],"end":[1321,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ident",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["source",{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["raw_vals",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2222":{"id":"0:2222","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[84,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2223:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3644":{"id":"0:3644","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[32,27],"end":[32,31]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3504:2980":{"id":"0:3504:2980","crate_id":0,"name":"Set","span":{"filename":"src/builder/action.rs","begin":[49,4],"end":[49,7]},"visibility":"default","docs":"When encountered, store the associated value(s) in [`ArgMatches`][crate::ArgMatches]\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"flag\")\n            .long(\"flag\")\n            .action(clap::ArgAction::Set)\n    );\n\nlet matches = cmd.try_get_matches_from([\"mycmd\", \"--flag\", \"value\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_many::<String>(\"flag\").unwrap_or_default().map(|v| v.as_str()).collect::<Vec<_>>(),\n    vec![\"value\"]\n);\n```","links":{"crate::ArgMatches":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2420:59":{"id":"0:2420:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1427,4],"end":[1433,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3646:408":{"id":"0:3646:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/app_settings.rs","begin":[32,33],"end":[32,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146:519":{"id":"0:146:519","crate_id":0,"name":"debug","span":{"filename":"src/macros.rs","begin":[1043,0],"end":[1053,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"debug\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! debug {\n    ($($arg:tt)*) => { ... };\n}"},"b:2:2872-0:4629:2907":{"id":"b:2:2872-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1491:2747":{"id":"0:1491:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/value_parser.rs","begin":[745,4],"end":[752,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["_arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4530:1672":{"id":"b:2:3198-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1413:2573":{"id":"0:1413:2573","crate_id":0,"name":"string","span":{"filename":"src/builder/value_parser.rs","begin":[163,4],"end":[165,5]},"visibility":"public","docs":"[`String`] parser for argument values\n\nSee also:\n- [`NonEmptyStringValueParser`]\n\n# Example\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .value_parser(clap::value_parser!(String))\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"80\"]).unwrap();\nlet port: &String = m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, \"80\");\n```","links":{"`NonEmptyStringValueParser`":"0:4706:2918","`String`":"5:8368:216"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:490:4309":{"id":"0:490:4309","crate_id":0,"name":"hide_possible_values","span":{"filename":"src/builder/arg.rs","begin":[2803,4],"end":[2809,5]},"visibility":"public","docs":"Do not display the [possible values][crate::builder::ValueParser::possible_values] in the help message.\n\nThis is useful for args with many values, or ones which are explained elsewhere in the\nhelp text.\n\n**NOTE:** Setting this requires [`Arg::takes_value`]\n\nTo set this for all arguments, see\n[`Command::hide_possible_values`][crate::Command::hide_possible_values].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"mode\")\n        .long(\"mode\")\n        .value_parser([\"fast\", \"slow\"])\n        .takes_value(true)\n        .hide_possible_values(true));\n```\nIf we were to run the above program with `--help` the `[values: fast, slow]` portion of\nthe help text would be omitted.","links":{"crate::builder::ValueParser::possible_values":"0:1394:2909","`Arg::takes_value`":"0:3972:1654","crate::Command::hide_possible_values":"0:4456:1667"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4172:1671":{"id":"b:2:3198-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2884:8632":{"id":"0:2884:8632","crate_id":0,"name":"missing_required_error","span":{"filename":"src/parser/validator.rs","begin":[567,4],"end":[602,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["incl",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4626":{"id":"0:4626","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,37],"end":[27,41]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4299:5179":{"id":"0:4299:5179","crate_id":0,"name":"ALLOW_TAC_VALS","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:31976:1227":{"id":"2:31976:1227","crate_id":2,"name":"saturating_add","span":null,"visibility":"public","docs":"Saturating integer addition. Computes `self + rhs`, saturating at\nthe numeric bounds instead of overflowing.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.saturating_add(1), 101);\nassert_eq!(u64::MAX.saturating_add(127), u64::MAX);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[rustc_const_stable(feature = \"const_saturating_int_methods\", since =\n\"1.47.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3347:9209":{"id":"2:3347:9209","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4893:782":{"id":"0:4893:782","crate_id":0,"name":"kind","span":{"filename":"src/error/mod.rs","begin":[58,4],"end":[58,19]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4691:408":{"id":"0:4691:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[1451,15],"end":[1451,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4802":{"id":"0:4802","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[2,29],"end":[2,38]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4803:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5102:660":{"id":"0:5102:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/parser.rs","begin":[1680,9],"end":[1680,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4926:5216":{"id":"b:2:4002-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1190:6553":{"id":"0:1190:6553","crate_id":0,"name":"two_args_of","span":{"filename":"src/builder/command.rs","begin":[4528,4],"end":[4533,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["condition",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3519:130","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:3542:1669":{"id":"a:2:9340:7907-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:4921:7467":{"id":"a:2:3281:220-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:4926:5216":{"id":"b:2:2872-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:32034:74264":{"id":"2:32034:74264","crate_id":2,"name":"max_value","span":null,"visibility":"public","docs":"New code should prefer to use\n[`u64::MAX`] instead.\n\nReturns the largest value that can be represented by this integer type.","links":{"`u64::MAX`":"1:16024:9076"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_promotable]","#[rustc_const_stable(feature = \"const_max_value\", since = \"1.32.0\")]","#[deprecated(since = \"TBD\", note =\n\"replaced by the `MAX` associated constant on this type\")]"],"deprecation":{"since":"TBD","note":"replaced by the `MAX` associated constant on this type"},"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4489:5265":{"id":"0:4489:5265","crate_id":0,"name":"current_help_heading","span":{"filename":"src/builder/command.rs","begin":[110,4],"end":[110,44]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:1505:920":{"id":"0:1505:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[875,4],"end":[878,5]},"visibility":"public","docs":"Parse an [`ValueEnum`][crate::ValueEnum]","links":{"crate::ValueEnum":"0:211:1666"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6790:12290":{"id":"1:6790:12290","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:16196"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:4664:2905":{"id":"b:2:3198-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8483-0:5010:7834":{"id":"b:2:8483-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8485:2763","2:8486:8270","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1238:6605":{"id":"0:1238:6605","crate_id":0,"name":"get_non_positionals_with_no_heading","span":{"filename":"src/builder/command.rs","begin":[4842,4],"end":[4845,5]},"visibility":"crate","docs":"Iterate through the *flags* & *options* that don't have custom heading.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13603:31626":{"id":"2:13603:31626","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4479:3369":{"id":"0:4479:3369","crate_id":0,"name":"disp_ord","span":{"filename":"src/builder/command.rs","begin":[100,4],"end":[100,27]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:3970:181":{"id":"0:3970:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/app_settings.rs","begin":[575,0],"end":[671,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"AppFlags","id":"0:3527:1668","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2302:8024":{"id":"0:2302:8024","crate_id":0,"name":"remove_one","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[246,4],"end":[249,5]},"visibility":"public","docs":"Returns the value of a specific option or positional argument.\n\ni.e. an argument that [takes an additional value][crate::Arg::takes_value] at runtime.\n\nReturns an error if the wrong type was used.  No item will have been removed.\n\nReturns `None` if the option wasn't present.\n\n*NOTE:* This will always return `Some(value)` if [`default_value`] has been set.\n[`ArgMatches::value_source`] can be used to check if a value is present at runtime.\n\n# Panic\n\nIf the argument definition and access mismatch.  To handle this case programmatically, see\n[`ArgMatches::try_remove_one`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, value_parser};\nlet mut m = Command::new(\"myprog\")\n    .arg(Arg::new(\"file\")\n        .required(true)\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"myprog\", \"file.txt\",\n    ]);\nlet vals: String = m.remove_one(\"file\")\n    .expect(\"`file`is required\");\nassert_eq!(vals, \"file.txt\");\n```\n[option]: crate::Arg::takes_value()\n[positional]: crate::Arg::index()\n[`default_value`]: crate::Arg::default_value()","links":{"crate::Arg::default_value()":"0:3972:1654","`ArgMatches::try_remove_one`":"0:4953:1658","crate::Arg::takes_value":"0:3972:1654","`ArgMatches::value_source`":"0:4953:1658"},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5031:8079":{"id":"0:5031:8079","crate_id":0,"name":"GroupedValues","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1550,0],"end":[1554,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5033:779","0:5034:793"],"impls":["a:2:3310:6658-0:5031:8079","a:2:3269:211-0:5031:8079","a:2:9340:7907-0:5031:8079","a:2:9339:7908-0:5031:8079","a:2:3281:220-0:5031:8079","b:2:8483-0:5031:8079","b:2:3198-0:5031:8079","b:2:2872-0:5031:8079","b:2:2869-0:5031:8079","b:2:4002-0:5031:8079","b:2:3202-0:5031:8079","b:2:3213-0:5031:8079","b:2:3208-0:5031:8079","b:5:787-0:5031:8079","0:5035","0:2455","0:2460","0:2463","0:2465"]}},"b:2:2872-0:4456:1667":{"id":"b:2:2872-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4923:1542":{"id":"0:4923:1542","crate_id":0,"name":"0","span":{"filename":"src/error/mod.rs","begin":[1115,17],"end":[1115,37]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"backtrace::Backtrace","id":"39:864:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4465:1504":{"id":"0:4465:1504","crate_id":0,"name":"version","span":{"filename":"src/builder/command.rs","begin":[86,4],"end":[86,31]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"b:2:4002-0:4972:1709":{"id":"b:2:4002-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1499:2747":{"id":"0:1499:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/value_parser.rs","begin":[787,4],"end":[802,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4955:7839":{"id":"0:4955:7839","crate_id":0,"name":"valid_subcommands","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[72,4],"end":[72,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2494":{"id":"0:2494","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1676,0],"end":[1676,45]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8548:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:491:4318":{"id":"0:491:4318","crate_id":0,"name":"hide_default_value","span":{"filename":"src/builder/arg.rs","begin":[2834,4],"end":[2840,5]},"visibility":"public","docs":"Do not display the default value of the argument in the help message.\n\nThis is useful when default behavior of an arg is explained elsewhere in the help text.\n\n**NOTE:** Setting this requires [`Arg::takes_value`]\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"connect\")\n    .arg(Arg::new(\"host\")\n        .long(\"host\")\n        .default_value(\"localhost\")\n        .takes_value(true)\n        .hide_default_value(true));\n\n```\n\nIf we were to run the above program with `--help` the `[default: localhost]` portion of\nthe help text would be omitted.","links":{"`Arg::takes_value`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4014:59":{"id":"0:4014:59","crate_id":0,"name":"default","span":{"filename":"src/builder/arg.rs","begin":[60,9],"end":[60,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4105:1655":{"id":"b:2:3213-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4597:6982":{"id":"0:4597:6982","crate_id":0,"name":"DirPath","span":{"filename":"src/builder/value_hint.rs","begin":[40,4],"end":[40,11]},"visibility":"default","docs":"Path to a directory.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9340:7907-0:3972:1654":{"id":"a:2:9340:7907-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:4926:5216":{"id":"a:2:9339:7908-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:4840:7534":{"id":"0:4840:7534","crate_id":0,"name":"UnrecognizedSubcommand","span":{"filename":"src/error/kind.rs","begin":[84,4],"end":[84,26]},"visibility":"default","docs":"Occurs when the user provides an unrecognized [`Subcommand`] which either\ndoesn't meet the threshold for being similar enough to an existing subcommand,\nor the 'suggestions' feature is disabled.\nOtherwise the more detailed [`InvalidSubcommand`] error is returned.\n\nThis error typically happens when passing additional subcommand names to the `help`\nsubcommand. Otherwise, the more general [`UnknownArgument`] error is used.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind, };\nlet result = Command::new(\"prog\")\n    .subcommand(Command::new(\"config\")\n        .about(\"Used for configuration\")\n        .arg(Arg::new(\"config_file\")\n            .help(\"The configuration file to use\")))\n    .try_get_matches_from(vec![\"prog\", \"help\", \"nothing\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::UnrecognizedSubcommand);\n```\n\n[`Subcommand`]: crate::Subcommand\n[`InvalidSubcommand`]: ErrorKind::InvalidSubcommand\n[`UnknownArgument`]: ErrorKind::UnknownArgument","links":{"crate::Subcommand":"0:207:1665","ErrorKind::UnknownArgument":"0:4833:1674","ErrorKind::InvalidSubcommand":"0:4833:1674"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4593:4709":{"id":"0:4593:4709","crate_id":0,"name":"AnyPath","span":{"filename":"src/builder/value_hint.rs","begin":[36,4],"end":[36,11]},"visibility":"default","docs":"Any existing path.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:8475:136":{"id":"2:8475:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8477:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:4635:2919":{"id":"b:2:3208-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:5038:1676":{"id":"b:2:2869-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5156:7831":{"id":"0:5156:7831","crate_id":0,"name":"Identifier","span":{"filename":"src/parser/parser.rs","begin":[1725,0],"end":[1729,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5157:6728","0:5159:6729","0:5161:5211"],"impls":["a:2:3310:6658-0:5156:7831","a:2:3269:211-0:5156:7831","a:2:9340:7907-0:5156:7831","a:2:9339:7908-0:5156:7831","a:2:3281:220-0:5156:7831","b:2:3198-0:5156:7831","b:2:2872-0:5156:7831","b:2:2869-0:5156:7831","b:2:4002-0:5156:7831","b:2:3202-0:5156:7831","b:2:3213-0:5156:7831","b:2:3208-0:5156:7831","b:5:787-0:5156:7831","b:31:25-0:5156:7831","0:5163","0:5164","0:5166","0:5168","0:5169","0:5171","0:5172"]}},"a:2:3281:220-0:4997:7835":{"id":"a:2:3281:220-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:4724:1700":{"id":"b:2:2869-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3044":{"id":"0:3044","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[161,0],"end":[167,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:3577:5211","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:3046:181","0:3047:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:31:25-0:5196:5213":{"id":"b:31:25-0:5196:5213","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:1022:4666":{"id":"0:1022:4666","crate_id":0,"name":"get_name","span":{"filename":"src/builder/command.rs","begin":[3288,4],"end":[3290,5]},"visibility":"public","docs":"Get the name of the cmd.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5012:779":{"id":"0:5012:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1463,4],"end":[1463,72]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: type_complexity)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Map","id":"2:46798:7923","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}},"0:4644:408":{"id":"0:4644:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[764,15],"end":[764,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3101:2562":{"id":"0:3101:2562","crate_id":0,"name":"cmd","span":{"filename":"src/output/help.rs","begin":[22,4],"end":[22,29]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}},"0:274:3032":{"id":"0:274:3032","crate_id":0,"name":"value_type_id","span":{"filename":"src/builder/action.rs","begin":[306,4],"end":[322,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::parser::AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31998:74235":{"id":"2:31998:74235","crate_id":2,"name":"borrowing_sub","span":null,"visibility":"public","docs":"Calculates `self - rhs - borrow` without the ability to overflow.\n\nPerforms \"ternary subtraction\" which takes in an extra bit to subtract, and may return\nan additional bit of overflow. This allows for chaining together multiple subtractions\nto create \"big integers\" which represent larger values.\n\n# Examples\n\nBasic usage\n\n```\n#![feature(bigint_helper_methods)]\nassert_eq!(5u64.borrowing_sub(2, false), (3, false));\nassert_eq!(5u64.borrowing_sub(2, true), (2, false));\nassert_eq!(0u64.borrowing_sub(1, false), (u64::MAX, true));\nassert_eq!(0u64.borrowing_sub(1, true), (u64::MAX - 1, true));\n```","links":{},"attrs":["#[unstable(feature = \"bigint_helper_methods\", issue = \"85532\")]","#[rustc_const_unstable(feature = \"const_bigint_helper_methods\", issue =\n\"85532\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}],["borrow",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1328:6652":{"id":"0:1328:6652","crate_id":0,"name":"should_show_help","span":{"filename":"src/builder/possible_value.rs","begin":[182,4],"end":[184,5]},"visibility":"crate","docs":"Report if PossibleValue is not hidden and has a help message","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4647:2916":{"id":"0:4647:2916","crate_id":0,"name":"EnumValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[869,0],"end":[871,2]},"visibility":"public","docs":"Parse an [`ValueEnum`][crate::ValueEnum] value.\n\nSee also:\n- [`PossibleValuesParser`]\n\n# Example\n\n```rust\n# use std::ffi::OsStr;\n# use clap::builder::TypedValueParser;\n# let cmd = clap::Command::new(\"test\");\n# let arg = None;\n\n#[derive(Copy, Clone, Debug, PartialEq, Eq)]\nenum ColorChoice {\n    Always,\n    Auto,\n    Never,\n}\n\nimpl clap::ValueEnum for ColorChoice {\n    fn value_variants<'a>() -> &'a [Self] {\n        &[Self::Always, Self::Auto, Self::Never]\n    }\n\n    fn to_possible_value<'a>(&self) -> Option<clap::PossibleValue<'a>> {\n        match self {\n            Self::Always => Some(clap::PossibleValue::new(\"always\")),\n            Self::Auto => Some(clap::PossibleValue::new(\"auto\")),\n            Self::Never => Some(clap::PossibleValue::new(\"never\")),\n        }\n    }\n}\n\n// Usage\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"color\")\n            .value_parser(clap::builder::EnumValueParser::<ColorChoice>::new())\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"always\"]).unwrap();\nlet port: ColorChoice = *m.get_one(\"color\")\n    .expect(\"required\");\nassert_eq!(port, ColorChoice::Always);\n\n// Semantics\nlet value_parser = clap::builder::EnumValueParser::<ColorChoice>::new();\n// or\nlet value_parser = clap::value_parser!(ColorChoice);\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"random\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"\")).is_err());\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"always\")).unwrap(), ColorChoice::Always);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"auto\")).unwrap(), ColorChoice::Auto);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"never\")).unwrap(), ColorChoice::Never);\n```","links":{"crate::ValueEnum":"0:211:1666","`PossibleValuesParser`":"0:4657:2904"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"crate::ValueEnum","id":"0:211:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4650:1542"],"impls":["0:1503","a:2:3310:6658-0:4647:2916","a:2:3269:211-0:4647:2916","a:2:9340:7907-0:4647:2916","a:2:9339:7908-0:4647:2916","a:2:3281:220-0:4647:2916","b:2:3198-0:4647:2916","b:2:2872-0:4647:2916","b:2:2869-0:4647:2916","b:2:4002-0:4647:2916","b:2:3202-0:4647:2916","b:2:3213-0:4647:2916","b:2:3208-0:4647:2916","b:5:787-0:4647:2916","0:4651","0:4654","0:1506","0:1522"]}},"b:2:3198-0:3211:5214":{"id":"b:2:3198-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31999:74236":{"id":"2:31999:74236","crate_id":2,"name":"abs_diff","span":null,"visibility":"public","docs":"Computes the absolute difference between `self` and `other`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.abs_diff(80), 20u64);\nassert_eq!(100u64.abs_diff(110), 10u64);\n```","links":{},"attrs":["#[stable(feature = \"int_abs_diff\", since = \"1.60.0\")]","#[rustc_const_stable(feature = \"int_abs_diff\", since = \"1.60.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4866:7478":{"id":"0:4866:7478","crate_id":0,"name":"DisplayHelp","span":{"filename":"src/error/kind.rs","begin":[337,4],"end":[337,15]},"visibility":"default","docs":"Not a true \"error\" as it means `--help` or similar was used.\nThe help message will be sent to `stdout`.\n\n**Note**: If the help is displayed due to an error (such as missing subcommands) it will\nbe sent to `stderr` instead of `stdout`.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .try_get_matches_from(vec![\"prog\", \"--help\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::DisplayHelp);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4189:3976":{"id":"0:4189:3976","crate_id":0,"name":"UseValueDelimiter","span":{"filename":"src/builder/arg_settings.rs","begin":[115,4],"end":[115,21]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::use_value_delimiter`] and\n[`Arg::is_use_value_delimiter_set`]","links":{"`Arg::is_use_value_delimiter_set`":"0:3972:1654","`Arg::use_value_delimiter`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::use_value_delimiter` and `Arg::is_use_value_delimiter_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::use_value_delimiter` and `Arg::is_use_value_delimiter_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:489:4299":{"id":"0:489:4299","crate_id":0,"name":"hide","span":{"filename":"src/builder/arg.rs","begin":[2770,4],"end":[2776,5]},"visibility":"public","docs":"Do not display the argument in help message.\n\n**NOTE:** This does **not** hide the argument from usage strings on error\n\n# Examples\n\nSetting `Hidden` will hide the argument when displaying help text\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .hide(true)\n        .help(\"Some help text describing the --config arg\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nThe above example displays\n\n```text\nhelptest\n\nUSAGE:\n   helptest [OPTIONS]\n\nOPTIONS:\n-h, --help       Print help information\n-V, --version    Print version information\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5092:7833":{"id":"b:2:3202-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3791":{"id":"0:3791","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:3427:9224","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3792:354"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5101":{"id":"0:5101","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1680,9],"end":[1680,14]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5102:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1104:6399":{"id":"0:1104:6399","crate_id":0,"name":"is_arg_required_else_help_set","span":{"filename":"src/builder/command.rs","begin":[3698,4],"end":[3700,5]},"visibility":"public","docs":"Report whether [`Command::arg_required_else_help`] is set","links":{"`Command::arg_required_else_help`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4287":{"id":"0:4287","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4288:5170","0:4289:5171","0:4290:5172","0:4291:5173","0:4292:3215","0:4293:5174","0:4294:5175","0:4295:3228","0:4296:5176","0:4297:5177","0:4298:5178","0:4299:5179","0:4300:5180","0:4301:5181","0:4302:5182","0:4303:5183","0:4304:5184","0:4305:5185","0:4306:5186","0:4307:5187","0:4308:5188","0:4309:5190","0:4310:5191","0:4311:5192","0:4312:3279","0:4313:2671","0:4314:276","0:4315:5189","0:4316:10037","0:4317:10040","0:4318:10049","0:4319:2564","0:4320:10052","0:4321:10054","0:4322:2678","0:4323:2673","0:4324:2674","0:4325:10059","0:4326:2675","0:4327:10068","0:4328:62","0:4329:10085","0:4330:10096","0:4331:10106"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1339":{"id":"0:1339","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[255,0],"end":[259,1]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1341:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3374:1659":{"id":"0:3374:1659","crate_id":0,"name":"util","span":{"filename":"src/util/mod.rs","begin":[1,0],"end":[40,45]},"visibility":"crate","docs":null,"links":{},"attrs":["#![allow(clippy :: single_component_path_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3375:8994","0:3401:8995","0:3417:2589","0:3459:7236","0:3485:1556","0:3466","0:3488:7447","0:3489:7448","0:3490:7446"],"is_stripped":false}},"a:2:3281:220-0:4530:1672":{"id":"a:2:3281:220-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23854:12671":{"id":"2:23854:12671","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23855:12678"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23850:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2872-0:4933:7836":{"id":"b:2:2872-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6437:12290":{"id":"1:6437:12290","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6438:12509","1:6439:12510","1:6440:3361","1:6441:31097","1:6443:31098","1:6445:9407","1:6446:31099","1:6448:31100"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4080:3370":{"id":"0:4080:3370","crate_id":0,"name":"DisplayOrder","span":{"filename":"src/builder/arg.rs","begin":[5274,0],"end":[5278,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4081:174","0:4083:4885","0:4086:4886"],"impls":["0:672","a:2:3310:6658-0:4080:3370","a:2:3269:211-0:4080:3370","a:2:9340:7907-0:4080:3370","a:2:9339:7908-0:4080:3370","a:2:3281:220-0:4080:3370","b:2:3198-0:4080:3370","b:2:2872-0:4080:3370","b:2:2869-0:4080:3370","b:2:4002-0:4080:3370","b:2:3202-0:4080:3370","b:2:3213-0:4080:3370","b:2:3208-0:4080:3370","b:5:787-0:4080:3370","b:31:25-0:4080:3370","0:4089","0:4090","0:4092","0:4094","0:4095","0:4098","0:4099","0:4101","0:4103","0:677"]}},"b:2:2872-0:4688:2914":{"id":"b:2:2872-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2064:7601":{"id":"0:2064:7601","crate_id":0,"name":"singular_or_plural","span":{"filename":"src/error/mod.rs","begin":[979,4],"end":[985,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":"Returns the singular or plural form on the verb to be based on the argument's value.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9343:12280":{"id":"1:9343:12280","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9344:24057","1:9345:24058","1:9346:24059","1:9347:24060","1:9348:24061","1:9349:24062","1:9350:24063"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/derive.rs","begin":[502,0],"end":[526,1]},"visibility":{"restricted":{"parent":"0:147:547","path":"::derive"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:164:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["parse_from","try_parse","update_from","try_parse_from","clap","parse","try_update_from","from_clap","from_args","from_args_safe","from_iter","from_iter_safe"],"trait":{"name":"Parser","id":"0:164:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:221:2747","0:222:2756","0:223:2759","0:226:2766"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5230":{"id":"0:5230","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[25,9],"end":[25,14]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5231:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"34:53:13907":{"id":"34:53:13907","crate_id":34,"name":"UnicodeWidthStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:54:1523","34:56:73577"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1362:2581":{"id":"0:1362:2581","crate_id":0,"name":"long","span":{"filename":"src/builder/usage_parser.rs","begin":[133,4],"end":[145,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5092:7833":{"id":"b:2:4002-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:5020:1678":{"id":"a:2:3281:220-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:405:753":{"id":"0:405:753","crate_id":0,"name":"index","span":{"filename":"src/builder/arg.rs","begin":[490,4],"end":[493,5]},"visibility":"public","docs":"Specifies the index of a positional argument **starting at** 1.\n\n**NOTE:** The index refers to position according to **other positional argument**. It does\nnot define position in the argument list as a whole.\n\n**NOTE:** You can optionally leave off the `index` method, and the index will be\nassigned in order of evaluation. Utilizing the `index` method allows for setting\nindexes out of order\n\n**NOTE:** This is only meant to be used for positional arguments and shouldn't to be used\nwith [`Arg::short`] or [`Arg::long`].\n\n**NOTE:** When utilized with [`Arg::multiple_values(true)`], only the **last** positional argument\nmay be defined as multiple (i.e. with the highest index)\n\n# Panics\n\n[`Command`] will [`panic!`] if indexes are skipped (such as defining `index(1)` and `index(3)`\nbut not `index(2)`, or a positional argument is defined as multiple and is not the highest\nindex\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"config\")\n    .index(1)\n# ;\n```\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"mode\")\n        .index(1))\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\"))\n    .get_matches_from(vec![\n        \"prog\", \"--debug\", \"fast\"\n    ]);\n\nassert!(m.contains_id(\"mode\"));\nassert_eq!(m.value_of(\"mode\"), Some(\"fast\")); // notice index(1) means \"first positional\"\n                                              // *not* first argument\n```\n[`Arg::short`]: Arg::short()\n[`Arg::long`]: Arg::long()\n[`Arg::multiple_values(true)`]: Arg::multiple_values()\n[`panic!`]: https://doc.rust-lang.org/std/macro.panic!.html\n[`Command`]: crate::Command","links":{"Arg::multiple_values()":"0:3972:1654","Arg::long()":"0:3972:1654","Arg::short()":"0:3972:1654","crate::Command":"0:853:1653"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["idx",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3017":{"id":"0:3017","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[74,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3018:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:4588:1673":{"id":"b:2:3202-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1634":{"id":"0:1634","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1740,0],"end":[1745,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1635:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5142:2589":{"id":"0:5142:2589","crate_id":0,"name":"id","span":{"filename":"src/parser/parser.rs","begin":[1719,4],"end":[1719,21]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3208-0:4972:1709":{"id":"b:2:3208-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:3503:1652":{"id":"b:5:787-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:725:681":{"id":"0:725:681","crate_id":0,"name":"from","span":{"filename":"src/builder/arg_predicate.rs","begin":[8,4],"end":[13,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["other",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4734:660":{"id":"0:4734:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/regex.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4587:660":{"id":"0:4587:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/usage_parser.rs","begin":[20,9],"end":[20,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4131:2923":{"id":"b:2:3202-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2051:7537":{"id":"0:2051:7537","crate_id":0,"name":"missing_subcommand","span":{"filename":"src/error/mod.rs","begin":[408,4],"end":[417,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["name",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:3393:9003":{"id":"b:2:2869-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:4953:1658":{"id":"b:2:2872-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1757":{"id":"0:1757","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[44,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"25:2788:7323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1759:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3340:2695":{"id":"0:3340:2695","crate_id":0,"name":"hint","span":{"filename":"src/output/fmt.rs","begin":[49,4],"end":[51,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline(never)]","#[allow(dead_code)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Into<String>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4282:660":{"id":"0:4282:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1665:1664":{"id":"0:1665:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1865,4],"end":[1865,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}}}}}},"a:2:3310:6658-0:4641:2920":{"id":"a:2:3310:6658-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2550:8097":{"id":"0:2550:8097","crate_id":0,"name":"get_occurrences","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[81,4],"end":[83,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[deprecated(since = \"3.2.0\")]"],"deprecation":{"since":"3.2.0","note":null},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3014:604":{"id":"0:3014:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[57,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:880:2659":{"id":"0:880:2659","crate_id":0,"name":"subcommand","span":{"filename":"src/builder/command.rs","begin":[415,4],"end":[418,5]},"visibility":"public","docs":"Adds a subcommand to the list of valid possibilities.\n\nSubcommands are effectively sub-[`Command`]s, because they can contain their own arguments,\nsubcommands, version, usage, etc. They also function just like [`Command`]s, in that they get\ntheir own auto generated help, version, and usage.\n\nA subcommand's [`Command::name`] will be used for:\n- The argument the user passes in\n- Programmatically looking up the subcommand\n\n# Examples\n\n```no_run\n# use clap::{Command, arg};\nCommand::new(\"myprog\")\n    .subcommand(Command::new(\"config\")\n        .about(\"Controls configuration features\")\n        .arg(arg!(\"<config> 'Required configuration file to use'\")))\n# ;\n```","links":{"`Command::name`":"0:4456:1667","`Command`":"0:853:1653"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["subcmd",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3503:1652":{"id":"b:2:3213-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:258:2932":{"id":"0:258:2932","crate_id":0,"name":"yaml_tuple3","span":{"filename":"src/builder/macros.rs","begin":[21,0],"end":[41,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_tuple3 {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"b:2:3202-0:5156:7831":{"id":"b:2:3202-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4892:7456":{"id":"0:4892:7456","crate_id":0,"name":"ErrorInner","span":{"filename":"src/error/mod.rs","begin":[57,0],"end":[66,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4893:782","0:4894:481","0:4895:867","0:4896:7463","0:4897:7464","0:4898:7465","0:4899:7466","0:4900:1553"],"impls":["a:2:3310:6658-0:4892:7456","a:2:3269:211-0:4892:7456","a:2:9340:7907-0:4892:7456","a:2:9339:7908-0:4892:7456","a:2:3281:220-0:4892:7456","b:2:3198-0:4892:7456","b:2:2872-0:4892:7456","b:2:2869-0:4892:7456","b:2:4002-0:4892:7456","b:2:3202-0:4892:7456","b:2:3213-0:4892:7456","b:2:3208-0:4892:7456","0:4901"]}},"a:2:3281:220-0:5261:2691":{"id":"a:2:3281:220-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:932":{"id":"0:932","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[1378,0],"end":[2247,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":"# Command-specific Settings\n\nThese apply only to the current command and are not inherited by subcommands.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:934:899","0:936:5247","0:938:5246","0:940:2563","0:942:2565","0:944:5249","0:946:5252","0:948:5253","0:950:5250","0:952:5251","0:954:1504","0:956:5248","0:958:5717","0:960:5736","0:962:5768","0:964:2657","0:966:3570","0:968:5517","0:969:5518","0:970:3385","0:972:5788","0:974:5798","0:976:2545","0:977:5868","0:978:3933","0:979:5890","0:980:5900","0:981:5945"],"negative":false,"synthetic":false,"blanket_impl":null}},"43:604:13910":{"id":"43:604:13910","crate_id":43,"name":"UnwindContextStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:606:73614","43:607:73612"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Reader","id":"43:1233:13260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13556:31612":{"id":"2:13556:31612","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13134:9255","str::split":"1:16010:9064","`DoubleEndedIterator`":"2:8523:120","str::rsplit_terminator":"1:16010:9064","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49608:9283","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1607":{"id":"0:1607","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1554,0],"end":[1567,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1608:920","0:1609:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:4933:7836":{"id":"b:5:787-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1327:4758":{"id":"0:1327:4758","crate_id":0,"name":"is_hide_set","span":{"filename":"src/builder/possible_value.rs","begin":[177,4],"end":[179,5]},"visibility":"public","docs":"Report if [`PossibleValue::hide`] is set","links":{"`PossibleValue::hide`":"0:4530:1672"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4692":{"id":"0:4692","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1451,22],"end":[1451,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4693:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[114,23],"end":[114,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::ErrorKind","name":"ErrorKind","id":"0:4833:1674","glob":false}},"0:1506":{"id":"0:1506","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[881,0],"end":[938,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"crate::ValueEnum","id":"0:211:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:1508:7050","0:1509:7090","0:1520:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:31981:74223":{"id":"2:31981:74223","crate_id":2,"name":"saturating_pow","span":null,"visibility":"public","docs":"Saturating integer exponentiation. Computes `self.pow(exp)`,\nsaturating at the numeric bounds instead of overflowing.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(4u64.saturating_pow(3), 64);\nassert_eq!(u64::MAX.saturating_pow(2), u64::MAX);\n```","links":{},"attrs":["#[stable(feature = \"no_panic_pow\", since = \"1.34.0\")]","#[rustc_const_stable(feature = \"const_int_pow\", since = \"1.50.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["exp",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5042":{"id":"0:5042","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1592,9],"end":[1592,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5044:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4492:5268":{"id":"0:4492:5268","crate_id":0,"name":"subcommand_heading","span":{"filename":"src/builder/command.rs","begin":[113,4],"end":[113,42]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"44:4250:56760":{"id":"44:4250:56760","crate_id":44,"name":"Nlist","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:4251:9673","44:4252:13619","44:4253:14853","44:4254:14673","44:4255:14854","44:4256:14463","44:4257:14855","44:4258:899","44:4261:74001","44:4262:74002","44:4263:74003","44:4264:74004"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1398:7029":{"id":"0:1398:7029","crate_id":0,"name":"Bool","span":{"filename":"src/builder/value_parser.rs","begin":[63,4],"end":[63,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:675:4891":{"id":"0:675:4891","crate_id":0,"name":"make_explicit","span":{"filename":"src/builder/arg.rs","begin":[5289,4],"end":[5294,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4105:1655":{"id":"b:2:4002-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13503:31599":{"id":"2:13503:31599","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16010:9064"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4742:7344":{"id":"a:2:9340:7907-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:31996:74233":{"id":"2:31996:74233","crate_id":2,"name":"overflowing_add_signed","span":null,"visibility":"public","docs":"Calculates `self` + `rhs` with a signed `rhs`\n\nReturns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.\n\n# Examples\n\nBasic usage:\n\n```\n# #![feature(mixed_integer_ops)]\nassert_eq!(1u64.overflowing_add_signed(2), (3, false));\nassert_eq!(1u64.overflowing_add_signed(-2), (u64::MAX, true));\nassert_eq!((u64::MAX - 2).overflowing_add_signed(4), (1, true));\n```","links":{},"attrs":["#[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4349:1355":{"id":"0:4349:1355","crate_id":0,"name":"sub","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Returns the set difference of the two sets of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4834:7526":{"id":"0:4834:7526","crate_id":0,"name":"InvalidValue","span":{"filename":"src/error/kind.rs","begin":[19,4],"end":[19,16]},"visibility":"default","docs":"Occurs when an [`Arg`][crate::Arg] has a set of possible values,\nand the user provides a value which isn't in that set.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"speed\")\n        .value_parser([\"fast\", \"slow\"]))\n    .try_get_matches_from(vec![\"prog\", \"other\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::InvalidValue);\n```","links":{"crate::Arg":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1928:1656":{"id":"0:1928:1656","crate_id":0,"name":"error","span":{"filename":"src/error/mod.rs","begin":[1,0],"end":[1153,1]},"visibility":"public","docs":"Error reporting","links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1990:481","0:1991:782","0:1996","0:1999","0:2002","0:2005:205","0:4886:127","0:4892:7456","0:2074:7565","0:2075:7569","0:2077:7503","0:2078:7570","0:2079:1066","0:2081:7585","0:4910:7462","0:4921:7467"],"is_stripped":false}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:4676:2906":{"id":"a:2:3281:220-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5242":{"id":"0:5242","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[25,37],"end":[25,42]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5243:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4185:3168":{"id":"0:4185:3168","crate_id":0,"name":"Hidden","span":{"filename":"src/builder/arg_settings.rs","begin":[96,4],"end":[96,10]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::hide`] and [`Arg::is_hide_set`]","links":{"`Arg::hide`":"0:3972:1654","`Arg::is_hide_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::hide` and `Arg::is_hide_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::hide` and `Arg::is_hide_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1502:59":{"id":"0:1502:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[806,4],"end":[808,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4246:415":{"id":"0:4246:415","crate_id":0,"name":"cmp","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1365:2603":{"id":"0:1365:2603","crate_id":0,"name":"help","span":{"filename":"src/builder/usage_parser.rs","begin":[187,4],"end":[199,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:5070:1677":{"id":"a:2:3310:6658-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:4530:1672":{"id":"b:5:787-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:32031:74262":{"id":"2:32031:74262","crate_id":2,"name":"from_ne_bytes","span":null,"visibility":"public","docs":"Create a native endian integer value from its memory representation\nas a byte array in native endianness.\n\nAs the target platform's native endianness is used, portable code\nlikely wants to use [`from_be_bytes`] or [`from_le_bytes`], as\nappropriate instead.\n\n[`from_be_bytes`]: Self::from_be_bytes\n[`from_le_bytes`]: Self::from_le_bytes\n\n\n\n# Examples\n\n```\nlet value = u64::from_ne_bytes(if cfg!(target_endian = \"big\") {\n    [0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\n} else {\n    [0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\n});\nassert_eq!(value, 0x1234567890123456);\n```\n\nWhen starting from a slice rather than an array, fallible conversion APIs can be used:\n\n```\nfn read_ne_u64(input: &mut &[u8]) -> u64 {\n    let (int_bytes, rest) = input.split_at(std::mem::size_of::<u64>());\n    *input = rest;\n    u64::from_ne_bytes(int_bytes.try_into().unwrap())\n}\n```","links":{"Self::from_be_bytes":"1:16024:9076","Self::from_le_bytes":"1:16024:9076"},"attrs":["#[stable(feature = \"int_to_from_bytes\", since = \"1.32.0\")]","#[rustc_const_stable(feature = \"const_int_conversion\", since = \"1.44.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bytes",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2742:8509":{"id":"0:2742:8509","crate_id":0,"name":"push_arg_values","span":{"filename":"src/parser/parser.rs","begin":[1087,4],"end":[1115,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["raw_vals",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4953:1658":{"id":"b:2:3198-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:877:3361":{"id":"0:877:3361","crate_id":0,"name":"groups","span":{"filename":"src/builder/command.rs","begin":[382,4],"end":[391,5]},"visibility":"public","docs":"Adds multiple [`ArgGroup`]s to the [`Command`] at once.\n\n# Examples\n\n```no_run\n# use clap::{Command, arg, ArgGroup};\nCommand::new(\"cmd\")\n    .arg(arg!(\"--set-ver [ver] 'set the version manually'\"))\n    .arg(arg!(\"--major         'auto increase major'\"))\n    .arg(arg!(\"--minor         'auto increase minor'\"))\n    .arg(arg!(\"--patch         'auto increase patch'\"))\n    .arg(arg!(\"-c [FILE]       'a config file'\"))\n    .arg(arg!(\"-i [IFACE]      'an interface'\"))\n    .groups(&[\n        ArgGroup::new(\"vers\")\n            .args(&[\"set-ver\", \"major\", \"minor\",\"patch\"])\n            .required(true),\n        ArgGroup::new(\"input\")\n            .args(&[\"c\", \"i\"])\n    ])\n# ;\n```","links":{"`ArgGroup`":"0:4105:1655","`Command`":"0:853:1653"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["groups",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:2823:3377":{"id":"a:2:9340:7907-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:923:4294":{"id":"0:923:4294","crate_id":0,"name":"next_line_help","span":{"filename":"src/builder/command.rs","begin":[1149,4],"end":[1155,5]},"visibility":"public","docs":"Places the help string for all arguments and subcommands on the line after them.\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .next_line_help(true)\n    .get_matches();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5200":{"id":"0:5200","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[15,9],"end":[15,16]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:5202:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2348:8171":{"id":"0:2348:8171","crate_id":0,"name":"indices_of","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[841,4],"end":[848,5]},"visibility":"public","docs":"All indices an argument appeared at when parsing.\n\nIndices are similar to argv indices, but are not exactly 1:1.\n\nFor flags (i.e. those arguments which don't have an associated value), indices refer\nto occurrence of the switch, such as `-f`, or `--flag`. However, for options the indices\nrefer to the *values* `-o val` would therefore not represent two distinct indices, only the\nindex for `val` would be recorded. This is by design.\n\n*NOTE:* For more information about how clap indices compared to argv indices, see\n[`ArgMatches::index_of`]\n\n# Panics\n\nIf `id` is is not a valid argument or group id.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .use_value_delimiter(true)\n        .multiple_values(true))\n    .get_matches_from(vec![\"myapp\", \"-o=val1,val2,val3\"]);\n           // ARGV indices: ^0       ^1\n           // clap indices:             ^2   ^3   ^4\n           //\n           // clap sees the above as 'myapp -o val1 val2 val3'\n           //                         ^0    ^1 ^2   ^3   ^4\nassert_eq!(m.indices_of(\"option\").unwrap().collect::<Vec<_>>(), &[2, 3, 4]);\n```\n\nAnother quick example is when flags and options are used together\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .takes_value(true)\n        .action(ArgAction::Append))\n    .arg(Arg::new(\"flag\")\n        .short('f')\n        .action(ArgAction::Count))\n    .get_matches_from(vec![\"myapp\", \"-o\", \"val1\", \"-f\", \"-o\", \"val2\", \"-f\"]);\n           // ARGV indices: ^0       ^1    ^2      ^3    ^4    ^5      ^6\n           // clap indices:                ^2      ^3          ^5      ^6\n\nassert_eq!(m.indices_of(\"option\").unwrap().collect::<Vec<_>>(), &[2, 5]);\nassert_eq!(m.indices_of(\"flag\").unwrap().collect::<Vec<_>>(), &[6]);\n```\n\nOne final example, which is an odd case; if we *don't* use  value delimiter as we did with\nthe first example above instead of `val1`, `val2` and `val3` all being distinc values, they\nwould all be a single value of `val1,val2,val3`, in which case they'd only receive a single\nindex.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .takes_value(true)\n        .multiple_values(true))\n    .get_matches_from(vec![\"myapp\", \"-o=val1,val2,val3\"]);\n           // ARGV indices: ^0       ^1\n           // clap indices:             ^2\n           //\n           // clap sees the above as 'myapp -o \"val1,val2,val3\"'\n           //                         ^0    ^1  ^2\nassert_eq!(m.indices_of(\"option\").unwrap().collect::<Vec<_>>(), &[2]);\n```\n[`ArgMatches::index_of`]: ArgMatches::index_of()\n[delimiter]: Arg::value_delimiter()","links":{"ArgMatches::index_of()":"0:4953:1658"},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4972:1709":{"id":"a:2:9340:7907-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:3252:5215":{"id":"b:2:4002-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:105:1841":{"id":"0:105:1841","crate_id":0,"name":"cargo_example_derive","span":{"filename":"src/_cookbook/cargo_example_derive.rs","begin":[1,0],"end":[7,64]},"visibility":"public","docs":"# Example: cargo subcommand (Derive API)\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)] // requires `derive` feature\n#[clap(name = \"cargo\")]\n#[clap(bin_name = \"cargo\")]\nenum Cargo {\n    ExampleDerive(ExampleDerive),\n}\n\n#[derive(clap::Args)]\n#[clap(author, version, about, long_about = None)]\nstruct ExampleDerive {\n    #[clap(long, value_parser)]\n    manifest_path: Option<std::path::PathBuf>,\n}\n\nfn main() {\n    let Cargo::ExampleDerive(args) = Cargo::parse();\n    println!(\"{:?}\", args.manifest_path);\n}\n```\n\nFor more on creating a custom subcommand, see [the cargo\nbook](https://doc.rust-lang.org/cargo/reference/external-tools.html#custom-subcommands).\nThe crate [`clap-cargo`](https://github.com/crate-ci/clap-cargo) can help in\nmimicking cargo's interface.\n\nThe help looks like:\n```console\n$ cargo-example-derive --help\ncargo \n\nUSAGE:\n    cargo <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help    Print help information\n\nSUBCOMMANDS:\n    example-derive    A simple to use, efficient, and full-featured Command Line Argument Parser\n    help              Print this message or the help of the given subcommand(s)\n\n$ cargo-example-derive example-derive --help\ncargo-example-derive [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    cargo example-derive [OPTIONS]\n\nOPTIONS:\n    -h, --help                             Print help information\n        --manifest-path <MANIFEST_PATH>    \n    -V, --version                          Print version information\n\n```\n\nThen to directly invoke the command, run:\n```console\n$ cargo-example-derive example-derive\nNone\n\n$ cargo-example-derive example-derive --manifest-path Cargo.toml\nSome(\"Cargo.toml\")\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:2:3208-0:5038:1676":{"id":"b:2:3208-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6685:12286":{"id":"1:6685:12286","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6686:31123","1:6687:17039","1:6688:17040","1:6689:17042","1:6690:17041","1:6691:17043","1:6692:17044","1:6693:17046","1:6694:14619","1:6695:17049","1:6696:17050","1:6697:17051","1:6698:17052","1:6699:17053","1:6700:17054","1:6701:17047","1:6702:17048"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2172:7881":{"id":"0:2172:7881","crate_id":0,"name":"add_index_to","span":{"filename":"src/parser/arg_matcher.rs","begin":[210,4],"end":[213,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["idx",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4921:7467":{"id":"b:2:3208-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:4556:6725":{"id":"b:2:3208-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4868:7512":{"id":"0:4868:7512","crate_id":0,"name":"DisplayHelpOnMissingArgumentOrSubcommand","span":{"filename":"src/error/kind.rs","begin":[360,4],"end":[360,44]},"visibility":"default","docs":"Occurs when either an argument or a [`Subcommand`] is required, as defined by\n[`Command::arg_required_else_help`] , but the user did not provide\none.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind, };\nlet result = Command::new(\"prog\")\n    .arg_required_else_help(true)\n    .subcommand(Command::new(\"config\")\n        .about(\"Used for configuration\")\n        .arg(Arg::new(\"config_file\")\n            .help(\"The configuration file to use\")))\n    .try_get_matches_from(vec![\"prog\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::DisplayHelpOnMissingArgumentOrSubcommand);\n```\n\n[`Subcommand`]: crate::Subcommand\n[`Command::arg_required_else_help`]: crate::Command::arg_required_else_help","links":{"crate::Command::arg_required_else_help":"0:4456:1667","crate::Subcommand":"0:207:1665"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:467:3029":{"id":"0:467:3029","crate_id":0,"name":"default_value","span":{"filename":"src/builder/arg.rs","begin":[2169,4],"end":[2171,5]},"visibility":"public","docs":"Value for the argument when not present.\n\n**NOTE:** If the user *does not* use this argument at runtime, [`ArgMatches::occurrences_of`]\nwill return `0` even though the [`ArgMatches::value_of`] will return the default specified.\n\n**NOTE:** If the user *does not* use this argument at runtime [`ArgMatches::contains_id`] will\nstill return `true`. If you wish to determine whether the argument was used at runtime or\nnot, consider [`ArgMatches::value_source`][crate::ArgMatches::value_source].\n\n**NOTE:** This setting is perfectly compatible with [`Arg::default_value_if`] but slightly\ndifferent. `Arg::default_value` *only* takes effect when the user has not provided this arg\nat runtime. `Arg::default_value_if` however only takes effect when the user has not provided\na value at runtime **and** these other conditions are met as well. If you have set\n`Arg::default_value` and `Arg::default_value_if`, and the user **did not** provide this arg\nat runtime, nor were the conditions met for `Arg::default_value_if`, the `Arg::default_value`\nwill be applied.\n\n**NOTE:** This implicitly sets [`Arg::takes_value(true)`].\n\n# Examples\n\nFirst we use the default value without providing any value at runtime.\n\n```rust\n# use clap::{Command, Arg, ValueSource};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .long(\"myopt\")\n        .default_value(\"myval\"))\n    .get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert_eq!(m.value_of(\"opt\"), Some(\"myval\"));\nassert!(m.contains_id(\"opt\"));\nassert_eq!(m.value_source(\"opt\"), Some(ValueSource::DefaultValue));\n```\n\nNext we provide a value at runtime to override the default.\n\n```rust\n# use clap::{Command, Arg, ValueSource};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .long(\"myopt\")\n        .default_value(\"myval\"))\n    .get_matches_from(vec![\n        \"prog\", \"--myopt=non_default\"\n    ]);\n\nassert_eq!(m.value_of(\"opt\"), Some(\"non_default\"));\nassert!(m.contains_id(\"opt\"));\nassert_eq!(m.value_source(\"opt\"), Some(ValueSource::CommandLine));\n```\n[`ArgMatches::occurrences_of`]: crate::ArgMatches::occurrences_of()\n[`ArgMatches::value_of`]: crate::ArgMatches::value_of()\n[`Arg::takes_value(true)`]: Arg::takes_value()\n[`ArgMatches::contains_id`]: crate::ArgMatches::contains_id()\n[`Arg::default_value_if`]: Arg::default_value_if()","links":{"crate::ArgMatches::value_of()":"0:4953:1658","crate::ArgMatches::value_source":"0:4953:1658","crate::ArgMatches::contains_id()":"0:4953:1658","Arg::default_value_if()":"0:3972:1654","Arg::takes_value()":"0:3972:1654","crate::ArgMatches::occurrences_of()":"0:4953:1658"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["val",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4635:2919":{"id":"b:2:2869-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:3393:9003":{"id":"a:2:9339:7908-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:411:3635":{"id":"0:411:3635","crate_id":0,"name":"global","span":{"filename":"src/builder/arg.rs","begin":[780,4],"end":[786,5]},"visibility":"public","docs":"Specifies that an argument can be matched to all child [`Subcommand`]s.\n\n**NOTE:** Global arguments *only* propagate down, **not** up (to parent commands), however\ntheir values once a user uses them will be propagated back up to parents. In effect, this\nmeans one should *define* all global arguments at the top level, however it doesn't matter\nwhere the user *uses* the global argument.\n\n# Examples\n\nAssume an application with two subcommands, and you'd like to define a\n`--verbose` flag that can be called on any of the subcommands and parent, but you don't\nwant to clutter the source with three duplicate [`Arg`] definitions.\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"verb\")\n        .long(\"verbose\")\n        .short('v')\n        .action(ArgAction::SetTrue)\n        .global(true))\n    .subcommand(Command::new(\"test\"))\n    .subcommand(Command::new(\"do-stuff\"))\n    .get_matches_from(vec![\n        \"prog\", \"do-stuff\", \"--verbose\"\n    ]);\n\nassert_eq!(m.subcommand_name(), Some(\"do-stuff\"));\nlet sub_m = m.subcommand_matches(\"do-stuff\").unwrap();\nassert_eq!(*sub_m.get_one::<bool>(\"verb\").expect(\"defaulted by clap\"), true);\n```\n\n[`Subcommand`]: crate::Subcommand","links":{"`Arg`":"0:3972:1654","crate::Subcommand":"0:207:1665"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1326:6703":{"id":"0:1326:6703","crate_id":0,"name":"is_hidden","span":{"filename":"src/builder/possible_value.rs","begin":[171,4],"end":[173,5]},"visibility":"public","docs":"Deprecated, replaced with [`PossibleValue::is_hide_set`]","links":{"`PossibleValue::is_hide_set`":"0:4530:1672"},"attrs":["#[inline]","#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `PossibleValue::is_hide_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `PossibleValue::is_hide_set`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10383:9311":{"id":"2:10383:9311","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10384:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:4694:2917":{"id":"b:5:787-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4973:2589":{"id":"0:4973:2589","crate_id":0,"name":"id","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1316,4],"end":[1316,21]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:4002-0:5245:2692":{"id":"b:2:4002-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:4921:7467":{"id":"a:2:9340:7907-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:4578:3333":{"id":"a:2:3281:220-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3363:8980":{"id":"0:3363:8980","crate_id":0,"name":"is_a_tty","span":{"filename":"src/output/fmt.rs","begin":[151,0],"end":[158,1]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"color\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["stream",{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1428":{"id":"0:1428","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[353,0],"end":[358,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Create an `i64` [`ValueParser`] from a `N..=M` range\n\nSee [`RangedI64ValueParser`] for more control over the output type.\n\nSee also [`RangedU64ValueParser`]\n\n# Examples\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(3000..=4000)\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"3001\"]).unwrap();\nlet port: i64 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```","links":{"`ValueParser`":"0:1394:2909","`RangedU64ValueParser`":"0:4676:2906","`RangedI64ValueParser`":"0:4664:2905"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"2:46025:197","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1429:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3577:5211":{"id":"2:3577:5211","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:3972:1654":{"id":"0:3972:1654","crate_id":0,"name":"Arg","span":{"filename":"src/builder/arg.rs","begin":[61,0],"end":[101,1]},"visibility":"public","docs":"The abstract representation of a command line argument. Used to set all the options and\nrelationships that define a valid argument for the program.\n\nThere are two methods for constructing [`Arg`]s, using the builder pattern and setting options\nmanually, or using a usage string which is far less verbose but has fewer options. You can also\nuse a combination of the two methods to achieve the best of both worlds.\n\n- [Basic API][crate::Arg#basic-api]\n- [Value Handling][crate::Arg#value-handling]\n- [Help][crate::Arg#help-1]\n- [Advanced Argument Relations][crate::Arg#advanced-argument-relations]\n- [Reflection][crate::Arg#reflection]\n\n# Examples\n\n```rust\n# use clap::{Arg, arg};\n// Using the traditional builder pattern and setting each option manually\nlet cfg = Arg::new(\"config\")\n      .short('c')\n      .long(\"config\")\n      .takes_value(true)\n      .value_name(\"FILE\")\n      .help(\"Provides a config file to myprog\");\n// Using a usage string (setting a similar argument to the one above)\nlet input = arg!(-i --input <FILE> \"Provides an input file to the program\");\n```","links":{"crate::Arg#reflection":"0:3972:1654","crate::Arg#value-handling":"0:3972:1654","crate::Arg#basic-api":"0:3972:1654","`Arg`":"0:3972:1654","crate::Arg#help-1":"0:3972:1654","crate::Arg#advanced-argument-relations":"0:3972:1654"},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:3974:2589","0:3975:3356","0:3976:899","0:3977:2603","0:3978:3358","0:3979:2893","0:3980:2901","0:3981:3359","0:3982:2668","0:3983:3360","0:3984:3361","0:3985:3362","0:3986:3363","0:3987:3364","0:3988:3365","0:3989:3366","0:3990:2590","0:3991:2581","0:3992:3367","0:3993:3368","0:3994:3369","0:3995:3371","0:3996:3372","0:3997:3373","0:3998:3374","0:3999:3375","0:4000:3376","0:4001:2664","0:4002:3378","0:4003:3380","0:4004:3381","0:4005:3382","0:4006:3383","0:4007:600","0:4008:3384","0:4009:753","0:4010:3385","0:4011:2900"],"impls":["0:383","0:419","0:479","0:496","0:541","0:601","0:627","a:2:3310:6658-0:3972:1654","a:2:3269:211-0:3972:1654","a:2:9340:7907-0:3972:1654","a:2:9339:7908-0:3972:1654","a:2:3281:220-0:3972:1654","b:2:3198-0:3972:1654","b:2:2872-0:3972:1654","b:2:2869-0:3972:1654","b:2:4002-0:3972:1654","b:2:3202-0:3972:1654","b:2:3213-0:3972:1654","b:2:3208-0:3972:1654","b:5:6413-0:3972:1654","b:5:787-0:3972:1654","b:31:25-0:3972:1654","0:4012","0:4015","0:639","0:642","0:645","0:648","0:651","0:653","0:657"]}},"2:10385:9318":{"id":"2:10385:9318","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10386:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:4926:5216":{"id":"b:2:2869-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3359":{"id":"0:3359","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[125,0],"end":[133,1]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":"Color-unaware printing. Never uses coloring.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3360:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2171:7878":{"id":"0:2171:7878","crate_id":0,"name":"add_val_to","span":{"filename":"src/parser/arg_matcher.rs","begin":[205,4],"end":[208,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["val",{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["raw_val",{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31941:49137":{"id":"2:31941:49137","crate_id":2,"name":"leading_zeros","span":null,"visibility":"public","docs":"Returns the number of leading zeros in the binary representation of `self`.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = u64::MAX >> 2;\n\nassert_eq!(n.leading_zeros(), 2);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1827:7425":{"id":"0:1827:7425","crate_id":0,"name":"assert_defaults","span":{"filename":"src/builder/debug_asserts.rs","begin":[755,0],"end":[851,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["field",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["defaults",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'d","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'d","kind":{"lifetime":{"outlives":[]}}},{"name":"impl IntoIterator<Item = &'d std::ffi::OsStr>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'d","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2408:922":{"id":"0:2408:922","crate_id":0,"name":"next","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1409,4],"end":[1411,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5298:5217":{"id":"a:2:3269:211-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3400:2517":{"id":"0:3400:2517","crate_id":0,"name":"write","span":{"filename":"src/util/fnv.rs","begin":[36,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bytes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4650:1542":{"id":"0:4650:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/value_parser.rs","begin":[870,4],"end":[870,31]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"std::marker::PhantomData","id":"2:3287:7174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}},"0:2592":{"id":"0:2592","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[9,34],"end":[9,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg_matches::Indices","name":"Indices","id":"0:5048:1675","glob":false}},"0:3387:9000":{"id":"0:3387:9000","crate_id":0,"name":"MAGIC_INIT","span":{"filename":"src/util/fnv.rs","begin":[6,0],"end":[6,36]},"visibility":{"restricted":{"parent":"0:3375:8994","path":"::util::fnv"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u64"},"expr":"0x811C_9DC5","value":"2_166_136_261u64","is_literal":true}},"0:2146":{"id":"0:2146","crate_id":0,"name":null,"span":{"filename":"src/parser/arg_matcher.rs","begin":[22,0],"end":[272,1]},"visibility":{"restricted":{"parent":"0:2095:7828","path":"::parser::arg_matcher"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2147:920","0:2151:6499","0:2152:6498","0:2153:7843","0:2154:4858","0:2155:7850","0:2156:2674","0:2157:2678","0:2158:7853","0:2159:7855","0:2160:2659","0:2161:7857","0:2162:779","0:2163:7859","0:2166:7861","0:2167:7866","0:2168:7868","0:2169:7872","0:2170:7874","0:2171:7878","0:2172:7881","0:2173:7883","0:2177:7893","0:2179:7894","0:2181:7896"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:5245:2692":{"id":"a:2:9340:7907-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"44:3988:13262":{"id":"44:3988:13262","crate_id":44,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:3989:9673","44:3990:13619","44:3991:14739","44:3993:14731","44:3995:11438","44:3996:1304","44:3997:957","44:3998:273","44:3999:14740","44:4000:14741","44:4001:653","44:4002:899","44:4003:74071","44:4004:73845","44:4005:9353","44:4008:13601"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:4641:2920":{"id":"b:2:3213-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5129:8396":{"id":"0:5129:8396","crate_id":0,"name":"NoMatchingArg","span":{"filename":"src/parser/parser.rs","begin":[1710,4],"end":[1712,5]},"visibility":"default","docs":"Failed to match a Arg.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"struct","variant_inner":["0:5130:2580"]}},"0:2465":{"id":"0:2465","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1576,0],"end":[1585,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"Creates an empty iterator. Used for `unwrap_or_default()`.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2467:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5139":{"id":"0:5139","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1688,27],"end":[1688,32]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5140:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:31968:74214":{"id":"2:31968:74214","crate_id":2,"name":"checked_ilog2","span":null,"visibility":"public","docs":"Returns the base 2 logarithm of the number, rounded down.\n\nReturns `None` if the number is zero.\n\n# Examples\n\n```\n#![feature(int_log)]\nassert_eq!(2u64.checked_ilog2(), Some(1));\n```","links":{},"attrs":["#[unstable(feature = \"int_log\", issue = \"70887\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:567:4708":{"id":"0:567:4708","crate_id":0,"name":"get_value_hint","span":{"filename":"src/builder/arg.rs","begin":[4448,4],"end":[4461,5]},"visibility":"public","docs":"Get the value hint of this argument","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4700:2915":{"id":"a:2:3269:211-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2547:7877":{"id":"0:2547:7877","crate_id":0,"name":"new_external","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[53,4],"end":[68,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4309:5190":{"id":"0:4309:5190","crate_id":0,"name":"HIDE_ENV","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"env\")]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:3999:3375":{"id":"0:3999:3375","crate_id":0,"name":"max_vals","span":{"filename":"src/builder/arg.rs","begin":[87,4],"end":[87,38]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:4932:59":{"id":"0:4932:59","crate_id":0,"name":"default","span":{"filename":"src/parser/arg_matcher.rs","begin":[16,16],"end":[16,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2170:7874":{"id":"0:2170:7874","crate_id":0,"name":"start_occurrence_of_external","span":{"filename":"src/parser/arg_matcher.rs","begin":[187,4],"end":[203,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"44:5458:13951":{"id":"44:5458:13951","crate_id":44,"name":"ObjectSymbolTable","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5460:11418","44:5461:14480","44:5462:11437","44:5463:73917"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"44:5487:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3648:5189":{"id":"0:3648:5189","crate_id":0,"name":"bits","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:3336:7574":{"id":"0:3336:7574","crate_id":0,"name":"warning","span":{"filename":"src/output/fmt.rs","begin":[38,4],"end":[40,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Into<String>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3140:8753":{"id":"0:3140:8753","crate_id":0,"name":"align_to_about","span":{"filename":"src/output/help.rs","begin":[346,4],"end":[389,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Write alignment padding between arg's switches/values and its about message.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["next_line_help",{"kind":"primitive","inner":"bool"}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[139,0],"end":[139,34]},"visibility":"public","docs":"Deprecated, replaced with [`CommandFactory`]","links":{"`CommandFactory`":"0:190:1662"},"attrs":["#[deprecated(since = \"3.0.0\", note = \"Replaced with `CommandFactory`\")]"],"deprecation":{"since":"3.0.0","note":"Replaced with `CommandFactory`"},"kind":"import","inner":{"source":"CommandFactory","name":"IntoApp","id":"0:190:1662","glob":false}},"0:1020:6285":{"id":"0:1020:6285","crate_id":0,"name":"set_bin_name","span":{"filename":"src/builder/command.rs","begin":[3282,4],"end":[3284,5]},"visibility":"public","docs":"Set binary name. Uses `&mut self` instead of `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"generic","inner":"S"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1158:2588":{"id":"0:1158:2588","crate_id":0,"name":"get_id","span":{"filename":"src/builder/command.rs","begin":[4109,4],"end":[4111,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"44:4620:13946":{"id":"44:4620:13946","crate_id":44,"name":"ImageNtHeaders","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:4621:56840","44:4622:13941","44:4623:73812","44:4624:74173","44:4625:15018","44:4626:15019","44:4627:15020","44:4628:2747","44:4631:13189","44:4634:11437"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:676:4863":{"id":"0:676:4863","crate_id":0,"name":"get_explicit","span":{"filename":"src/builder/arg.rs","begin":[5296,4],"end":[5301,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2049:7533":{"id":"0:2049:7533","crate_id":0,"name":"unrecognized_subcommand","span":{"filename":"src/error/mod.rs","begin":[382,4],"end":[391,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["subcmd",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4947:3033":{"id":"b:2:3208-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23169:20421":{"id":"2:23169:20421","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23170:17172","2:23171:24092","2:23172:24093"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23162:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2213:604":{"id":"0:2213:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/matches/any_value.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:4080:3370":{"id":"b:31:25-0:4080:3370","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:3522":{"id":"0:3522","crate_id":0,"name":null,"span":{"filename":"src/builder/action.rs","begin":[23,9],"end":[23,14]},"visibility":{"restricted":{"parent":"0:269:2893","path":"::builder::action"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_copy_implementations)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3523:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2551:8172":{"id":"0:2551:8172","crate_id":0,"name":"indices","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[85,4],"end":[87,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Cloned","id":"2:46699:7921","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:137:2549":{"id":"0:137:2549","crate_id":0,"name":"crate_description","span":{"filename":"src/macros.rs","begin":[282,0],"end":[286,1]},"visibility":"public","docs":"Allows you to pull the description from your Cargo.toml at compile time.\n\n# Examples\n\n```no_run\n# #[macro_use]\n# extern crate clap;\n# use clap::Command;\n# fn main() {\nlet m = Command::new(\"cmd\")\n            .about(crate_description!())\n            .get_matches();\n# }\n```","links":{},"attrs":["#[cfg(feature = \"cargo\")]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! crate_description {\n    () => { ... };\n}"},"0:1868":{"id":"0:1868","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[37,0],"end":[37,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::RangedU64ValueParser","name":"RangedU64ValueParser","id":"0:4676:2906","glob":false}},"0:2027:7504":{"id":"0:2027:7504","crate_id":0,"name":"set_source","span":{"filename":"src/error/mod.rs","begin":[212,4],"end":[215,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["source",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4879:660":{"id":"0:4879:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/kind.rs","begin":[2,9],"end":[2,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5154":{"id":"0:5154","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1717,34],"end":[1717,36]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4533:2603":{"id":"0:4533:2603","crate_id":0,"name":"help","span":{"filename":"src/builder/possible_value.rs","begin":[32,4],"end":[32,28]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"1:5789:12304":{"id":"1:5789:12304","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:31067"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3132:8743":{"id":"0:3132:8743","crate_id":0,"name":"write_args","span":{"filename":"src/output/help.rs","begin":[197,4],"end":[249,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Sorts arguments by length and display order and write their help to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}],["_category",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4063:3357":{"id":"b:2:2869-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4456:1667":{"id":"b:2:3213-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2439":{"id":"0:2439","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1515,0],"end":[1524,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["sum","enumerate","array_chunks","reduce","try_collect","skip_while","next_chunk","advance_by","cmp","eq","peekable","max_by","cloned","collect","product","is_sorted_by_key","try_reduce","ge","collect_into","count","map_while","last","nth","any","copied","max","all","max_by_key","__iterator_get_unchecked","cmp_by","try_find","position","partition","scan","step_by","take","flatten","partial_cmp_by","rposition","lt","size_hint","partition_in_place","fuse","intersperse","partial_cmp","chain","skip","filter_map","find","eq_by","unzip","is_partitioned","rev","inspect","intersperse_with","filter","take_while","find_map","try_for_each","min","ne","is_sorted","fold","cycle","try_fold","by_ref","for_each","flat_map","min_by_key","le","zip","min_by","map","gt","is_sorted_by"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2441:2763","0:2442:922","0:2443:5300"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:32003:74240":{"id":"2:32003:74240","crate_id":2,"name":"overflowing_rem","span":null,"visibility":"public","docs":"Calculates the remainder when `self` is divided by `rhs`.\n\nReturns a tuple of the remainder after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways `false`.\n\n# Panics\n\nThis function will panic if `rhs` is 0.\n\n# Examples\n\nBasic usage\n\n```\nassert_eq!(5u64.overflowing_rem(2), (1, false));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_overflowing_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3766:3275":{"id":"0:3766:3275","crate_id":0,"name":"IGNORE_ERRORS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4327:10068":{"id":"0:4327:10068","crate_id":0,"name":"intersection","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns the intersection between the flags in `self` and\n`other`.\n\nSpecifically, the returned set contains only the flags which are\npresent in *both* `self` *and* `other`.\n\nThis is equivalent to using the `&` operator (e.g.\n[`ops::BitAnd`]), as in `flags & other`.\n\n[`ops::BitAnd`]: https://doc.rust-lang.org/std/ops/trait.BitAnd.html","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4761:7449":{"id":"b:2:3213-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5184:753":{"id":"0:5184:753","crate_id":0,"name":"index","span":{"filename":"src/mkeymap.rs","begin":[12,4],"end":[12,16]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2740:8414":{"id":"0:2740:8414","crate_id":0,"name":"split_arg_values","span":{"filename":"src/parser/parser.rs","begin":[1043,4],"end":[1085,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["val",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RawOsStr","id":"30:400:7334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["trailing_values",{"kind":"primitive","inner":"bool"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31949:74199":{"id":"2:31949:74199","crate_id":2,"name":"from_be","span":null,"visibility":"public","docs":"Converts an integer from big endian to the target's endianness.\n\nOn big endian this is a no-op. On little endian the bytes are\nswapped.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0x1Au64;\n\nif cfg!(target_endian = \"big\") {\n    assert_eq!(u64::from_be(n), n)\n} else {\n    assert_eq!(u64::from_be(n), n.swap_bytes())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["x",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5269:8971":{"id":"b:2:3202-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:4921:7467":{"id":"b:2:2869-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3717:9230":{"id":"2:3717:9230","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:7019","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:4657:2904":{"id":"b:2:4002-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2157:2678":{"id":"0:2157:2678","crate_id":0,"name":"contains","span":{"filename":"src/parser/arg_matcher.rs","begin":[115,4],"end":[117,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5327:660":{"id":"0:5327:660","crate_id":0,"name":"fmt","span":{"filename":"src/util/color.rs","begin":[2,9],"end":[2,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:5174:8567":{"id":"b:2:3208-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4880":{"id":"0:4880","crate_id":0,"name":null,"span":{"filename":"src/error/kind.rs","begin":[2,16],"end":[2,20]},"visibility":{"restricted":{"parent":"0:1991:782","path":"::error::kind"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4664:2905":{"id":"a:2:3310:6658-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:3542:1669":{"id":"a:2:3269:211-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:5245:2692":{"id":"b:2:3208-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4550:907":{"id":"0:4550:907","crate_id":0,"name":"ne","span":{"filename":"src/builder/possible_value.rs","begin":[29,32],"end":[29,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1565:681":{"id":"0:1565:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[1238,4],"end":[1243,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["range",{"kind":"generic","inner":"B"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3497:1703":{"id":"0:3497:1703","crate_id":0,"name":"INTERNAL_ERROR_MSG","span":{"filename":"src/lib.rs","begin":[189,0],"end":[190,84]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"Fatal internal error. Please consider filing a bug \\\n                                  report at https://github.com/clap-rs/clap/issues\"","value":null,"is_literal":true}},"0:2194:660":{"id":"0:2194:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/error.rs","begin":[42,4],"end":[55,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"std::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2688:1664":{"id":"b:2:3208-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"44:5374:13617":{"id":"44:5374:13617","crate_id":44,"name":"Object","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5377:14379","44:5378:14476","44:5379:13262","44:5380:14477","44:5381:14381","44:5382:14478","44:5383:11418","44:5384:14480","44:5385:13591","44:5386:14481","44:5387:73912","44:5388:73925","44:5389:73621","44:5390:73913","44:5391:782","44:5392:13600","44:5393:73926","44:5394:73914","44:5395:73915","44:5396:13189","44:5397:73916","44:5398:73918","44:5399:73917","44:5400:11437","44:5401:73919","44:5402:13602","44:5403:73920","44:5404:73927","44:5406:73928","44:5407:73921","44:5408:73922","44:5409:73923","44:5410:73929","44:5412:73930","44:5413:73931","44:5414:73932","44:5415:73933","44:5416:73924","44:5417:7855","44:5418:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}},{"name":"'file","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'data","bounds":[{"outlives":"'file"}]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"44:5487:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:5220:7335":{"id":"a:2:3269:211-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2502:8055":{"id":"0:2502:8055","crate_id":0,"name":"unwrap_string_arg","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1703,0],"end":[1713,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[track_caller]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":"'v","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'v","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'v","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:888:2749":{"id":"0:888:2749","crate_id":0,"name":"get_matches","span":{"filename":"src/builder/command.rs","begin":[511,4],"end":[513,5]},"visibility":"public","docs":"Parse [`env::args_os`], exiting on failure.\n\n# Panics\n\nIf contradictory arguments or settings exist.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet matches = Command::new(\"myprog\")\n    // Args and options go here...\n    .get_matches();\n```\n[`env::args_os`]: std::env::args_os()\n[`App::try_get_matches_from_mut`]: Command::try_get_matches_from_mut()","links":{"std::env::args_os()":"1:2461:5402"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5140:408":{"id":"0:5140:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/parser.rs","begin":[1688,27],"end":[1688,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4641:2920":{"id":"b:5:787-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3755:3253":{"id":"0:3755:3253","crate_id":0,"name":"BUILT","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4332":{"id":"0:4332","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:3401:2679","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4333:181","0:4334:353"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5138:907":{"id":"0:5138:907","crate_id":0,"name":"ne","span":{"filename":"src/parser/parser.rs","begin":[1688,16],"end":[1688,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:5020:1678":{"id":"b:2:2869-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23550:20440":{"id":"2:23550:20440","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23551:24114","2:23552:24113","2:23553:24115"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23545:12679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1434":{"id":"0:1434","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[443,0],"end":[448,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Create an `i64` [`ValueParser`] from a `..=M` range\n\nSee [`RangedI64ValueParser`] for more control over the output type.\n\nSee also [`RangedU64ValueParser`]\n\n# Examples\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(..=3000)\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"80\"]).unwrap();\nlet port: i64 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 80);\n```","links":{"`RangedU64ValueParser`":"0:4676:2906","`ValueParser`":"0:1394:2909","`RangedI64ValueParser`":"0:4664:2905"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"2:46048:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1435:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:3211:5214":{"id":"a:2:3281:220-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:3542:1669":{"id":"b:2:3202-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1524:59":{"id":"0:1524:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[941,4],"end":[943,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:494:4346":{"id":"0:494:4346","crate_id":0,"name":"hide_short_help","span":{"filename":"src/builder/arg.rs","begin":[2972,4],"end":[2978,5]},"visibility":"public","docs":"Hides an argument from short help (`-h`).\n\n**NOTE:** This does **not** hide the argument from usage strings on error\n\n**NOTE:** Setting this option will cause next-line-help output style to be used\nwhen long help (`--help`) is called.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"debug\")\n    .hide_short_help(true);\n```\n\nSetting `hide_short_help(true)` will hide the argument when displaying short help text\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .hide_short_help(true)\n        .help(\"Some help text describing the --config arg\"))\n    .get_matches_from(vec![\n        \"prog\", \"-h\"\n    ]);\n```\n\nThe above example displays\n\n```text\nhelptest\n\nUSAGE:\n   helptest [OPTIONS]\n\nOPTIONS:\n-h, --help       Print help information\n-V, --version    Print version information\n```\n\nHowever, when --help is called\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .hide_short_help(true)\n        .help(\"Some help text describing the --config arg\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nThen the following would be displayed\n\n```text\nhelptest\n\nUSAGE:\n   helptest [OPTIONS]\n\nOPTIONS:\n    --config     Some help text describing the --config arg\n-h, --help       Print help information\n-V, --version    Print version information\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4910:7462":{"id":"b:2:3208-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5065:2880":{"id":"0:5065:2880","crate_id":0,"name":"ignore_case","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[23,4],"end":[23,21]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:2228:7910":{"id":"0:2228:7910","crate_id":0,"name":"arg_matches","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[2,0],"end":[1833,1]},"visibility":{"restricted":{"parent":"0:2195:2748","path":"::parser::matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4953:1658","0:4972:1709","0:4987:8033","0:4997:7835","0:5010:7834","0:5020:1678","0:5031:8079","0:5038:1676","0:5048:1675","0:2501:8062","0:2502:8055","0:2504:8082","0:2505:8057"],"is_stripped":false}},"0:2764:8451":{"id":"0:2764:8451","crate_id":0,"name":"help_err","span":{"filename":"src/parser/parser.rs","begin":[1656,4],"end":[1661,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["use_long",{"kind":"primitive","inner":"bool"}],["stream",{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapError","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4072":{"id":"0:4072","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5190,16],"end":[5190,21]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4073:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4663:660":{"id":"0:4663:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[981,16],"end":[981,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1508:7050":{"id":"0:1508:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[882,4],"end":[882,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"E"}}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,43],"end":[116,54]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::parser::ValueSource","name":"ValueSource","id":"0:5070:1677","glob":false}},"0:3747:3239":{"id":"0:3747:3239","crate_id":0,"name":"DONT_DELIM_TRAIL","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1077:6353":{"id":"0:1077:6353","crate_id":0,"name":"get_positionals","span":{"filename":"src/builder/command.rs","begin":[3535,4],"end":[3537,5]},"visibility":"public","docs":"Iterate through the *positionals* arguments.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5048:1675":{"id":"a:2:9339:7908-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:4742:7344":{"id":"b:2:2872-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13623:12289":{"id":"2:13623:12289","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16004:9059"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49866:9269","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5182:3335":{"id":"a:2:3269:211-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:233:2802":{"id":"0:233:2802","crate_id":0,"name":"into_app_for_update","span":{"filename":"src/derive.rs","begin":[533,4],"end":[535,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145:2680":{"id":"0:145:2680","crate_id":0,"name":"wlnerr","span":{"filename":"src/macros.rs","begin":[1035,0],"end":[1040,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"macro","inner":"macro_rules! wlnerr {\n    ($($arg:tt)*) => { ... };\n}"},"0:4313:2671":{"id":"0:4313:2671","crate_id":0,"name":"empty","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns an empty set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5058:7830":{"id":"a:2:3269:211-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5298:5217":{"id":"0:5298:5217","crate_id":0,"name":"ChildGraph","span":{"filename":"src/util/graph.rs","begin":[17,0],"end":[17,47]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5301:1542"],"impls":["0:3405","a:2:3310:6658-0:5298:5217","a:2:3269:211-0:5298:5217","a:2:9340:7907-0:5298:5217","a:2:9339:7908-0:5298:5217","a:2:3281:220-0:5298:5217","b:2:3198-0:5298:5217","b:2:2872-0:5298:5217","b:2:2869-0:5298:5217","b:2:4002-0:5298:5217","b:2:3202-0:5298:5217","b:2:3213-0:5298:5217","b:2:3208-0:5298:5217","0:5302"]}},"0:2488:2763":{"id":"0:2488:2763","crate_id":0,"name":"Item","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1660,4],"end":[1660,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"a:2:3281:220-0:5174:8567":{"id":"a:2:3281:220-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3992:3367":{"id":"0:3992:3367","crate_id":0,"name":"aliases","span":{"filename":"src/builder/arg.rs","begin":[80,4],"end":[80,47]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"primitive","inner":"bool"}]}}],"bindings":[]}}}}},"0:2070:7463":{"id":"0:2070:7463","crate_id":0,"name":"source","span":{"filename":"src/error/mod.rs","begin":[1002,4],"end":[1004,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(trivial_casts)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5177:59":{"id":"0:5177:59","crate_id":0,"name":"default","span":{"filename":"src/parser/validator.rs","begin":[605,9],"end":[605,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5044:408":{"id":"0:5044:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1592,9],"end":[1592,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5261:2691":{"id":"b:2:3213-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1638:7090":{"id":"0:1638:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[1750,4],"end":[1771,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:5048:1675":{"id":"b:2:2869-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:4131:2923":{"id":"a:2:9339:7908-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:4131:2923":{"id":"b:2:3208-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1235:6603":{"id":"0:1235:6603","crate_id":0,"name":"get_positionals_with_no_heading","span":{"filename":"src/builder/command.rs","begin":[4836,4],"end":[4839,5]},"visibility":"crate","docs":"Iterate through the *positionals* that don't have custom heading.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1874":{"id":"0:1874","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[39,0],"end":[39,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::TypedValueParser","name":"TypedValueParser","id":"0:1462:2908","glob":false}},"0:743:2510":{"id":"0:743:2510","crate_id":0,"name":"from_str","span":{"filename":"src/builder/arg_settings.rs","begin":[336,4],"end":[369,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8960:9247":{"id":"2:8960:9247","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1169:5451":{"id":"0:1169:5451","crate_id":0,"name":"_do_parse","span":{"filename":"src/builder/command.rs","begin":[4155,4],"end":[4184,5]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["raw_args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"clap_lex::RawArgs","id":"29:75:5440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["args_cursor",{"kind":"resolved_path","inner":{"name":"clap_lex::ArgCursor","id":"29:90:6493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13144:9249":{"id":"2:13144:9249","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13146:9251","2:13147:30962","2:13148:30963","2:13149:30964","2:13150:30965","2:13151:30966","2:13152:30967"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5058:7830":{"id":"0:5058:7830","crate_id":0,"name":"MatchedArg","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[16,0],"end":[24,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:5059:8316","0:5060:7463","0:5061:8172","0:5062:1429","0:5063:4095","0:5064:7886","0:5065:2880"],"impls":["0:2544","a:2:3310:6658-0:5058:7830","a:2:3269:211-0:5058:7830","a:2:9340:7907-0:5058:7830","a:2:9339:7908-0:5058:7830","a:2:3281:220-0:5058:7830","b:2:3198-0:5058:7830","b:2:2872-0:5058:7830","b:2:2869-0:5058:7830","b:2:4002-0:5058:7830","b:2:3202-0:5058:7830","b:2:3213-0:5058:7830","b:2:3208-0:5058:7830","b:5:787-0:5058:7830","b:31:25-0:5058:7830","0:5066","0:5068","0:2575","0:2577"]}},"b:2:3208-0:5182:3335":{"id":"b:2:3208-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:4647:2916":{"id":"a:2:3269:211-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"31:45:11447":{"id":"31:45:11447","crate_id":31,"name":"MutableKeys","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:46:3335","31:47:7050","31:48:30785","31:50:30786","31:52:30787"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:5092:7833":{"id":"b:2:2872-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:104:1840":{"id":"0:104:1840","crate_id":0,"name":"cargo_example","span":{"filename":"src/_cookbook/cargo_example.rs","begin":[1,0],"end":[7,57]},"visibility":"public","docs":"# Example: cargo subcommand (Builder API)\n\n```rust\nfn main() {\n    let cmd = clap::Command::new(\"cargo\")\n        .bin_name(\"cargo\")\n        .subcommand_required(true)\n        .subcommand(\n            clap::command!(\"example\").arg(\n                clap::arg!(--\"manifest-path\" <PATH>)\n                    .required(false)\n                    .value_parser(clap::value_parser!(std::path::PathBuf)),\n            ),\n        );\n    let matches = cmd.get_matches();\n    let matches = match matches.subcommand() {\n        Some((\"example\", matches)) => matches,\n        _ => unreachable!(\"clap should ensure we don't get here\"),\n    };\n    let manifest_path = matches.get_one::<std::path::PathBuf>(\"manifest-path\");\n    println!(\"{:?}\", manifest_path);\n}\n```\n\nFor more on creating a custom subcommand, see [the cargo\nbook](https://doc.rust-lang.org/cargo/reference/external-tools.html#custom-subcommands).\nThe crate [`clap-cargo`](https://github.com/crate-ci/clap-cargo) can help in\nmimicking cargo's interface.\n\nThe help looks like:\n```console\n$ cargo-example --help\ncargo \n\nUSAGE:\n    cargo <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help    Print help information\n\nSUBCOMMANDS:\n    example    A simple to use, efficient, and full-featured Command Line Argument Parser\n    help       Print this message or the help of the given subcommand(s)\n\n$ cargo-example example --help\ncargo-example [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    cargo example [OPTIONS]\n\nOPTIONS:\n    -h, --help                    Print help information\n        --manifest-path <PATH>    \n    -V, --version                 Print version information\n\n```\n\nThen to directly invoke the command, run:\n```console\n$ cargo-example example\nNone\n\n$ cargo-example example --manifest-path Cargo.toml\nSome(\"Cargo.toml\")\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:5131:8390":{"id":"0:5131:8390","crate_id":0,"name":"NoArg","span":{"filename":"src/parser/parser.rs","begin":[1714,4],"end":[1714,9]},"visibility":"default","docs":"No argument found e.g. parser is given `-` when parsing a flag.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1847":{"id":"0:1847","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[31,23],"end":[31,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg_settings::ArgFlags","name":"ArgFlags","id":"0:4157:1670","glob":false}},"a:2:9340:7907-0:4807:7450":{"id":"a:2:9340:7907-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:31955:74204":{"id":"2:31955:74204","crate_id":2,"name":"checked_add_signed","span":null,"visibility":"public","docs":"Checked addition with a signed integer. Computes `self + rhs`,\nreturning `None` if overflow occurred.\n\n# Examples\n\nBasic usage:\n\n```\n# #![feature(mixed_integer_ops)]\nassert_eq!(1u64.checked_add_signed(2), Some(3));\nassert_eq!(1u64.checked_add_signed(-2), None);\nassert_eq!((u64::MAX - 2).checked_add_signed(3), None);\n```","links":{},"attrs":["#[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4578:3333":{"id":"a:2:3310:6658-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4290:5172":{"id":"0:4290:5172","crate_id":0,"name":"NO_EMPTY_VALS","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"a:2:9340:7907-0:5092:7833":{"id":"a:2:9340:7907-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3772:10037":{"id":"0:3772:10037","crate_id":0,"name":"from_bits","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::option::Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3718:660":{"id":"0:3718:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4172:1671":{"id":"a:2:3310:6658-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:4892:7456":{"id":"b:2:2872-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4207:3913":{"id":"0:4207:3913","crate_id":0,"name":"IgnoreCase","span":{"filename":"src/builder/arg_settings.rs","begin":[201,4],"end":[201,14]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::ignore_case`] and [`Arg::is_ignore_case_set`]","links":{"`Arg::ignore_case`":"0:3972:1654","`Arg::is_ignore_case_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::ignore_case` and `Arg::is_ignore_case_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::ignore_case` and `Arg::is_ignore_case_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"2:31956:73747":{"id":"2:31956:73747","crate_id":2,"name":"checked_sub","span":null,"visibility":"public","docs":"Checked integer subtraction. Computes `self - rhs`, returning\n`None` if overflow occurred.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(1u64.checked_sub(1), Some(0));\nassert_eq!(0u64.checked_sub(1), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_checked_int_methods\", since = \"1.47.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1062:6336":{"id":"0:1062:6336","crate_id":0,"name":"get_subcommand_value_name","span":{"filename":"src/builder/command.rs","begin":[3470,4],"end":[3472,5]},"visibility":"public","docs":"Returns the subcommand value name.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1400:216":{"id":"0:1400:216","crate_id":0,"name":"String","span":{"filename":"src/builder/value_parser.rs","begin":[65,4],"end":[65,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:12581:12925":{"id":"2:12581:12925","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12582:2763","2:12583:30766"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3395:1542":{"id":"0:3395:1542","crate_id":0,"name":"0","span":{"filename":"src/util/fnv.rs","begin":[24,28],"end":[24,31]},"visibility":{"restricted":{"parent":"0:3375:8994","path":"::util::fnv"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:1118:6423":{"id":"0:1118:6423","crate_id":0,"name":"is_subcommand_negates_reqs_set","span":{"filename":"src/builder/command.rs","begin":[3776,4],"end":[3778,5]},"visibility":"public","docs":"Report whether [`Command::subcommand_negates_reqs`] is set","links":{"`Command::subcommand_negates_reqs`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4954:7838":{"id":"0:4954:7838","crate_id":0,"name":"valid_args","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[70,4],"end":[70,34]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:9339:7908-0:4706:2918":{"id":"a:2:9339:7908-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:4921:7467":{"id":"b:2:2872-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:4947:3033":{"id":"b:2:3198-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10381:9312":{"id":"2:10381:9312","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10382:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3156:8803":{"id":"0:3156:8803","crate_id":0,"name":"arg_next_line_help","span":{"filename":"src/output/help.rs","begin":[567,4],"end":[580,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["spec_vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:3393:9003":{"id":"b:2:3202-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:580:4742":{"id":"0:580:4742","crate_id":0,"name":"is_allow_invalid_utf8_set","span":{"filename":"src/builder/arg.rs","begin":[4559,4],"end":[4561,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::get_value_parser()`","links":{},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::get_value_parser()`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::get_value_parser()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2978":{"id":"0:2978","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[27,24],"end":[27,32]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::matches::OsValues","name":"OsValues","id":"0:5038:1676","glob":false}},"0:2336:2501":{"id":"0:2336:2501","crate_id":0,"name":"values_of_t_or_exit","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[549,4],"end":[556,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_many()`]","links":{"`ArgMatches::get_many()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgMatches::get_many()`\")]","#[track_caller]","#![allow(deprecated)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5141:7832":{"id":"b:2:2872-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:5305:3334":{"id":"a:2:3281:220-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5196:5213":{"id":"0:5196:5213","crate_id":0,"name":"MKeyMap","span":{"filename":"src/mkeymap.rs","begin":[16,0],"end":[23,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5198:298","0:5199:5091"],"impls":["0:3019","a:2:3310:6658-0:5196:5213","a:2:3269:211-0:5196:5213","a:2:9340:7907-0:5196:5213","a:2:9339:7908-0:5196:5213","a:2:3281:220-0:5196:5213","b:2:3198-0:5196:5213","b:2:2872-0:5196:5213","b:2:2869-0:5196:5213","b:2:4002-0:5196:5213","b:2:3202-0:5196:5213","b:2:3213-0:5196:5213","b:2:3208-0:5196:5213","b:5:787-0:5196:5213","b:31:25-0:5196:5213","0:5200","0:5203","0:5205","0:5209","0:5211","0:5214","0:5217","0:3044"]}},"0:5268:660":{"id":"0:5268:660","crate_id":0,"name":"fmt","span":{"filename":"src/output/fmt.rs","begin":[14,16],"end":[14,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5070:1677":{"id":"a:2:3269:211-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2073:660":{"id":"0:2073:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/mod.rs","begin":[1008,4],"end":[1017,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4742:7344":{"id":"b:2:3202-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3978:3358":{"id":"0:3978:3358","crate_id":0,"name":"long_help","span":{"filename":"src/builder/arg.rs","begin":[66,4],"end":[66,44]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:1652":{"id":"0:1652","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1836,0],"end":[1841,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"std::path::PathBuf","id":"1:7332:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1653:1664","0:1654:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:5156:7831":{"id":"b:2:4002-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4664:2905":{"id":"0:4664:2905","crate_id":0,"name":"RangedI64ValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[1091,0],"end":[1094,1]},"visibility":"public","docs":"Parse number that fall within a range of values\n\n# Example\n\nUsage:\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(clap::value_parser!(u16).range(3000..))\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"3001\"]).unwrap();\nlet port: u16 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```\n\nSemantics:\n```rust\n# use std::ffi::OsStr;\n# use clap::builder::TypedValueParser;\n# let cmd = clap::Command::new(\"test\");\n# let arg = None;\nlet value_parser = clap::builder::RangedI64ValueParser::<i32>::new().range(-1..200);\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"random\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"-200\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"300\")).is_err());\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"-1\")).unwrap(), -1);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"0\")).unwrap(), 0);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"50\")).unwrap(), 50);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"kind":"primitive","inner":"i64"},"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4666:7199","0:4667:1362"],"impls":["0:1543","a:2:3310:6658-0:4664:2905","a:2:3269:211-0:4664:2905","a:2:9340:7907-0:4664:2905","a:2:9339:7908-0:4664:2905","a:2:3281:220-0:4664:2905","b:2:3198-0:4664:2905","b:2:2872-0:4664:2905","b:2:2869-0:4664:2905","b:2:4002-0:4664:2905","b:2:3202-0:4664:2905","b:2:3213-0:4664:2905","b:2:3208-0:4664:2905","b:5:787-0:4664:2905","0:4668","0:4670","0:4673","0:1549","0:1562","0:1566"]}},"0:206:2846":{"id":"0:206:2846","crate_id":0,"name":"augment_args_for_update","span":{"filename":"src/derive.rs","begin":[403,4],"end":[403,64]},"visibility":"default","docs":"Append to [`Command`] so it can update `self`.\n\nThis is used to implement `#[clap(flatten)]`\n\nSee also [`CommandFactory`].","links":{"`Command`":"0:853:1653","`CommandFactory`":"0:190:1662"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1098:6387":{"id":"0:1098:6387","crate_id":0,"name":"is_disable_help_subcommand_set","span":{"filename":"src/builder/command.rs","begin":[3667,4],"end":[3669,5]},"visibility":"public","docs":"Report whether [`Command::disable_help_subcommand`] is set","links":{"`Command::disable_help_subcommand`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2393:922":{"id":"0:2393:922","crate_id":0,"name":"next","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1351,4],"end":[1353,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:398:3368":{"id":"0:398:3368","crate_id":0,"name":"short_aliases","span":{"filename":"src/builder/arg.rs","begin":[325,4],"end":[331,5]},"visibility":"public","docs":"Add aliases, which functions as a hidden short flag.\n\nThis is more efficient, and easier than creating multiple hidden subcommands as one only\nneeds to check for the existence of this command, and not all variants.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n                    .short('t')\n                    .short_aliases(&['e', 's'])\n                    .action(ArgAction::SetTrue)\n                    .help(\"the file to add\")\n                    .required(false))\n            .get_matches_from(vec![\n                \"prog\", \"-s\"\n            ]);\nassert_eq!(*m.get_one::<bool>(\"test\").expect(\"defaulted by clap\"), true);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"char"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13621:31630":{"id":"2:13621:31630","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16004:9059"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49857:9268","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1241:2881":{"id":"0:1241:2881","crate_id":0,"name":"find","span":{"filename":"src/builder/command.rs","begin":[4847,4],"end":[4849,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg_id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3036:6520":{"id":"0:3036:6520","crate_id":0,"name":"args_mut","span":{"filename":"src/mkeymap.rs","begin":[133,4],"end":[135,5]},"visibility":"crate","docs":"Return mutable iterators of all args.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'map","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'map","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"'map","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2447":{"id":"0:2447","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1534,0],"end":[1534,44]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8548:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:666":{"id":"0:666","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5197,0],"end":[5201,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:667:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5179:408":{"id":"0:5179:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/validator.rs","begin":[605,18],"end":[605,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5150":{"id":"0:5150","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1717,23],"end":[1717,32]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5151:604","0:5152:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:5174:8567":{"id":"a:2:9340:7907-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:6413-0:4833:1674":{"id":"b:5:6413-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1105:4737":{"id":"0:1105:4737","crate_id":0,"name":"is_allow_hyphen_values_set","span":{"filename":"src/builder/command.rs","begin":[3703,4],"end":[3705,5]},"visibility":"crate","docs":"Report whether [`Command::allow_hyphen_values`] is set","links":{"`Command::allow_hyphen_values`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4231:2672":{"id":"a:2:3269:211-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1354:920":{"id":"0:1354:920","crate_id":0,"name":"new","span":{"filename":"src/builder/usage_parser.rs","begin":[30,4],"end":[39,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["usage",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:3211:5214":{"id":"a:2:3310:6658-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4623":{"id":"0:4623","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,31],"end":[27,35]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4624:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1575":{"id":"0:1575","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1374,0],"end":[1431,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"},{"trait_bound":{"trait":{"name":"std::error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1577:7050","0:1578:7090"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3763:3269":{"id":"0:3763:3269","crate_id":0,"name":"DISABLE_HELP_FLAG","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"a:2:3269:211-0:5110:8389":{"id":"a:2:3269:211-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2869:8612":{"id":"0:2869:8612","crate_id":0,"name":"validate_arg_num_vals","span":{"filename":"src/parser/validator.rs","begin":[373,4],"end":[453,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["ma",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5305:3334":{"id":"b:2:3213-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8003:9538":{"id":"2:8003:9538","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8004:29915","2:8005:29916","2:8006:29917","2:8007:29918","2:8008:29919","2:8009:29920","2:8010:29921"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13164:9248":{"id":"2:13164:9248","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:212:2876":{"id":"0:212:2876","crate_id":0,"name":"value_variants","span":{"filename":"src/derive.rs","begin":[481,4],"end":[481,42]},"visibility":"default","docs":"All possible argument values, in display order.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"Self"}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1290":{"id":"0:1290","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[5092,0],"end":[5132,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1292:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:261:2933":{"id":"0:261:2933","crate_id":0,"name":"yaml_opt_str","span":{"filename":"src/builder/macros.rs","begin":[90,0],"end":[101,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_opt_str {\n    ($v:expr) => { ... };\n}"},"0:2905:7525":{"id":"0:2905:7525","crate_id":0,"name":"did_you_mean","span":{"filename":"src/parser/features/suggestions.rs","begin":[12,0],"end":[24,1]},"visibility":"crate","docs":"Produces multiple strings from a given list of possible values which are similar\nto the passed in value `v` within a certain confidence by least confidence.\nThus in a list of possible values like [\"foo\", \"bar\"], the value \"fop\" will yield\n`Some(\"foo\")`, whereas \"blark\" would yield `None`.","links":{},"attrs":["#[cfg(feature = \"suggestions\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["v",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["possible_values",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3518:3014":{"id":"0:3518:3014","crate_id":0,"name":"Help","span":{"filename":"src/builder/action.rs","begin":[223,4],"end":[223,8]},"visibility":"default","docs":"When encountered, display [`Command::print_help`][super::App::print_help]\n\nDepending on the flag, [`Command::print_long_help`][super::App::print_long_help] may be shown\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"special-help\")\n            .short('?')\n            .action(clap::ArgAction::Help)\n    );\n\n// Existing help still exists\nlet err = cmd.clone().try_get_matches_from([\"mycmd\", \"-h\"]).unwrap_err();\nassert_eq!(err.kind(), clap::error::ErrorKind::DisplayHelp);\n\n// New help available\nlet err = cmd.try_get_matches_from([\"mycmd\", \"-?\"]).unwrap_err();\nassert_eq!(err.kind(), clap::error::ErrorKind::DisplayHelp);\n```","links":{"super::App::print_help":"0:4456:1667","super::App::print_long_help":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:5048:1675":{"id":"b:2:3208-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:244:2846":{"id":"0:244:2846","crate_id":0,"name":"augment_args_for_update","span":{"filename":"src/derive.rs","begin":[557,4],"end":[559,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5172":{"id":"0:5172","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1724,40],"end":[1724,42]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4700:2915":{"id":"a:2:3310:6658-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:231:2797":{"id":"0:231:2797","crate_id":0,"name":"into_app","span":{"filename":"src/derive.rs","begin":[530,4],"end":[532,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4485:298":{"id":"0:4485:298","crate_id":0,"name":"args","span":{"filename":"src/builder/command.rs","begin":[106,4],"end":[106,24]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}},"0:247:2858":{"id":"0:247:2858","crate_id":0,"name":"augment_subcommands","span":{"filename":"src/derive.rs","begin":[563,4],"end":[565,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31969:74215":{"id":"2:31969:74215","crate_id":2,"name":"checked_ilog10","span":null,"visibility":"public","docs":"Returns the base 10 logarithm of the number, rounded down.\n\nReturns `None` if the number is zero.\n\n# Examples\n\n```\n#![feature(int_log)]\nassert_eq!(10u64.checked_ilog10(), Some(1));\n```","links":{},"attrs":["#[unstable(feature = \"int_log\", issue = \"70887\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1367:6746":{"id":"0:1367:6746","crate_id":0,"name":"name_end","span":{"filename":"src/builder/usage_parser.rs","begin":[219,0],"end":[221,1]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["b",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:269:2893":{"id":"0:269:2893","crate_id":0,"name":"action","span":{"filename":"src/builder/action.rs","begin":[1,0],"end":[325,31]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3503:1652","0:278:2921"],"is_stripped":false}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3390":{"id":"0:3390","crate_id":0,"name":null,"span":{"filename":"src/util/fnv.rs","begin":[13,0],"end":[22,1]},"visibility":{"restricted":{"parent":"0:3375:8994","path":"::util::fnv"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:3392:6486"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4886:127":{"id":"a:2:3269:211-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4889:7461":{"id":"0:4889:7461","crate_id":0,"name":"info","span":{"filename":"src/error/mod.rs","begin":[53,4],"end":[53,25]},"visibility":"public","docs":"Deprecated, replaced with [`Error::context()`]","links":{"`Error::context()`":"0:4886:127"},"attrs":["#[deprecated(since = \"3.1.0\", note = \"Replaced with `Error::context()`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Error::context()`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:3342:9212":{"id":"2:3342:9212","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4288:5170":{"id":"0:4288:5170","crate_id":0,"name":"REQUIRED","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:14322:9594":{"id":"2:14322:9594","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14323:29204","2:14324:29205","2:14325:29206","2:14326:29207","2:14327:29208","2:14328:29209","2:14329:10928"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4281":{"id":"0:4281","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10381:9312","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4282:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1097:6385":{"id":"0:1097:6385","crate_id":0,"name":"is_disable_help_flag_set","span":{"filename":"src/builder/command.rs","begin":[3662,4],"end":[3664,5]},"visibility":"public","docs":"Report whether [`Command::disable_help_flag`] is set","links":{"`Command::disable_help_flag`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4334:353":{"id":"0:4334:353","crate_id":0,"name":"bitor","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Returns the union of the two sets of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4105:1655":{"id":"a:2:9339:7908-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:209:2859":{"id":"0:209:2859","crate_id":0,"name":"augment_subcommands_for_update","span":{"filename":"src/derive.rs","begin":[445,4],"end":[445,71]},"visibility":"default","docs":"Append to [`Command`] so it can update `self`.\n\nThis is used to implement `#[clap(flatten)]`\n\nSee also [`CommandFactory`].","links":{"`Command`":"0:853:1653","`CommandFactory`":"0:190:1662"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:518:4479":{"id":"0:518:4479","crate_id":0,"name":"required_if_eq","span":{"filename":"src/builder/arg.rs","begin":[3661,4],"end":[3664,5]},"visibility":"public","docs":"This argument is [required] only if the specified `arg` is present at runtime and its value\nequals `val`.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .required_if_eq(\"other_arg\", \"value\")\n# ;\n```\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .required_if_eq(\"other\", \"special\")\n        .long(\"config\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"--other\", \"not-special\"\n    ]);\n\nassert!(res.is_ok()); // We didn't use --other=special, so \"cfg\" wasn't required\n\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .required_if_eq(\"other\", \"special\")\n        .long(\"config\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"--other\", \"special\"\n    ]);\n\n// We did use --other=special so \"cfg\" had become required but was missing.\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .required_if_eq(\"other\", \"special\")\n        .long(\"config\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"--other\", \"SPECIAL\"\n    ]);\n\n// By default, the comparison is case-sensitive, so \"cfg\" wasn't required\nassert!(res.is_ok());\n\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .required_if_eq(\"other\", \"special\")\n        .long(\"config\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .ignore_case(true)\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"--other\", \"SPECIAL\"\n    ]);\n\n// However, case-insensitive comparisons can be enabled.  This typically occurs when using Arg::possible_values().\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[`Arg::requires(name)`]: Arg::requires()\n[Conflicting]: Arg::conflicts_with()\n[required]: Arg::required()","links":{"Arg::required()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}],["val",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3011":{"id":"0:3011","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[47,0],"end":[54,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3012:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:3647:2672":{"id":"b:2:4002-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4322:2678":{"id":"0:4322:2678","crate_id":0,"name":"contains","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:633:4845":{"id":"0:633:4845","crate_id":0,"name":"longest_filter","span":{"filename":"src/builder/arg.rs","begin":[5015,4],"end":[5017,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3252:5215":{"id":"b:2:3213-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:5020:1678":{"id":"a:2:3310:6658-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1597:3893":{"id":"0:1597:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[1461,4],"end":[1466,5]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:5319:1660":{"id":"b:2:3208-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1040:6311":{"id":"0:1040:6311","crate_id":0,"name":"get_visible_long_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[3373,4],"end":[3378,5]},"visibility":"public","docs":"Iterate through the *visible* long aliases for this subcommand.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6459:12293":{"id":"1:6459:12293","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:31102","1:6461:17113","1:6462:31103","1:6463:31104","1:6464:31105","1:6465:31106"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9339:7908-0:3096:3014":{"id":"a:2:9339:7908-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:31:25-0:4131:2923":{"id":"b:31:25-0:4131:2923","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"b:2:4002-0:4063:3357":{"id":"b:2:4002-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1298:660":{"id":"0:1298:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/command.rs","begin":[5143,4],"end":[5145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3411:9221":{"id":"2:3411:9221","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"44:5430:13576":{"id":"44:5430:13576","crate_id":44,"name":"ObjectSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5432:14560","44:5433:753","44:5434:268","44:5435:1304","44:5436:273","44:5437:73845","44:5438:9353","44:5439:56595","44:5440:74080","44:5441:74081","44:5442:74083","44:5443:73846","44:5444:899","44:5445:74082","44:5446:74071","44:5447:782","44:5448:13601","44:5449:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"44:5487:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13525:31605":{"id":"2:13525:31605","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16010:9064"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49832:9259","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5123:1488":{"id":"0:5123:1488","crate_id":0,"name":"used","span":{"filename":"src/parser/parser.rs","begin":[1700,8],"end":[1700,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2023:7133":{"id":"0:2023:7133","crate_id":0,"name":"with_cmd","span":{"filename":"src/error/mod.rs","begin":[196,4],"end":[200,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2018:2754":{"id":"0:2018:2754","crate_id":0,"name":"exit","span":{"filename":"src/error/mod.rs","begin":[119,4],"end":[137,5]},"visibility":"public","docs":"Prints the error and exits.\n\nDepending on the error kind, this either prints to `stderr` and exits with a status of `2`\nor prints to `stdout` and exits with a status of `0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"never"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4295:3228":{"id":"0:4295:3228","crate_id":0,"name":"NEXT_LINE_HELP","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4653:408":{"id":"0:4653:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[868,9],"end":[868,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4778:7599":{"id":"0:4778:7599","crate_id":0,"name":"ActualNumOccurrences","span":{"filename":"src/error/context.rs","begin":[22,4],"end":[22,24]},"visibility":"default","docs":"Number of occurrences present","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,70],"end":[109,80]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::derive::Subcommand","name":"Subcommand","id":"0:207:1665","glob":false}},"a:2:3269:211-0:4688:2914":{"id":"a:2:3269:211-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4317:10040":{"id":"0:4317:10040","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44":{"id":"0:44","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[112,0],"end":[112,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::App","name":"App","id":"0:4456:1667","glob":false}},"b:2:3208-0:5261:2691":{"id":"b:2:3208-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3793":{"id":"0:3793","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:3406:9219","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3794:181","0:3795:356"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23217:12689":{"id":"2:23217:12689","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23854:12671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23208:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:3647:2672":{"id":"b:2:3198-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1637:7050":{"id":"0:1637:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[1748,4],"end":[1748,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3202-0:4676:2906":{"id":"b:2:3202-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4700:2915":{"id":"b:2:4002-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:4688:2914":{"id":"a:2:3310:6658-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4852:7542":{"id":"0:4852:7542","crate_id":0,"name":"TooManyOccurrences","span":{"filename":"src/error/kind.rs","begin":[194,4],"end":[194,22]},"visibility":"default","docs":"Occurs when a user provides more occurrences for an argument than were defined by setting\n[`Arg::max_occurrences`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"verbosity\")\n        .short('v')\n        .max_occurrences(2))\n    .try_get_matches_from(vec![\"prog\", \"-vvv\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::TooManyOccurrences);\n```\n[`Arg::max_occurrences`]: crate::Arg::max_occurrences()","links":{"crate::Arg::max_occurrences()":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:31939:74192":{"id":"2:31939:74192","crate_id":2,"name":"count_ones","span":null,"visibility":"public","docs":"Returns the number of ones in the binary representation of `self`.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0b01001100u64;\n\nassert_eq!(n.count_ones(), 3);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[doc(alias = \"popcount\")]","#[doc(alias = \"popcnt\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:977:5868":{"id":"0:977:5868","crate_id":0,"name":"arg_required_else_help","span":{"filename":"src/builder/command.rs","begin":[2033,4],"end":[2039,5]},"visibility":"public","docs":"Exit gracefully if no arguments are present (e.g. `$ myprog`).\n\n**NOTE:** [`subcommands`] count as arguments\n\n# Examples\n\n```rust\n# use clap::{Command};\nCommand::new(\"myprog\")\n    .arg_required_else_help(true);\n```\n\n[`subcommands`]: crate::Command::subcommand()\n[`Arg::default_value`]: crate::Arg::default_value()","links":{"crate::Command::subcommand()":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1447:408":{"id":"0:1447:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[527,4],"end":[535,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1764":{"id":"0:1764","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[58,0],"end":[64,1]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1766:126","0:1767:2510"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5266:408":{"id":"0:5266:408","crate_id":0,"name":"clone","span":{"filename":"src/output/fmt.rs","begin":[14,9],"end":[14,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:703:2661":{"id":"0:703:2661","crate_id":0,"name":"multiple","span":{"filename":"src/builder/arg_group.rs","begin":[238,4],"end":[241,5]},"visibility":"public","docs":"Allows more than one of the [`Arg`]s in this group to be used. (Default: `false`)\n\n# Examples\n\nNotice in this example we use *both* the `-f` and `-c` flags which are both part of the\ngroup\n\n```rust\n# use clap::{Command, Arg, ArgGroup};\nlet m = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"])\n        .multiple(true))\n    .get_matches_from(vec![\"myprog\", \"-f\", \"-c\"]);\n// maybe we don't know which of the two flags was used...\nassert!(m.contains_id(\"req_flags\"));\n```\nIn this next example, we show the default behavior (i.e. `multiple(false)) which will throw\nan error if more than one of the args in the group was used.\n\n```rust\n# use clap::{Command, Arg, ArgGroup, ErrorKind};\nlet result = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"]))\n    .try_get_matches_from(vec![\"myprog\", \"-f\", \"-c\"]);\n// Because we used both args in the group it's an error\nassert!(result.is_err());\nlet err = result.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::ArgumentConflict);\n```\n\n[`Arg`]: crate::Arg","links":{"crate::Arg":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1063:6337":{"id":"0:1063:6337","crate_id":0,"name":"get_before_help","span":{"filename":"src/builder/command.rs","begin":[3476,4],"end":[3478,5]},"visibility":"public","docs":"Returns the help heading for listing subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139:2561":{"id":"0:139:2561","crate_id":0,"name":"command","span":{"filename":"src/macros.rs","begin":[329,0],"end":[348,1]},"visibility":"public","docs":"Allows you to build the `Command` instance from your Cargo.toml at compile time.\n\n**NOTE:** Changing the values in your `Cargo.toml` does not trigger a re-build automatically,\nand therefore won't change the generated output until you recompile.\n\nIn some cases you can \"trick\" the compiler into triggering a rebuild when your\n`Cargo.toml` is changed by including this in your `src/main.rs` file\n`include_str!(\"../Cargo.toml\");`\n\n# Examples\n\n```no_run\n# #[macro_use]\n# extern crate clap;\n# fn main() {\nlet m = command!().get_matches();\n# }\n```","links":{},"attrs":["#[cfg(feature = \"cargo\")]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! command {\n    () => { ... };\n    ($name:expr) => { ... };\n}"},"0:3462:7235":{"id":"0:3462:7235","crate_id":0,"name":"FALSE_LITERALS","span":{"filename":"src/util/str_to_bool.rs","begin":[5,0],"end":[5,83]},"visibility":"crate","docs":"False values are `n`, `no`, `f`, `false`, `off`, and `0`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"array","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"len":"6"}},"expr":"_","value":null,"is_literal":false}},"2:31980:74222":{"id":"2:31980:74222","crate_id":2,"name":"saturating_div","span":null,"visibility":"public","docs":"Saturating integer division. Computes `self / rhs`, saturating at the\nnumeric bounds instead of overflowing.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(5u64.saturating_div(2), 2);\n\n```\n\n```should_panic\nlet _ = 1u64.saturating_div(0);\n\n```","links":{},"attrs":["#[stable(feature = \"saturating_div\", since = \"1.58.0\")]","#[rustc_const_stable(feature = \"saturating_div\", since = \"1.58.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2614:1657":{"id":"0:2614:1657","crate_id":0,"name":"parser","span":{"filename":"src/parser/parser.rs","begin":[2,0],"end":[1729,1]},"visibility":{"restricted":{"parent":"0:2094:1657","path":"::parser"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: module_inception)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2688:1664","0:5092:7833","0:5110:8389","0:5141:7832","0:5156:7831"],"is_stripped":false}},"b:2:3213-0:1394:2909":{"id":"b:2:3213-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3145:2603":{"id":"0:3145:2603","crate_id":0,"name":"help","span":{"filename":"src/output/help.rs","begin":[424,4],"end":[555,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes argument's help to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["about",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["spec_vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["next_line_help",{"kind":"primitive","inner":"bool"}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5058:7830":{"id":"a:2:9339:7908-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:4243":{"id":"0:4243","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4244:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:4942:7020":{"id":"a:2:3281:220-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4900:1553":{"id":"0:4900:1553","crate_id":0,"name":"backtrace","span":{"filename":"src/error/mod.rs","begin":[65,4],"end":[65,32]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:1647:1664":{"id":"0:1647:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1825,4],"end":[1825,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3198-0:4706:2918":{"id":"b:2:3198-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13536:31609":{"id":"2:13536:31609","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:469:4094":{"id":"0:469:4094","crate_id":0,"name":"default_values","span":{"filename":"src/builder/arg.rs","begin":[2192,4],"end":[2195,5]},"visibility":"public","docs":"Value for the argument when not present.\n\nSee [`Arg::default_value`].\n\n[`Arg::default_value`]: Arg::default_value()","links":{"Arg::default_value()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4292:3215":{"id":"0:4292:3215","crate_id":0,"name":"HIDDEN","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4116:59":{"id":"0:4116:59","crate_id":0,"name":"default","span":{"filename":"src/builder/arg_group.rs","begin":[80,9],"end":[80,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2062:7492":{"id":"0:2062:7492","crate_id":0,"name":"formatted","span":{"filename":"src/error/mod.rs","begin":[588,4],"end":[615,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4603:6988":{"id":"0:4603:6988","crate_id":0,"name":"CommandString","span":{"filename":"src/builder/value_hint.rs","begin":[46,4],"end":[46,17]},"visibility":"default","docs":"A single string containing a command and its arguments.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2389:8228":{"id":"0:2389:8228","crate_id":0,"name":"get_subcommand","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1287,4],"end":[1311,5]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[inline]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:716:681":{"id":"0:716:681","crate_id":0,"name":"from","span":{"filename":"src/builder/arg_group.rs","begin":[464,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["g",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1408:1542":{"id":"0:1408:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/value_parser.rs","begin":[70,10],"end":[70,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"AnyValueParser","id":"0:1448:7030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}},"2:31952:74202":{"id":"2:31952:74202","crate_id":2,"name":"to_le","span":null,"visibility":"public","docs":"Converts `self` to little endian from the target's endianness.\n\nOn little endian this is a no-op. On big endian the bytes are\nswapped.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0x1Au64;\n\nif cfg!(target_endian = \"little\") {\n    assert_eq!(n.to_le(), n)\n} else {\n    assert_eq!(n.to_le(), n.swap_bytes())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2571:8257":{"id":"0:2571:8257","crate_id":0,"name":"infer_type_id","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[185,4],"end":[193,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["expected",{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2479":{"id":"0:2479","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1619,0],"end":[1619,46]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8548:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4910:7462":{"id":"a:2:9340:7907-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:5298:5217":{"id":"b:2:4002-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:5020:1678":{"id":"a:2:9339:7908-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3184:8839":{"id":"0:3184:8839","crate_id":0,"name":"write_all_args","span":{"filename":"src/output/help.rs","begin":[825,4],"end":[903,5]},"visibility":"crate","docs":"Writes help for all arguments (options, flags, args, subcommands)\nincluding titles of a Parser Object to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4919":{"id":"0:4919","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1064,16],"end":[1064,21]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4920:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5217":{"id":"0:5217","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[15,40],"end":[15,45]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:5219:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[675,0],"end":[733,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":"Deprecated in [Issue #3087](https://github.com/clap-rs/clap/issues/3087), maybe [`clap::Parser`][crate::Parser] would fit your use case?","links":{"crate::Parser":"0:164:1664"},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:298:126","0:299:2510"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:595:4772":{"id":"0:595:4772","crate_id":0,"name":"is_use_value_delimiter_set","span":{"filename":"src/builder/arg.rs","begin":[4644,4],"end":[4646,5]},"visibility":"public","docs":"Report whether [`Arg::use_value_delimiter`] is set","links":{"`Arg::use_value_delimiter`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2160:2659":{"id":"0:2160:2659","crate_id":0,"name":"subcommand","span":{"filename":"src/parser/arg_matcher.rs","begin":[127,4],"end":[129,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sc",{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:5:787-0:4635:2919":{"id":"b:5:787-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2197":{"id":"0:2197","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[9,0],"end":[33,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2198:920","0:2200:7912","0:2202:7913","0:2206:1429"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:401:3483":{"id":"0:401:3483","crate_id":0,"name":"visible_short_alias","span":{"filename":"src/builder/arg.rs","begin":[379,4],"end":[384,5]},"visibility":"public","docs":"Add an alias, which functions as a visible short flag.\n\nLike [`Arg::short_alias`], except that they are visible inside the help message.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n                .long(\"test\")\n                .visible_short_alias('t')\n                .takes_value(true))\n       .get_matches_from(vec![\n            \"prog\", \"-t\", \"coffee\"\n        ]);\nassert!(m.contains_id(\"test\"));\nassert_eq!(m.value_of(\"test\"), Some(\"coffee\"));\n```","links":{"`Arg::short_alias`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3652:604":{"id":"0:3652:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1061:6334":{"id":"0:1061:6334","crate_id":0,"name":"get_subommand_help_heading","span":{"filename":"src/builder/command.rs","begin":[3464,4],"end":[3466,5]},"visibility":"public","docs":"Deprecated, replaced with [`App::get_subcommand_help_heading`]","links":{"`App::get_subcommand_help_heading`":"0:4456:1667"},"attrs":["#[inline]","#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `App::get_subcommand_help_heading`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `App::get_subcommand_help_heading`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1895":{"id":"0:1895","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[46,0],"end":[46,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::BoolishValueParser","name":"BoolishValueParser","id":"0:4700:2915","glob":false}},"b:2:2869-0:5070:1677":{"id":"b:2:2869-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:4063:3357":{"id":"a:2:9340:7907-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:5156:7831":{"id":"b:2:3198-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:32002:74239":{"id":"2:32002:74239","crate_id":2,"name":"overflowing_div_euclid","span":null,"visibility":"public","docs":"Calculates the quotient of Euclidean division `self.div_euclid(rhs)`.\n\nReturns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n`false`.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to `self.overflowing_div(rhs)`.\n\n# Panics\n\nThis function will panic if `rhs` is 0.\n\n# Examples\n\nBasic usage\n\n```\nassert_eq!(5u64.overflowing_div_euclid(2), (2, false));\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4945":{"id":"0:4945","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[1,9],"end":[1,14]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4946:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"45:602:13995":{"id":"45:602:13995","crate_id":45,"name":"ResetPolicy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["45:603:8991"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4097:907":{"id":"0:4097:907","crate_id":0,"name":"ne","span":{"filename":"src/builder/arg.rs","begin":[5273,29],"end":[5273,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4942:7020":{"id":"b:2:3213-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4640:660":{"id":"0:4640:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[722,22],"end":[722,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:1394:2909":{"id":"b:2:3202-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:471:4089":{"id":"0:471:4089","crate_id":0,"name":"default_values_os","span":{"filename":"src/builder/arg.rs","begin":[2205,4],"end":[2208,5]},"visibility":"public","docs":"Value for the argument when not present.\n\nSee [`Arg::default_values`].\n\n[`Arg::default_values`]: Arg::default_values()\n[`OsStr`]: std::ffi::OsStr","links":{"Arg::default_values()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3991:2581":{"id":"0:3991:2581","crate_id":0,"name":"long","span":{"filename":"src/builder/arg.rs","begin":[79,4],"end":[79,39]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:1657:2901":{"id":"0:1657:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1844,4],"end":[1846,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1588":{"id":"0:1588","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1433,0],"end":[1440,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:7019","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1591:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5048:1675":{"id":"0:5048:1675","crate_id":0,"name":"Indices","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1654,0],"end":[1657,1]},"visibility":"public","docs":"Iterate over indices for where an argument appeared when parsing, via [`ArgMatches::indices_of`]\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"output\")\n        .short('o')\n        .multiple_values(true)\n        .takes_value(true))\n    .get_matches_from(vec![\"myapp\", \"-o\", \"val1\", \"val2\"]);\n\nlet mut indices = m.indices_of(\"output\").unwrap();\n\nassert_eq!(indices.next(), Some(2));\nassert_eq!(indices.next(), Some(3));\nassert_eq!(indices.next(), None);\n```\n[`ArgMatches::indices_of`]: ArgMatches::indices_of()","links":{"ArgMatches::indices_of()":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5050:779","0:5051:793"],"impls":["a:2:3310:6658-0:5048:1675","a:2:3269:211-0:5048:1675","a:2:9340:7907-0:5048:1675","a:2:9339:7908-0:5048:1675","a:2:3281:220-0:5048:1675","b:2:8483-0:5048:1675","b:2:3198-0:5048:1675","b:2:2872-0:5048:1675","b:2:2869-0:5048:1675","b:2:4002-0:5048:1675","b:2:3202-0:5048:1675","b:2:3213-0:5048:1675","b:2:3208-0:5048:1675","b:5:787-0:5048:1675","0:5052","0:5055","0:2486","0:2491","0:2494","0:2496"]}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2871:8575":{"id":"0:2871:8575","crate_id":0,"name":"validate_required","span":{"filename":"src/parser/validator.rs","begin":[455,4],"end":[525,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["conflicts",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:921:5569":{"id":"0:921:5569","crate_id":0,"name":"disable_version_flag","span":{"filename":"src/builder/command.rs","begin":[1096,4],"end":[1102,5]},"visibility":"public","docs":"Disables `-V` and `--version` flag.\n\n# Examples\n\n```rust\n# use clap::{Command, ErrorKind};\nlet res = Command::new(\"myprog\")\n    .disable_version_flag(true)\n    .try_get_matches_from(vec![\n        \"myprog\", \"-V\"\n    ]);\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:722:2896":{"id":"0:722:2896","crate_id":0,"name":"arg_predicate","span":{"filename":"src/builder/arg_predicate.rs","begin":[1,0],"end":[14,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4131:2923"],"is_stripped":false}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,24],"end":[116,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::parser::Indices","name":"Indices","id":"0:5048:1675","glob":false}},"44:1652:13586":{"id":"44:1652:13586","crate_id":44,"name":"FileHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:1653:9673","44:1654:73811","44:1655:13619","44:1656:13631","44:1657:13561","44:1658:13583","44:1659:13630","44:1660:13621","44:1661:13634","44:1662:13632","44:1663:13633","44:1664:73812","44:1665:14582","44:1666:14583","44:1667:14584","44:1668:14585","44:1669:14586","44:1670:14587","44:1671:14588","44:1672:14455","44:1673:14589","44:1674:14590","44:1675:14591","44:1676:14592","44:1677:14593","44:1678:14594","44:1679:2747","44:1682:73813","44:1683:73814","44:1684:73815","44:1685:73621","44:1686:73620","44:1687:13309","44:1688:73816","44:1691:73817","44:1694:73818","44:1697:73819","44:1700:73820","44:1703:73821","44:1706:73822","44:1709:13189","44:1712:73823"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4641:2920":{"id":"0:4641:2920","crate_id":0,"name":"PathBufValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[766,0],"end":[766,32]},"visibility":"public","docs":"Implementation for [`ValueParser::path_buf`]\n\nUseful for composing new [`TypedValueParser`]s","links":{"`ValueParser::path_buf`":"0:1394:2909","`TypedValueParser`":"0:1462:2908"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:1494","a:2:3310:6658-0:4641:2920","a:2:3269:211-0:4641:2920","a:2:9340:7907-0:4641:2920","a:2:9339:7908-0:4641:2920","a:2:3281:220-0:4641:2920","b:2:3198-0:4641:2920","b:2:2872-0:4641:2920","b:2:2869-0:4641:2920","b:2:4002-0:4641:2920","b:2:3202-0:4641:2920","b:2:3213-0:4641:2920","b:2:3208-0:4641:2920","b:5:787-0:4641:2920","0:4642","0:4643","0:4645","0:1496","0:1501"]}},"2:13847:138":{"id":"2:13847:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13848:181","2:13849:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:4647:2916":{"id":"b:2:2869-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4501":{"id":"0:4501","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[77,23],"end":[77,32]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4503:604","0:4504:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1795:5218":{"id":"0:1795:5218","crate_id":0,"name":"assert_app","span":{"filename":"src/builder/debug_asserts.rs","begin":[10,0],"end":[349,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2869-0:4172:1671":{"id":"b:2:2869-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5283":{"id":"0:5283","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[135,22],"end":[135,27]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5284:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4224:660":{"id":"0:4224:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_settings.rs","begin":[32,9],"end":[32,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:926:5592":{"id":"0:926:5592","crate_id":0,"name":"disable_colored_help","span":{"filename":"src/builder/command.rs","begin":[1223,4],"end":[1229,5]},"visibility":"public","docs":"Disables colorized help messages.\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .disable_colored_help(true)\n    .get_matches();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4456:1667":{"id":"a:2:9339:7908-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3260:920":{"id":"0:3260:920","crate_id":0,"name":"new","span":{"filename":"src/output/usage.rs","begin":[17,4],"end":[22,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4724:1700":{"id":"a:2:3310:6658-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3575:3117":{"id":"0:3575:3117","crate_id":0,"name":"SubcommandsNegateReqs","span":{"filename":"src/builder/app_settings.rs","begin":[226,4],"end":[226,25]},"visibility":"default","docs":"Deprecated, replaced with [`Command::subcommand_negates_reqs`] and\n[`Command::is_subcommand_negates_reqs_set`]","links":{"`Command::subcommand_negates_reqs`":"0:4456:1667","`Command::is_subcommand_negates_reqs_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::subcommand_negates_reqs` and `Command::is_subcommand_negates_reqs_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::subcommand_negates_reqs` and `Command::is_subcommand_negates_reqs_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:2693:8353":{"id":"0:2693:8353","crate_id":0,"name":"flag_subcmd_at","span":{"filename":"src/parser/parser.rs","begin":[29,4],"end":[29,33]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":"Index of the previous flag subcommand in a group of flags.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"b:2:2872-0:4724:1700":{"id":"b:2:2872-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4017:408":{"id":"0:4017:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/arg.rs","begin":[60,18],"end":[60,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4195:3172":{"id":"0:4195:3172","crate_id":0,"name":"HidePossibleValues","span":{"filename":"src/builder/arg_settings.rs","begin":[144,4],"end":[144,22]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::hide_possible_values`] and\n[`Arg::is_hide_possible_values_set`]","links":{"`Arg::hide_possible_values`":"0:3972:1654","`Arg::is_hide_possible_values_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::hide_possible_values` and `Arg::is_hide_possible_values_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::hide_possible_values` and `Arg::is_hide_possible_values_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:407:2596":{"id":"0:407:2596","crate_id":0,"name":"required","span":{"filename":"src/builder/arg.rs","begin":[636,4],"end":[642,5]},"visibility":"public","docs":"Specifies that the argument must be present.\n\nRequired by default means it is required, when no other conflicting rules or overrides have\nbeen evaluated. Conflicting rules take precedence over being required.\n\n**Pro tip:** Flags (i.e. not positional, or arguments that take values) shouldn't be\nrequired by default. This is because if a flag were to be required, it should simply be\nimplied. No additional information is required from user. Flags by their very nature are\nsimply boolean on/off switches. The only time a user *should* be required to use a flag\nis if the operation is destructive in nature, and the user is essentially proving to you,\n\"Yes, I know what I'm doing.\"\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .required(true)\n# ;\n```\n\nSetting required requires that the argument be used at runtime.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required(true)\n        .takes_value(true)\n        .long(\"config\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"file.conf\",\n    ]);\n\nassert!(res.is_ok());\n```\n\nSetting required and then *not* supplying that argument at runtime is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required(true)\n        .takes_value(true)\n        .long(\"config\"))\n    .try_get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14246:141":{"id":"2:14246:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14247:277","2:14248:518","2:14249:280","2:14250:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2388:8054":{"id":"0:2388:8054","crate_id":0,"name":"get_arg","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1263,4],"end":[1283,5]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[inline]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5121:8399":{"id":"0:5121:8399","crate_id":0,"name":"UnneededAttachedValue","span":{"filename":"src/parser/parser.rs","begin":[1698,4],"end":[1702,5]},"visibility":"default","docs":"This long flag doesn't need a value but is provided one.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"struct","variant_inner":["0:5122:8400","0:5123:1488","0:5124:2580"]}},"0:4645":{"id":"0:4645","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[764,22],"end":[764,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4646:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3332":{"id":"0:3332","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[22,0],"end":[57,1]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3333:920","0:3334:7584","0:3336:7574","0:3338:1656","0:3340:2695","0:3342:2696"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5163":{"id":"0:5163","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1724,9],"end":[1724,13]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4064:4844":{"id":"0:4064:4844","crate_id":0,"name":"Generated","span":{"filename":"src/builder/arg.rs","begin":[5192,4],"end":[5192,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:4833:1674":{"id":"b:2:3208-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:4635:2919":{"id":"b:2:3202-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1762:127":{"id":"0:1762:127","crate_id":0,"name":"Error","span":{"filename":"src/builder/regex.rs","begin":[51,4],"end":[51,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1218:6514":{"id":"0:1218:6514","crate_id":0,"name":"_derive_display_order","span":{"filename":"src/builder/command.rs","begin":[4762,4],"end":[4781,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:498:2658":{"id":"0:498:2658","crate_id":0,"name":"group","span":{"filename":"src/builder/arg.rs","begin":[3088,4],"end":[3091,5]},"visibility":"public","docs":"The name of the [`ArgGroup`] the argument belongs to.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"debug\")\n    .long(\"debug\")\n    .group(\"mode\")\n# ;\n```\n\nMultiple arguments can be a member of a single group and then the group checked as if it\nwas one of said arguments.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\")\n        .group(\"mode\"))\n    .arg(Arg::new(\"verbose\")\n        .long(\"verbose\")\n        .group(\"mode\"))\n    .get_matches_from(vec![\n        \"prog\", \"--debug\"\n    ]);\nassert!(m.contains_id(\"mode\"));\n```\n\n[`ArgGroup`]: crate::ArgGroup","links":{"crate::ArgGroup":"0:4105:1655"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["group_id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4556:6725":{"id":"b:2:3198-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:5269:8971":{"id":"b:2:3213-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1472:7090":{"id":"0:1472:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[649,4],"end":[668,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1463:7050":{"id":"0:1463:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[607,4],"end":[607,15]},"visibility":"default","docs":"Argument's value type","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:13497":{"id":"2:13497","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12594:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13498:793","2:13499:2564","2:13500:31597","2:13501:31598","2:13503:31599","2:13506:6738","2:13507:31600","2:13508:304","2:13509:31601","2:13510:4858","2:13512:7850","2:13514:29565","2:13516:29566","2:13518:12378","2:13519:31602","2:13520:31603","2:13521:31604","2:13522:2579","2:13523:12619","2:13524:6751","2:13525:31605","2:13526:31606","2:13527:6462","2:13528:31607","2:13529:31608","2:13530:2678","2:13533:7345","2:13536:31609","2:13539:2881","2:13543:10914","2:13547:7433","2:13550:31610","2:13553:31611","2:13556:31612","2:13559:31613","2:13562:31614","2:13565:31615","2:13568:31616","2:13571:31617","2:13574:2748","2:13577:31618","2:13580:31619","2:13583:31620","2:13586:6463","2:13588:31621","2:13590:31622","2:13592:31623","2:13593:31624","2:13594:31625","2:13597:3432","2:13600:8492","2:13603:31626","2:13606:31627","2:13609:31628","2:13612:31629","2:13615:2747","2:13617:12929","2:13618:2513","2:13619:23435","2:13620:23436","2:13621:31630","2:13623:12289","2:13624:31631"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:950:5250":{"id":"0:950:5250","crate_id":0,"name":"before_help","span":{"filename":"src/builder/command.rs","begin":[1569,4],"end":[1572,5]},"visibility":"public","docs":"Free-form help text for before auto-generated short help (`-h`).\n\nThis is often used for header, copyright, or license information.\n\nIf [`Command::before_long_help`] is not specified, this message will be displayed for `--help`.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .before_help(\"Some info I'd like to appear before the help info\")\n# ;\n```","links":{"`Command::before_long_help`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["help",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2496":{"id":"0:2496","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1679,0],"end":[1688,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"Creates an empty iterator.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2498:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:4131:2923":{"id":"b:2:3213-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4077":{"id":"0:4077","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5190,27],"end":[5190,36]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"34:47:13905":{"id":"34:47:13905","crate_id":34,"name":"UnicodeWidthChar","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:48:1523","34:49:73577"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:114:1850":{"id":"0:114:1850","crate_id":0,"name":"typed_derive","span":{"filename":"src/_cookbook/typed_derive.rs","begin":[1,0],"end":[7,56]},"visibility":"public","docs":"# Example: Custom Types (Derive API)\n\n```rust\nuse clap::Parser;\nuse std::error::Error;\n\n#[derive(Parser, Debug)] // requires `derive` feature\nstruct Args {\n    /// Implicitly using `std::str::FromStr`\n    #[clap(short = 'O', value_parser)]\n    optimization: Option<usize>,\n\n    /// Allow invalid UTF-8 paths\n    #[clap(short = 'I', value_parser, value_name = \"DIR\", value_hint = clap::ValueHint::DirPath)]\n    include: Option<std::path::PathBuf>,\n\n    /// Handle IP addresses\n    #[clap(long, value_parser)]\n    bind: Option<std::net::IpAddr>,\n\n    /// Allow human-readable durations\n    #[clap(long, value_parser)]\n    sleep: Option<humantime::Duration>,\n\n    /// Hand-written parser for tuples\n    #[clap(short = 'D', value_parser = parse_key_val::<String, i32>)]\n    defines: Vec<(String, i32)>,\n}\n\n/// Parse a single key-value pair\nfn parse_key_val<T, U>(s: &str) -> Result<(T, U), Box<dyn Error + Send + Sync + 'static>>\nwhere\n    T: std::str::FromStr,\n    T::Err: Error + Send + Sync + 'static,\n    U: std::str::FromStr,\n    U::Err: Error + Send + Sync + 'static,\n{\n    let pos = s\n        .find('=')\n        .ok_or_else(|| format!(\"invalid KEY=value: no `=` found in `{}`\", s))?;\n    Ok((s[..pos].parse()?, s[pos + 1..].parse()?))\n}\n\nfn main() {\n    let args = Args::parse();\n    println!(\"{:?}\", args);\n}\n```\n\n**This requires enabling the [`derive` feature flag][crate::_features].**\n\nHelp:\n```console\n$ typed-derive --help\nclap \n\nUSAGE:\n    typed-derive[EXE] [OPTIONS]\n\nOPTIONS:\n        --bind <BIND>        Handle IP addresses\n    -D <DEFINES>             Hand-written parser for tuples\n    -h, --help               Print help information\n    -I <DIR>                 Allow invalid UTF-8 paths\n    -O <OPTIMIZATION>        Implicitly using `std::str::FromStr`\n        --sleep <SLEEP>      Allow human-readable durations\n\n```\n\nOptimization-level (number)\n```console\n$ typed-derive -O 1\nArgs { optimization: Some(1), include: None, bind: None, sleep: None, defines: [] }\n\n$ typed-derive -O plaid\n? failed\nerror: Invalid value \"plaid\" for '-O <OPTIMIZATION>': invalid digit found in string\n\nFor more information try --help\n\n```\n\nInclude (path)\n```console\n$ typed-derive -I../hello\nArgs { optimization: None, include: Some(\"../hello\"), bind: None, sleep: None, defines: [] }\n\n```\n\nIP Address\n```console\n$ typed-derive --bind 192.0.0.1\nArgs { optimization: None, include: None, bind: Some(192.0.0.1), sleep: None, defines: [] }\n\n$ typed-derive --bind localhost\n? failed\nerror: Invalid value \"localhost\" for '--bind <BIND>': invalid IP address syntax\n\nFor more information try --help\n\n```\n\nTime\n```console\n$ typed-derive --sleep 10s\nArgs { optimization: None, include: None, bind: None, sleep: Some(Duration(10s)), defines: [] }\n\n$ typed-derive --sleep forever\n? failed\nerror: Invalid value \"forever\" for '--sleep <SLEEP>': expected number at 0\n\nFor more information try --help\n\n```\n\nDefines (key-value pairs)\n```console\n$ typed-derive -D Foo=10 -D Alice=30\nArgs { optimization: None, include: None, bind: None, sleep: None, defines: [(\"Foo\", 10), (\"Alice\", 30)] }\n\n$ typed-derive -D Foo\n? failed\nerror: Invalid value \"Foo\" for '-D <DEFINES>': invalid KEY=value: no `=` found in `Foo`\n\nFor more information try --help\n\n$ typed-derive -D Foo=Bar\n? failed\nerror: Invalid value \"Foo=Bar\" for '-D <DEFINES>': invalid digit found in string\n\nFor more information try --help\n\n```","links":{"crate::_features":"0:121:1696"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:2:3213-0:4886:127":{"id":"b:2:3213-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2394:5300":{"id":"0:2394:5300","crate_id":0,"name":"size_hint","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1354,4],"end":[1356,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4627":{"id":"0:4627","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,43],"end":[27,48]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4628:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4595:6980":{"id":"0:4595:6980","crate_id":0,"name":"FilePath","span":{"filename":"src/builder/value_hint.rs","begin":[38,4],"end":[38,12]},"visibility":"default","docs":"Path to a file.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2866:8576":{"id":"0:2866:8576","crate_id":0,"name":"validate_matched_args","span":{"filename":"src/parser/validator.rs","begin":[315,4],"end":[330,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4953:1658":{"id":"b:2:3213-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:5196:5213":{"id":"b:2:3202-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:4105:1655":{"id":"a:2:3310:6658-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:5174:8567":{"id":"b:2:2872-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4803:604":{"id":"0:4803:604","crate_id":0,"name":"eq","span":{"filename":"src/error/context.rs","begin":[2,29],"end":[2,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4808:174":{"id":"0:4808:174","crate_id":0,"name":"None","span":{"filename":"src/error/context.rs","begin":[46,4],"end":[46,8]},"visibility":"default","docs":"[`ContextKind`] is self-sufficient, no additional information needed","links":{"`ContextKind`":"0:4761:7449"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1287:6648":{"id":"0:1287:6648","crate_id":0,"name":"use_long_help","span":{"filename":"src/builder/command.rs","begin":[5057,4],"end":[5079,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4231:2672":{"id":"b:2:2872-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:4972:1709":{"id":"a:2:3269:211-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:4933:7836":{"id":"a:2:9339:7908-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:115:1694":{"id":"0:115:1694","crate_id":0,"name":"_derive","span":{"filename":"src/_derive/mod.rs","begin":[1,0],"end":[510,25]},"visibility":"public","docs":"# Documentation: Derive Reference\n\n1. [Overview](#overview)\n2. [Attributes](#attributes)\n    1. [Terminology](#terminology)\n    2. [Command Attributes](#command-attributes)\n    3. [Arg Attributes](#arg-attributes)\n    4. [ValueEnum Attributes](#valueenum-attributes)\n    5. [Possible Value Attributes](#possible-value-attributes)\n3. [Arg Types](#arg-types)\n4. [Doc Comments](#doc-comments)\n5. [Mixing Builder and Derive APIs](#mixing-builder-and-derive-apis)\n6. [Tips](#tips)\n\n## Overview\n\nTo derive `clap` types, you need to enable the [`derive` feature flag][crate::_features].\n\nExample:\n```rust\nuse clap::Parser;\n\n/// Simple program to greet a person\n#[derive(Parser, Debug)]\n#[clap(author, version, about, long_about = None)]\nstruct Args {\n    /// Name of the person to greet\n    #[clap(short, long, value_parser)]\n    name: String,\n\n    /// Number of times to greet\n    #[clap(short, long, value_parser, default_value_t = 1)]\n    count: u8,\n}\n\nfn main() {\n    let args = Args::parse();\n\n    for _ in 0..args.count {\n        println!(\"Hello {}!\", args.name)\n    }\n}\n```\n\nLet's start by breaking down the anatomy of the derive attributes:\n```rust\nuse clap::{Parser, Args, Subcommand, ValueEnum};\n\n/// Doc comment\n#[derive(Parser)]\n#[clap(APP ATTRIBUTE)]\nstruct Cli {\n    /// Doc comment\n    #[clap(ARG ATTRIBUTE)]\n    field: UserType,\n\n    #[clap(value_enum, ARG ATTRIBUTE...)]\n    field: EnumValues,\n\n    #[clap(flatten)]\n    delegate: Struct,\n\n    #[clap(subcommand)]\n    command: Command,\n}\n\n/// Doc comment\n#[derive(Args)]\n#[clap(PARENT APP ATTRIBUTE)]\nstruct Struct {\n    /// Doc comment\n    #[clap(ARG ATTRIBUTE)]\n    field: UserType,\n}\n\n/// Doc comment\n#[derive(Subcommand)]\n#[clap(PARENT APP ATTRIBUTE)]\nenum Command {\n    /// Doc comment\n    #[clap(APP ATTRIBUTE)]\n    Variant1(Struct),\n\n    /// Doc comment\n    #[clap(APP ATTRIBUTE)]\n    Variant2 {\n        /// Doc comment\n        #[clap(ARG ATTRIBUTE)]\n        field: UserType,\n    }\n}\n\n/// Doc comment\n#[derive(ValueEnum)]\n#[clap(VALUE ENUM ATTRIBUTE)]\nenum EnumValues {\n    /// Doc comment\n    #[clap(POSSIBLE VALUE ATTRIBUTE)]\n    Variant1,\n}\n\nfn main() {\n    let cli = Cli::parse();\n}\n```\n\nTraits:\n- [`Parser`][crate::Parser] parses arguments into a `struct` (arguments) or `enum` (subcommands).\n  - [`Args`][crate::Args] allows defining a set of re-usable arguments that get merged into their parent container.\n  - [`Subcommand`][crate::Subcommand] defines available subcommands.\n  - Subcommand arguments can be defined in a struct-variant or automatically flattened with a tuple-variant.\n- [`ValueEnum`][crate::ValueEnum] allows parsing a value directly into an `enum`, erroring on unsupported values.\n  - The derive doesn't work on enums that contain non-unit variants, unless they are skipped\n\n*See also the [derive tutorial][crate::_derive::_tutorial] and [cookbook][crate::_cookbook]*\n\n## Attributes\n\n### Terminology\n\n**Raw attributes** are forwarded directly to the underlying [`clap` builder][crate::builder].  Any\n[`Command`][crate::Command], [`Arg`][crate::Arg], or [`PossibleValue`][crate::PossibleValue] method can be used as an attribute.\n\nRaw attributes come in two different syntaxes:\n```rust,ignore\n#[clap(\n    global = true, // name = arg form, neat for one-arg methods\n    required_if_eq(\"out\", \"file\") // name(arg1, arg2, ...) form.\n)]\n```\n\n- `method = arg` can only be used for methods which take only one argument.\n- `method(arg1, arg2)` can be used with any method.\n\nAs long as `method_name` is not one of the magical methods it will be\ntranslated into a mere method call.\n\n**Magic attributes** have post-processing done to them, whether that is\n- Providing of defaults\n- Special behavior is triggered off of it\n\nMagic attributes are more constrained in the syntax they support, usually just\n`<attr> = <value>` though some use `<attr>(<value>)` instead.  See the specific\nmagic attributes documentation for details.  This allows users to access the\nraw behavior of an attribute via `<attr>(<value>)` syntax.\n\n**NOTE:** Some attributes are inferred from [Arg Types](#arg-types) and [Doc\nComments](#doc-comments).  Explicit attributes take precedence over inferred\nattributes.\n\n### Command Attributes\n\nThese correspond to a [`Command`][crate::Command] which is used for both top-level parsers and\nwhen defining subcommands.\n\n**Raw attributes:**  Any [`Command` method][crate::Command] can also be used as an attribute,\nsee [Terminology](#terminology) for syntax.\n- e.g. `#[clap(arg_required_else_help(true))]` would translate to `cmd.arg_required_else_help(true)`\n\n**Magic attributes:**\n- `name  = <expr>`: [`Command::name`][crate::App::name]\n  - When not present: [crate `name`](https://doc.rust-lang.org/cargo/reference/manifest.html#the-name-field) (if on [`Parser`][crate::Parser] container), variant name (if on [`Subcommand`][crate::Subcommand] variant)\n- `version [= <expr>]`: [`Command::version`][crate::App::version]\n  - When not present: no version set\n  - Without `<expr>`: defaults to [crate `version`](https://doc.rust-lang.org/cargo/reference/manifest.html#the-version-field)\n- `author [= <expr>]`: [`Command::author`][crate::App::author]\n  - When not present: no author set\n  - Without `<expr>`: defaults to [crate `authors`](https://doc.rust-lang.org/cargo/reference/manifest.html#the-authors-field)\n- `about [= <expr>]`: [`Command::about`][crate::App::about]\n  - When not present: [Doc comment summary](#doc-comments)\n  - Without `<expr>`: [crate `description`](https://doc.rust-lang.org/cargo/reference/manifest.html#the-description-field) ([`Parser`][crate::Parser] container)\n    - **TIP:** When a doc comment is also present, you most likely want to add\n      `#[clap(long_about = None)]` to clear the doc comment so only [`about`][crate::App::about]\n      gets shown with both `-h` and `--help`.\n- `long_about = <expr>`: [`Command::long_about`][crate::App::long_about]\n  - When not present: [Doc comment](#doc-comments) if there is a blank line, else nothing\n- `verbatim_doc_comment`: Minimizes pre-processing when converting doc comments to [`about`][crate::App::about] / [`long_about`][crate::App::long_about]\n- `next_display_order`: [`Command::next_display_order`][crate::App::next_display_order]\n- `next_help_heading`: [`Command::next_help_heading`][crate::App::next_help_heading]\n  - When `flatten`ing [`Args`][crate::Args], this is scoped to just the args in this struct and any struct `flatten`ed into it\n- `rename_all = <string_literal>`: Override default field / variant name case conversion for [`Command::name`][crate::Command::name] / [`Arg::id`][crate::Arg::id]\n  - When not present: `\"kebab-case\"`\n  - Available values: `\"camelCase\"`, `\"kebab-case\"`, `\"PascalCase\"`, `\"SCREAMING_SNAKE_CASE\"`, `\"snake_case\"`, `\"lower\"`, `\"UPPER\"`, `\"verbatim\"`\n- `rename_all_env = <string_literal>`: Override default field name case conversion for env variables for  [`Arg::env`][crate::Arg::env]\n  - When not present: `\"SCREAMING_SNAKE_CASE\"`\n  - Available values: `\"camelCase\"`, `\"kebab-case\"`, `\"PascalCase\"`, `\"SCREAMING_SNAKE_CASE\"`, `\"snake_case\"`, `\"lower\"`, `\"UPPER\"`, `\"verbatim\"`\n\nAnd for [`Subcommand`][crate::Subcommand] variants:\n- `skip`: Ignore this variant\n- `flatten`: Delegates to the variant for more subcommands (must implement\n  [`Subcommand`][crate::Subcommand])\n- `subcommand`: Nest subcommands under the current set of subcommands (must implement\n  [`Subcommand`][crate::Subcommand])\n- `external_subcommand`: [`Command::allow_external_subcommand(true)`][crate::App::allow_external_subcommands]\n  - Variant must be either `Variant(Vec<String>)` or `Variant(Vec<OsString>)`\n\n### Arg Attributes\n\nThese correspond to a [`Arg`][crate::Arg].\n\n**Raw attributes:**  Any [`Arg` method][crate::Arg] can also be used as an attribute, see [Terminology](#terminology) for syntax.\n- e.g. `#[clap(max_values(3))]` would translate to `arg.max_values(3)`\n\n**Magic attributes**:\n- `id = <expr>`: [`Arg::id`][crate::Arg::id]\n  - When not present: case-converted field name is used\n- `name = <expr>`: [`Arg::id`][crate::Arg::id]\n  - **Deprecated:** use `id`\n- `value_parser [= <expr>]`: [`Arg::value_parser`][crate::Arg::value_parser]\n  - When not present: will auto-select an implementation based on the field type using\n    [`value_parser!][crate::value_parser!]\n  - When present but defaulted: opt-in to clap v4 semantics\n    - Env parsing is now dependent on inferred parser\n    - `PathBuf` will implicitly skip UTF-8 validation (before it required specifying\n      `try_from_os_str`)\n  - When present, implies `#[clap(action)]`\n  - To register a custom type's [`ValueParser`][crate::builder::ValueParser], implement [`ValueParserFactory`][crate::builder::ValueParserFactory]\n- `action [= <expr>]`: [`Arg::action`][crate::Arg::action]\n  - When not present: will auto-select an action based on the field type\n  - When present but defaulted: opt-in to clap v4 semantics\n  - When present, implies `#[clap(value_parser)]`\n    - `args_override_self` is forced on for single flags\n- `help = <expr>`: [`Arg::help`][crate::Arg::help]\n  - When not present: [Doc comment summary](#doc-comments)\n- `long_help = <expr>`: [`Arg::long_help`][crate::Arg::long_help]\n  - When not present: [Doc comment](#doc-comments) if there is a blank line, else nothing\n- `verbatim_doc_comment`: Minimizes pre-processing when converting doc comments to [`help`][crate::Arg::help] / [`long_help`][crate::Arg::long_help]\n- `short [= <char>]`: [`Arg::short`][crate::Arg::short]\n  - When not present: no short set\n  - Without `<char>`: defaults to first character in the case-converted field name\n- `long [= <str>]`: [`Arg::long`][crate::Arg::long]\n  - When not present: no long set\n  - Without `<str>`: defaults to the case-converted field name\n- `env [= <str>]`: [`Arg::env`][crate::Arg::env] (needs [`env` feature][crate::_features] enabled)\n  - When not present: no env set\n  - Without `<str>`: defaults to the case-converted field name\n- `flatten`: Delegates to the field for more arguments (must implement [`Args`][crate::Args])\n  - Only [`next_help_heading`][crate::Command::next_help_heading] can be used with `flatten`.  See\n    [clap-rs/clap#3269](https://github.com/clap-rs/clap/issues/3269) for why\n    arg attributes are not generally supported.\n  - **Tip:** Though we do apply a flattened [`Args`][crate::Args]'s Parent Command Attributes, this\n    makes reuse harder. Generally prefer putting the cmd attributes on the\n    [`Parser`][crate::Parser] or on the flattened field.\n- `subcommand`: Delegates definition of subcommands to the field (must implement\n  [`Subcommand`][crate::Subcommand])\n  - When `Option<T>`, the subcommand becomes optional\n- `from_global`: Read a [`Arg::global`][crate::Arg::global] argument (raw attribute), regardless of what subcommand you are in\n- `parse(<kind> [= <function>])`: [`Arg::validator`][crate::Arg::validator] and [`ArgMatches::values_of_t`][crate::ArgMatches::values_of_t]\n  - **Deprecated:**\n    - Use `value_parser(...)` for `from_str`, `try_from_str`, `from_os_str`, and `try_from_os_str`\n    - Use `action(ArgAction::Count` for `from_occurrences`\n    - Use `action(ArgAction::SetTrue` for `from_flag`\n  - Default: `try_from_str`\n  - Warning: for `Path` / `OsString`, be sure to use `try_from_os_str`\n  - See [Arg Types](#arg-types) for more details\n- `value_enum`: Parse the value using the [`ValueEnum`][crate::ValueEnum]\n- `skip [= <expr>]`: Ignore this field, filling in with `<expr>`\n  - Without `<expr>`: fills the field with `Default::default()`\n- `default_value = <str>`: [`Arg::default_value`][crate::Arg::default_value] and [`Arg::required(false)`][crate::Arg::required]\n- `default_value_t [= <expr>]`: [`Arg::default_value`][crate::Arg::default_value] and [`Arg::required(false)`][crate::Arg::required]\n  - Requires `std::fmt::Display` or `#[clap(value_enum)]`\n  - Without `<expr>`, relies on `Default::default()`\n- `default_values_t = <expr>`: [`Arg::default_values`][crate::Arg::default_values] and [`Arg::required(false)`][crate::Arg::required]\n  - Requires field arg to be of type `Vec<T>` and `T` to implement `std::fmt::Display` or `#[clap(value_enum)]`\n  - `<expr>` must implement `IntoIterator<T>`\n- `default_value_os_t [= <expr>]`: [`Arg::default_value_os`][crate::Arg::default_value_os] and [`Arg::required(false)`][crate::Arg::required]\n  - Requires `std::convert::Into<OsString>` or `#[clap(value_enum)]`\n  - Without `<expr>`, relies on `Default::default()`\n- `default_values_os_t = <expr>`: [`Arg::default_values_os`][crate::Arg::default_values_os] and [`Arg::required(false)`][crate::Arg::required]\n  - Requires field arg to be of type `Vec<T>` and `T` to implement `std::convert::Into<OsString>` or `#[clap(value_enum)]`\n  - `<expr>` must implement `IntoIterator<T>`\n\n### ValueEnum Attributes\n\n- `rename_all = <string_literal>`: Override default field / variant name case conversion for [`PossibleValue::new`][crate::PossibleValue]\n  - When not present: `\"kebab-case\"`\n  - Available values: `\"camelCase\"`, `\"kebab-case\"`, `\"PascalCase\"`, `\"SCREAMING_SNAKE_CASE\"`, `\"snake_case\"`, `\"lower\"`, `\"UPPER\"`, `\"verbatim\"`\n\n### Possible Value Attributes\n\nThese correspond to a [`PossibleValue`][crate::PossibleValue].\n\n**Raw attributes:**  Any [`PossibleValue` method][crate::PossibleValue] can also be used as an attribute, see [Terminology](#terminology) for syntax.\n- e.g. `#[clap(alias(\"foo\"))]` would translate to `pv.alias(\"foo\")`\n\n**Magic attributes**:\n- `name = <expr>`: [`PossibleValue::new`][crate::PossibleValue::new]\n  - When not present: case-converted field name is used\n- `help = <expr>`: [`PossibleValue::help`][crate::PossibleValue::help]\n  - When not present: [Doc comment summary](#doc-comments)\n\n## Arg Types\n\n`clap` assumes some intent based on the type used:\n\n| Type                | Effect                               | Implies                                                          |\n|---------------------|--------------------------------------|------------------------------------------------------------------|\n| `bool`              | flag                                 | `#[clap(parse(from_flag))]`                                     |\n| `Option<T>`         | optional argument                    | `.takes_value(true).required(false)`                             |\n| `Option<Option<T>>` | optional value for optional argument | `.takes_value(true).required(false).min_values(0).max_values(1)` |\n| `T`                 | required argument                    | `.takes_value(true).required(!has_default)`                      |\n| `Vec<T>`            | `0..` occurrences of argument        | `.takes_value(true).required(false).multiple_occurrences(true)`  |\n| `Option<Vec<T>>`    | `0..` occurrences of argument        | `.takes_value(true).required(false).multiple_occurrences(true)`  |\n\nNotes:\n- For custom type behavior, you can override the implied attributes/settings and/or set additional ones\n  - For example, see [custom-bool](./custom-bool.md)\n- `Option<Vec<T>>` will be `None` instead of `vec![]` if no arguments are provided.\n  - This gives the user some flexibility in designing their argument, like with `min_values(0)`\n\nYou can then support your custom type with `#[clap(parse(<kind> [= <function>]))]`:\n\n| `<kind>`                 | Signature                             | Default `<function>`            |\n|--------------------------|---------------------------------------|---------------------------------|\n| `from_str`               | `fn(&str) -> T`                       | `::std::convert::From::from`    |\n| `try_from_str` (default) | `fn(&str) -> Result<T, E>`            | `::std::str::FromStr::from_str` |\n| `from_os_str`            | `fn(&OsStr) -> T`                     | `::std::convert::From::from`    |\n| `try_from_os_str`        | `fn(&OsStr) -> Result<T, E>`          | (no default function)           |\n| `from_occurrences`       | `fn(u64) -> T`                        | `value as T`                    |\n| `from_flag`              | `fn(bool) -> T`                       | `::std::convert::From::from`    |\n\nNotes:\n- `from_os_str`:\n  - Implies `arg.takes_value(true).allow_invalid_utf8(true)`\n- `try_from_os_str`:\n  - Implies `arg.takes_value(true).allow_invalid_utf8(true)`\n- `from_occurrences`:\n  - Implies `arg.takes_value(false).multiple_occurrences(true)`\n  - Reads from `clap::ArgMatches::occurrences_of` rather than a `get_one` function\n    - Note: operations on values, like `default_value`, are unlikely to do what you want\n- `from_flag`\n  - Implies `arg.takes_value(false)`\n  - Reads from `clap::ArgMatches::is_present` rather than a `get_one` function\n    - Note: operations on values, like `default_value`, are unlikely to do what you want\n\n**Warning:**\n- To support non-UTF8 paths, you should use `#[clap(value_parser)]` otherwise\n  `clap` will parse it as a `String` which will fail on some paths.\n\n## Doc Comments\n\nIn clap, help messages for the whole binary can be specified\nvia [`Command::about`][crate::App::about] and [`Command::long_about`][crate::App::long_about] while help messages\nfor individual arguments can be specified via [`Arg::help`][crate::Arg::help] and [`Arg::long_help`][crate::Arg::long_help].\n\n`long_*` variants are used when user calls the program with\n`--help` and \"short\" variants are used with `-h` flag.\n\n```rust\n# use clap::Parser;\n\n#[derive(Parser)]\n#[clap(about = \"I am a program and I work, just pass `-h`\", long_about = None)]\nstruct Foo {\n    #[clap(short, help = \"Pass `-h` and you'll see me!\")]\n    bar: String,\n}\n```\n\nFor convenience, doc comments can be used instead of raw methods\n(this example works exactly like the one above):\n\n```rust\n# use clap::Parser;\n\n#[derive(Parser)]\n/// I am a program and I work, just pass `-h`\nstruct Foo {\n    /// Pass `-h` and you'll see me!\n    bar: String,\n}\n```\n\n**NOTE:** Attributes have priority over doc comments!\n\n**Top level doc comments always generate `Command::about/long_about` calls!**\nIf you really want to use the `Command::about/long_about` methods (you likely don't),\nuse the `about` / `long_about` attributes to override the calls generated from\nthe doc comment.  To clear `long_about`, you can use\n`#[clap(long_about = None)]`.\n\n**TIP:** Set `#![deny(missing_docs)]` to catch missing `--help` documentation at compile time.\n\n### Pre-processing\n\n```rust\n# use clap::Parser;\n#[derive(Parser)]\n/// Hi there, I'm Robo!\n///\n/// I like beeping, stumbling, eating your electricity,\n/// and making records of you singing in a shower.\n/// Pay up, or I'll upload it to youtube!\nstruct Robo {\n    /// Call my brother SkyNet.\n    ///\n    /// I am artificial superintelligence. I won't rest\n    /// until I'll have destroyed humanity. Enjoy your\n    /// pathetic existence, you mere mortals.\n    #[clap(long, action)]\n    kill_all_humans: bool,\n}\n```\n\nA doc comment consists of three parts:\n- Short summary\n- A blank line (whitespace only)\n- Detailed description, all the rest\n\nThe summary corresponds with `Command::about` / `Arg::help`.  When a blank line is\npresent, the whole doc comment will be passed to `Command::long_about` /\n`Arg::long_help`.  Or in other words, a doc may result in just a `Command::about` /\n`Arg::help` or `Command::about` / `Arg::help` and `Command::long_about` /\n`Arg::long_help`\n\nIn addition, when `verbatim_doc_comment` is not present, `clap` applies some preprocessing, including:\n\n- Strip leading and trailing whitespace from every line, if present.\n\n- Strip leading and trailing blank lines, if present.\n\n- Interpret each group of non-empty lines as a word-wrapped paragraph.\n\n  We replace newlines within paragraphs with spaces to allow the output\n  to be re-wrapped to the terminal width.\n\n- Strip any excess blank lines so that there is exactly one per paragraph break.\n\n- If the first paragraph ends in exactly one period,\n  remove the trailing period (i.e. strip trailing periods but not trailing ellipses).\n\nSometimes you don't want this preprocessing to apply, for example the comment contains\nsome ASCII art or markdown tables, you would need to preserve LFs along with\nblank lines and the leading/trailing whitespace. When you pass use the\n`verbatim_doc_comment` magic attribute, you  preserve\nthem.\n\n**Note:** Keep in mind that `verbatim_doc_comment` will *still*\n- Remove one leading space from each line, even if this attribute is present,\n  to allow for a space between `///` and the content.\n- Remove leading and trailing blank lines\n\n## Mixing Builder and Derive APIs\n\nThe builder and derive APIs do not live in isolation. They can work together, which is\nespecially helpful if some arguments can be specified at compile-time while others must be\nspecified at runtime.\n\n### Using derived arguments in a builder application\n\nWhen using the derive API, you can `#[clap(flatten)]` a struct deriving `Args` into a struct\nderiving `Args` or `Parser`. This example shows how you can augment a `Command` instance\ncreated using the builder API with `Args` created using the derive API.\n\nIt uses the [`Args::augment_args`][crate::Args::augment_args] method to add the arguments to\nthe `Command` instance.\n\nCrates such as [clap-verbosity-flag](https://github.com/rust-cli/clap-verbosity-flag) provide\nstructs that implement `Args`. Without the technique shown in this example, it would not be\npossible to use such crates with the builder API.\n\nFor example:\n```rust\nuse clap::{arg, Args, Command, FromArgMatches as _};\n\n#[derive(Args, Debug)]\nstruct DerivedArgs {\n    #[clap(short, long, action)]\n    derived: bool,\n}\n\nfn main() {\n    let cli = Command::new(\"CLI\").arg(arg!(-b - -built).action(clap::ArgAction::SetTrue));\n    // Augment built args with derived args\n    let cli = DerivedArgs::augment_args(cli);\n\n    let matches = cli.get_matches();\n    println!(\n        \"Value of built: {:?}\",\n        *matches.get_one::<bool>(\"built\").unwrap()\n    );\n    println!(\n        \"Value of derived via ArgMatches: {:?}\",\n        *matches.get_one::<bool>(\"derived\").unwrap()\n    );\n\n    // Since DerivedArgs implements FromArgMatches, we can extract it from the unstructured ArgMatches.\n    // This is the main benefit of using derived arguments.\n    let derived_matches = DerivedArgs::from_arg_matches(&matches)\n        .map_err(|err| err.exit())\n        .unwrap();\n    println!(\"Value of derived: {:#?}\", derived_matches);\n}\n```\n\n### Using derived subcommands in a builder application\n\nWhen using the derive API, you can use `#[clap(subcommand)]` inside the struct to add\nsubcommands. The type of the field is usually an enum that derived `Parser`. However, you can\nalso add the subcommands in that enum to a `Command` instance created with the builder API.\n\nIt uses the [`Subcommand::augment_subcommands`][crate::Subcommand::augment_subcommands] method\nto add the subcommands to the `Command` instance.\n\nFor example:\n```rust\nuse clap::{Command, FromArgMatches as _, Parser, Subcommand as _};\n\n#[derive(Parser, Debug)]\nenum Subcommands {\n    Derived {\n        #[clap(short, long, action)]\n        derived_flag: bool,\n    },\n}\n\nfn main() {\n    let cli = Command::new(\"Built CLI\");\n    // Augment with derived subcommands\n    let cli = Subcommands::augment_subcommands(cli);\n\n    let matches = cli.get_matches();\n    let derived_subcommands = Subcommands::from_arg_matches(&matches)\n        .map_err(|err| err.exit())\n        .unwrap();\n    println!(\"Derived subcommands: {:#?}\", derived_subcommands);\n}\n```\n\n### Adding hand-implemented subcommands to a derived application\n\nWhen using the derive API, you can use `#[clap(subcommand)]` inside the struct to add\nsubcommands. The type of the field is usually an enum that derived `Parser`. However, you can\nalso implement the `Subcommand` trait manually on this enum (or any other type) and it can\nstill be used inside the struct created with the derive API. The implementation of the\n`Subcommand` trait will use the builder API to add the subcommands to the `Command` instance\ncreated behind the scenes for you by the derive API.\n\nNotice how in the previous example we used\n[`augment_subcommands`][crate::Subcommand::augment_subcommands] on an enum that derived\n`Parser`, whereas now we implement\n[`augment_subcommands`][crate::Subcommand::augment_subcommands] ourselves, but the derive API\ncalls it automatically since we used the `#[clap(subcommand)]` attribute.\n\nFor example:\n```rust\nuse clap::error::{Error, ErrorKind};\nuse clap::{ArgMatches, Args as _, Command, FromArgMatches, Parser, Subcommand};\n\n#[derive(Parser, Debug)]\nstruct AddArgs {\n    #[clap(value_parser)]\n    name: Vec<String>,\n}\n#[derive(Parser, Debug)]\nstruct RemoveArgs {\n    #[clap(short, long, action)]\n    force: bool,\n    #[clap(value_parser)]\n    name: Vec<String>,\n}\n\n#[derive(Debug)]\nenum CliSub {\n    Add(AddArgs),\n    Remove(RemoveArgs),\n}\n\nimpl FromArgMatches for CliSub {\n    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error> {\n        match matches.subcommand() {\n            Some((\"add\", args)) => Ok(Self::Add(AddArgs::from_arg_matches(args)?)),\n            Some((\"remove\", args)) => Ok(Self::Remove(RemoveArgs::from_arg_matches(args)?)),\n            Some((_, _)) => Err(Error::raw(\n                ErrorKind::UnrecognizedSubcommand,\n                \"Valid subcommands are `add` and `remove`\",\n            )),\n            None => Err(Error::raw(\n                ErrorKind::MissingSubcommand,\n                \"Valid subcommands are `add` and `remove`\",\n            )),\n        }\n    }\n    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error> {\n        match matches.subcommand() {\n            Some((\"add\", args)) => *self = Self::Add(AddArgs::from_arg_matches(args)?),\n            Some((\"remove\", args)) => *self = Self::Remove(RemoveArgs::from_arg_matches(args)?),\n            Some((_, _)) => {\n                return Err(Error::raw(\n                    ErrorKind::UnrecognizedSubcommand,\n                    \"Valid subcommands are `add` and `remove`\",\n                ))\n            }\n            None => (),\n        };\n        Ok(())\n    }\n}\n\nimpl Subcommand for CliSub {\n    fn augment_subcommands(cmd: Command<'_>) -> Command<'_> {\n        cmd.subcommand(AddArgs::augment_args(Command::new(\"add\")))\n            .subcommand(RemoveArgs::augment_args(Command::new(\"remove\")))\n            .subcommand_required(true)\n    }\n    fn augment_subcommands_for_update(cmd: Command<'_>) -> Command<'_> {\n        cmd.subcommand(AddArgs::augment_args(Command::new(\"add\")))\n            .subcommand(RemoveArgs::augment_args(Command::new(\"remove\")))\n            .subcommand_required(true)\n    }\n    fn has_subcommand(name: &str) -> bool {\n        matches!(name, \"add\" | \"remove\")\n    }\n}\n\n#[derive(Parser, Debug)]\nstruct Cli {\n    #[clap(short, long, action)]\n    top_level: bool,\n    #[clap(subcommand)]\n    subcommand: CliSub,\n}\n\nfn main() {\n    let args = Cli::parse();\n    println!(\"{:#?}\", args);\n}\n```\n\n### Flattening hand-implemented args into a derived application\n\nWhen using the derive API, you can use `#[clap(flatten)]` inside the struct to add arguments as\nif they were added directly to the containing struct. The type of the field is usually an\nstruct that derived `Args`. However, you can also implement the `Args` trait manually on this\nstruct (or any other type) and it can still be used inside the struct created with the derive\nAPI. The implementation of the `Args` trait will use the builder API to add the arguments to\nthe `Command` instance created behind the scenes for you by the derive API.\n\nNotice how in the previous example we used [`augment_args`][crate::Args::augment_args] on the\nstruct that derived `Parser`, whereas now we implement\n[`augment_args`][crate::Args::augment_args] ourselves, but the derive API calls it\nautomatically since we used the `#[clap(flatten)]` attribute.\n\nFor example:\n```rust\nuse clap::error::Error;\nuse clap::{Arg, ArgAction, ArgMatches, Args, Command, FromArgMatches, Parser};\n\n#[derive(Debug)]\nstruct CliArgs {\n    foo: bool,\n    bar: bool,\n    quuz: Option<String>,\n}\n\nimpl FromArgMatches for CliArgs {\n    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error> {\n        let mut matches = matches.clone();\n        Self::from_arg_matches_mut(&mut matches)\n    }\n    fn from_arg_matches_mut(matches: &mut ArgMatches) -> Result<Self, Error> {\n        Ok(Self {\n            foo: *matches.get_one::<bool>(\"foo\").expect(\"defaulted by clap\"),\n            bar: *matches.get_one::<bool>(\"bar\").expect(\"defaulted by clap\"),\n            quuz: matches.remove_one::<String>(\"quuz\"),\n        })\n    }\n    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error> {\n        let mut matches = matches.clone();\n        self.update_from_arg_matches_mut(&mut matches)\n    }\n    fn update_from_arg_matches_mut(&mut self, matches: &mut ArgMatches) -> Result<(), Error> {\n        self.foo |= *matches.get_one::<bool>(\"foo\").expect(\"defaulted by clap\");\n        self.bar |= *matches.get_one::<bool>(\"bar\").expect(\"defaulted by clap\");\n        if let Some(quuz) = matches.remove_one::<String>(\"quuz\") {\n            self.quuz = Some(quuz);\n        }\n        Ok(())\n    }\n}\n\nimpl Args for CliArgs {\n    fn augment_args(cmd: Command<'_>) -> Command<'_> {\n        cmd.arg(\n            Arg::new(\"foo\")\n                .short('f')\n                .long(\"foo\")\n                .action(ArgAction::SetTrue),\n        )\n        .arg(\n            Arg::new(\"bar\")\n                .short('b')\n                .long(\"bar\")\n                .action(ArgAction::SetTrue),\n        )\n        .arg(Arg::new(\"quuz\").short('q').long(\"quuz\").takes_value(true))\n    }\n    fn augment_args_for_update(cmd: Command<'_>) -> Command<'_> {\n        cmd.arg(\n            Arg::new(\"foo\")\n                .short('f')\n                .long(\"foo\")\n                .action(ArgAction::SetTrue),\n        )\n        .arg(\n            Arg::new(\"bar\")\n                .short('b')\n                .long(\"bar\")\n                .action(ArgAction::SetTrue),\n        )\n        .arg(Arg::new(\"quuz\").short('q').long(\"quuz\").takes_value(true))\n    }\n}\n\n#[derive(Parser, Debug)]\nstruct Cli {\n    #[clap(short, long, action)]\n    top_level: bool,\n    #[clap(flatten)]\n    more_args: CliArgs,\n}\n\nfn main() {\n    let args = Cli::parse();\n    println!(\"{:#?}\", args);\n}\n```\n\n## Tips\n\n- To get access to a [`Command`][crate::Command] call\n  [`CommandFactory::command`][crate::CommandFactory::command] (implemented when deriving\n  [`Parser`][crate::Parser])\n- Proactively check for bad [`Command`][crate::Command] configurations by calling\n  [`Command::debug_assert`][crate::App::debug_assert] in a test\n  ([example](../tutorial_derive/05_01_assert.rs))","links":{"crate::Arg::value_parser":"0:3972:1654","crate::App::next_display_order":"0:4456:1667","crate::Parser":"0:164:1664","crate::Arg":"0:3972:1654","crate::Command::next_help_heading":"0:4456:1667","crate::builder::ValueParser":"0:1394:2909","crate::_features":"0:121:1696","crate::App::name":"0:4456:1667","crate::Arg::default_value":"0:3972:1654","crate::App::about":"0:4456:1667","crate::App::debug_assert":"0:4456:1667","crate::PossibleValue::help":"0:4530:1672","crate::_derive::_tutorial":"0:116:1697","crate::App::next_help_heading":"0:4456:1667","crate::ValueEnum":"0:211:1666","crate::Arg::required":"0:3972:1654","crate::Arg::default_values_os":"0:3972:1654","crate::Args":"0:204:1661","crate::Subcommand::augment_subcommands":"0:207:1665","crate::Arg::default_value_os":"0:3972:1654","crate::Arg::long_help":"0:3972:1654","crate::App::allow_external_subcommands":"0:4456:1667","crate::builder":"0:255:1651","crate::App::version":"0:4456:1667","crate::_cookbook":"0:103:1693","crate::Arg::id":"0:3972:1654","crate::App::author":"0:4456:1667","crate::Arg::env":"0:3972:1654","crate::PossibleValue":"0:4530:1672","crate::App::long_about":"0:4456:1667","crate::ArgMatches::values_of_t":"0:4953:1658","crate::Command::name":"0:4456:1667","crate::value_parser!":"0:1706:2901","crate::Arg::default_values":"0:3972:1654","crate::PossibleValue::new":"0:4530:1672","crate::Subcommand":"0:207:1665","crate::Arg::action":"0:3972:1654","crate::builder::ValueParserFactory":"0:1643:2910","crate::Arg::help":"0:3972:1654","crate::Arg::long":"0:3972:1654","crate::Arg::short":"0:3972:1654","crate::Arg::validator":"0:3972:1654","crate::Args::augment_args":"0:204:1661","crate::Arg::global":"0:3972:1654","crate::CommandFactory::command":"0:190:1662","crate::Command":"0:853:1653"},"attrs":["#[cfg(feature = \"unstable-doc\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:116:1697","0:117"],"is_stripped":false}},"0:3561:3092":{"id":"0:3561:3092","crate_id":0,"name":"InferSubcommands","span":{"filename":"src/builder/app_settings.rs","begin":[155,4],"end":[155,20]},"visibility":"default","docs":"Deprecated, replaced with [`Command::infer_subcommands`]","links":{"`Command::infer_subcommands`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::infer_subcommands`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::infer_subcommands`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3577:3121":{"id":"0:3577:3121","crate_id":0,"name":"ArgsNegateSubcommands","span":{"filename":"src/builder/app_settings.rs","begin":[237,4],"end":[237,25]},"visibility":"default","docs":"Deprecated, replaced with [`Command::args_conflicts_with_subcommands`] and\n[`Command::is_args_conflicts_with_subcommands_set`]","links":{"`Command::args_conflicts_with_subcommands`":"0:4456:1667","`Command::is_args_conflicts_with_subcommands_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::args_conflicts_with_subcommands` and `Command::is_args_conflicts_with_subcommands_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::args_conflicts_with_subcommands` and `Command::is_args_conflicts_with_subcommands_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:2058:7556":{"id":"0:2058:7556","crate_id":0,"name":"unexpected_multiple_usage","span":{"filename":"src/error/mod.rs","begin":[529,4],"end":[538,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13577:31618":{"id":"2:13577:31618","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"1:16010:9064","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:9059","self::pattern":"2:13134:9255"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49780:9277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:891:2757":{"id":"0:891:2757","crate_id":0,"name":"try_get_matches","span":{"filename":"src/builder/command.rs","begin":[568,4],"end":[571,5]},"visibility":"public","docs":"Parse [`env::args_os`], returning a [`clap::Result`] on failure.\n\n**NOTE:** This method WILL NOT exit when `--help` or `--version` (or short versions) are\nused. It will return a [`clap::Error`], where the [`kind`] is a\n[`ErrorKind::DisplayHelp`] or [`ErrorKind::DisplayVersion`] respectively. You must call\n[`Error::exit`] or perform a [`std::process::exit`].\n\n# Panics\n\nIf contradictory arguments or settings exist.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet matches = Command::new(\"myprog\")\n    // Args and options go here...\n    .try_get_matches()\n    .unwrap_or_else(|e| e.exit());\n```\n[`env::args_os`]: std::env::args_os()\n[`Error::exit`]: crate::Error::exit()\n[`std::process::exit`]: std::process::exit()\n[`clap::Result`]: Result\n[`clap::Error`]: crate::Error\n[`kind`]: crate::Error\n[`ErrorKind::DisplayHelp`]: crate::ErrorKind::DisplayHelp\n[`ErrorKind::DisplayVersion`]: crate::ErrorKind::DisplayVersion","links":{"std::env::args_os()":"1:2461:5402","Result":"2:47718:205","std::process::exit()":"1:7792:2754","crate::ErrorKind::DisplayHelp":"0:4833:1674","crate::Error":"0:4886:127","crate::ErrorKind::DisplayVersion":"0:4833:1674","crate::Error::exit()":"0:4886:127"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2227:681":{"id":"0:2227:681","crate_id":0,"name":"from","span":{"filename":"src/parser/matches/any_value.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"A"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1006:6120":{"id":"0:1006:6120","crate_id":0,"name":"allow_invalid_utf8_for_external_subcommands","span":{"filename":"src/builder/command.rs","begin":[2846,4],"end":[2852,5]},"visibility":"public","docs":"Specifies that external subcommands that are invalid UTF-8 should *not* be treated as an error.\n\n**NOTE:** Using external subcommand argument values with invalid UTF-8 requires using\n[`ArgMatches::values_of_os`] or [`ArgMatches::values_of_lossy`] for those particular\narguments which may contain invalid UTF-8 values\n\n**NOTE:** Setting this requires [`Command::allow_external_subcommands`]\n\n# Platform Specific\n\nNon Windows systems only\n\n# Examples\n\n ```\n# use clap::Command;\n// Assume there is an external subcommand named \"subcmd\"\nlet m = Command::new(\"myprog\")\n    .allow_invalid_utf8_for_external_subcommands(true)\n    .allow_external_subcommands(true)\n    .get_matches_from(vec![\n        \"myprog\", \"subcmd\", \"--option\", \"value\", \"-fff\", \"--flag\"\n    ]);\n\n// All trailing arguments will be stored under the subcommand's sub-matches using an empty\n// string argument name\nmatch m.subcommand() {\n    Some((external, ext_m)) => {\n         let ext_args: Vec<&std::ffi::OsStr> = ext_m.values_of_os(\"\").unwrap().collect();\n         assert_eq!(external, \"subcmd\");\n         assert_eq!(ext_args, [\"--option\", \"value\", \"-fff\", \"--flag\"]);\n    },\n    _ => {},\n}\n```\n\n[`ArgMatches::values_of_os`]: crate::ArgMatches::values_of_os()\n[`ArgMatches::values_of_lossy`]: crate::ArgMatches::values_of_lossy()\n[`subcommands`]: crate::Command::subcommand()","links":{"crate::ArgMatches::values_of_os()":"0:4953:1658","crate::ArgMatches::values_of_lossy()":"0:4953:1658","`Command::allow_external_subcommands`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:422:2893":{"id":"0:422:2893","crate_id":0,"name":"action","span":{"filename":"src/builder/arg.rs","begin":[958,4],"end":[961,5]},"visibility":"public","docs":"Specify the behavior when parsing an argument\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"flag\")\n            .long(\"flag\")\n            .action(clap::ArgAction::Set)\n    );\n\nlet matches = cmd.try_get_matches_from([\"mycmd\", \"--flag\", \"value\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_many::<String>(\"flag\").unwrap_or_default().map(|v| v.as_str()).collect::<Vec<_>>(),\n    vec![\"value\"]\n);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["action",{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:723":{"id":"0:723","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[7,0],"end":[14,1]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:725:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:4657:2904":{"id":"b:2:3198-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4672:408":{"id":"0:4672:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[1090,15],"end":[1090,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:1397:7028":{"id":"b:2:3213-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4475:5255":{"id":"0:4475:5255","crate_id":0,"name":"long_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[96,4],"end":[96,46]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"primitive","inner":"bool"}]}}],"bindings":[]}}}}},"0:5111:8392":{"id":"0:5111:8392","crate_id":0,"name":"FlagSubCommand","span":{"filename":"src/parser/parser.rs","begin":[1691,4],"end":[1691,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:4135:4530":{"id":"0:4135:4530","crate_id":0,"name":"Equals","span":{"filename":"src/builder/arg_predicate.rs","begin":[4,4],"end":[4,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]}},"0:4328:62":{"id":"0:4328:62","crate_id":0,"name":"union","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns the union of between the flags in `self` and `other`.\n\nSpecifically, the returned set contains all flags which are\npresent in *either* `self` *or* `other`, including any which are\npresent in both (see [`Self::symmetric_difference`] if that\nis undesirable).\n\nThis is equivalent to using the `|` operator (e.g.\n[`ops::BitOr`]), as in `flags | other`.\n\n[`ops::BitOr`]: https://doc.rust-lang.org/std/ops/trait.BitOr.html","links":{"`Self::symmetric_difference`":"0:4231:2672"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4563:6729":{"id":"0:4563:6729","crate_id":0,"name":"Long","span":{"filename":"src/builder/usage_parser.rs","begin":[13,4],"end":[13,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9340:7907-0:5319:1660":{"id":"a:2:9340:7907-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:4556:6725":{"id":"a:2:3310:6658-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4748:1654":{"id":"0:4748:1654","crate_id":0,"name":"Arg","span":{"filename":"src/builder/debug_asserts.rs","begin":[354,4],"end":[354,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"0:512:4452":{"id":"0:512:4452","crate_id":0,"name":"required_unless_present_all","span":{"filename":"src/builder/arg.rs","begin":[3495,4],"end":[3502,5]},"visibility":"public","docs":"Sets this arg as [required] unless *all* of the specified arguments are present at runtime.\n\nIn other words, parsing will succeed only if user either\n* supplies the `self` arg.\n* supplies *all* of the `names` arguments.\n\n**NOTE:** If you wish for this argument to only be required unless *any of* these args are\npresent see [`Arg::required_unless_present_any`]\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .required_unless_present_all(&[\"cfg\", \"dbg\"])\n# ;\n```\n\nIn the following example, the required argument is *not* provided, but it's not an error\nbecause *all* of the `names` args have been supplied.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_unless_present_all(&[\"dbg\", \"infile\"])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"dbg\")\n        .long(\"debug\"))\n    .arg(Arg::new(\"infile\")\n        .short('i')\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"--debug\", \"-i\", \"file\"\n    ]);\n\nassert!(res.is_ok());\n```\n\nSetting [`Arg::required_unless_present_all(names)`] and *not* supplying\neither *all* of `unless` args or the `self` arg is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_unless_present_all(&[\"dbg\", \"infile\"])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"dbg\")\n        .long(\"debug\"))\n    .arg(Arg::new(\"infile\")\n        .short('i')\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[required]: Arg::required()\n[`Arg::required_unless_present_any`]: Arg::required_unless_present_any()\n[`Arg::required_unless_present_all(names)`]: Arg::required_unless_present_all()","links":{"Arg::required_unless_present_all()":"0:3972:1654","Arg::required()":"0:3972:1654","Arg::required_unless_present_any()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3729:3209":{"id":"0:3729:3209","crate_id":0,"name":"WAIT_ON_ERROR","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:5272:8973":{"id":"0:5272:8973","crate_id":0,"name":"Warning","span":{"filename":"src/output/fmt.rs","begin":[138,4],"end":[138,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2460":{"id":"0:2460","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1567,0],"end":[1571,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2462:8271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4920:660":{"id":"0:4920:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/mod.rs","begin":[1064,16],"end":[1064,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10322:2682":{"id":"2:10322:2682","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10323:1533","2:10324:11251","2:10326:10310"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1862":{"id":"0:1862","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[35,0],"end":[35,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::PossibleValuesParser","name":"PossibleValuesParser","id":"0:4657:2904","glob":false}},"0:4081:174":{"id":"0:4081:174","crate_id":0,"name":"None","span":{"filename":"src/builder/arg.rs","begin":[5275,4],"end":[5275,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4477:5257":{"id":"0:4477:5257","crate_id":0,"name":"usage_name","span":{"filename":"src/builder/command.rs","begin":[98,4],"end":[98,30]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4737:408":{"id":"0:4737:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/regex.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:4890","2:2960:8715","2:2961:10909"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2074:7565":{"id":"0:2074:7565","crate_id":0,"name":"start_error","span":{"filename":"src/error/mod.rs","begin":[1020,0],"end":[1023,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["c",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1569":{"id":"0:1569","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1294,0],"end":[1372,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1571:920","0:1572:7104","0:1574:7210"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3657":{"id":"0:3657","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3658:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4083:4885":{"id":"0:4083:4885","crate_id":0,"name":"Implicit","span":{"filename":"src/builder/arg.rs","begin":[5276,4],"end":[5276,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"}]}},"44:3248:56759":{"id":"44:3248:56759","crate_id":44,"name":"FatArch","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:3249:9673","44:3250:14719","44:3251:14720","44:3252:957","44:3253:1304","44:3254:273","44:3255:73912","44:3256:73845","44:3257:9353"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4930:660":{"id":"0:4930:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/arg_matcher.rs","begin":[16,9],"end":[16,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:3972:1654":{"id":"b:31:25-0:3972:1654","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:111:1847":{"id":"0:111:1847","crate_id":0,"name":"multicall_hostname","span":{"filename":"src/_cookbook/multicall_hostname.rs","begin":[1,0],"end":[7,62]},"visibility":"public","docs":"# Example: hostname-like CLI (Builder API)\n\n```rust\nuse clap::Command;\n\nfn main() {\n    let cmd = Command::new(env!(\"CARGO_CRATE_NAME\"))\n        .multicall(true)\n        .arg_required_else_help(true)\n        .subcommand_value_name(\"APPLET\")\n        .subcommand_help_heading(\"APPLETS\")\n        .subcommand(Command::new(\"hostname\").about(\"show hostname part of FQDN\"))\n        .subcommand(Command::new(\"dnsdomainname\").about(\"show domain name part of FQDN\"));\n\n    match cmd.get_matches().subcommand_name() {\n        Some(\"hostname\") => println!(\"www\"),\n        Some(\"dnsdomainname\") => println!(\"example.com\"),\n        _ => unreachable!(\"parser should ensure only valid subcommand names are used\"),\n    }\n}\n```\n\nSee the documentation for [`Command::multicall`][crate::App::multicall] for rationale.\n\nThis example omits the implementation of displaying address config\n\n```console\n$ hostname\nwww\n\n```\n*Note: without the links setup, we can't demonstrate the multicall behavior*","links":{"crate::App::multicall":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:4972:1709":{"id":"0:4972:1709","crate_id":0,"name":"SubCommand","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1315,0],"end":[1319,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4973:2589","0:4974:899","0:4975:2748"],"impls":["a:2:3310:6658-0:4972:1709","a:2:3269:211-0:4972:1709","a:2:9340:7907-0:4972:1709","a:2:9339:7908-0:4972:1709","a:2:3281:220-0:4972:1709","b:2:3198-0:4972:1709","b:2:2872-0:4972:1709","b:2:2869-0:4972:1709","b:2:4002-0:4972:1709","b:2:3202-0:4972:1709","b:2:3213-0:4972:1709","b:2:3208-0:4972:1709","b:5:787-0:4972:1709","b:31:25-0:4972:1709","0:4976","0:4978","0:4980","0:4981","0:4984","0:4985"]}},"2:31936:7212":{"id":"2:31936:7212","crate_id":2,"name":"MAX","span":null,"visibility":"public","docs":"The largest value that can be represented by this integer type\n(2<sup>64</sup> &minus; 1)\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(u64::MAX, 18446744073709551615);\n```","links":{},"attrs":["#[stable(feature = \"assoc_int_consts\", since = \"1.43.0\")]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"primitive","inner":"u64"},"default":"!0"}},"0:4569:232":{"id":"0:4569:232","crate_id":0,"name":"Unknown","span":{"filename":"src/builder/usage_parser.rs","begin":[16,4],"end":[16,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:896:2767":{"id":"0:896:2767","crate_id":0,"name":"try_get_matches_from","span":{"filename":"src/builder/command.rs","begin":[641,4],"end":[647,5]},"visibility":"public","docs":"Parse the specified arguments, returning a [`clap::Result`] on failure.\n\n**NOTE:** This method WILL NOT exit when `--help` or `--version` (or short versions) are\nused. It will return a [`clap::Error`], where the [`kind`] is a [`ErrorKind::DisplayHelp`]\nor [`ErrorKind::DisplayVersion`] respectively. You must call [`Error::exit`] or\nperform a [`std::process::exit`] yourself.\n\n**NOTE:** The first argument will be parsed as the binary name unless\n[`Command::no_binary_name`] is used.\n\n# Panics\n\nIf contradictory arguments or settings exist.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet arg_vec = vec![\"my_prog\", \"some\", \"args\", \"to\", \"parse\"];\n\nlet matches = Command::new(\"myprog\")\n    // Args and options go here...\n    .try_get_matches_from(arg_vec)\n    .unwrap_or_else(|e| e.exit());\n```\n[`App::get_matches_from`]: Command::get_matches_from()\n[`App::try_get_matches`]: Command::try_get_matches()\n[`Error::exit`]: crate::Error::exit()\n[`std::process::exit`]: std::process::exit()\n[`clap::Error`]: crate::Error\n[`Error::exit`]: crate::Error::exit()\n[`kind`]: crate::Error\n[`ErrorKind::DisplayHelp`]: crate::ErrorKind::DisplayHelp\n[`ErrorKind::DisplayVersion`]: crate::ErrorKind::DisplayVersion\n[`clap::Result`]: Result","links":{"crate::ErrorKind::DisplayHelp":"0:4833:1674","Result":"2:47718:205","crate::Error::exit()":"0:4886:127","crate::ErrorKind::DisplayVersion":"0:4833:1674","crate::Error":"0:4886:127","std::process::exit()":"1:7792:2754","`Command::no_binary_name`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4504:907":{"id":"0:4504:907","crate_id":0,"name":"ne","span":{"filename":"src/builder/command.rs","begin":[77,23],"end":[77,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4151:907":{"id":"0:4151:907","crate_id":0,"name":"ne","span":{"filename":"src/builder/arg_predicate.rs","begin":[1,29],"end":[1,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3666":{"id":"0:3666","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3667:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1850":{"id":"0:1850","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[31,33],"end":[31,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg_settings::ArgSettings","name":"ArgSettings","id":"0:4172:1671","glob":false}},"b:2:2872-0:4578:3333":{"id":"b:2:2872-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2400":{"id":"0:2400","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1368,0],"end":[1376,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"Creates an empty iterator.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2402:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6557:12333":{"id":"1:6557:12333","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6558:31116","1:6559:31117"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4885:604":{"id":"0:4885:604","crate_id":0,"name":"eq","span":{"filename":"src/error/kind.rs","begin":[2,29],"end":[2,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3342:2696":{"id":"0:3342:2696","crate_id":0,"name":"none","span":{"filename":"src/output/fmt.rs","begin":[54,4],"end":[56,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Into<String>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13512:7850":{"id":"2:13512:7850","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1489:7050":{"id":"0:1489:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[734,4],"end":[734,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:4541:59":{"id":"0:4541:59","crate_id":0,"name":"default","span":{"filename":"src/builder/possible_value.rs","begin":[29,16],"end":[29,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5298:5217":{"id":"b:2:3202-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1706:2901":{"id":"0:1706:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[2043,0],"end":[2049,1]},"visibility":"public","docs":"Select a [`ValueParser`] implementation from the intended type\n\nTo register a custom type with this macro, implement [`ValueParserFactory`].\n\n# Example\n\nUsage:\n```rust\n# use std::path::PathBuf;\n# use std::path::Path;\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"output\")\n            .value_parser(clap::value_parser!(PathBuf))\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"file.txt\"]).unwrap();\nlet port: &PathBuf = m.get_one(\"output\")\n    .expect(\"required\");\nassert_eq!(port, Path::new(\"file.txt\"));\n```\n\nSupported types:\n```rust\n// Built-in types\nlet parser = clap::value_parser!(String);\nassert_eq!(format!(\"{:?}\", parser), \"ValueParser::string\");\nlet parser = clap::value_parser!(std::ffi::OsString);\nassert_eq!(format!(\"{:?}\", parser), \"ValueParser::os_string\");\nlet parser = clap::value_parser!(std::path::PathBuf);\nassert_eq!(format!(\"{:?}\", parser), \"ValueParser::path_buf\");\nlet parser = clap::value_parser!(u16).range(3000..);\nassert_eq!(format!(\"{:?}\", parser), \"RangedI64ValueParser { bounds: (Included(3000), Included(65535)), target: PhantomData }\");\nlet parser = clap::value_parser!(u64).range(3000..);\nassert_eq!(format!(\"{:?}\", parser), \"RangedU64ValueParser { bounds: (Included(3000), Unbounded), target: PhantomData }\");\n\n// FromStr types\nlet parser = clap::value_parser!(usize);\nassert_eq!(format!(\"{:?}\", parser), \"_AnonymousValueParser(ValueParser::other(usize))\");\n\n// ValueEnum types\n#[derive(Copy, Clone, Debug, PartialEq, Eq)]\nenum ColorChoice {\n    Always,\n    Auto,\n    Never,\n}\nimpl clap::ValueEnum for ColorChoice {\n    // ...\n#     fn value_variants<'a>() -> &'a [Self] {\n#         &[Self::Always, Self::Auto, Self::Never]\n#     }\n#     fn to_possible_value<'a>(&self) -> Option<clap::PossibleValue<'a>> {\n#         match self {\n#             Self::Always => Some(clap::PossibleValue::new(\"always\")),\n#             Self::Auto => Some(clap::PossibleValue::new(\"auto\")),\n#             Self::Never => Some(clap::PossibleValue::new(\"never\")),\n#         }\n#     }\n}\nlet parser = clap::value_parser!(ColorChoice);\nassert_eq!(format!(\"{:?}\", parser), \"EnumValueParser(PhantomData)\");\n```","links":{"`ValueParserFactory`":"0:1643:2910","`ValueParser`":"0:1394:2909"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! value_parser {\n    ($name:ty) => { ... };\n}"},"0:508:4423":{"id":"0:508:4423","crate_id":0,"name":"default_value_ifs_os","span":{"filename":"src/builder/arg.rs","begin":[3361,4],"end":[3369,5]},"visibility":"public","docs":"Provides multiple conditional default values in the exact same manner as\n[`Arg::default_value_ifs`] only using [`OsStr`]s instead.\n\n[`Arg::default_value_ifs`]: Arg::default_value_ifs()\n[`OsStr`]: std::ffi::OsStr","links":{"std::ffi::OsStr":"1:2937:179","Arg::default_value_ifs()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ifs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31979:74221":{"id":"2:31979:74221","crate_id":2,"name":"saturating_mul","span":null,"visibility":"public","docs":"Saturating integer multiplication. Computes `self * rhs`,\nsaturating at the numeric bounds instead of overflowing.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(2u64.saturating_mul(10), 20);\nassert_eq!((u64::MAX).saturating_mul(10), u64::MAX);\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_saturating_int_methods\", since =\n\"1.47.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4886:127":{"id":"b:2:2869-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:5298:5217":{"id":"a:2:3310:6658-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13568:31616":{"id":"2:13568:31616","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4629:2907":{"id":"a:2:9339:7908-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:4910:7462":{"id":"b:2:2872-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2555:8061":{"id":"0:2555:8061","crate_id":0,"name":"vals_flatten","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[102,4],"end":[104,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4104:415":{"id":"0:4104:415","crate_id":0,"name":"cmp","span":{"filename":"src/builder/arg.rs","begin":[5273,56],"end":[5273,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3774:10049":{"id":"0:3774:10049","crate_id":0,"name":"from_bits_unchecked","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).\n\n# Safety\n\nThe caller of the `bitflags!` macro can chose to allow or\ndisallow extra bits for their bitflags type.\n\nThe caller of `from_bits_unchecked()` has to ensure that\nall bits correspond to a defined flag or that extra bits\nare valid for this bitflags type.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5156:7831":{"id":"b:2:3213-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2486":{"id":"0:2486","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1659,0],"end":[1668,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["sum","enumerate","array_chunks","reduce","try_collect","skip_while","next_chunk","advance_by","cmp","eq","peekable","max_by","cloned","collect","product","is_sorted_by_key","try_reduce","ge","collect_into","count","map_while","last","nth","any","copied","max","all","max_by_key","__iterator_get_unchecked","cmp_by","try_find","position","partition","scan","step_by","take","flatten","partial_cmp_by","rposition","lt","size_hint","partition_in_place","fuse","intersperse","partial_cmp","chain","skip","filter_map","find","eq_by","unzip","is_partitioned","rev","inspect","intersperse_with","filter","take_while","find_map","try_for_each","min","ne","is_sorted","fold","cycle","try_fold","by_ref","for_each","flat_map","min_by_key","le","zip","min_by","map","gt","is_sorted_by"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2488:2763","0:2489:922","0:2490:5300"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4331:10106":{"id":"0:4331:10106","crate_id":0,"name":"complement","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns the complement of this set of flags.\n\nSpecifically, the returned set contains all the flags which are\nnot set in `self`, but which are allowed for this type.\n\nAlternatively, it can be thought of as the set difference\nbetween [`Self::all()`] and `self` (e.g. `Self::all() - self`)\n\nThis is equivalent to using the `!` operator (e.g.\n[`ops::Not`]), as in `!flags`.\n\n[`Self::all()`]: Self::all\n[`ops::Not`]: https://doc.rust-lang.org/std/ops/trait.Not.html","links":{"Self::all":"0:4231:2672"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4726:7323":{"id":"0:4726:7323","crate_id":0,"name":"RegexSet","span":{"filename":"src/builder/regex.rs","begin":[12,4],"end":[12,31]},"visibility":"default","docs":"Used if the underlying is a regex set","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"25:2788:7323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]}},"0:3523:408":{"id":"0:3523:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/action.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4542":{"id":"0:4542","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[29,25],"end":[29,30]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4544:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:910:5499":{"id":"0:910:5499","crate_id":0,"name":"render_long_version","span":{"filename":"src/builder/command.rs","begin":[872,4],"end":[874,5]},"visibility":"public","docs":"Version message rendered as if the user ran `--version`.\n\nSee also [`Command::render_version`].\n\n### Coloring\n\nThis function does not try to color the message nor it inserts any [ANSI escape codes].\n\n### Examples\n\n```rust\n# use clap::Command;\nuse std::io;\nlet cmd = Command::new(\"myprog\");\nprintln!(\"{}\", cmd.render_long_version());\n```\n[`io::Write`]: std::io::Write\n[`-V` (short)]: Command::version()\n[`--version` (long)]: Command::long_version()\n[ANSI escape codes]: https://en.wikipedia.org/wiki/ANSI_escape_code","links":{"`Command::render_version`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2056:7132":{"id":"0:2056:7132","crate_id":0,"name":"value_validation","span":{"filename":"src/error/mod.rs","begin":[489,4],"end":[502,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["val",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["err",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8483-0:5020:1678":{"id":"b:2:8483-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8485:2763","2:8486:8270","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1431:681":{"id":"0:1431:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[384,4],"end":[387,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"resolved_path","inner":{"name":"std::ops::RangeFrom","id":"2:45981:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268:2952":{"id":"0:268:2952","crate_id":0,"name":"yaml_to_setting","span":{"filename":"src/builder/macros.rs","begin":[156,0],"end":[180,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_to_setting {\n    ($a:ident, $v:ident, $c:ident, $s:ident, $t:literal, $n:expr) => { ... };\n}"},"b:2:2869-0:3503:1652":{"id":"b:2:2869-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:4761:7449":{"id":"b:5:787-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:4807:7450":{"id":"a:2:9339:7908-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3721":{"id":"0:3721","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10387:9319","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3722:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:3972:1654":{"id":"a:2:3281:220-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:4987:8033":{"id":"a:2:9339:7908-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2720:8378":{"id":"0:2720:8378","crate_id":0,"name":"parse_help_subcommand","span":{"filename":"src/parser/parser.rs","begin":[601,4],"end":[630,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmds",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"std::convert::Infallible","id":"2:38888:8449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl Iterator<Item = &'cmd OsStr>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4131:2923":{"id":"b:2:2869-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:5038:1676":{"id":"b:2:3198-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3211:5214":{"id":"0:3211:5214","crate_id":0,"name":"HelpWriter","span":{"filename":"src/output/help.rs","begin":[1117,0],"end":[1120,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:3213:5478","0:3216:5462"],"impls":["a:2:3310:6658-0:3211:5214","a:2:3269:211-0:3211:5214","a:2:9340:7907-0:3211:5214","a:2:9339:7908-0:3211:5214","a:2:3281:220-0:3211:5214","b:2:3198-0:3211:5214","b:2:2872-0:3211:5214","b:2:2869-0:3211:5214","b:2:4002-0:3211:5214","b:2:3202-0:3211:5214","b:2:3213-0:3211:5214","b:2:3208-0:3211:5214"]}},"2:3516:9168":{"id":"2:3516:9168","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3551:3075":{"id":"0:3551:3075","crate_id":0,"name":"AllArgsOverrideSelf","span":{"filename":"src/builder/app_settings.rs","begin":[109,4],"end":[109,23]},"visibility":"default","docs":"Deprecated, replaced with [`Command::args_override_self`]","links":{"`Command::args_override_self`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::args_override_self`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::args_override_self`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4689":{"id":"0:4689","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1451,9],"end":[1451,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4706:2918":{"id":"0:4706:2918","crate_id":0,"name":"NonEmptyStringValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[1738,0],"end":[1738,39]},"visibility":"public","docs":"Parse non-empty string values\n\nSee also:\n- [`ValueParser::string`]\n\n# Example\n\nUsage:\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"append\")\n            .value_parser(clap::builder::NonEmptyStringValueParser::new())\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"true\"]).unwrap();\nlet port: &String = m.get_one(\"append\")\n    .expect(\"required\");\nassert_eq!(port, \"true\");\n```\n\nSemantics:\n```rust\n# use std::ffi::OsStr;\n# use clap::builder::TypedValueParser;\n# let cmd = clap::Command::new(\"test\");\n# let arg = None;\nlet value_parser = clap::builder::NonEmptyStringValueParser::new();\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"random\")).unwrap(), \"random\");\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"\")).is_err());\n```","links":{"`ValueParser::string`":"0:1394:2909"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:1634","a:2:3310:6658-0:4706:2918","a:2:3269:211-0:4706:2918","a:2:9340:7907-0:4706:2918","a:2:9339:7908-0:4706:2918","a:2:3281:220-0:4706:2918","b:2:3198-0:4706:2918","b:2:2872-0:4706:2918","b:2:2869-0:4706:2918","b:2:4002-0:4706:2918","b:2:3202-0:4706:2918","b:2:3213-0:4706:2918","b:2:3208-0:4706:2918","b:5:787-0:4706:2918","0:4707","0:4708","0:4710","0:1636","0:1641"]}},"0:5167:660":{"id":"0:5167:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/parser.rs","begin":[1724,22],"end":[1724,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:601":{"id":"0:601","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[4675,0],"end":[4937,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":"# Deprecated","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:697:899":{"id":"0:697:899","crate_id":0,"name":"name","span":{"filename":"src/builder/arg_group.rs","begin":[136,4],"end":[138,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgGroup::id`]","links":{"`ArgGroup::id`":"0:4105:1655"},"attrs":["#[deprecated(since = \"3.1.0\", note = \"Replaced with `ArgGroup::id`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `ArgGroup::id`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4704":{"id":"0:4704","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1647,22],"end":[1647,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4705:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1095:6382":{"id":"0:1095:6382","crate_id":0,"name":"is_propagate_version_set","span":{"filename":"src/builder/command.rs","begin":[3652,4],"end":[3654,5]},"visibility":"public","docs":"Report whether [`Command::propagate_version`] is set","links":{"`Command::propagate_version`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5261:2691":{"id":"b:2:2872-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1605":{"id":"0:1605","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1506,0],"end":[1510,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1606:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5045":{"id":"0:5045","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1592,16],"end":[1592,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5047:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1342:2899":{"id":"0:1342:2899","crate_id":0,"name":"usage_parser","span":{"filename":"src/builder/usage_parser.rs","begin":[1,0],"end":[1277,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4556:6725","0:4578:3333","0:1367:6746","0:1368:6737","0:1369:6755","0:1370:6766","0:1371:6769"],"is_stripped":false}},"a:2:3310:6658-0:4456:1667":{"id":"a:2:3310:6658-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4221:3616":{"id":"0:4221:3616","crate_id":0,"name":"Exclusive","span":{"filename":"src/builder/arg_settings.rs","begin":[267,4],"end":[267,13]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::exclusive`] and [`Arg::is_exclusive_set`]","links":{"`Arg::is_exclusive_set`":"0:3972:1654","`Arg::exclusive`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::exclusive` and `Arg::is_exclusive_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::exclusive` and `Arg::is_exclusive_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1490:7090":{"id":"0:1490:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[736,4],"end":[743,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4315:5189":{"id":"0:4315:5189","crate_id":0,"name":"bits","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4456:1667":{"id":"a:2:3281:220-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5190":{"id":"0:5190","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[9,20],"end":[9,22]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4238":{"id":"0:4238","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:472:4142":{"id":"0:472:4142","crate_id":0,"name":"default_missing_value","span":{"filename":"src/builder/arg.rs","begin":[2301,4],"end":[2303,5]},"visibility":"public","docs":"Value for the argument when the flag is present but no value is specified.\n\nThis configuration option is often used to give the user a shortcut and allow them to\nefficiently specify an option argument without requiring an explicitly value. The `--color`\nargument is a common example. By, supplying an default, such as `default_missing_value(\"always\")`,\nthe user can quickly just add `--color` to the command line to produce the desired color output.\n\n**NOTE:** using this configuration option requires the use of the `.min_values(0)` and the\n`.require_equals(true)` configuration option. These are required in order to unambiguously\ndetermine what, if any, value was supplied for the argument.\n\n# Examples\n\nFor POSIX style `--color`:\n```rust\n# use clap::{Command, Arg, ValueSource};\nfn cli() -> Command<'static> {\n    Command::new(\"prog\")\n        .arg(Arg::new(\"color\").long(\"color\")\n            .value_name(\"WHEN\")\n            .value_parser([\"always\", \"auto\", \"never\"])\n            .default_value(\"auto\")\n            .min_values(0)\n            .require_equals(true)\n            .default_missing_value(\"always\")\n            .help(\"Specify WHEN to colorize output.\")\n        )\n}\n\n// first, we'll provide no arguments\nlet m  = cli().get_matches_from(vec![\n        \"prog\"\n    ]);\nassert_eq!(m.value_of(\"color\"), Some(\"auto\"));\nassert_eq!(m.value_source(\"color\"), Some(ValueSource::DefaultValue));\n\n// next, we'll provide a runtime value to override the default (as usually done).\nlet m  = cli().get_matches_from(vec![\n        \"prog\", \"--color=never\"\n    ]);\nassert_eq!(m.value_of(\"color\"), Some(\"never\"));\nassert_eq!(m.value_source(\"color\"), Some(ValueSource::CommandLine));\n\n// finally, we will use the shortcut and only provide the argument without a value.\nlet m  = cli().get_matches_from(vec![\n        \"prog\", \"--color\"\n    ]);\nassert_eq!(m.value_of(\"color\"), Some(\"always\"));\nassert_eq!(m.value_source(\"color\"), Some(ValueSource::CommandLine));\n```\n\nFor bool literals:\n```rust\n# use clap::{Command, Arg, ValueSource, value_parser};\nfn cli() -> Command<'static> {\n    Command::new(\"prog\")\n        .arg(Arg::new(\"create\").long(\"create\")\n            .value_name(\"BOOL\")\n            .value_parser(value_parser!(bool))\n            .min_values(0)\n            .require_equals(true)\n            .default_missing_value(\"true\")\n        )\n}\n\n// first, we'll provide no arguments\nlet m  = cli().get_matches_from(vec![\n        \"prog\"\n    ]);\nassert_eq!(m.get_one::<bool>(\"create\").copied(), None);\n\n// next, we'll provide a runtime value to override the default (as usually done).\nlet m  = cli().get_matches_from(vec![\n        \"prog\", \"--create=false\"\n    ]);\nassert_eq!(m.get_one::<bool>(\"create\").copied(), Some(false));\nassert_eq!(m.value_source(\"create\"), Some(ValueSource::CommandLine));\n\n// finally, we will use the shortcut and only provide the argument without a value.\nlet m  = cli().get_matches_from(vec![\n        \"prog\", \"--create\"\n    ]);\nassert_eq!(m.get_one::<bool>(\"create\").copied(), Some(true));\nassert_eq!(m.value_source(\"create\"), Some(ValueSource::CommandLine));\n```\n\n[`ArgMatches::value_of`]: ArgMatches::value_of()\n[`Arg::takes_value(true)`]: Arg::takes_value()\n[`Arg::default_value`]: Arg::default_value()","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["val",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2823:3377":{"id":"b:2:4002-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4702":{"id":"0:4702","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1647,15],"end":[1647,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4703:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4694:2917":{"id":"0:4694:2917","crate_id":0,"name":"FalseyValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[1552,0],"end":[1552,31]},"visibility":"public","docs":"Parse false-like string values, everything else is `true`\n\nSee also:\n- [`ValueParser::bool`] for assuming non-false is true\n- [`BoolishValueParser`] for different human readable bool representations\n\n# Example\n\nUsage:\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"append\")\n            .value_parser(clap::builder::FalseyValueParser::new())\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"true\"]).unwrap();\nlet port: bool = *m.get_one(\"append\")\n    .expect(\"required\");\nassert_eq!(port, true);\n```\n\nSemantics:\n```rust\n# use std::ffi::OsStr;\n# use clap::builder::TypedValueParser;\n# let cmd = clap::Command::new(\"test\");\n# let arg = None;\nlet value_parser = clap::builder::FalseyValueParser::new();\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"random\")).unwrap(), true);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"100\")).unwrap(), true);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"\")).unwrap(), false);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"false\")).unwrap(), false);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"No\")).unwrap(), false);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"oFF\")).unwrap(), false);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"0\")).unwrap(), false);\n```","links":{"`ValueParser::bool`":"0:1394:2909","`BoolishValueParser`":"0:4700:2915"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:1607","a:2:3310:6658-0:4694:2917","a:2:3269:211-0:4694:2917","a:2:9340:7907-0:4694:2917","a:2:9339:7908-0:4694:2917","a:2:3281:220-0:4694:2917","b:2:3198-0:4694:2917","b:2:2872-0:4694:2917","b:2:2869-0:4694:2917","b:2:4002-0:4694:2917","b:2:3202-0:4694:2917","b:2:3213-0:4694:2917","b:2:3208-0:4694:2917","b:5:787-0:4694:2917","0:4695","0:4696","0:4698","0:1612","0:1617"]}},"a:2:9340:7907-0:4664:2905":{"id":"a:2:9340:7907-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23020:12283":{"id":"2:23020:12283","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23010:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2840:8574":{"id":"0:2840:8574","crate_id":0,"name":"validate_conflicts","span":{"filename":"src/parser/validator.rs","begin":[167,4],"end":[187,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["conflicts",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4175:3776":{"id":"0:4175:3776","crate_id":0,"name":"MultipleValues","span":{"filename":"src/builder/arg_settings.rs","begin":[52,4],"end":[52,18]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::multiple_values`] and [`Arg::is_multiple_values_set`]","links":{"`Arg::multiple_values`":"0:3972:1654","`Arg::is_multiple_values_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::multiple_values` and `Arg::`is_multiple_values_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::multiple_values` and `Arg::`is_multiple_values_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:5256":{"id":"0:5256","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[8,29],"end":[8,38]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5257:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4312:3279":{"id":"0:4312:3279","crate_id":0,"name":"NO_OP","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"a:2:3269:211-0:3647:2672":{"id":"a:2:3269:211-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4660":{"id":"0:4660","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[981,9],"end":[981,14]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4661:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2892:8650":{"id":"0:2892:8650","crate_id":0,"name":"gather_direct_conflicts","span":{"filename":"src/parser/validator.rs","begin":[643,4],"end":[675,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg_id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2057:7553":{"id":"0:2057:7553","crate_id":0,"name":"wrong_number_of_values","span":{"filename":"src/error/mod.rs","begin":[504,4],"end":[527,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["num_vals",{"kind":"primitive","inner":"usize"}],["curr_vals",{"kind":"primitive","inner":"usize"}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:3211:5214":{"id":"b:2:2872-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:4172:1671":{"id":"a:2:9340:7907-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:5220:7335":{"id":"a:2:9339:7908-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:205:2843":{"id":"0:205:2843","crate_id":0,"name":"augment_args","span":{"filename":"src/derive.rs","begin":[397,4],"end":[397,53]},"visibility":"default","docs":"Append to [`Command`] so it can instantiate `Self`.\n\nSee also [`CommandFactory`].","links":{"`Command`":"0:853:1653","`CommandFactory`":"0:190:1662"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3013":{"id":"0:3013","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[56,0],"end":[63,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3014:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2063:7566":{"id":"0:2063:7566","crate_id":0,"name":"write_dynamic_context","span":{"filename":"src/error/mod.rs","begin":[618,4],"end":[976,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4742:7344":{"id":"b:2:3208-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,46],"end":[109,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::derive::FromArgMatches","name":"FromArgMatches","id":"0:199:1663","glob":false}},"0:4462:5246":{"id":"0:4462:5246","crate_id":0,"name":"display_name","span":{"filename":"src/builder/command.rs","begin":[83,4],"end":[83,32]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2306:8041":{"id":"0:2306:8041","crate_id":0,"name":"contains_id","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[316,4],"end":[319,5]},"visibility":"public","docs":"Check if values are present for the argument or group id\n\n*NOTE:* This will always return `true` if [`default_value`] has been set.\n[`ArgMatches::value_source`] can be used to check if a value is present at runtime.\n\n# Panics\n\nIf `id` is is not a valid argument or group name.  To handle this case programmatically, see\n[`ArgMatches::try_contains_id`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myprog\")\n    .arg(Arg::new(\"debug\")\n        .short('d'))\n    .get_matches_from(vec![\n        \"myprog\", \"-d\"\n    ]);\n\nassert!(m.contains_id(\"debug\"));\n```\n\n[`default_value`]: crate::Arg::default_value()","links":{"`ArgMatches::value_source`":"0:4953:1658","crate::Arg::default_value()":"0:3972:1654","`ArgMatches::try_contains_id`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3595:3162":{"id":"0:3595:3162","crate_id":0,"name":"DisableVersionFlag","span":{"filename":"src/builder/app_settings.rs","begin":[342,4],"end":[342,22]},"visibility":"default","docs":"Deprecated, replaced with [`Command::disable_version_flag`] and\n[`Command::is_disable_version_flag_set`]","links":{"`Command::is_disable_version_flag_set`":"0:4456:1667","`Command::disable_version_flag`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::disable_version_flag` and `Command::is_disable_version_flag_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::disable_version_flag` and `Command::is_disable_version_flag_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:506:4418":{"id":"0:506:4418","crate_id":0,"name":"default_value_ifs","span":{"filename":"src/builder/arg.rs","begin":[3345,4],"end":[3353,5]},"visibility":"public","docs":"Specifies multiple values and conditions in the same manner as [`Arg::default_value_if`].\n\nThe method takes a slice of tuples in the `(arg, Option<val>, default)` format.\n\n**NOTE**: The conditions are stored in order and evaluated in the same order. I.e. the first\nif multiple conditions are true, the first one found will be applied and the ultimate value.\n\n# Examples\n\nFirst we use the default value only if another arg is present at runtime.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\"))\n    .arg(Arg::new(\"opt\")\n        .long(\"opt\")\n        .takes_value(true))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value_ifs(&[\n            (\"flag\", None, Some(\"default\")),\n            (\"opt\", Some(\"channal\"), Some(\"chan\")),\n        ]))\n    .get_matches_from(vec![\n        \"prog\", \"--opt\", \"channal\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), Some(\"chan\"));\n```\n\nNext we run the same test, but without providing `--flag`.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value_ifs(&[\n            (\"flag\", None, Some(\"default\")),\n            (\"opt\", Some(\"channal\"), Some(\"chan\")),\n        ]))\n    .get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), None);\n```\n\nWe can also see that these values are applied in order, and if more than one condition is\ntrue, only the first evaluated \"wins\"\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\"))\n    .arg(Arg::new(\"opt\")\n        .long(\"opt\")\n        .takes_value(true))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value_ifs(&[\n            (\"flag\", None, Some(\"default\")),\n            (\"opt\", Some(\"channal\"), Some(\"chan\")),\n        ]))\n    .get_matches_from(vec![\n        \"prog\", \"--opt\", \"channal\", \"--flag\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), Some(\"default\"));\n```\n[`Arg::takes_value(true)`]: Arg::takes_value()\n[`Arg::default_value_if`]: Arg::default_value_if()","links":{"Arg::default_value_if()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ifs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3805:1355":{"id":"0:3805:1355","crate_id":0,"name":"sub","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Returns the set difference of the two sets of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:984:5245":{"id":"0:984:5245","crate_id":0,"name":"short_flag","span":{"filename":"src/builder/command.rs","begin":[2277,4],"end":[2280,5]},"visibility":"public","docs":"Sets the short version of the subcommand flag without the preceding `-`.\n\nAllows the subcommand to be used as if it were an [`Arg::short`].\n\n# Examples\n\n```\n# use clap::{Command, Arg, ArgAction};\nlet matches = Command::new(\"pacman\")\n    .subcommand(\n        Command::new(\"sync\").short_flag('S').arg(\n            Arg::new(\"search\")\n                .short('s')\n                .long(\"search\")\n                .action(ArgAction::SetTrue)\n                .help(\"search remote repositories for matching strings\"),\n        ),\n    )\n    .get_matches_from(vec![\"pacman\", \"-Ss\"]);\n\nassert_eq!(matches.subcommand_name().unwrap(), \"sync\");\nlet sync_matches = matches.subcommand_matches(\"sync\").unwrap();\nassert!(*sync_matches.get_one::<bool>(\"search\").expect(\"defaulted by clap\"));\n```\n[`Arg::short`]: Arg::short()","links":{"Arg::short()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["short",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4641:2920":{"id":"b:2:3198-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"44:4637:56840":{"id":"44:4637:56840","crate_id":44,"name":"ImageOptionalHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:4638:14597","44:4639:14983","44:4640:14984","44:4641:14985","44:4642:14986","44:4643:14987","44:4644:14988","44:4645:14989","44:4646:14990","44:4647:14491","44:4648:14991","44:4649:14992","44:4650:14993","44:4651:14994","44:4652:14995","44:4653:14996","44:4654:14997","44:4655:14998","44:4656:14999","44:4657:15000","44:4658:15001","44:4659:15002","44:4660:15003","44:4661:15004","44:4662:15005","44:4663:15006","44:4664:15007","44:4665:15008","44:4666:15009","44:4667:15010"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4951":{"id":"0:4951","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[41,15],"end":[41,20]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4952:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4302:5182":{"id":"0:4302:5182","crate_id":0,"name":"HIDE_DEFAULT_VAL","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1904":{"id":"0:1904","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[49,0],"end":[49,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::NonEmptyStringValueParser","name":"NonEmptyStringValueParser","id":"0:4706:2918","glob":false}},"1:6861:12277":{"id":"1:6861:12277","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6862:31085"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:4947:3033":{"id":"b:2:3213-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13619:23435":{"id":"2:13619:23435","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4952:408":{"id":"0:4952:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/any_value.rs","begin":[41,15],"end":[41,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2152:6498":{"id":"0:2152:6498","crate_id":0,"name":"propagate_globals","span":{"filename":"src/parser/arg_matcher.rs","begin":[54,4],"end":[61,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["global_arg_vec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3667:660":{"id":"0:3667:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191:2561":{"id":"0:191:2561","crate_id":0,"name":"command","span":{"filename":"src/derive.rs","begin":[254,4],"end":[257,5]},"visibility":"default","docs":"Build a [`Command`] that can instantiate `Self`.\n\nSee [`FromArgMatches::from_arg_matches_mut`] for instantiating `Self`.","links":{"`FromArgMatches::from_arg_matches_mut`":"0:199:1663","`Command`":"0:853:1653"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1901":{"id":"0:1901","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[48,0],"end":[48,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::FalseyValueParser","name":"FalseyValueParser","id":"0:4694:2917","glob":false}},"2:13600:8492":{"id":"2:13600:8492","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:16004:9059","self::pattern":"2:13134:9255"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4942:7020":{"id":"a:2:3310:6658-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1313":{"id":"0:1313","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[37,0],"end":[137,1]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1315:920","0:1316:2603","0:1317:4299","0:1318:272","0:1319:3367"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4621":{"id":"0:4621","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,27],"end":[27,29]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:3252:5215":{"id":"a:2:9340:7907-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2154:4858":{"id":"0:2154:4858","crate_id":0,"name":"get","span":{"filename":"src/parser/arg_matcher.rs","begin":[103,4],"end":[105,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2372:8025":{"id":"0:2372:8025","crate_id":0,"name":"try_remove_one","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1132,4],"end":[1145,5]},"visibility":"public","docs":"Non-panicking version of [`ArgMatches::remove_one`]","links":{"`ArgMatches::remove_one`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1609:3893":{"id":"0:1609:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[1560,4],"end":[1566,5]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2397:8271":{"id":"0:2397:8271","crate_id":0,"name":"next_back","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1360,4],"end":[1362,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5291:9008":{"id":"b:2:3202-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3264:8905":{"id":"0:3264:8905","crate_id":0,"name":"create_help_usage","span":{"filename":"src/output/usage.rs","begin":[52,4],"end":[160,5]},"visibility":{"restricted":{"parent":"0:3223:5461","path":"::output::usage"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["incl_reqs",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4120":{"id":"0:4120","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[80,25],"end":[80,34]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4659:1542":{"id":"0:4659:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/value_parser.rs","begin":[982,32],"end":[982,66]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"super::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4792:5215":{"id":"0:4792:5215","crate_id":0,"name":"Usage","span":{"filename":"src/error/context.rs","begin":[36,4],"end":[36,9]},"visibility":"default","docs":"A usage string","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2030:7500":{"id":"0:2030:7500","crate_id":0,"name":"set_wait_on_exit","span":{"filename":"src/error/mod.rs","begin":[227,4],"end":[230,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3977:2603":{"id":"0:3977:2603","crate_id":0,"name":"help","span":{"filename":"src/builder/arg.rs","begin":[65,4],"end":[65,39]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:463:4014":{"id":"0:463:4014","crate_id":0,"name":"require_value_delimiter","span":{"filename":"src/builder/arg.rs","begin":[2002,4],"end":[2008,5]},"visibility":"public","docs":"Specifies that *multiple values* may only be set using the delimiter.\n\nThis means if an option is encountered, and no delimiter is found, it is assumed that no\nadditional values for that option follow. This is unlike the default, where it is generally\nassumed that more values will follow regardless of whether or not a delimiter is used.\n\n**NOTE:** The default is `false`.\n\n**NOTE:** Setting this requires [`Arg::use_value_delimiter`] and\n[`Arg::takes_value`]\n\n**NOTE:** It's a good idea to inform the user that use of a delimiter is required, either\nthrough help text or other means.\n\n# Examples\n\nThese examples demonstrate what happens when `require_delimiter(true)` is used. Notice\neverything works in this first example, as we use a delimiter, as expected.\n\n```rust\n# use clap::{Command, Arg};\nlet delims = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .short('o')\n        .takes_value(true)\n        .use_value_delimiter(true)\n        .require_delimiter(true)\n        .multiple_values(true))\n    .get_matches_from(vec![\n        \"prog\", \"-o\", \"val1,val2,val3\",\n    ]);\n\nassert!(delims.contains_id(\"opt\"));\nassert_eq!(delims.values_of(\"opt\").unwrap().collect::<Vec<_>>(), [\"val1\", \"val2\", \"val3\"]);\n```\n\nIn this next example, we will *not* use a delimiter. Notice it's now an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .short('o')\n        .takes_value(true)\n        .use_value_delimiter(true)\n        .require_delimiter(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"-o\", \"val1\", \"val2\", \"val3\",\n    ]);\n\nassert!(res.is_err());\nlet err = res.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::UnknownArgument);\n```\n\nWhat's happening is `-o` is getting `val1`, and because delimiters are required yet none\nwere present, it stops parsing `-o`. At this point it reaches `val2` and because no\npositional arguments have been defined, it's an error of an unexpected argument.\n\nIn this final example, we contrast the above with `clap`'s default behavior where the above\nis *not* an error.\n\n```rust\n# use clap::{Command, Arg};\nlet delims = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .short('o')\n        .takes_value(true)\n        .multiple_values(true))\n    .get_matches_from(vec![\n        \"prog\", \"-o\", \"val1\", \"val2\", \"val3\",\n    ]);\n\nassert!(delims.contains_id(\"opt\"));\nassert_eq!(delims.values_of(\"opt\").unwrap().collect::<Vec<_>>(), [\"val1\", \"val2\", \"val3\"]);\n```","links":{"`Arg::takes_value`":"0:3972:1654","`Arg::use_value_delimiter`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3257":{"id":"0:3257","crate_id":0,"name":null,"span":{"filename":"src/output/usage.rs","begin":[16,0],"end":[449,1]},"visibility":{"restricted":{"parent":"0:3223:5461","path":"::output::usage"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["0:3260:920","0:3261:2596","0:3262:5503","0:3263:8401","0:3264:8905","0:3274:8906","0:3278:8916","0:3298:8910","0:3300:6526"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3547:3068":{"id":"0:3547:3068","crate_id":0,"name":"AllowHyphenValues","span":{"filename":"src/builder/app_settings.rs","begin":[91,4],"end":[91,21]},"visibility":"default","docs":"Deprecated, replaced with [`Command::allow_hyphen_values`] and\n[`Arg::is_allow_hyphen_values_set`]","links":{"`Arg::is_allow_hyphen_values_set`":"0:3972:1654","`Command::allow_hyphen_values`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::allow_hyphen_values` and `Arg::is_allow_hyphen_values_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::allow_hyphen_values` and `Arg::is_allow_hyphen_values_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:543:2588":{"id":"0:543:2588","crate_id":0,"name":"get_id","span":{"filename":"src/builder/arg.rs","begin":[4257,4],"end":[4259,5]},"visibility":"public","docs":"Get the name of the argument","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121:1696":{"id":"0:121:1696","crate_id":0,"name":"_features","span":{"filename":"src/_features.rs","begin":[1,0],"end":[27,80]},"visibility":"public","docs":"## Documentation: Feature Flags\n\nAvailable [compile-time feature flags](https://doc.rust-lang.org/cargo/reference/features.html#dependency-features)\n\n#### Default Features\n\n* **std**: _Not Currently Used._ Placeholder for supporting `no_std` environments in a backwards compatible manner.\n* **color**: Turns on colored error messages.\n* **suggestions**: Turns on the `Did you mean '--myoption'?` feature for when users make typos.\n\n#### Optional features\n\n* **deprecated**: Guided experience to prepare for next breaking release (at different stages of development, this may become default)\n* **derive**: Enables the custom derive (i.e. `#[derive(Parser)]`). Without this you must use one of the other methods of creating a `clap` CLI listed above.\n* **cargo**: Turns on macros that read values from [`CARGO_*` environment variables](https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-crates).\n* **env**: Turns on the usage of environment variables during parsing.\n* **regex**: Enables regex validators.\n* **unicode**: Turns on support for unicode characters (including emoji) in arguments and help messages.\n* **wrap_help**: Turns on the help text wrapping feature, based on the terminal size.\n\n#### Experimental features\n\n**Warning:** These may contain breaking changes between minor releases.\n\n* **unstable-replace**: Enable [`Command::replace`](https://github.com/clap-rs/clap/issues/2836)\n* **unstable-grouped**: Enable [`ArgMatches::grouped_values_of`](https://github.com/clap-rs/clap/issues/2924)\n* **unstable-v4**: Preview features which will be stable on the v4.0 release","links":{},"attrs":["#[cfg(feature = \"unstable-doc\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,30],"end":[109,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::derive::CommandFactory","name":"CommandFactory","id":"0:190:1662","glob":false}},"0:668:2922":{"id":"0:668:2922","crate_id":0,"name":"display_arg_val","span":{"filename":"src/builder/arg.rs","begin":[5204,0],"end":[5271,1]},"visibility":"crate","docs":"Write the values such as <name1> <name2>","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["write",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"primitive","inner":"bool"}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:5:787-0:5070:1677":{"id":"b:5:787-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:5070:1677":{"id":"b:2:3213-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4079:604":{"id":"0:4079:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/arg.rs","begin":[5190,27],"end":[5190,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4823:408":{"id":"0:4823:408","crate_id":0,"name":"clone","span":{"filename":"src/error/context.rs","begin":[42,9],"end":[42,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:993:5255":{"id":"0:993:5255","crate_id":0,"name":"long_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[2485,4],"end":[2490,5]},"visibility":"public","docs":"Add aliases, which function as \"hidden\" long flag subcommands.\n\nThese will automatically dispatch as if this subcommand was used. This is more efficient,\nand easier than creating multiple hidden subcommands as one only needs to check for the\nexistence of this command, and not all variants.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n            .subcommand(Command::new(\"test\").long_flag(\"test\")\n                .long_flag_aliases(&[\"testing\", \"testall\", \"test_all\"]))\n                .arg(Arg::new(\"input\")\n                            .help(\"the file to add\")\n                            .required(false))\n            .get_matches_from(vec![\"myprog\", \"--testing\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3986:3363":{"id":"0:3986:3363","crate_id":0,"name":"r_ifs","span":{"filename":"src/builder/arg.rs","begin":[74,4],"end":[74,43]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}}},"0:5141:7832":{"id":"0:5141:7832","crate_id":0,"name":"PendingArg","span":{"filename":"src/parser/parser.rs","begin":[1718,0],"end":[1722,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:5142:2589","0:5143:732","0:5144:7886"],"impls":["a:2:3310:6658-0:5141:7832","a:2:3269:211-0:5141:7832","a:2:9340:7907-0:5141:7832","a:2:9339:7908-0:5141:7832","a:2:3281:220-0:5141:7832","b:2:3198-0:5141:7832","b:2:2872-0:5141:7832","b:2:2869-0:5141:7832","b:2:4002-0:5141:7832","b:2:3202-0:5141:7832","b:2:3213-0:5141:7832","b:2:3208-0:5141:7832","b:5:787-0:5141:7832","b:31:25-0:5141:7832","0:5145","0:5147","0:5149","0:5150","0:5153","0:5154"]}},"a:2:9340:7907-0:4694:2917":{"id":"a:2:9340:7907-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5775:12302":{"id":"1:5775:12302","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:31056","1:5777:31057","1:5778:31058","1:5779:31059"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2402:59":{"id":"0:2402:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1369,4],"end":[1375,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31991:74228":{"id":"2:31991:74228","crate_id":2,"name":"wrapping_shl","span":null,"visibility":"public","docs":"Panic-free bitwise shift-left; yields `self << mask(rhs)`,\nwhere `mask` removes any high-order bits of `rhs` that\nwould cause the shift to exceed the bitwidth of the type.\n\nNote that this is *not* the same as a rotate-left; the\nRHS of a wrapping shift-left is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a [`rotate_left`](Self::rotate_left) function,\nwhich may be what you want instead.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(1u64.wrapping_shl(7), 128);\nassert_eq!(1u64.wrapping_shl(128), 1);\n```","links":{"Self::rotate_left":"1:16024:9076"},"attrs":["#[stable(feature = \"num_wrapping\", since = \"1.2.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4581:4930":{"id":"0:4581:4930","crate_id":0,"name":"pos","span":{"filename":"src/builder/usage_parser.rs","begin":[23,4],"end":[23,14]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:3810:952":{"id":"0:3810:952","crate_id":0,"name":"not","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Returns the complement of this set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4607:6999":{"id":"0:4607:6999","crate_id":0,"name":"Username","span":{"filename":"src/builder/value_hint.rs","begin":[59,4],"end":[59,12]},"visibility":"default","docs":"Name of a local operating system user.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4985":{"id":"0:4985","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,34],"end":[1314,36]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1541:681":{"id":"0:1541:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[1049,4],"end":[1051,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["values",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4643":{"id":"0:4643","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[764,15],"end":[764,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4644:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:4987:8033":{"id":"a:2:3281:220-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1404:186":{"id":"0:1404:186","crate_id":0,"name":"PathBuf","span":{"filename":"src/builder/value_parser.rs","begin":[69,4],"end":[69,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4708":{"id":"0:4708","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1736,15],"end":[1736,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4709:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1543":{"id":"0:1543","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1096,0],"end":[1174,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1545:920","0:1546:7104","0:1548:7210"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5124:2580":{"id":"0:5124:2580","crate_id":0,"name":"arg","span":{"filename":"src/parser/parser.rs","begin":[1701,8],"end":[1701,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2162:779":{"id":"0:2162:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/arg_matcher.rs","begin":[135,4],"end":[137,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"indexmap::map::Iter","id":"31:672:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4172:1671":{"id":"b:2:3208-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5322:5551":{"id":"0:5322:5551","crate_id":0,"name":"Always","span":{"filename":"src/util/color.rs","begin":[38,4],"end":[38,10]},"visibility":"default","docs":"Enables colored output regardless of whether or not the output is going to a terminal/TTY.\n\n# Platform Specific\n\nThis setting only applies to Unix, Linux, and macOS (i.e. non-Windows platforms).\n\n# Examples\n\n ```no_run\n# use clap::{Command, ColorChoice};\nCommand::new(\"myprog\")\n    .color(ColorChoice::Always)\n    .get_matches();\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2823:3377":{"id":"0:2823:3377","crate_id":0,"name":"Validator","span":{"filename":"src/parser/validator.rs","begin":[11,0],"end":[14,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:2826:2562","0:2827:2596"],"impls":["0:2828","a:2:3310:6658-0:2823:3377","a:2:3269:211-0:2823:3377","a:2:9340:7907-0:2823:3377","a:2:9339:7908-0:2823:3377","a:2:3281:220-0:2823:3377","b:2:3198-0:2823:3377","b:2:2872-0:2823:3377","b:2:2869-0:2823:3377","b:2:4002-0:2823:3377","b:2:3202-0:2823:3377","b:2:3213-0:2823:3377","b:2:3208-0:2823:3377"]}},"2:13528:31607":{"id":"2:13528:31607","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49822:9273","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4126":{"id":"0:4126","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[80,36],"end":[80,38]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:5020:1678":{"id":"a:2:3269:211-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:4131:2923":{"id":"a:2:3310:6658-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3423:9223":{"id":"2:3423:9223","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4486:5263":{"id":"0:4486:5263","crate_id":0,"name":"subcommands","span":{"filename":"src/builder/command.rs","begin":[107,4],"end":[107,32]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3198-0:5031:8079":{"id":"b:2:3198-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:389:899":{"id":"0:389:899","crate_id":0,"name":"name","span":{"filename":"src/builder/arg.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::id`]","links":{"`Arg::id`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note = \"Replaced with `Arg::id`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::id`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3746:3237":{"id":"0:3746:3237","crate_id":0,"name":"COLOR_NEVER","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1599":{"id":"0:1599","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1469,0],"end":[1504,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1600:7050","0:1601:7090","0:1604:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:430:3847":{"id":"0:430:3847","crate_id":0,"name":"value_names","span":{"filename":"src/builder/arg.rs","begin":[1478,4],"end":[1481,5]},"visibility":"public","docs":"Placeholders for the argument's values in the help message / usage.\n\nThese names are cosmetic only, used for help and usage strings only. The names are **not**\nused to access arguments. The values of the arguments are accessed in numeric order (i.e.\nif you specify two names `one` and `two` `one` will be the first matched value, `two` will\nbe the second).\n\nThis setting can be very helpful when describing the type of input the user should be\nusing, such as `FILE`, `INTERFACE`, etc. Although not required, it's somewhat convention to\nuse all capital letters for the value name.\n\n**Pro Tip:** It may help to use [`Arg::next_line_help(true)`] if there are long, or\nmultiple value names in order to not throw off the help text alignment of all options.\n\n**NOTE:** implicitly sets [`Arg::takes_value(true)`] and [`Arg::multiple_values(true)`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"speed\")\n    .short('s')\n    .value_names(&[\"fast\", \"slow\"]);\n```\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"io\")\n        .long(\"io-files\")\n        .value_names(&[\"INFILE\", \"OUTFILE\"]))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nRunning the above program produces the following output\n\n```text\nvalnames\n\nUSAGE:\n   valnames [OPTIONS]\n\nOPTIONS:\n    -h, --help                       Print help information\n    --io-files <INFILE> <OUTFILE>    Some help text\n    -V, --version                    Print version information\n```\n[`Arg::next_line_help(true)`]: Arg::next_line_help()\n[`Arg::number_of_values`]: Arg::number_of_values()\n[`Arg::takes_value(true)`]: Arg::takes_value()\n[`Arg::multiple_values(true)`]: Arg::multiple_values()","links":{"Arg::takes_value()":"0:3972:1654","Arg::next_line_help()":"0:3972:1654","Arg::multiple_values()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5182:3335":{"id":"b:2:2872-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4943:2669":{"id":"0:4943:2669","crate_id":0,"name":"inner","span":{"filename":"src/parser/matches/any_value.rs","begin":[3,4],"end":[3,68]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"std::sync::Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"std::any::Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}},"0:5128:2580":{"id":"0:5128:2580","crate_id":0,"name":"arg","span":{"filename":"src/parser/parser.rs","begin":[1707,8],"end":[1707,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3213-0:4664:2905":{"id":"b:2:3213-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4303:5183":{"id":"0:4303:5183","crate_id":0,"name":"CASE_INSENSITIVE","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1599,0],"end":[1603,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1618:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3754:3252":{"id":"0:3754:3252","crate_id":0,"name":"TRAILING_VALUES","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:523:4512":{"id":"0:523:4512","crate_id":0,"name":"required_if_eq_all","span":{"filename":"src/builder/arg.rs","begin":[3818,4],"end":[3822,5]},"visibility":"public","docs":"Specify this argument is [required] based on multiple conditions.\n\nThe conditions are set up in a `(arg, val)` style tuple. The requirement will only become\nvalid if every one of the specified `arg`'s value equals its corresponding `val`.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .required_if_eq_all(&[\n        (\"extra\", \"val\"),\n        (\"option\", \"spec\")\n    ])\n# ;\n```\n\nSetting `Arg::required_if_eq_all(&[(arg, val)])` makes this arg required if all of the `arg`s\nare used at runtime and every value is equal to its corresponding `val`. If the `arg`'s value is\nanything other than `val`, this argument isn't required.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_if_eq_all(&[\n            (\"extra\", \"val\"),\n            (\"option\", \"spec\")\n        ])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"extra\")\n        .takes_value(true)\n        .long(\"extra\"))\n    .arg(Arg::new(\"option\")\n        .takes_value(true)\n        .long(\"option\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--option\", \"spec\"\n    ]);\n\nassert!(res.is_ok()); // We didn't use --option=spec --extra=val so \"cfg\" isn't required\n```\n\nSetting `Arg::required_if_eq_all(&[(arg, val)])` and having all of the `arg`s used with its\nvalue of `val` but *not* using this arg is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_if_eq_all(&[\n            (\"extra\", \"val\"),\n            (\"option\", \"spec\")\n        ])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"extra\")\n        .takes_value(true)\n        .long(\"extra\"))\n    .arg(Arg::new(\"option\")\n        .takes_value(true)\n        .long(\"option\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--extra\", \"val\", \"--option\", \"spec\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[required]: Arg::required()","links":{"Arg::required()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ifs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4987:8033":{"id":"b:2:4002-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1232:6601":{"id":"0:1232:6601","crate_id":0,"name":"get_non_positionals","span":{"filename":"src/builder/command.rs","begin":[4831,4],"end":[4833,5]},"visibility":"crate","docs":"Iterate through the *flags* & *options* arguments.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13533:7345":{"id":"2:13533:7345","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:16004:9059","self::pattern":"2:13134:9255"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1047:6314":{"id":"0:1047:6314","crate_id":0,"name":"get_all_short_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[3388,4],"end":[3390,5]},"visibility":"public","docs":"Iterate through the set of *all* the short aliases for this subcommand, both visible and hidden.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"char"}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:1394:2909":{"id":"a:2:9340:7907-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1753:681":{"id":"0:1753:681","crate_id":0,"name":"from","span":{"filename":"src/builder/regex.rs","begin":[33,4],"end":[35,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["r",{"kind":"resolved_path","inner":{"name":"Regex","id":"25:2978:7322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2442:922":{"id":"0:2442:922","crate_id":0,"name":"next","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1518,4],"end":[1520,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31940:74193":{"id":"2:31940:74193","crate_id":2,"name":"count_zeros","span":null,"visibility":"public","docs":"Returns the number of zeros in the binary representation of `self`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(u64::MAX.count_zeros(), 0);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:917:5545":{"id":"0:917:5545","crate_id":0,"name":"dont_delimit_trailing_values","span":{"filename":"src/builder/command.rs","begin":[994,4],"end":[1000,5]},"visibility":"public","docs":"Disables the automatic delimiting of values after `--` or when [`Command::trailing_var_arg`]\nwas used.\n\n**NOTE:** The same thing can be done manually by setting the final positional argument to\n[`Arg::use_value_delimiter(false)`]. Using this setting is safer, because it's easier to locate\nwhen making changes.\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .dont_delimit_trailing_values(true)\n    .get_matches();\n```\n\n[`Arg::use_value_delimiter(false)`]: crate::Arg::use_value_delimiter()","links":{"`Command::trailing_var_arg`":"0:4456:1667","crate::Arg::use_value_delimiter()":"0:3972:1654"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:927:5608":{"id":"0:927:5608","crate_id":0,"name":"help_expected","span":{"filename":"src/builder/command.rs","begin":[1266,4],"end":[1272,5]},"visibility":"public","docs":" Panic if help descriptions are omitted.\n\n **NOTE:** When deriving [`Parser`][crate::Parser], you could instead check this at\n compile-time with `#![deny(missing_docs)]`\n\n **NOTE:** This choice is propagated to all child subcommands.\n\n # Examples\n\n ```rust\n # use clap::{Command, Arg};\n Command::new(\"myprog\")\n     .help_expected(true)\n     .arg(\n         Arg::new(\"foo\").help(\"It does foo stuff\")\n         // As required via `help_expected`, a help message was supplied\n      )\n #    .get_matches();\n ```\n\n # Panics\n\n ```rust,no_run\n # use clap::{Command, Arg};\n Command::new(\"myapp\")\n     .help_expected(true)\n     .arg(\n         Arg::new(\"foo\")\n         // Someone forgot to put .about(\"...\") here\n         // Since the setting `help_expected` is activated, this will lead to\n         // a panic (if you are in debug mode)\n     )\n #   .get_matches();\n```","links":{"crate::Parser":"0:164:1664"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4318:10049":{"id":"0:4318:10049","crate_id":0,"name":"from_bits_unchecked","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).\n\n# Safety\n\nThe caller of the `bitflags!` macro can chose to allow or\ndisallow extra bits for their bitflags type.\n\nThe caller of `from_bits_unchecked()` has to ensure that\nall bits correspond to a defined flag or that extra bits\nare valid for this bitflags type.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5182:3335":{"id":"b:2:3213-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:5038:1676":{"id":"b:2:4002-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2041:7514":{"id":"0:2041:7514","crate_id":0,"name":"argument_conflict","span":{"filename":"src/error/mod.rs","begin":[278,4],"end":[298,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["others",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1659:1664":{"id":"0:1659:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1849,4],"end":[1849,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}},"b:2:3213-0:5031:8079":{"id":"b:2:3213-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1031:6303":{"id":"0:1031:6303","crate_id":0,"name":"get_next_help_heading","span":{"filename":"src/builder/command.rs","begin":[3352,4],"end":[3354,5]},"visibility":"public","docs":"Get the custom section heading specified via [`Command::help_heading`].\n\n[`App::help_heading`]: Command::help_heading()","links":{"`Command::help_heading`":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4088:1542":{"id":"0:4088:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/arg.rs","begin":[5277,13],"end":[5277,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2579":{"id":"0:2579","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[6,0],"end":[6,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"any_value::AnyValueId","name":"AnyValueId","id":"0:4947:3033","glob":false}},"0:3803":{"id":"0:3803","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:9212","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3804:181","0:3805:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4910:7462":{"id":"0:4910:7462","crate_id":0,"name":"Message","span":{"filename":"src/error/mod.rs","begin":[1065,0],"end":[1068,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4911:7638","0:4914:7639"],"impls":["0:2083","a:2:3310:6658-0:4910:7462","a:2:3269:211-0:4910:7462","a:2:9340:7907-0:4910:7462","a:2:9339:7908-0:4910:7462","a:2:3281:220-0:4910:7462","b:2:3198-0:4910:7462","b:2:2872-0:4910:7462","b:2:2869-0:4910:7462","b:2:4002-0:4910:7462","b:2:3202-0:4910:7462","b:2:3213-0:4910:7462","b:2:3208-0:4910:7462","b:5:787-0:4910:7462","0:4917","0:4919","0:2086","0:2088"]}},"0:2223:660":{"id":"0:2223:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/any_value.rs","begin":[85,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4109:298":{"id":"0:4109:298","crate_id":0,"name":"args","span":{"filename":"src/builder/arg_group.rs","begin":[84,4],"end":[84,28]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"31:22:9628":{"id":"31:22:9628","crate_id":31,"name":"Equivalent","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:24:9622"],"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1420:7091":{"id":"0:1420:7091","crate_id":0,"name":"any_value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[251,4],"end":[259,5]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"AnyValueParser","id":"0:1448:7030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:5031:8079":{"id":"a:2:3281:220-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4911:7638":{"id":"0:4911:7638","crate_id":0,"name":"Raw","span":{"filename":"src/error/mod.rs","begin":[1066,4],"end":[1066,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:5295":{"id":"0:5295","crate_id":0,"name":null,"span":{"filename":"src/util/graph.rs","begin":[1,9],"end":[1,14]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:5297:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4958:2659":{"id":"0:4958:2659","crate_id":0,"name":"subcommand","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[76,4],"end":[76,50]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:573:4728":{"id":"0:573:4728","crate_id":0,"name":"is_positional","span":{"filename":"src/builder/arg.rs","begin":[4512,4],"end":[4514,5]},"visibility":"public","docs":"Checks whether this argument is a positional or not.\n\n# Examples\n\n```\n# use clap::Arg;\nlet arg = Arg::new(\"foo\");\nassert_eq!(true, arg.is_positional());\n\nlet arg = Arg::new(\"foo\").long(\"foo\");\nassert_eq!(false, arg.is_positional());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:597:4776":{"id":"0:597:4776","crate_id":0,"name":"is_require_equals_set","span":{"filename":"src/builder/arg.rs","begin":[4654,4],"end":[4656,5]},"visibility":"public","docs":"Report whether [`Arg::require_equals`] is set","links":{"`Arg::require_equals`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[104,0],"end":[889,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":"# Basic API","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:385:920","0:387:2589","0:389:899","0:391:2590","0:392:2581","0:393:272","0:395:3450","0:396:3367","0:398:3368","0:399:3478","0:401:3483","0:402:3490","0:404:3495","0:405:753","0:406:3567","0:407:2596","0:408:3362","0:410:3615","0:411:3635","0:412:2602","0:413:3642","0:414:2677","0:415:2657","0:417:3570"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3975:3356":{"id":"0:3975:3356","crate_id":0,"name":"provider","span":{"filename":"src/builder/arg.rs","begin":[63,4],"end":[63,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4004:3381":{"id":"0:4004:3381","crate_id":0,"name":"default_vals","span":{"filename":"src/builder/arg.rs","begin":[92,4],"end":[92,46]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}},"0:5199:5091":{"id":"0:5199:5091","crate_id":0,"name":"keys","span":{"filename":"src/mkeymap.rs","begin":[22,4],"end":[22,18]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":"Will be set after `_build()`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3198-0:3252:5215":{"id":"b:2:3198-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:32021:74257":{"id":"2:32021:74257","crate_id":2,"name":"to_be_bytes","span":null,"visibility":"public","docs":"Return the memory representation of this integer as a byte array in\nbig-endian (network) byte order.\n\n\n\n# Examples\n\n```\nlet bytes = 0x1234567890123456u64.to_be_bytes();\nassert_eq!(bytes, [0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]);\n```","links":{},"attrs":["#[stable(feature = \"int_to_from_bytes\", since = \"1.32.0\")]","#[rustc_const_stable(feature = \"const_int_conversion\", since = \"1.44.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2725:8387":{"id":"0:2725:8387","crate_id":0,"name":"parse_long_arg","span":{"filename":"src/parser/parser.rs","begin":[713,4],"end":[815,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["long_arg",{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}},{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RawOsStr","id":"30:400:7334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["long_value",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RawOsStr","id":"30:400:7334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["parse_state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["valid_arg_found",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"bool"}}}],["trailing_values",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4913:1542":{"id":"0:4913:1542","crate_id":0,"name":"0","span":{"filename":"src/error/mod.rs","begin":[1066,8],"end":[1066,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4628:408":{"id":"0:4628:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_hint.rs","begin":[27,43],"end":[27,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5194":{"id":"0:5194","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[9,31],"end":[9,36]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5195:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8967:9548":{"id":"2:8967:9548","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8003:9538","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2202:7913":{"id":"0:2202:7913","crate_id":0,"name":"downcast_into","span":{"filename":"src/parser/matches/any_value.rs","begin":[22,4],"end":[28,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::any::Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4588:1673":{"id":"b:2:3213-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2331:2498":{"id":"0:2331:2498","crate_id":0,"name":"values_of_t","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[524,4],"end":[541,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_many()`]","links":{"`ArgMatches::get_many()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgMatches::get_many()`\")]","#[track_caller]","#![allow(deprecated)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:592:4766":{"id":"0:592:4766","crate_id":0,"name":"is_hide_env_values_set","span":{"filename":"src/builder/arg.rs","begin":[4629,4],"end":[4631,5]},"visibility":"public","docs":"Report whether [`Arg::hide_env_values`] is set","links":{"`Arg::hide_env_values`":"0:3972:1654"},"attrs":["#[cfg(feature = \"env\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:5058:7830":{"id":"b:5:787-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:4724:1700":{"id":"b:5:787-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:936:5247":{"id":"0:936:5247","crate_id":0,"name":"bin_name","span":{"filename":"src/builder/command.rs","begin":[1420,4],"end":[1423,5]},"visibility":"public","docs":"Overrides the runtime-determined name of the binary for help and error messages.\n\nThis should only be used when absolutely necessary, such as when the binary name for your\napplication is misleading, or perhaps *not* how the user should invoke your program.\n\n**Pro-tip:** When building things such as third party `cargo`\nsubcommands, this setting **should** be used!\n\n**NOTE:** This *does not* change or set the name of the binary file on\ndisk. It only changes what clap thinks the name is for the purposes of\nerror or help messages.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"My Program\")\n     .bin_name(\"my_binary\")\n# ;\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:136:2540":{"id":"0:136:2540","crate_id":0,"name":"crate_authors","span":{"filename":"src/macros.rs","begin":[251,0],"end":[264,1]},"visibility":"public","docs":"Allows you to pull the authors for the command from your Cargo.toml at\ncompile time in the form:\n`\"author1 lastname <author1@example.com>:author2 lastname <author2@example.com>\"`\n\nYou can replace the colons with a custom separator by supplying a\nreplacement string, so, for example,\n`crate_authors!(\",\\n\")` would become\n`\"author1 lastname <author1@example.com>,\\nauthor2 lastname <author2@example.com>,\\nauthor3 lastname <author3@example.com>\"`\n\n# Examples\n\n```no_run\n# #[macro_use]\n# extern crate clap;\n# use clap::Command;\n# fn main() {\nlet m = Command::new(\"cmd\")\n            .author(crate_authors!(\"\\n\"))\n            .get_matches();\n# }\n```","links":{},"attrs":["#[cfg(feature = \"cargo\")]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! crate_authors {\n    ($sep:expr) => { ... };\n    () => { ... };\n}"},"0:515:4467":{"id":"0:515:4467","crate_id":0,"name":"required_unless_present_any","span":{"filename":"src/builder/arg.rs","begin":[3572,4],"end":[3579,5]},"visibility":"public","docs":"Sets this arg as [required] unless *any* of the specified arguments are present at runtime.\n\nIn other words, parsing will succeed only if user either\n* supplies the `self` arg.\n* supplies *one or more* of the `unless` arguments.\n\n**NOTE:** If you wish for this argument to be required unless *all of* these args are\npresent see [`Arg::required_unless_present_all`]\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .required_unless_present_any(&[\"cfg\", \"dbg\"])\n# ;\n```\n\nSetting [`Arg::required_unless_present_any(names)`] requires that the argument be used at runtime\n*unless* *at least one of* the args in `names` are present. In the following example, the\nrequired argument is *not* provided, but it's not an error because one the `unless` args\nhave been supplied.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_unless_present_any(&[\"dbg\", \"infile\"])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"dbg\")\n        .long(\"debug\"))\n    .arg(Arg::new(\"infile\")\n        .short('i')\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"--debug\"\n    ]);\n\nassert!(res.is_ok());\n```\n\nSetting [`Arg::required_unless_present_any(names)`] and *not* supplying *at least one of* `names`\nor this arg is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_unless_present_any(&[\"dbg\", \"infile\"])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"dbg\")\n        .long(\"debug\"))\n    .arg(Arg::new(\"infile\")\n        .short('i')\n        .takes_value(true))\n    .try_get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[required]: Arg::required()\n[`Arg::required_unless_present_any(names)`]: Arg::required_unless_present_any()\n[`Arg::required_unless_present_all`]: Arg::required_unless_present_all()","links":{"Arg::required()":"0:3972:1654","Arg::required_unless_present_all()":"0:3972:1654","Arg::required_unless_present_any()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1645:2901":{"id":"0:1645:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1822,4],"end":[1822,38]},"visibility":"default","docs":"Create the specified [`Self::Parser`]","links":{"`Self::Parser`":"0:1644:1664"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1660:2901":{"id":"0:1660:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1850,4],"end":[1854,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2219":{"id":"0:2219","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[78,0],"end":[82,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2220:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8479:151":{"id":"2:8479:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8480:2763","2:8481:8270","2:8482:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:5182:3335":{"id":"b:2:3202-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4833:1674":{"id":"b:2:4002-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5306:899":{"id":"0:5306:899","crate_id":0,"name":"name","span":{"filename":"src/util/id.rs","begin":[13,4],"end":[13,16]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:3281:220-0:4947:3033":{"id":"a:2:3281:220-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:221:2747":{"id":"0:221:2747","crate_id":0,"name":"parse","span":{"filename":"src/derive.rs","begin":[503,4],"end":[505,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1397:7028":{"id":"0:1397:7028","crate_id":0,"name":"ValueParserInner","span":{"filename":"src/builder/value_parser.rs","begin":[61,0],"end":[71,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1398:7029","0:1400:216","0:1402:180","0:1404:186","0:1406:6977"],"impls":["a:2:3310:6658-0:1397:7028","a:2:3269:211-0:1397:7028","a:2:9340:7907-0:1397:7028","a:2:9339:7908-0:1397:7028","a:2:3281:220-0:1397:7028","b:2:3198-0:1397:7028","b:2:2872-0:1397:7028","b:2:2869-0:1397:7028","b:2:4002-0:1397:7028","b:2:3202-0:1397:7028","b:2:3213-0:1397:7028","b:2:3208-0:1397:7028"]}},"b:2:4002-0:4886:127":{"id":"b:2:4002-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4969":{"id":"0:4969","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,43],"end":[67,45]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4289:5171":{"id":"0:4289:5171","crate_id":0,"name":"MULTIPLE_OCC","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:5221:6728":{"id":"0:5221:6728","crate_id":0,"name":"Short","span":{"filename":"src/mkeymap.rs","begin":[27,4],"end":[27,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"char"}]}},"0:1357:899":{"id":"0:1357:899","crate_id":0,"name":"name","span":{"filename":"src/builder/usage_parser.rs","begin":[69,4],"end":[102,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:32008:74245":{"id":"2:32008:74245","crate_id":2,"name":"overflowing_pow","span":null,"visibility":"public","docs":"Raises self to the power of `exp`, using exponentiation by squaring.\n\nReturns a tuple of the exponentiation along with a bool indicating\nwhether an overflow happened.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(3u64.overflowing_pow(5), (243, false));\nassert_eq!(3u8.overflowing_pow(6), (217, true));\n```","links":{},"attrs":["#[stable(feature = \"no_panic_pow\", since = \"1.34.0\")]","#[rustc_const_stable(feature = \"const_int_pow\", since = \"1.50.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["exp",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3401:2679":{"id":"2:3401:2679","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5291:9008":{"id":"0:5291:9008","crate_id":0,"name":"Child","span":{"filename":"src/util/graph.rs","begin":[2,0],"end":[5,1]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5293:2589","0:5294:9009"],"impls":["0:3402","a:2:3310:6658-0:5291:9008","a:2:3269:211-0:5291:9008","a:2:9340:7907-0:5291:9008","a:2:9339:7908-0:5291:9008","a:2:3281:220-0:5291:9008","b:2:3198-0:5291:9008","b:2:2872-0:5291:9008","b:2:2869-0:5291:9008","b:2:4002-0:5291:9008","b:2:3202-0:5291:9008","b:2:3213-0:5291:9008","b:2:3208-0:5291:9008","0:5295"]}},"b:5:787-0:4706:2918":{"id":"b:5:787-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3799:181":{"id":"0:3799:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:4993:408":{"id":"0:4993:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1341,9],"end":[1341,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3581:3129":{"id":"0:3581:3129","crate_id":0,"name":"ArgRequiredElseHelp","span":{"filename":"src/builder/app_settings.rs","begin":[259,4],"end":[259,23]},"visibility":"default","docs":"Deprecated, replaced with [`Command::arg_required_else_help`] and\n[`Command::is_arg_required_else_help_set`]","links":{"`Command::is_arg_required_else_help_set`":"0:4456:1667","`Command::arg_required_else_help`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::arg_required_else_help` and `Command::is_arg_required_else_help_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::arg_required_else_help` and `Command::is_arg_required_else_help_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1604:3893":{"id":"0:1604:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[1499,4],"end":[1503,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1621:3893":{"id":"0:1621:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[1657,4],"end":[1663,5]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4699:660":{"id":"0:4699:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[1550,22],"end":[1550,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1613:7050":{"id":"0:1613:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[1570,4],"end":[1570,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"bool"}}},"2:8963:9529":{"id":"2:8963:9529","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:207:1665":{"id":"0:207:1665","crate_id":0,"name":"Subcommand","span":{"filename":"src/derive.rs","begin":[435,0],"end":[448,1]},"visibility":"public","docs":"Parse a sub-command into a user-defined enum.\n\nImplementing this trait lets a parent container delegate subcommand behavior to `Self`.\nwith:\n- `#[clap(subcommand)] field: SubCmd`: Attribute can be used with either struct fields or enum\n  variants that impl `Subcommand`.\n- `#[clap(flatten)] Variant(SubCmd)`: Attribute can only be used with enum variants that impl\n  `Subcommand`.\n\nSee the [derive reference](crate::_derive) for attributes and best practices.\n\n**NOTE:** Deriving requires the [`derive` feature flag][crate::_features]\n\n# Example\n\n ```\n#[derive(clap::Parser)]\nstruct Args {\n    #[clap(subcommand)]\n    action: Action,\n}\n\n#[derive(clap::Subcommand)]\nenum Action {\n    Add,\n    Remove,\n}\n```","links":{"crate::_features":"0:121:1696","crate::_derive":"0:115:1694"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:208:2858","0:209:2859","0:210:2861"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromArgMatches","id":"0:199:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:245"]}},"0:994:3478":{"id":"0:994:3478","crate_id":0,"name":"visible_alias","span":{"filename":"src/builder/command.rs","begin":[2520,4],"end":[2523,5]},"visibility":"public","docs":"Sets a visible alias to this subcommand.\n\nThis allows the subcommand to be accessed via *either* the\noriginal name or the given alias. This is more efficient and easier\nthan creating hidden subcommands as one only needs to check for\nthe existence of this command and not all aliased variants.\n\n**NOTE:** The alias defined with this method is *visible* from the help\nmessage and displayed as if it were just another regular subcommand. If\nlooking for an alias that will not be displayed in the help message, see\n[`Command::alias`].\n\n**NOTE:** When using aliases and checking for the existence of a\nparticular subcommand within an [`ArgMatches`] struct, one only needs to\nsearch for the original name and not all aliases.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet m = Command::new(\"myprog\")\n    .subcommand(Command::new(\"test\")\n        .visible_alias(\"do-stuff\"))\n    .get_matches_from(vec![\"myprog\", \"do-stuff\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::alias`]: Command::alias()","links":{"`Command::alias`":"0:4456:1667","`ArgMatches`":"0:4953:1658"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5092:7833":{"id":"a:2:3269:211-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4772:7545":{"id":"0:4772:7545","crate_id":0,"name":"ActualNumValues","span":{"filename":"src/error/context.rs","begin":[16,4],"end":[16,19]},"visibility":"default","docs":"Number of values present","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:4892:7456":{"id":"b:2:2869-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:4700:2915":{"id":"b:2:2872-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:4105:1655":{"id":"b:2:3198-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1163:6484":{"id":"0:1163:6484","crate_id":0,"name":"get_max_term_width","span":{"filename":"src/builder/command.rs","begin":[4129,4],"end":[4131,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3647:2672":{"id":"a:2:3281:220-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:4131:2923":{"id":"b:2:3198-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4882:408":{"id":"0:4882:408","crate_id":0,"name":"clone","span":{"filename":"src/error/kind.rs","begin":[2,22],"end":[2,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:2823:3377":{"id":"a:2:3310:6658-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'help","bounds":[{"outlives":"'cmd"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:32025:74259":{"id":"2:32025:74259","crate_id":2,"name":"to_ne_bytes","span":null,"visibility":"public","docs":"Return the memory representation of this integer as a byte array in\nnative byte order.\n\nAs the target platform's native endianness is used, portable code\nshould use [`to_be_bytes`] or [`to_le_bytes`], as appropriate,\ninstead.\n\n\n\n[`to_be_bytes`]: Self::to_be_bytes\n[`to_le_bytes`]: Self::to_le_bytes\n\n# Examples\n\n```\nlet bytes = 0x1234567890123456u64.to_ne_bytes();\nassert_eq!(\n    bytes,\n    if cfg!(target_endian = \"big\") {\n        [0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\n    } else {\n        [0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\n    }\n);\n```","links":{"Self::to_be_bytes":"1:16024:9076","Self::to_le_bytes":"1:16024:9076"},"attrs":["#[stable(feature = \"int_to_from_bytes\", since = \"1.32.0\")]","#[rustc_const_stable(feature = \"const_int_conversion\", since = \"1.44.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4589:232":{"id":"0:4589:232","crate_id":0,"name":"Unknown","span":{"filename":"src/builder/value_hint.rs","begin":[32,4],"end":[32,11]},"visibility":"default","docs":"Default value if hint is not specified. Follows shell default behavior, which is usually\nauto-completing filenames.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:31994:74231":{"id":"2:31994:74231","crate_id":2,"name":"overflowing_add","span":null,"visibility":"public","docs":"Calculates `self` + `rhs`\n\nReturns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.\n\n# Examples\n\nBasic usage\n\n```\n\nassert_eq!(5u64.overflowing_add(2), (7, false));\nassert_eq!(u64::MAX.overflowing_add(1), (0, true));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4641:2920":{"id":"b:2:2872-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5064:7886":{"id":"0:5064:7886","crate_id":0,"name":"raw_vals","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[22,4],"end":[22,32]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:3269:211-0:2688:1664":{"id":"a:2:3269:211-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:5220:7335":{"id":"b:2:3208-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2871:3332":{"id":"2:2871:3332","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:412:2602":{"id":"0:412:2602","crate_id":0,"name":"multiple_occurrences","span":{"filename":"src/builder/arg.rs","begin":[795,4],"end":[801,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::action`] ([Issue #3772](https://github.com/clap-rs/clap/issues/3772))","links":{"`Arg::action`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::action` (Issue #3772)\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::action` (Issue #3772)"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:3972:1654":{"id":"a:2:3310:6658-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4931":{"id":"0:4931","crate_id":0,"name":null,"span":{"filename":"src/parser/arg_matcher.rs","begin":[16,16],"end":[16,23]},"visibility":{"restricted":{"parent":"0:2095:7828","path":"::parser::arg_matcher"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4932:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:4629:2907":{"id":"b:2:2869-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:32004:74241":{"id":"2:32004:74241","crate_id":2,"name":"overflowing_rem_euclid","span":null,"visibility":"public","docs":"Calculates the remainder `self.rem_euclid(rhs)` as if by Euclidean division.\n\nReturns a tuple of the modulo after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways `false`.\nSince, for the positive integers, all common\ndefinitions of division are equal, this operation\nis exactly equal to `self.overflowing_rem(rhs)`.\n\n# Panics\n\nThis function will panic if `rhs` is 0.\n\n# Examples\n\nBasic usage\n\n```\nassert_eq!(5u64.overflowing_rem_euclid(2), (1, false));\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2745:8523":{"id":"0:2745:8523","crate_id":0,"name":"remove_overrides","span":{"filename":"src/parser/parser.rs","begin":[1323,4],"end":[1343,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5797:12306":{"id":"1:5797:12306","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:6882"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1100:6391":{"id":"0:1100:6391","crate_id":0,"name":"is_help_expected_set","span":{"filename":"src/builder/command.rs","begin":[3678,4],"end":[3680,5]},"visibility":"crate","docs":"Report whether [`Command::help_expected`] is set","links":{"`Command::help_expected`":"0:4456:1667"},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5075:7870":{"id":"0:5075:7870","crate_id":0,"name":"CommandLine","span":{"filename":"src/parser/matches/value_source.rs","begin":[10,4],"end":[10,15]},"visibility":"default","docs":"Value was passed in on the command-line","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:5220:7335":{"id":"b:2:2872-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1633:59":{"id":"0:1633:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[1699,4],"end":[1701,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3542:1669":{"id":"b:2:3213-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:554:2591":{"id":"0:554:2591","crate_id":0,"name":"get_long","span":{"filename":"src/builder/arg.rs","begin":[4344,4],"end":[4346,5]},"visibility":"public","docs":"Get the long option name for this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5178":{"id":"0:5178","crate_id":0,"name":null,"span":{"filename":"src/parser/validator.rs","begin":[605,18],"end":[605,23]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5179:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:5269:8971":{"id":"a:2:3269:211-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:31995:74232":{"id":"2:31995:74232","crate_id":2,"name":"carrying_add","span":null,"visibility":"public","docs":"Calculates `self + rhs + carry` without the ability to overflow.\n\nPerforms \"ternary addition\" which takes in an extra bit to add, and may return an\nadditional bit of overflow. This allows for chaining together multiple additions\nto create \"big integers\" which represent larger values.\n\nThis can be thought of as a 64-bit \"full adder\", in the electronics sense.\n\n# Examples\n\nBasic usage\n\n```\n#![feature(bigint_helper_methods)]\nassert_eq!(5u64.carrying_add(2, false), (7, false));\nassert_eq!(5u64.carrying_add(2, true), (8, false));\nassert_eq!(u64::MAX.carrying_add(1, false), (0, true));\nassert_eq!(u64::MAX.carrying_add(0, true), (0, true));\nassert_eq!(u64::MAX.carrying_add(1, true), (1, true));\nassert_eq!(u64::MAX.carrying_add(u64::MAX, true), (u64::MAX, true));\n```\n\nIf `carry` is false, this method is equivalent to [`overflowing_add`](Self::overflowing_add):\n\n```\n#![feature(bigint_helper_methods)]\nassert_eq!(5_u64.carrying_add(2, false), 5_u64.overflowing_add(2));\nassert_eq!(u64::MAX.carrying_add(1, false), u64::MAX.overflowing_add(1));\n```","links":{"Self::overflowing_add":"1:16024:9076"},"attrs":["#[unstable(feature = \"bigint_helper_methods\", issue = \"85532\")]","#[rustc_const_unstable(feature = \"const_bigint_helper_methods\", issue =\n\"85532\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}],["carry",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3581:9229":{"id":"2:3581:9229","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:5211","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2299:7987":{"id":"0:2299:7987","crate_id":0,"name":"get_many","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[156,4],"end":[162,5]},"visibility":"public","docs":"Iterate over values of a specific option or positional argument.\n\ni.e. an argument that takes multiple values at runtime.\n\nReturns an error if the wrong type was used.\n\nReturns `None` if the option wasn't present.\n\n# Panic\n\nIf the argument definition and access mismatch.  To handle this case programmatically, see\n[`ArgMatches::try_get_many`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, value_parser, ArgAction};\nlet m = Command::new(\"myprog\")\n    .arg(Arg::new(\"ports\")\n        .action(ArgAction::Append)\n        .value_parser(value_parser!(usize))\n        .short('p')\n        .takes_value(true)\n        .required(true))\n    .get_matches_from(vec![\n        \"myprog\", \"-p\", \"22\", \"-p\", \"80\", \"-p\", \"2020\"\n    ]);\nlet vals: Vec<usize> = m.get_many(\"ports\")\n    .expect(\"`port`is required\")\n    .copied()\n    .collect();\nassert_eq!(vals, [22, 80, 2020]);\n```","links":{"`ArgMatches::try_get_many`":"0:4953:1658"},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4956:7840":{"id":"0:4956:7840","crate_id":0,"name":"disable_asserts","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[74,4],"end":[74,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"a:2:3310:6658-0:5038:1676":{"id":"a:2:3310:6658-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2357:8227":{"id":"0:2357:8227","crate_id":0,"name":"subcommand_matches","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1022,4],"end":[1024,5]},"visibility":"public","docs":"The `ArgMatches` for the current [subcommand].\n\nSubcommand values are put in a child [`ArgMatches`]\n\nReturns `None` if the subcommand wasn't present at runtime,\n\n# Panics\n\nIf `id` is is not a valid subcommand.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet app_m = Command::new(\"myprog\")\n    .arg(Arg::new(\"debug\")\n        .short('d')\n        .action(ArgAction::SetTrue)\n    )\n    .subcommand(Command::new(\"test\")\n        .arg(Arg::new(\"opt\")\n            .long(\"option\")\n            .takes_value(true)))\n    .get_matches_from(vec![\n        \"myprog\", \"-d\", \"test\", \"--option\", \"val\"\n    ]);\n\n// Both parent commands, and child subcommands can have arguments present at the same times\nassert!(*app_m.get_one::<bool>(\"debug\").expect(\"defaulted by clap\"));\n\n// Get the subcommand's ArgMatches instance\nif let Some(sub_m) = app_m.subcommand_matches(\"test\") {\n    // Use the struct like normal\n    assert_eq!(sub_m.get_one::<String>(\"opt\").map(|s| s.as_str()), Some(\"val\"));\n}\n```\n\n[subcommand]: crate::Command::subcommand\n[`Command`]: crate::Command","links":{"crate::Command::subcommand":"0:4456:1667","`ArgMatches`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1106:6402":{"id":"0:1106:6402","crate_id":0,"name":"is_allow_negative_numbers_set","span":{"filename":"src/builder/command.rs","begin":[3708,4],"end":[3710,5]},"visibility":"public","docs":"Report whether [`Command::allow_negative_numbers`] is set","links":{"`Command::allow_negative_numbers`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:425:3775":{"id":"0:425:3775","crate_id":0,"name":"multiple_values","span":{"filename":"src/builder/arg.rs","begin":[1183,4],"end":[1189,5]},"visibility":"public","docs":"Specifies that the argument may have an unknown number of values\n\nWithout any other settings, this argument may appear only *once*.\n\nFor example, `--opt val1 val2` is allowed, but `--opt val1 val2 --opt val3` is not.\n\n**NOTE:** Setting this requires [`Arg::takes_value`].\n\n**WARNING:**\n\nSetting `multiple_values` for an argument that takes a value, but with no other details can\nbe dangerous in some circumstances. Because multiple values are allowed,\n`--option val1 val2 val3` is perfectly valid. Be careful when designing a CLI where\npositional arguments are *also* expected as `clap` will continue parsing *values* until one\nof the following happens:\n\n- It reaches the [maximum number of values]\n- It reaches a [specific number of values]\n- It finds another flag or option (i.e. something that starts with a `-`)\n- It reaches a [value terminator][Arg::value_terminator] is reached\n\nAlternatively, [require a delimiter between values][Arg::require_delimiter].\n\n**WARNING:**\n\nWhen using args with `multiple_values` and [`subcommands`], one needs to consider the\npossibility of an argument value being the same as a valid subcommand. By default `clap` will\nparse the argument in question as a value *only if* a value is possible at that moment.\nOtherwise it will be parsed as a subcommand. In effect, this means using `multiple_values` with no\nadditional parameters and a value that coincides with a subcommand name, the subcommand\ncannot be called unless another argument is passed between them.\n\nAs an example, consider a CLI with an option `--ui-paths=<paths>...` and subcommand `signer`\n\nThe following would be parsed as values to `--ui-paths`.\n\n```text\n$ program --ui-paths path1 path2 signer\n```\n\nThis is because `--ui-paths` accepts multiple values. `clap` will continue parsing values\nuntil another argument is reached and it knows `--ui-paths` is done parsing.\n\nBy adding additional parameters to `--ui-paths` we can solve this issue. Consider adding\n[`Arg::number_of_values(1)`] or using *only* [`ArgAction::Append`]. The following are all\nvalid, and `signer` is parsed as a subcommand in the first case, but a value in the second\ncase.\n\n```text\n$ program --ui-paths path1 signer\n$ program --ui-paths path1 --ui-paths signer signer\n```\n\n# Examples\n\nAn example with options\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .multiple_values(true)\n        .short('F'))\n    .get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"file2\", \"file3\"\n    ]);\n\nassert!(m.contains_id(\"file\"));\nlet files: Vec<_> = m.values_of(\"file\").unwrap().collect();\nassert_eq!(files, [\"file1\", \"file2\", \"file3\"]);\n```\n\nAlthough `multiple_values` has been specified, we cannot use the argument more than once.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .multiple_values(true)\n        .short('F'))\n    .try_get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"-F\", \"file2\", \"-F\", \"file3\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnexpectedMultipleUsage)\n```\n\nA common mistake is to define an option which allows multiple values, and a positional\nargument.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .multiple_values(true)\n        .short('F'))\n    .arg(Arg::new(\"word\"))\n    .get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"file2\", \"file3\", \"word\"\n    ]);\n\nassert!(m.contains_id(\"file\"));\nlet files: Vec<_> = m.values_of(\"file\").unwrap().collect();\nassert_eq!(files, [\"file1\", \"file2\", \"file3\", \"word\"]); // wait...what?!\nassert!(!m.contains_id(\"word\")); // but we clearly used word!\n```\n\nThe problem is `clap` doesn't know when to stop parsing values for \"files\". This is further\ncompounded by if we'd said `word -F file1 file2` it would have worked fine, so it would\nappear to only fail sometimes...not good!\n\nA solution for the example above is to limit how many values with a [maximum], or [specific]\nnumber, or to say [`ArgAction::Append`] is ok, but multiple values is not.\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .action(ArgAction::Append)\n        .short('F'))\n    .arg(Arg::new(\"word\"))\n    .get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"-F\", \"file2\", \"-F\", \"file3\", \"word\"\n    ]);\n\nassert!(m.contains_id(\"file\"));\nlet files: Vec<_> = m.values_of(\"file\").unwrap().collect();\nassert_eq!(files, [\"file1\", \"file2\", \"file3\"]);\nassert!(m.contains_id(\"word\"));\nassert_eq!(m.value_of(\"word\"), Some(\"word\"));\n```\n\nAs a final example, let's fix the above error and get a pretty message to the user :)\n\n```rust\n# use clap::{Command, Arg, ErrorKind, ArgAction};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .action(ArgAction::Append)\n        .short('F'))\n    .arg(Arg::new(\"word\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"file2\", \"file3\", \"word\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```\n\n[`subcommands`]: crate::Command::subcommand()\n[`Arg::number_of_values(1)`]: Arg::number_of_values()\n[maximum number of values]: Arg::max_values()\n[specific number of values]: Arg::number_of_values()\n[maximum]: Arg::max_values()\n[specific]: Arg::number_of_values()","links":{"`ArgAction::Append`":"0:3503:1652","`Arg::takes_value`":"0:3972:1654","Arg::number_of_values()":"0:3972:1654","Arg::require_delimiter":"0:3972:1654","Arg::max_values()":"0:3972:1654","Arg::value_terminator":"0:3972:1654","crate::Command::subcommand()":"0:4456:1667"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4321:10054":{"id":"0:4321:10054","crate_id":0,"name":"intersects","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3503:1652":{"id":"0:3503:1652","crate_id":0,"name":"ArgAction","span":{"filename":"src/builder/action.rs","begin":[26,0],"end":[250,1]},"visibility":"public","docs":"Behavior of arguments when they are encountered while parsing\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"special-help\")\n            .short('?')\n            .action(clap::ArgAction::Help)\n    );\n\n// Existing help still exists\nlet err = cmd.clone().try_get_matches_from([\"mycmd\", \"-h\"]).unwrap_err();\nassert_eq!(err.kind(), clap::error::ErrorKind::DisplayHelp);\n\n// New help available\nlet err = cmd.try_get_matches_from([\"mycmd\", \"-?\"]).unwrap_err();\nassert_eq!(err.kind(), clap::error::ErrorKind::DisplayHelp);\n```","links":{},"attrs":["#[non_exhaustive]","#[allow(missing_copy_implementations)]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3504:2980","0:3506:2984","0:3508:2987","0:3510:2990","0:3512:3001","0:3514:3005","0:3516:107","0:3518:3014","0:3520:3024"],"impls":["0:270","a:2:3310:6658-0:3503:1652","a:2:3269:211-0:3503:1652","a:2:9340:7907-0:3503:1652","a:2:9339:7908-0:3503:1652","a:2:3281:220-0:3503:1652","b:2:3198-0:3503:1652","b:2:2872-0:3503:1652","b:2:2869-0:3503:1652","b:2:4002-0:3503:1652","b:2:3202-0:3503:1652","b:2:3213-0:3503:1652","b:2:3208-0:3503:1652","b:5:787-0:3503:1652","0:3522","0:3524"]}},"0:4154":{"id":"0:4154","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[1,40],"end":[1,42]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4225":{"id":"0:4225","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[32,16],"end":[32,25]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4458:2589":{"id":"0:4458:2589","crate_id":0,"name":"id","span":{"filename":"src/builder/command.rs","begin":[79,4],"end":[79,10]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3202-0:5261:2691":{"id":"b:2:3202-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5093:8361":{"id":"0:5093:8361","crate_id":0,"name":"ValuesDone","span":{"filename":"src/parser/parser.rs","begin":[1682,4],"end":[1682,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3202-0:5010:7834":{"id":"b:2:3202-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4150:604":{"id":"0:4150:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/arg_predicate.rs","begin":[1,29],"end":[1,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4323:2673":{"id":"0:4323:2673","crate_id":0,"name":"insert","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Inserts the specified flags in-place.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:5196:5213":{"id":"b:2:3198-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1253:6615":{"id":"0:1253:6615","crate_id":0,"name":"short_flag_aliases_to","span":{"filename":"src/builder/command.rs","begin":[4894,4],"end":[4897,5]},"visibility":"crate","docs":"Check if this subcommand can be referred to as `name`. In other words,\ncheck if `name` is the name of this short flag subcommand or is one of its short flag aliases.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["flag",{"kind":"primitive","inner":"char"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4503:604":{"id":"0:4503:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/command.rs","begin":[77,23],"end":[77,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5286":{"id":"0:5286","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[135,29],"end":[135,38]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5287:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4997:7835":{"id":"a:2:3310:6658-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:5156:7831":{"id":"a:2:3281:220-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1459:1429":{"id":"0:1459:1429","crate_id":0,"name":"type_id","span":{"filename":"src/builder/value_parser.rs","begin":[589,4],"end":[591,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2489:922":{"id":"0:2489:922","crate_id":0,"name":"next","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1662,4],"end":[1664,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2766":{"id":"0:2766","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1674,0],"end":[1678,1]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["0:2769:2677"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:135:2530":{"id":"0:135:2530","crate_id":0,"name":"crate_version","span":{"filename":"src/macros.rs","begin":[222,0],"end":[226,1]},"visibility":"public","docs":"Allows you to pull the version from your Cargo.toml at compile time as\n`MAJOR.MINOR.PATCH_PKGVERSION_PRE`\n\n# Examples\n\n```no_run\n# #[macro_use]\n# extern crate clap;\n# use clap::Command;\n# fn main() {\nlet m = Command::new(\"cmd\")\n            .version(crate_version!())\n            .get_matches();\n# }\n```","links":{},"attrs":["#[cfg(feature = \"cargo\")]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! crate_version {\n    () => { ... };\n}"},"0:4468:5249":{"id":"0:4468:5249","crate_id":0,"name":"long_about","span":{"filename":"src/builder/command.rs","begin":[89,4],"end":[89,34]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:4576":{"id":"0:4576","crate_id":0,"name":null,"span":{"filename":"src/builder/usage_parser.rs","begin":[8,20],"end":[8,25]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4577:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4063:3357":{"id":"a:2:3310:6658-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2446:8271":{"id":"0:2446:8271","crate_id":0,"name":"next_back","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1528,4],"end":[1530,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4478:5258":{"id":"0:4478:5258","crate_id":0,"name":"help_str","span":{"filename":"src/builder/command.rs","begin":[99,4],"end":[99,32]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"2:10391:9316":{"id":"2:10391:9316","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10392:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:861:2580":{"id":"0:861:2580","crate_id":0,"name":"arg","span":{"filename":"src/builder/command.rs","begin":[185,4],"end":[198,5]},"visibility":"public","docs":"Adds an [argument] to the list of valid possibilities.\n\n# Examples\n\n```no_run\n# use clap::{Command, arg, Arg};\nCommand::new(\"myprog\")\n    // Adding a single \"flag\" argument with a short and help text, using Arg::new()\n    .arg(\n        Arg::new(\"debug\")\n           .short('d')\n           .help(\"turns on debugging mode\")\n    )\n    // Adding a single \"option\" argument with a short, a long, and help text using the less\n    // verbose Arg::from()\n    .arg(\n        arg!(-c --config <CONFIG> \"Optionally sets a config file to use\")\n    )\n# ;\n```\n[argument]: Arg","links":{"Arg":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["a",{"kind":"generic","inner":"A"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:925:5589":{"id":"0:925:5589","crate_id":0,"name":"disable_help_subcommand","span":{"filename":"src/builder/command.rs","begin":[1202,4],"end":[1208,5]},"visibility":"public","docs":"Disables the `help` [`subcommand`].\n\n# Examples\n\n```rust\n# use clap::{Command, ErrorKind};\nlet res = Command::new(\"myprog\")\n    .disable_help_subcommand(true)\n    // Normally, creating a subcommand causes a `help` subcommand to automatically\n    // be generated as well\n    .subcommand(Command::new(\"test\"))\n    .try_get_matches_from(vec![\n        \"myprog\", \"help\"\n    ]);\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```\n\n[`subcommand`]: crate::Command::subcommand()","links":{"crate::Command::subcommand()":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1709:7320":{"id":"0:1709:7320","crate_id":0,"name":"_ValueParserViaSelfSealed","span":{"filename":"src/builder/value_parser.rs","begin":[2054,4],"end":[2054,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:5110:8389":{"id":"b:5:787-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2559:7865":{"id":"0:2559:7865","crate_id":0,"name":"new_val_group","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[123,4],"end":[126,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13618:2513":{"id":"2:13618:2513","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4942:7020":{"id":"a:2:3269:211-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2224":{"id":"0:2224","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[97,0],"end":[101,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"A"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2227:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"44:2657:13633":{"id":"44:2657:13633","crate_id":44,"name":"Rela","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:2658:9673","44:2659:73811","44:2660:13619","44:2661:14627","44:2662:14628","44:2663:14630","44:2664:73907","44:2665:14865"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1036:6309":{"id":"0:1036:6309","crate_id":0,"name":"get_visible_short_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[3364,4],"end":[3369,5]},"visibility":"public","docs":"Iterate through the *visible* short aliases for this subcommand.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"char"}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2897:7445":{"id":"0:2897:7445","crate_id":0,"name":"features","span":{"filename":"src/parser/features/mod.rs","begin":[1,0],"end":[1,27]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2898:1560"],"is_stripped":false}},"2:13523:12619":{"id":"2:13523:12619","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49534:9263","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1268:6364":{"id":"0:1268:6364","crate_id":0,"name":"find_group","span":{"filename":"src/builder/command.rs","begin":[4929,4],"end":[4931,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["group_id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3274:8906":{"id":"0:3274:8906","crate_id":0,"name":"create_smart_usage","span":{"filename":"src/output/usage.rs","begin":[164,4],"end":[187,5]},"visibility":{"restricted":{"parent":"0:3223:5461","path":"::output::usage"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["used",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4822":{"id":"0:4822","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[42,9],"end":[42,14]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4823:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:408:3362":{"id":"0:408:3362","crate_id":0,"name":"requires","span":{"filename":"src/builder/arg.rs","begin":[699,4],"end":[702,5]},"visibility":"public","docs":"Sets an argument that is required when this one is present\n\ni.e. when using this argument, the following argument *must* be present.\n\n**NOTE:** [Conflicting] rules and [override] rules take precedence over being required\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .requires(\"input\")\n# ;\n```\n\nSetting [`Arg::requires(name)`] requires that the argument be used at runtime if the\ndefining argument is used. If the defining argument isn't used, the other argument isn't\nrequired\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .requires(\"input\")\n        .long(\"config\"))\n    .arg(Arg::new(\"input\"))\n    .try_get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert!(res.is_ok()); // We didn't use cfg, so input wasn't required\n```\n\nSetting [`Arg::requires(name)`] and *not* supplying that argument is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .requires(\"input\")\n        .long(\"config\"))\n    .arg(Arg::new(\"input\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"file.conf\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[`Arg::requires(name)`]: Arg::requires()\n[Conflicting]: Arg::conflicts_with()\n[override]: Arg::overrides_with()","links":{"Arg::conflicts_with()":"0:3972:1654","Arg::overrides_with()":"0:3972:1654","Arg::requires()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:692:4993":{"id":"0:692:4993","crate_id":0,"name":"with_id","span":{"filename":"src/builder/arg_group.rs","begin":[92,4],"end":[97,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["id",{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1538":{"id":"0:1538","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1044,0],"end":[1052,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"super::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1541:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:5048:1675":{"id":"b:2:3202-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:466:61":{"id":"0:466:61","crate_id":0,"name":"raw","span":{"filename":"src/builder/arg.rs","begin":[2101,4],"end":[2106,5]},"visibility":"public","docs":"Consume all following arguments.\n\nDo not be parse them individually, but rather pass them in entirety.\n\nIt is worth noting that setting this requires all values to come after a `--` to indicate\nthey should all be captured. For example:\n\n```text\n--foo something -- -v -v -v -b -b -b --baz -q -u -x\n```\n\nWill result in everything after `--` to be considered one raw argument. This behavior\nmay not be exactly what you are expecting and using [`crate::Command::trailing_var_arg`]\nmay be more appropriate.\n\n**NOTE:** Implicitly sets [`Arg::takes_value(true)`] [`Arg::multiple_values(true)`],\n[`Arg::allow_hyphen_values(true)`], and [`Arg::last(true)`] when set to `true`.\n\n[`Arg::takes_value(true)`]: Arg::takes_value()\n[`Arg::multiple_values(true)`]: Arg::multiple_values()\n[`Arg::allow_hyphen_values(true)`]: Arg::allow_hyphen_values()\n[`Arg::last(true)`]: Arg::last()","links":{"`crate::Command::trailing_var_arg`":"0:4456:1667","Arg::takes_value()":"0:3972:1654","Arg::allow_hyphen_values()":"0:3972:1654","Arg::last()":"0:3972:1654","Arg::multiple_values()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1892":{"id":"0:1892","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[45,0],"end":[45,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::BoolValueParser","name":"BoolValueParser","id":"0:4688:2914","glob":false}},"0:3605:3178":{"id":"0:3605:3178","crate_id":0,"name":"NoBinaryName","span":{"filename":"src/builder/app_settings.rs","begin":[387,4],"end":[387,16]},"visibility":"default","docs":"Deprecated, replaced with [`Command::no_binary_name`]","links":{"`Command::no_binary_name`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::no_binary_name`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::no_binary_name`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3345:2698":{"id":"0:3345:2698","crate_id":0,"name":"print","span":{"filename":"src/output/fmt.rs","begin":[62,4],"end":[103,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"color\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4747:1543":{"id":"0:4747:1543","crate_id":0,"name":"1","span":{"filename":"src/builder/debug_asserts.rs","begin":[353,20],"end":[353,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:5054:408":{"id":"0:5054:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1653,9],"end":[1653,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5245:2692":{"id":"a:2:9339:7908-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:5291:9008":{"id":"a:2:3281:220-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:106:1842":{"id":"0:106:1842","crate_id":0,"name":"escaped_positional","span":{"filename":"src/_cookbook/escaped_positional.rs","begin":[1,0],"end":[7,62]},"visibility":"public","docs":"# Example (Builder API)\n\n```rust\nuse clap::{arg, command, value_parser, ArgAction};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(arg!(eff: -f).action(ArgAction::SetTrue))\n        .arg(\n            arg!(pea: -p <PEAR>)\n                .required(false)\n                .value_parser(value_parser!(String)),\n        )\n        .arg(\n            // Indicates that `slop` is only accessible after `--`.\n            arg!(slop: [SLOP])\n                .multiple_values(true)\n                .last(true)\n                .value_parser(value_parser!(String)),\n        )\n        .get_matches();\n\n    // This is what will happen with `myprog -f -p=bob -- sloppy slop slop`...\n\n    // -f used: true\n    println!(\n        \"-f used: {:?}\",\n        *matches.get_one::<bool>(\"eff\").expect(\"defaulted by clap\")\n    );\n    // -p's value: Some(\"bob\")\n    println!(\"-p's value: {:?}\", matches.get_one::<String>(\"pea\"));\n    // 'slops' values: Some([\"sloppy\", \"slop\", \"slop\"])\n    println!(\n        \"'slops' values: {:?}\",\n        matches\n            .get_many::<String>(\"slop\")\n            .map(|vals| vals.collect::<Vec<_>>())\n            .unwrap_or_default()\n    );\n\n    // Continued program logic goes here...\n}\n```\n\n**This requires enabling the [`cargo` feature flag][crate::_features].**\n\nYou can use `--` to escape further arguments.\n\nLet's see what this looks like in the help:\n```console\n$ escaped-positional --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    escaped-positional[EXE] [OPTIONS] [-- <SLOP>...]\n\nARGS:\n    <SLOP>...    \n\nOPTIONS:\n    -f               \n    -h, --help       Print help information\n    -p <PEAR>        \n    -V, --version    Print version information\n\n```\n\nHere is a baseline without any arguments:\n```console\n$ escaped-positional\n-f used: false\n-p's value: None\n'slops' values: []\n\n```\n\nNotice that we can't pass positional arguments before `--`:\n```console\n$ escaped-positional foo bar\n? failed\nerror: Found argument 'foo' which wasn't expected, or isn't valid in this context\n\nUSAGE:\n    escaped-positional[EXE] [OPTIONS] [-- <SLOP>...]\n\nFor more information try --help\n\n```\n\nBut you can after:\n```console\n$ escaped-positional -f -p=bob -- sloppy slop slop\n-f used: true\n-p's value: Some(\"bob\")\n'slops' values: [\"sloppy\", \"slop\", \"slop\"]\n\n```\n\nAs mentioned, the parser will directly pass everything through:\n```console\n$ escaped-positional -- -f -p=bob sloppy slop slop\n-f used: false\n-p's value: None\n'slops' values: [\"-f\", \"-p=bob\", \"sloppy\", \"slop\", \"slop\"]\n\n```","links":{"crate::_features":"0:121:1696"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:2:3202-0:4926:5216":{"id":"b:2:3202-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4953:1658":{"id":"b:2:4002-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:4231:2672":{"id":"b:5:787-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1631:3893":{"id":"0:1631:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[1691,4],"end":[1695,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:5261:2691":{"id":"b:5:787-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2002":{"id":"0:2002","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[27,0],"end":[27,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"kind::ErrorKind","name":"ErrorKind","id":"0:4833:1674","glob":false}},"0:4487:5264":{"id":"0:4487:5264","crate_id":0,"name":"replacers","span":{"filename":"src/builder/command.rs","begin":[108,4],"end":[108,55]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1302:143","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}}],"bindings":[]}}}}},"0:4953:1658":{"id":"0:4953:1658","crate_id":0,"name":"ArgMatches","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[68,0],"end":[77,1]},"visibility":"public","docs":"Container for parse results.\n\nUsed to get information about the arguments that were supplied to the program at runtime by\nthe user. New instances of this struct are obtained by using the [`Command::get_matches`] family of\nmethods.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, ValueSource};\nlet matches = Command::new(\"MyApp\")\n    .arg(Arg::new(\"out\")\n        .long(\"output\")\n        .required(true)\n        .takes_value(true)\n        .default_value(\"-\"))\n    .arg(Arg::new(\"cfg\")\n        .short('c')\n        .takes_value(true))\n    .get_matches(); // builds the instance of ArgMatches\n\n// to get information about the \"cfg\" argument we created, such as the value supplied we use\n// various ArgMatches methods, such as [ArgMatches::get_one]\nif let Some(c) = matches.get_one::<String>(\"cfg\") {\n    println!(\"Value for -c: {}\", c);\n}\n\n// The ArgMatches::get_one method returns an Option because the user may not have supplied\n// that argument at runtime. But if we specified that the argument was \"required\" as we did\n// with the \"out\" argument, we can safely unwrap because `clap` verifies that was actually\n// used at runtime.\nprintln!(\"Value for --output: {}\", matches.get_one::<String>(\"out\").unwrap());\n\n// You can check the presence of an argument's values\nif matches.contains_id(\"out\") {\n    // However, if you want to know where the value came from\n    if matches.value_source(\"out\").expect(\"checked contains_id\") == ValueSource::CommandLine {\n        println!(\"`out` set by user\");\n    } else {\n        println!(\"`out` is defaulted\");\n    }\n}\n```\n[`Command::get_matches`]: crate::Command::get_matches()","links":{"crate::Command::get_matches()":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4954:7838","0:4955:7839","0:4956:7840","0:4957:298","0:4958:2659"],"impls":["0:2296","0:2352","0:2364","0:2379","a:2:3310:6658-0:4953:1658","a:2:3269:211-0:4953:1658","a:2:9340:7907-0:4953:1658","a:2:9339:7908-0:4953:1658","a:2:3281:220-0:4953:1658","b:2:3198-0:4953:1658","b:2:2872-0:4953:1658","b:2:2869-0:4953:1658","b:2:4002-0:4953:1658","b:2:3202-0:4953:1658","b:2:3213-0:4953:1658","b:2:3208-0:4953:1658","b:5:787-0:4953:1658","b:31:25-0:4953:1658","0:4959","0:4961","0:4963","0:4965","0:4966","0:4969","0:4970"]}},"0:4639":{"id":"0:4639","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[722,22],"end":[722,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4640:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5305:3334":{"id":"b:2:2869-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1174:6509":{"id":"0:1174:6509","crate_id":0,"name":"_build_recursive","span":{"filename":"src/builder/command.rs","begin":[4222,4],"end":[4227,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4786:7560":{"id":"0:4786:7560","crate_id":0,"name":"SuggestedArg","span":{"filename":"src/error/context.rs","begin":[30,4],"end":[30,16]},"visibility":"default","docs":"Potential fix for the user","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:5267":{"id":"0:5267","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[14,16],"end":[14,21]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5268:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:642":{"id":"0:642","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5074,0],"end":[5078,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:644:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1485:59":{"id":"0:1485:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[714,4],"end":[716,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/derive.rs","begin":[553,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:147:547","path":"::derive"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Args","id":"0:204:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Args","id":"0:204:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:243:2843","0:244:2846"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:5038:1676":{"id":"b:2:3213-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3809:181":{"id":"0:3809:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3727:3207":{"id":"0:3727:3207","crate_id":0,"name":"PROPAGATE_VERSION","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:537:4649":{"id":"0:537:4649","crate_id":0,"name":"overrides_with","span":{"filename":"src/builder/arg.rs","begin":[4211,4],"end":[4214,5]},"visibility":"public","docs":"Sets an overridable argument.\n\ni.e. this argument and the following argument\nwill override each other in POSIX style (whichever argument was specified at runtime\n**last** \"wins\")\n\n**NOTE:** When an argument is overridden it is essentially as if it never was used, any\nconflicts, requirements, etc. are evaluated **after** all \"overrides\" have been removed\n\n**NOTE:** Overriding an argument implies they [conflict][Arg::conflicts_with`].\n\n**WARNING:** Positional arguments and options which accept\n[`Arg::multiple_occurrences`] cannot override themselves (or we\nwould never be able to advance to the next positional). If a positional\nargument or option with one of the [`Arg::multiple_occurrences`]\nsettings lists itself as an override, it is simply ignored.\n\n# Examples\n\n```rust\n# use clap::{Command, arg};\nlet m = Command::new(\"prog\")\n    .arg(arg!(-f --flag \"some flag\")\n        .conflicts_with(\"debug\"))\n    .arg(arg!(-d --debug \"other flag\"))\n    .arg(arg!(-c --color \"third flag\")\n        .overrides_with(\"flag\"))\n    .get_matches_from(vec![\n        \"prog\", \"-f\", \"-d\", \"-c\"]);\n            //    ^~~~~~~~~~~~^~~~~ flag is overridden by color\n\nassert!(m.is_present(\"color\"));\nassert!(m.is_present(\"debug\")); // even though flag conflicts with debug, it's as if flag\n                                // was never used because it was overridden with color\nassert!(!m.is_present(\"flag\"));\n```\nCare must be taken when using this setting, and having an arg override with itself. This\nis common practice when supporting things like shell aliases, config files, etc.\nHowever, when combined with multiple values, it can get dicy.\nHere is how clap handles such situations:\n\nWhen a flag overrides itself, it's as if the flag was only ever used once (essentially\npreventing a \"Unexpected multiple usage\" error):\n\n```rust\n# use clap::{Command, arg};\nlet m = Command::new(\"posix\")\n            .arg(arg!(--flag  \"some flag\").overrides_with(\"flag\"))\n            .get_matches_from(vec![\"posix\", \"--flag\", \"--flag\"]);\nassert!(m.is_present(\"flag\"));\n```\n\nMaking an arg [`Arg::multiple_occurrences`] and override itself\nis essentially meaningless. Therefore clap ignores an override of self\nif it's a flag and it already accepts multiple occurrences.\n\n```\n# use clap::{Command, arg};\nlet m = Command::new(\"posix\")\n            .arg(arg!(--flag ...  \"some flag\").overrides_with(\"flag\"))\n            .get_matches_from(vec![\"\", \"--flag\", \"--flag\", \"--flag\", \"--flag\"]);\nassert!(m.is_present(\"flag\"));\n```\n\nNow notice with options (which *do not* set\n[`Arg::multiple_occurrences`]), it's as if only the last\noccurrence happened.\n\n```\n# use clap::{Command, arg};\nlet m = Command::new(\"posix\")\n            .arg(arg!(--opt <val> \"some option\").overrides_with(\"opt\"))\n            .get_matches_from(vec![\"\", \"--opt=some\", \"--opt=other\"]);\nassert!(m.is_present(\"opt\"));\nassert_eq!(m.value_of(\"opt\"), Some(\"other\"));\n```\n\nThis will also work when [`Arg::multiple_values`] is enabled:\n\n```\n# use clap::{Command, Arg};\nlet m = Command::new(\"posix\")\n            .arg(\n                Arg::new(\"opt\")\n                    .long(\"opt\")\n                    .takes_value(true)\n                    .multiple_values(true)\n                    .overrides_with(\"opt\")\n            )\n            .get_matches_from(vec![\"\", \"--opt\", \"1\", \"2\", \"--opt\", \"3\", \"4\", \"5\"]);\nassert!(m.is_present(\"opt\"));\nassert_eq!(m.values_of(\"opt\").unwrap().collect::<Vec<_>>(), &[\"3\", \"4\", \"5\"]);\n```\n\nJust like flags, options with [`Arg::multiple_occurrences`] set\nwill ignore the \"override self\" setting.\n\n```\n# use clap::{Command, arg};\nlet m = Command::new(\"posix\")\n            .arg(arg!(--opt <val> ... \"some option\")\n                .multiple_values(true)\n                .overrides_with(\"opt\"))\n            .get_matches_from(vec![\"\", \"--opt\", \"first\", \"over\", \"--opt\", \"other\", \"val\"]);\nassert!(m.is_present(\"opt\"));\nassert_eq!(m.values_of(\"opt\").unwrap().collect::<Vec<_>>(), &[\"first\", \"over\", \"other\", \"val\"]);\n```","links":{"`Arg::multiple_occurrences`":"0:3972:1654","`Arg::multiple_values`":"0:3972:1654","Arg::conflicts_with`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:32016:74252":{"id":"2:32016:74252","crate_id":2,"name":"is_power_of_two","span":null,"visibility":"public","docs":"Returns `true` if and only if `self == 2^k` for some `k`.\n\n# Examples\n\nBasic usage:\n\n```\nassert!(16u64.is_power_of_two());\nassert!(!10u64.is_power_of_two());\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_is_power_of_two\", since = \"1.32.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:4231:2672":{"id":"b:31:25-0:4231:2672","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"b:2:3208-0:3393:9003":{"id":"b:2:3208-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5240:715":{"id":"0:5240:715","crate_id":0,"name":"hash","span":{"filename":"src/mkeymap.rs","begin":[25,31],"end":[25,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3":{"id":"0:3","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[98,0],"end":[98,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::ArgAction","name":"ArgAction","id":"0:3503:1652","glob":false}},"b:2:3213-0:4706:2918":{"id":"b:2:3213-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5068":{"id":"0:5068","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/matched_arg.rs","begin":[15,16],"end":[15,21]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5069:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3136:2590":{"id":"0:3136:2590","crate_id":0,"name":"short","span":{"filename":"src/output/help.rs","begin":[284,4],"end":[296,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes argument's short command to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4676:2906":{"id":"0:4676:2906","crate_id":0,"name":"RangedU64ValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[1289,0],"end":[1292,1]},"visibility":"public","docs":"Parse number that fall within a range of values\n\n# Example\n\nUsage:\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(clap::value_parser!(u64).range(3000..))\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"3001\"]).unwrap();\nlet port: u64 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```\n\nSemantics:\n```rust\n# use std::ffi::OsStr;\n# use clap::builder::TypedValueParser;\n# let cmd = clap::Command::new(\"test\");\n# let arg = None;\nlet value_parser = clap::builder::RangedU64ValueParser::<u32>::new().range(0..200);\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"random\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"-200\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"300\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"-1\")).is_err());\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"0\")).unwrap(), 0);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"50\")).unwrap(), 50);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":{"kind":"primitive","inner":"u64"},"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4678:7199","0:4679:1362"],"impls":["0:1569","a:2:3310:6658-0:4676:2906","a:2:3269:211-0:4676:2906","a:2:9340:7907-0:4676:2906","a:2:9339:7908-0:4676:2906","a:2:3281:220-0:4676:2906","b:2:3198-0:4676:2906","b:2:2872-0:4676:2906","b:2:2869-0:4676:2906","b:2:4002-0:4676:2906","b:2:3202-0:4676:2906","b:2:3213-0:4676:2906","b:2:3208-0:4676:2906","b:5:787-0:4676:2906","0:4680","0:4682","0:4685","0:1575","0:1588","0:1592"]}},"0:2490:5300":{"id":"0:2490:5300","crate_id":0,"name":"size_hint","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1665,4],"end":[1667,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3118":{"id":"0:3118","crate_id":0,"name":null,"span":{"filename":"src/output/help.rs","begin":[137,0],"end":[734,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["0:3122:7584","0:3124:7574","0:3126:2696","0:3128:8729","0:3130:8734","0:3132:8743","0:3135:8741","0:3136:2590","0:3137:2581","0:3138:1498","0:3140:8753","0:3141:8769","0:3143:8773","0:3145:2603","0:3153:8739","0:3156:8803","0:3157:8752","0:3164:8821","0:3166:8824","0:3167:6466"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:4910:7462":{"id":"b:2:3198-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:5319:1660":{"id":"a:2:9339:7908-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3019":{"id":"0:3019","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[83,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:3021:2678","0:3024:5301","0:3025:3445","0:3026:4858","0:3030:2564","0:3031:5091","0:3034:298","0:3036:6520","0:3039:4839","0:3040:5313","0:3043:2674"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5071:8323":{"id":"0:5071:8323","crate_id":0,"name":"DefaultValue","span":{"filename":"src/parser/matches/value_source.rs","begin":[6,4],"end":[6,16]},"visibility":"default","docs":"Value came [`Arg::default_value`][crate::Arg::default_value]","links":{"crate::Arg::default_value":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2182":{"id":"0:2182","crate_id":0,"name":null,"span":{"filename":"src/parser/arg_matcher.rs","begin":[274,0],"end":[280,1]},"visibility":{"restricted":{"parent":"0:2095:7828","path":"::parser::arg_matcher"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2183:221","0:2184:543"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5070:1677":{"id":"0:5070:1677","crate_id":0,"name":"ValueSource","span":{"filename":"src/parser/matches/value_source.rs","begin":[4,0],"end":[11,1]},"visibility":"public","docs":"Origin of the argument's value","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5071:8323","0:5073:8344","0:5075:7870"],"impls":["a:2:3310:6658-0:5070:1677","a:2:3269:211-0:5070:1677","a:2:9340:7907-0:5070:1677","a:2:9339:7908-0:5070:1677","a:2:3281:220-0:5070:1677","b:2:3198-0:5070:1677","b:2:2872-0:5070:1677","b:2:2869-0:5070:1677","b:2:4002-0:5070:1677","b:2:3202-0:5070:1677","b:2:3213-0:5070:1677","b:2:3208-0:5070:1677","b:5:787-0:5070:1677","b:31:25-0:5070:1677","0:5077","0:5079","0:5081","0:5082","0:5083","0:5085","0:5086","0:5088","0:5090"]}},"2:31951:74201":{"id":"2:31951:74201","crate_id":2,"name":"to_be","span":null,"visibility":"public","docs":"Converts `self` to big endian from the target's endianness.\n\nOn big endian this is a no-op. On little endian the bytes are\nswapped.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0x1Au64;\n\nif cfg!(target_endian = \"big\") {\n    assert_eq!(n.to_be(), n)\n} else {\n    assert_eq!(n.to_be(), n.swap_bytes())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1227":{"id":"0:1227","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[4826,0],"end":[4826,33]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Captures","id":"0:1225:6599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4804":{"id":"0:4804","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[2,40],"end":[2,42]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:399:3478":{"id":"0:399:3478","crate_id":0,"name":"visible_alias","span":{"filename":"src/builder/arg.rs","begin":[354,4],"end":[357,5]},"visibility":"public","docs":"Add an alias, which functions as a visible long flag.\n\nLike [`Arg::alias`], except that they are visible inside the help message.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n                .visible_alias(\"something-awesome\")\n                .long(\"test\")\n                .takes_value(true))\n       .get_matches_from(vec![\n            \"prog\", \"--something-awesome\", \"coffee\"\n        ]);\nassert!(m.contains_id(\"test\"));\nassert_eq!(m.value_of(\"test\"), Some(\"coffee\"));\n```\n[`Command::alias`]: Arg::alias()","links":{"`Arg::alias`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2608":{"id":"0:2608","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[17,22],"end":[17,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"arg_matches::OsValues","name":"OsValues","id":"0:5038:1676","glob":false}},"0:2435:59":{"id":"0:2435:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1488,4],"end":[1494,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2210:956":{"id":"0:2210:956","crate_id":0,"name":"of","span":{"filename":"src/parser/matches/any_value.rs","begin":[49,4],"end":[55,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:587:4756":{"id":"0:587:4756","crate_id":0,"name":"is_next_line_help_set","span":{"filename":"src/builder/arg.rs","begin":[4602,4],"end":[4604,5]},"visibility":"public","docs":"Report whether [`Arg::next_line_help`] is set","links":{"`Arg::next_line_help`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4947:3033":{"id":"b:5:787-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:3647:2672":{"id":"a:2:9340:7907-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2159:7855":{"id":"0:2159:7855","crate_id":0,"name":"entry","span":{"filename":"src/parser/arg_matcher.rs","begin":[123,4],"end":[125,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"indexmap::map::Entry","id":"31:269:7856","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:903:5457":{"id":"0:903:5457","crate_id":0,"name":"print_help","span":{"filename":"src/builder/command.rs","begin":[745,4],"end":[753,5]},"visibility":"public","docs":"Prints the short help message (`-h`) to [`io::stdout()`].\n\nSee also [`Command::print_long_help`].\n\n# Examples\n\n```rust\n# use clap::Command;\nlet mut cmd = Command::new(\"myprog\");\ncmd.print_help();\n```\n[`io::stdout()`]: std::io::stdout()","links":{"std::io::stdout()":"1:4477:8981","`Command::print_long_help`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31985:1528":{"id":"2:31985:1528","crate_id":2,"name":"wrapping_mul","span":null,"visibility":"public","docs":"Wrapping (modular) multiplication. Computes `self *\nrhs`, wrapping around at the boundary of the type.\n\n# Examples\n\nBasic usage:\n\nPlease note that this example is shared between integer types.\nWhich explains why `u8` is used here.\n\n```\nassert_eq!(10u8.wrapping_mul(12), 120);\nassert_eq!(25u8.wrapping_mul(12), 44);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2088":{"id":"0:2088","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1107,0],"end":[1111,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2089:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2575":{"id":"0:2575","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/matched_arg.rs","begin":[196,0],"end":[223,1]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2576:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:3096:3014":{"id":"b:2:4002-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4142:408":{"id":"0:4142:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/arg_predicate.rs","begin":[1,15],"end":[1,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4066:4875":{"id":"0:4066:4875","crate_id":0,"name":"GeneratedMutated","span":{"filename":"src/builder/arg.rs","begin":[5193,4],"end":[5193,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:5031:8079":{"id":"b:2:2869-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2081:7585":{"id":"0:2081:7585","crate_id":0,"name":"escape","span":{"filename":"src/error/mod.rs","begin":[1055,0],"end":[1062,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl AsRef<str>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1113:6417":{"id":"0:1113:6417","crate_id":0,"name":"get_external_subcommand_value_parser","span":{"filename":"src/builder/command.rs","begin":[3753,4],"end":[3763,5]},"visibility":"public","docs":"Configured parser for values passed to an external subcommand\n\n# Example\n\n```rust\nlet cmd = clap::Command::new(\"raw\")\n    .allow_external_subcommands(true)\n    .allow_invalid_utf8_for_external_subcommands(true);\nlet value_parser = cmd.get_external_subcommand_value_parser();\nprintln!(\"{:?}\", value_parser);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"super::ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2691:2562":{"id":"0:2691:2562","crate_id":0,"name":"cmd","span":{"filename":"src/parser/parser.rs","begin":[26,4],"end":[26,33]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}},"0:2413:8271":{"id":"0:2413:8271","crate_id":0,"name":"next_back","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1418,4],"end":[1420,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5233":{"id":"0:5233","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[25,16],"end":[25,25]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5234:604","0:5235:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:4761:7449":{"id":"a:2:9339:7908-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3407:6627":{"id":"0:3407:6627","crate_id":0,"name":"with_capacity","span":{"filename":"src/util/graph.rs","begin":[23,4],"end":[25,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4530:1672":{"id":"a:2:9339:7908-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2032:7507":{"id":"0:2032:7507","crate_id":0,"name":"extend_context_unchecked","span":{"filename":"src/error/mod.rs","begin":[245,4],"end":[251,5]},"visibility":"crate","docs":"Does not verify if `ContextKind` is already present","links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["context",{"kind":"array","inner":{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"len":"N"}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1675:2901":{"id":"0:1675:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1890,4],"end":[1894,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3647:2672":{"id":"b:5:787-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:5156:7831":{"id":"b:2:2872-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4499":{"id":"0:4499","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[77,23],"end":[77,32]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:4706:2918":{"id":"b:2:2872-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:449:2898":{"id":"0:449:2898","crate_id":0,"name":"possible_value","span":{"filename":"src/builder/arg.rs","begin":[1587,4],"end":[1593,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::value_parser(PossibleValuesParser::new(...))`]","links":{},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::value_parser(PossibleValuesParser::new(...)).takes_value(true)`\")]","#[must_use]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::value_parser(PossibleValuesParser::new(...)).takes_value(true)`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5269:8971":{"id":"0:5269:8971","crate_id":0,"name":"Style","span":{"filename":"src/output/fmt.rs","begin":[136,0],"end":[142,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5270:8972","0:5272:8973","0:5274:127","0:5276:8974","0:5278:115"],"impls":["a:2:3310:6658-0:5269:8971","a:2:3269:211-0:5269:8971","a:2:9340:7907-0:5269:8971","a:2:9339:7908-0:5269:8971","a:2:3281:220-0:5269:8971","b:2:3198-0:5269:8971","b:2:2872-0:5269:8971","b:2:2869-0:5269:8971","b:2:4002-0:5269:8971","b:2:3202-0:5269:8971","b:2:3213-0:5269:8971","b:2:3208-0:5269:8971","b:5:787-0:5269:8971","b:31:25-0:5269:8971","0:5280","0:5281","0:5283","0:5285","0:5286","0:5288","0:5289","0:3361"]}},"0:413:3642":{"id":"0:413:3642","crate_id":0,"name":"max_occurrences","span":{"filename":"src/builder/arg.rs","begin":[813,4],"end":[820,5]},"visibility":"public","docs":"Deprecated, for flags this is replaced with `action(ArgAction::Count).value_parser(value_parser!(u8).range(..max))`","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.2.0\", note =\n\"For flags, replaced with `action(ArgAction::Count).value_parser(value_parser!(u8).range(..max))`\")]"],"deprecation":{"since":"3.2.0","note":"For flags, replaced with `action(ArgAction::Count).value_parser(value_parser!(u8).range(..max))`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["qty",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6787:12338":{"id":"1:6787:12338","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6788:17231","1:6789:31126"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9340:7907-0:5305:3334":{"id":"a:2:9340:7907-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5125:8402":{"id":"0:5125:8402","crate_id":0,"name":"MaybeHyphenValue","span":{"filename":"src/parser/parser.rs","begin":[1704,4],"end":[1704,20]},"visibility":"default","docs":"This flag might be an hyphen Value.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3725:3205":{"id":"0:3725:3205","crate_id":0,"name":"SC_REQUIRED","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:2898:1560":{"id":"0:2898:1560","crate_id":0,"name":"suggestions","span":{"filename":"src/parser/features/suggestions.rs","begin":[1,0],"end":[105,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2905:7525","0:2912:8556"],"is_stripped":false}},"0:4128":{"id":"0:4128","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[80,36],"end":[80,38]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4827":{"id":"0:4827","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[42,23],"end":[42,32]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4828:604","0:4829:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4283":{"id":"0:4283","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10385:9318","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4284:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4353:181":{"id":"0:4353:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1754":{"id":"0:1754","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[38,0],"end":[42,1]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"25:2788:7323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1756:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1318:272":{"id":"0:1318:272","crate_id":0,"name":"alias","span":{"filename":"src/builder/possible_value.rs","begin":[114,4],"end":[117,5]},"visibility":"public","docs":"Sets a *hidden* alias for this argument value.\n\n# Examples\n\n```rust\n# use clap::PossibleValue;\nPossibleValue::new(\"slow\")\n    .alias(\"not-fast\")\n# ;\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:391:2590":{"id":"0:391:2590","crate_id":0,"name":"short","span":{"filename":"src/builder/arg.rs","begin":[172,4],"end":[177,5]},"visibility":"public","docs":"Sets the short version of the argument without the preceding `-`.\n\nBy default `V` and `h` are used by the auto-generated `version` and `help` arguments,\nrespectively. You may use the uppercase `V` or lowercase `h` for your own arguments, in\nwhich case `clap` simply will not assign those to the auto-generated\n`version` or `help` arguments.\n\n# Examples\n\nWhen calling `short`, use a single valid UTF-8 character which will allow using the\nargument via a single hyphen (`-`) such as `-c`:\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"config\")\n        .short('c')\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"prog\", \"-c\", \"file.toml\"\n    ]);\n\nassert_eq!(m.get_one::<String>(\"config\").map(String::as_str), Some(\"file.toml\"));\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["s",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5141:7832":{"id":"a:2:9339:7908-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:5010:7834":{"id":"a:2:3269:211-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1756:681":{"id":"0:1756:681","crate_id":0,"name":"from","span":{"filename":"src/builder/regex.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["r",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"25:2788:7323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13529:31608":{"id":"2:13529:31608","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49850:9256","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4063:3357":{"id":"b:2:3208-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5262:6646":{"id":"0:5262:6646","crate_id":0,"name":"stream","span":{"filename":"src/output/fmt.rs","begin":[16,4],"end":[16,18]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4657:2904":{"id":"0:4657:2904","crate_id":0,"name":"PossibleValuesParser","span":{"filename":"src/builder/value_parser.rs","begin":[982,0],"end":[982,68]},"visibility":"public","docs":"Verify the value is from an enumerated set of [`PossibleValue`][crate::PossibleValue].\n\nSee also:\n- [`EnumValueParser`]\n\n# Example\n\nUsage:\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"color\")\n            .value_parser(clap::builder::PossibleValuesParser::new([\"always\", \"auto\", \"never\"]))\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"always\"]).unwrap();\nlet port: &String = m.get_one(\"color\")\n    .expect(\"required\");\nassert_eq!(port, \"always\");\n```\n\nSemantics:\n```rust\n# use std::ffi::OsStr;\n# use clap::builder::TypedValueParser;\n# let cmd = clap::Command::new(\"test\");\n# let arg = None;\nlet value_parser = clap::builder::PossibleValuesParser::new([\"always\", \"auto\", \"never\"]);\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"random\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"\")).is_err());\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"always\")).unwrap(), \"always\");\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"auto\")).unwrap(), \"auto\");\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"never\")).unwrap(), \"never\");\n```","links":{"crate::PossibleValue":"0:4530:1672","`EnumValueParser`":"0:4647:2916"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4659:1542"],"impls":["0:1525","a:2:3310:6658-0:4657:2904","a:2:3269:211-0:4657:2904","a:2:9340:7907-0:4657:2904","a:2:9339:7908-0:4657:2904","a:2:3281:220-0:4657:2904","b:2:3198-0:4657:2904","b:2:2872-0:4657:2904","b:2:2869-0:4657:2904","b:2:4002-0:4657:2904","b:2:3202-0:4657:2904","b:2:3213-0:4657:2904","b:2:3208-0:4657:2904","b:5:787-0:4657:2904","0:4660","0:4662","0:1528","0:1538"]}},"0:3569:3107":{"id":"0:3569:3107","crate_id":0,"name":"Multicall","span":{"filename":"src/builder/app_settings.rs","begin":[198,4],"end":[198,13]},"visibility":"default","docs":"Deprecated, replaced with [`Command::multicall`] and [`Command::is_multicall_set`]","links":{"`Command::multicall`":"0:4456:1667","`Command::is_multicall_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::multicall` and `Command::is_multicall_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::multicall` and `Command::is_multicall_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4111:3362":{"id":"0:4111:3362","crate_id":0,"name":"requires","span":{"filename":"src/builder/arg_group.rs","begin":[86,4],"end":[86,32]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:9340:7907-0:5196:5213":{"id":"a:2:9340:7907-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"44:5450:13950":{"id":"44:5450:13950","crate_id":44,"name":"ObjectComdat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5452:14477","44:5453:782","44:5454:13637","44:5455:73846","44:5456:899","44:5457:13189"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"44:5487:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:267:2950":{"id":"0:267:2950","crate_id":0,"name":"yaml_to_usize","span":{"filename":"src/builder/macros.rs","begin":[146,0],"end":[153,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_to_usize {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"0:3988:3365":{"id":"0:3988:3365","crate_id":0,"name":"r_unless","span":{"filename":"src/builder/arg.rs","begin":[76,4],"end":[76,32]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3202-0:4933:7836":{"id":"b:2:3202-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3733:3213":{"id":"0:3733:3213","crate_id":0,"name":"DISABLE_VERSION_FLAG","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:3368:9213":{"id":"2:3368:9213","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4585":{"id":"0:4585","crate_id":0,"name":null,"span":{"filename":"src/builder/usage_parser.rs","begin":[20,9],"end":[20,14]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4587:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10655:9703":{"id":"2:10655:9703","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10656:146","2:10657:29897","2:10658:29898"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4926:5216":{"id":"0:4926:5216","crate_id":0,"name":"ArgMatcher","span":{"filename":"src/parser/arg_matcher.rs","begin":[17,0],"end":[20,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4927:2748","0:4928:7837"],"impls":["0:2146","a:2:3310:6658-0:4926:5216","a:2:3269:211-0:4926:5216","a:2:9340:7907-0:4926:5216","a:2:9339:7908-0:4926:5216","a:2:3281:220-0:4926:5216","b:2:3198-0:4926:5216","b:2:2872-0:4926:5216","b:2:2869-0:4926:5216","b:2:4002-0:4926:5216","b:2:3202-0:4926:5216","b:2:3213-0:4926:5216","b:2:3208-0:4926:5216","0:4929","0:4931","0:2182"]}},"0:2319:8080":{"id":"0:2319:8080","crate_id":0,"name":"values_of_lossy","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[451,4],"end":[459,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_many()`]","links":{"`ArgMatches::get_many()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgMatches::get_many()`\")]","#[track_caller]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2849:8589":{"id":"0:2849:8589","crate_id":0,"name":"build_conflict_err","span":{"filename":"src/parser/validator.rs","begin":[227,4],"end":[264,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["conflict_ids",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2831:920":{"id":"0:2831:920","crate_id":0,"name":"new","span":{"filename":"src/parser/validator.rs","begin":[17,4],"end":[20,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3263:8401":{"id":"0:3263:8401","crate_id":0,"name":"create_usage_no_title","span":{"filename":"src/output/usage.rs","begin":[40,4],"end":[49,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["used",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4924":{"id":"0:4924","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1114,9],"end":[1114,14]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4925:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2021:920":{"id":"0:2021:920","crate_id":0,"name":"new","span":{"filename":"src/error/mod.rs","begin":[171,4],"end":[186,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3459:7236":{"id":"0:3459:7236","crate_id":0,"name":"str_to_bool","span":{"filename":"src/util/str_to_bool.rs","begin":[1,0],"end":[21,1]},"visibility":{"restricted":{"parent":"0:3374:1659","path":"::util"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3460:7234","0:3462:7235","0:3464:7236"],"is_stripped":false}},"0:2192":{"id":"0:2192","crate_id":0,"name":null,"span":{"filename":"src/parser/error.rs","begin":[39,0],"end":[39,42]},"visibility":{"restricted":{"parent":"0:2185:1656","path":"::parser::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","type_id","source","provide","cause"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4997:7835":{"id":"a:2:3269:211-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:4933:7836":{"id":"b:2:4002-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:4742:7344":{"id":"a:2:9339:7908-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3650":{"id":"0:3650","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4507":{"id":"0:4507","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[77,34],"end":[77,36]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:721:408":{"id":"0:721:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/arg_group.rs","begin":[622,4],"end":[632,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:988:5990":{"id":"0:988:5990","crate_id":0,"name":"short_flag_alias","span":{"filename":"src/builder/command.rs","begin":[2375,4],"end":[2379,5]},"visibility":"public","docs":"Add an alias, which functions as  \"hidden\" short flag subcommand\n\nThis will automatically dispatch as if this subcommand was used. This is more efficient,\nand easier than creating multiple hidden subcommands as one only needs to check for the\nexistence of this command, and not all variants.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n            .subcommand(Command::new(\"test\").short_flag('t')\n                .short_flag_alias('d'))\n            .get_matches_from(vec![\"myprog\", \"-d\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31982:1527":{"id":"2:31982:1527","crate_id":2,"name":"wrapping_add","span":null,"visibility":"public","docs":"Wrapping (modular) addition. Computes `self + rhs`,\nwrapping around at the boundary of the type.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(200u64.wrapping_add(55), 255);\nassert_eq!(200u64.wrapping_add(u64::MAX), 199);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:5174:8567":{"id":"b:2:3198-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3775:9237":{"id":"2:3775:9237","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1119:6425":{"id":"0:1119:6425","crate_id":0,"name":"is_multicall_set","span":{"filename":"src/builder/command.rs","begin":[3781,4],"end":[3783,5]},"visibility":"public","docs":"Report whether [`Command::multicall`] is set","links":{"`Command::multicall`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:465:4046":{"id":"0:465:4046","crate_id":0,"name":"value_terminator","span":{"filename":"src/builder/arg.rs","begin":[2072,4],"end":[2075,5]},"visibility":"public","docs":"Sentinel to **stop** parsing multiple values of a give argument.\n\nBy default when\none sets [`multiple_values(true)`] on an argument, clap will continue parsing values for that\nargument until it reaches another valid argument, or one of the other more specific settings\nfor multiple values is used (such as [`min_values`], [`max_values`] or\n[`number_of_values`]).\n\n**NOTE:** This setting only applies to [options] and [positional arguments]\n\n**NOTE:** When the terminator is passed in on the command line, it is **not** stored as one\nof the values\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"vals\")\n    .takes_value(true)\n    .multiple_values(true)\n    .value_terminator(\";\")\n# ;\n```\n\nThe following example uses two arguments, a sequence of commands, and the location in which\nto perform them\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cmds\")\n        .takes_value(true)\n        .multiple_values(true)\n        .allow_hyphen_values(true)\n        .value_terminator(\";\"))\n    .arg(Arg::new(\"location\"))\n    .get_matches_from(vec![\n        \"prog\", \"find\", \"-type\", \"f\", \"-name\", \"special\", \";\", \"/home/clap\"\n    ]);\nlet cmds: Vec<_> = m.values_of(\"cmds\").unwrap().collect();\nassert_eq!(&cmds, &[\"find\", \"-type\", \"f\", \"-name\", \"special\"]);\nassert_eq!(m.value_of(\"location\"), Some(\"/home/clap\"));\n```\n[options]: Arg::takes_value()\n[positional arguments]: Arg::index()\n[`multiple_values(true)`]: Arg::multiple_values()\n[`min_values`]: Arg::min_values()\n[`number_of_values`]: Arg::number_of_values()\n[`max_values`]: Arg::max_values()","links":{"Arg::multiple_values()":"0:3972:1654","Arg::number_of_values()":"0:3972:1654","Arg::takes_value()":"0:3972:1654","Arg::max_values()":"0:3972:1654","Arg::index()":"0:3972:1654","Arg::min_values()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["term",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2459:5300":{"id":"0:2459:5300","crate_id":0,"name":"size_hint","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1562,4],"end":[1564,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5106:907":{"id":"0:5106:907","crate_id":0,"name":"ne","span":{"filename":"src/parser/parser.rs","begin":[1680,16],"end":[1680,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5031:8079":{"id":"b:2:2872-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:4921:7467":{"id":"a:2:3269:211-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:4892:7456":{"id":"a:2:9339:7908-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13520:31603":{"id":"2:13520:31603","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16010:9064"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5130:2580":{"id":"0:5130:2580","crate_id":0,"name":"arg","span":{"filename":"src/parser/parser.rs","begin":[1711,8],"end":[1711,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4631":{"id":"0:4631","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[674,15],"end":[674,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4632:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5331":{"id":"0:5331","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[2,29],"end":[2,31]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4131:2923":{"id":"a:2:9340:7907-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3589:3151":{"id":"0:3589:3151","crate_id":0,"name":"DisableColoredHelp","span":{"filename":"src/builder/app_settings.rs","begin":[310,4],"end":[310,22]},"visibility":"default","docs":"Deprecated, replaced with [`Command::disable_colored_help`] and\n[`Command::is_disable_colored_help_set`]","links":{"`Command::disable_colored_help`":"0:4456:1667","`Command::is_disable_colored_help_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::disable_colored_help` and `Command::is_disable_colored_help_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::disable_colored_help` and `Command::is_disable_colored_help_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1632":{"id":"0:1632","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1698,0],"end":[1702,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1633:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:31960:74206":{"id":"2:31960:74206","crate_id":2,"name":"checked_div","span":null,"visibility":"public","docs":"Checked integer division. Computes `self / rhs`, returning `None`\nif `rhs == 0`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(128u64.checked_div(2), Some(64));\nassert_eq!(1u64.checked_div(0), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_checked_int_div\", since = \"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4833:1674":{"id":"b:2:2869-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:5220:7335":{"id":"b:5:787-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2504:8082":{"id":"0:2504:8082","crate_id":0,"name":"unwrap_os_string","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1717,0],"end":[1724,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[track_caller]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3545:3064":{"id":"0:3545:3064","crate_id":0,"name":"WaitOnError","span":{"filename":"src/builder/app_settings.rs","begin":[80,4],"end":[80,15]},"visibility":"default","docs":"Deprecated, replace\n```rust,no_run\nlet cmd = clap::Command::new(\"cmd\")\n    .global_setting(clap::AppSettings::WaitOnError)\n    .arg(clap::arg!(--flag));\nlet m = cmd.get_matches();\n```\nwith\n```rust\nlet cmd = clap::Command::new(\"cmd\")\n    .arg(clap::arg!(--flag));\nlet m = match cmd.try_get_matches() {\n    Ok(m) => m,\n    Err(err) => {\n        if err.use_stderr() {\n            let _ = err.print();\n\n            eprintln!(\"\\nPress [ENTER] / [RETURN] to continue...\");\n            use std::io::BufRead;\n            let mut s = String::new();\n            let i = std::io::stdin();\n            i.lock().read_line(&mut s).unwrap();\n\n            std::process::exit(2);\n        } else {\n            let _ = err.print();\n            std::process::exit(0);\n        }\n    }\n};\n```","links":{},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"See documentation for how to hand-implement this\")]"],"deprecation":{"since":"3.1.0","note":"See documentation for how to hand-implement this"},"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9340:7907-0:4231:2672":{"id":"a:2:9340:7907-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:4456:1667":{"id":"b:2:2869-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5248:2693":{"id":"0:5248:2693","crate_id":0,"name":"Stderr","span":{"filename":"src/output/fmt.rs","begin":[11,4],"end":[11,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3202-0:4700:2915":{"id":"b:2:3202-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4661:408":{"id":"0:4661:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[981,9],"end":[981,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3458:604":{"id":"0:3458:604","crate_id":0,"name":"eq","span":{"filename":"src/util/id.rs","begin":[89,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1246:6609":{"id":"0:1246:6609","crate_id":0,"name":"has_positionals","span":{"filename":"src/builder/command.rs","begin":[4871,4],"end":[4873,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:201:2751":{"id":"0:201:2751","crate_id":0,"name":"from_arg_matches_mut","span":{"filename":"src/derive.rs","begin":[352,4],"end":[354,5]},"visibility":"default","docs":"Instantiate `Self` from [`ArgMatches`], parsing the arguments as needed.\n\nMotivation: If our application had two CLI options, `--name\n<STRING>` and the flag `--debug`, we may create a struct as follows:\n\n ```no_run\nstruct Context {\n    name: String,\n    debug: bool\n}\n```\n\nWe then need to convert the `ArgMatches` that `clap` generated into our struct.\n`from_arg_matches_mut` serves as the equivalent of:\n\n ```no_run\n# use clap::ArgMatches;\n# struct Context {\n#   name: String,\n#   debug: bool\n# }\nimpl From<ArgMatches> for Context {\n   fn from(m: ArgMatches) -> Self {\n       Context {\n           name: m.get_one::<String>(\"name\").unwrap().to_string(),\n           debug: *m.get_one::<bool>(\"debug\").expect(\"defaulted by clap\"),\n       }\n   }\n}\n```","links":{"`ArgMatches`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4063:3357":{"id":"a:2:3281:220-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3453:681":{"id":"0:3453:681","crate_id":0,"name":"from","span":{"filename":"src/util/id.rs","begin":[70,4],"end":[76,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2019:2698":{"id":"0:2019:2698","crate_id":0,"name":"print","span":{"filename":"src/error/mod.rs","begin":[155,4],"end":[157,5]},"visibility":"public","docs":"Prints formatted and colored error to `stdout` or `stderr` according to its error kind\n\n# Example\n```no_run\nuse clap::Command;\n\nmatch Command::new(\"Command\").try_get_matches() {\n    Ok(matches) => {\n        // do_something\n    },\n    Err(err) => {\n        err.print().expect(\"Error writing Error\");\n        // do_something\n    },\n};\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1883":{"id":"0:1883","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[42,0],"end":[42,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::_AnonymousValueParser","name":"_AnonymousValueParser","id":"0:4719:2911","glob":false}},"0:1612":{"id":"0:1612","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1569,0],"end":[1597,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1613:7050","0:1614:7090","0:1616:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"44:27:13619":{"id":"44:27:13619","crate_id":44,"name":"Endian","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:28:74106","44:29:74107","44:30:73620","44:31:73621","44:32:73622","44:33:73623","44:34:73624","44:35:73626","44:36:73627","44:37:73628","44:38:74108","44:40:74109","44:42:74110","44:44:74111","44:46:74112","44:48:74113","44:50:11595","44:51:11596","44:52:11597","44:53:11601","44:54:11602","44:55:11603","44:56:74114","44:58:74115","44:60:74116","44:62:74117","44:64:74118","44:66:74119"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:237:2780":{"id":"0:237:2780","crate_id":0,"name":"from_arg_matches","span":{"filename":"src/derive.rs","begin":[539,4],"end":[541,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4754":{"id":"0:4754","crate_id":0,"name":null,"span":{"filename":"src/builder/debug_asserts.rs","begin":[351,9],"end":[351,11]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4698":{"id":"0:4698","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1550,22],"end":[1550,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4699:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4010:3385":{"id":"0:4010:3385","crate_id":0,"name":"help_heading","span":{"filename":"src/builder/arg.rs","begin":[99,4],"end":[99,55]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:1445:660":{"id":"0:1445:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[515,4],"end":[523,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1002:4269":{"id":"0:1002:4269","crate_id":0,"name":"display_order","span":{"filename":"src/builder/command.rs","begin":[2706,4],"end":[2709,5]},"visibility":"public","docs":"Set the placement of this subcommand within the help.\n\nSubcommands with a lower value will be displayed first in the help message.  Subcommands\nwith duplicate display orders will be displayed in alphabetical order.\n\nThis is helpful when one would like to emphasize frequently used subcommands, or prioritize\nthose towards the top of the list.\n\n**NOTE:** The default is 999 for all subcommands.\n\n# Examples\n\n```rust\n# use clap::{Command, };\nlet m = Command::new(\"cust-ord\")\n    .subcommand(Command::new(\"alpha\") // typically subcommands are grouped\n                                               // alphabetically by name. Subcommands\n                                               // without a display_order have a value of\n                                               // 999 and are displayed alphabetically with\n                                               // all other 999 subcommands\n        .about(\"Some help and text\"))\n    .subcommand(Command::new(\"beta\")\n        .display_order(1)   // In order to force this subcommand to appear *first*\n                            // all we have to do is give it a value lower than 999.\n                            // Any other subcommands with a value of 1 will be displayed\n                            // alphabetically with this one...then 2 values, then 3, etc.\n        .about(\"I should be first!\"))\n    .get_matches_from(vec![\n        \"cust-ord\", \"--help\"\n    ]);\n```\n\nThe above example displays the following help message\n\n```text\ncust-ord\n\nUSAGE:\n    cust-ord [OPTIONS]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    beta    I should be first!\n    alpha   Some help and text\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ord",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:31632","5:6085:2545","5:6088:31633","5:6091:9025","5:6103:31634","5:6104:7137","5:6105:8732","5:6106:23434","5:6107:3280"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:4105:1655":{"id":"b:5:787-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4770:7526":{"id":"0:4770:7526","crate_id":0,"name":"InvalidValue","span":{"filename":"src/error/context.rs","begin":[14,4],"end":[14,16]},"visibility":"default","docs":"Rejected values","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:4002-0:5048:1675":{"id":"b:2:4002-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31988:74226":{"id":"2:31988:74226","crate_id":2,"name":"wrapping_rem","span":null,"visibility":"public","docs":"Wrapping (modular) remainder. Computes `self % rhs`.\nWrapped remainder calculation on unsigned types is\njust the regular remainder calculation.\nThere's no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.wrapping_rem(10), 0);\n```","links":{},"attrs":["#[stable(feature = \"num_wrapping\", since = \"1.2.0\")]","#[rustc_const_stable(feature = \"const_wrapping_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:199:1663":{"id":"0:199:1663","crate_id":0,"name":"FromArgMatches","span":{"filename":"src/derive.rs","begin":[285,0],"end":[363,1]},"visibility":"public","docs":"Converts an instance of [`ArgMatches`] to a user-defined container.\n\nDerived as part of [`Parser`], [`Args`], and [`Subcommand`].","links":{"`Args`":"0:204:1661","`Parser`":"0:164:1664","`Subcommand`":"0:207:1665","`ArgMatches`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:200:2780","0:201:2751","0:202:2827","0:203:2771"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:235"]}},"b:5:6413-0:4456:1667":{"id":"b:5:6413-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6085:2545":{"id":"5:6085:2545","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4826":{"id":"0:4826","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[42,23],"end":[42,32]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:4231:2672":{"id":"b:2:3198-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:4688:2914":{"id":"b:2:3202-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:5048:1675":{"id":"b:2:2872-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4530:1672":{"id":"b:2:3213-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4247":{"id":"0:4247","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4248:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1430":{"id":"0:1430","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[383,0],"end":[388,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Create an `i64` [`ValueParser`] from a `N..` range\n\nSee [`RangedI64ValueParser`] for more control over the output type.\n\nSee also [`RangedU64ValueParser`]\n\n# Examples\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(3000..)\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"3001\"]).unwrap();\nlet port: i64 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```","links":{"`RangedU64ValueParser`":"0:4676:2906","`RangedI64ValueParser`":"0:4664:2905","`ValueParser`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:45981:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1431:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1674:1664":{"id":"0:1674:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1889,4],"end":[1889,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}}},"0:3201":{"id":"0:3201","crate_id":0,"name":null,"span":{"filename":"src/output/help.rs","begin":[998,0],"end":[1104,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["0:3205:8722"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4966":{"id":"0:4966","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,32],"end":[67,41]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4967:604","0:4968:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:3647:2672":{"id":"b:2:3202-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4473:3367":{"id":"0:4473:3367","crate_id":0,"name":"aliases","span":{"filename":"src/builder/command.rs","begin":[94,4],"end":[94,36]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"primitive","inner":"bool"}]}}],"bindings":[]}}}}},"a:2:3310:6658-0:4987:8033":{"id":"a:2:3310:6658-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:966:3570":{"id":"0:966:3570","crate_id":0,"name":"unset_setting","span":{"filename":"src/builder/command.rs","begin":[1807,4],"end":[1813,5]},"visibility":"public","docs":"Remove a setting for the current command or subcommand.\n\nSee [`AppSettings`] for a full list of possibilities and examples.\n\n# Examples\n\n```no_run\n# use clap::{Command, AppSettings};\nCommand::new(\"myprog\")\n    .unset_setting(AppSettings::SubcommandRequired)\n    .setting(AppSettings::AllowLeadingHyphen)\n# ;\n```\nor\n```no_run\n# use clap::{Command, AppSettings};\nCommand::new(\"myprog\")\n    .unset_setting(AppSettings::SubcommandRequired | AppSettings::AllowLeadingHyphen)\n# ;\n```","links":{"`AppSettings`":"0:3542:1669"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["setting",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AppFlags","id":"0:3527:1668","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3221:8771":{"id":"0:3221:8771","crate_id":0,"name":"text_wrapper","span":{"filename":"src/output/help.rs","begin":[1136,0],"end":[1144,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["help",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["width",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3208-0:4933:7836":{"id":"b:2:3208-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3210:8787":{"id":"0:3210:8787","crate_id":0,"name":"TAB_WIDTH","span":{"filename":"src/output/help.rs","begin":[1115,0],"end":[1115,27]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"4","value":"4usize","is_literal":true}},"0:555:4687":{"id":"0:555:4687","crate_id":0,"name":"get_visible_aliases","span":{"filename":"src/builder/arg.rs","begin":[4350,4],"end":[4362,5]},"visibility":"public","docs":"Get visible aliases for this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5161:5211":{"id":"0:5161:5211","crate_id":0,"name":"Index","span":{"filename":"src/parser/parser.rs","begin":[1728,4],"end":[1728,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:31946:1120":{"id":"2:31946:1120","crate_id":2,"name":"rotate_right","span":null,"visibility":"public","docs":"Shifts the bits to the right by a specified amount, `n`,\nwrapping the truncated bits to the beginning of the resulting\ninteger.\n\nPlease note this isn't the same operation as the `>>` shifting operator!\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0x6e10aau64;\nlet m = 0xaa00000000006e1;\n\nassert_eq!(n.rotate_right(12), m);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1551:7050":{"id":"0:1551:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[1181,4],"end":[1181,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:3310:660":{"id":"0:3310:660","crate_id":0,"name":"fmt","span":{"filename":"src/output/fmt.rs","begin":[1,0],"end":[158,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5245:2692","0:5261:2691","0:5269:8971","0:3363:8980"],"is_stripped":false}},"0:2297:7972":{"id":"0:2297:7972","crate_id":0,"name":"get_one","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[117,4],"end":[120,5]},"visibility":"public","docs":"Gets the value of a specific option or positional argument.\n\ni.e. an argument that [takes an additional value][crate::Arg::takes_value] at runtime.\n\nReturns an error if the wrong type was used.\n\nReturns `None` if the option wasn't present.\n\n*NOTE:* This will always return `Some(value)` if [`default_value`] has been set.\n[`ArgMatches::value_source`] can be used to check if a value is present at runtime.\n\n# Panic\n\nIf the argument definition and access mismatch.  To handle this case programmatically, see\n[`ArgMatches::try_get_one`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, value_parser};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"port\")\n        .value_parser(value_parser!(usize))\n        .takes_value(true)\n        .required(true))\n    .get_matches_from(vec![\"myapp\", \"2020\"]);\n\nlet port: usize = *m\n    .get_one(\"port\")\n    .expect(\"`port`is required\");\nassert_eq!(port, 2020);\n```\n[option]: crate::Arg::takes_value()\n[positional]: crate::Arg::index()\n[`default_value`]: crate::Arg::default_value()","links":{"`ArgMatches::try_get_one`":"0:4953:1658","crate::Arg::takes_value":"0:3972:1654","crate::Arg::default_value()":"0:3972:1654","`ArgMatches::value_source`":"0:4953:1658"},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:5245:2692":{"id":"a:2:3310:6658-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3730:3210":{"id":"0:3730:3210","crate_id":0,"name":"SC_REQUIRED_ELSE_HELP","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"a:2:9340:7907-0:4761:7449":{"id":"a:2:9340:7907-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3104:5259":{"id":"0:3104:5259","crate_id":0,"name":"term_w","span":{"filename":"src/output/help.rs","begin":[25,4],"end":[25,17]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:3362:59":{"id":"0:3362:59","crate_id":0,"name":"default","span":{"filename":"src/output/fmt.rs","begin":[145,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9339:7908":{"id":"2:9339:7908","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:5220:7335":{"id":"b:2:2869-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1656:1664":{"id":"0:1656:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1843,4],"end":[1843,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3525:660":{"id":"0:3525:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/action.rs","begin":[23,16],"end":[23,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:5319:1660":{"id":"b:31:25-0:5319:1660","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"2:31945:1119":{"id":"2:31945:1119","crate_id":2,"name":"rotate_left","span":null,"visibility":"public","docs":"Shifts the bits to the left by a specified amount, `n`,\nwrapping the truncated bits to the end of the resulting integer.\n\nPlease note this isn't the same operation as the `<<` shifting operator!\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0xaa00000000006e1u64;\nlet m = 0x6e10aa;\n\nassert_eq!(n.rotate_left(12), m);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5024:793":{"id":"0:5024:793","crate_id":0,"name":"len","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1511,4],"end":[1511,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:956:5248":{"id":"0:956:5248","crate_id":0,"name":"long_version","span":{"filename":"src/builder/command.rs","begin":[1640,4],"end":[1643,5]},"visibility":"public","docs":"Sets the version for the long version (`--version`) and help messages.\n\nIf [`Command::version`] is not specified, this message will be displayed for `-V`.\n\n**Pro-tip:** Use `clap`s convenience macro [`crate_version!`] to\nautomatically set your application's version to the same thing as your\ncrate at compile time.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .long_version(\n\"v0.1.24\n commit: abcdef89726d\n revision: 123\n release: 2\n binary: myprog\")\n# ;\n```\n[`crate_version!`]: ./macro.crate_version!.html","links":{"`Command::version`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ver",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3972:1654":{"id":"b:2:3198-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4947:3033":{"id":"b:2:4002-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2086":{"id":"0:2086","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1101,0],"end":[1105,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2087:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:679:2895":{"id":"0:679:2895","crate_id":0,"name":"arg_group","span":{"filename":"src/builder/arg_group.rs","begin":[2,0],"end":[633,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4105:1655"],"is_stripped":false}},"0:4794:7663":{"id":"0:4794:7663","crate_id":0,"name":"Custom","span":{"filename":"src/error/context.rs","begin":[38,4],"end":[38,10]},"visibility":"default","docs":"An opaque message to the user","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3352:9208":{"id":"2:3352:9208","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:31:25-0:5245:2692":{"id":"b:31:25-0:5245:2692","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:5182:3335":{"id":"0:5182:3335","crate_id":0,"name":"Key","span":{"filename":"src/mkeymap.rs","begin":[10,0],"end":[13,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:5183:6486","0:5184:753"],"impls":["a:2:3310:6658-0:5182:3335","a:2:3269:211-0:5182:3335","a:2:9340:7907-0:5182:3335","a:2:9339:7908-0:5182:3335","a:2:3281:220-0:5182:3335","b:2:3198-0:5182:3335","b:2:2872-0:5182:3335","b:2:2869-0:5182:3335","b:2:4002-0:5182:3335","b:2:3202-0:5182:3335","b:2:3213-0:5182:3335","b:2:3208-0:5182:3335","b:5:787-0:5182:3335","b:31:25-0:5182:3335","0:5185","0:5186","0:5189","0:5190","0:5192","0:5194"]}},"0:4703:408":{"id":"0:4703:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[1647,15],"end":[1647,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:655:660":{"id":"0:655:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg.rs","begin":[5095,4],"end":[5128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1262:6620":{"id":"0:1262:6620","crate_id":0,"name":"groups_for_arg","span":{"filename":"src/builder/command.rs","begin":[4920,4],"end":[4927,5]},"visibility":"crate","docs":"Iterate through the groups this arg is member of.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116:1697":{"id":"0:116:1697","crate_id":0,"name":"_tutorial","span":{"filename":"src/_derive/_tutorial.rs","begin":[10,0],"end":[205,7]},"visibility":"public","docs":"# Documentation: Derive Tutorial\n\n1. [Quick Start](#quick-start)\n2. [Configuring the Parser](#configuring-the-parser)\n3. [Adding Arguments](#adding-arguments)\n    1. [Positionals](#positionals)\n    2. [Options](#options)\n    3. [Flags](#flags)\n    4. [Subcommands](#subcommands)\n    5. [Defaults](#defaults)\n4. Validation\n    1. [Enumerated values](#enumerated-values)\n    2. [Validated values](#validated-values)\n    3. [Argument Relations](#argument-relations)\n    4. [Custom Validation](#custom-validation)\n5. [Testing](#testing)\n\nSee also\n- [FAQ: When should I use the builder vs derive APIs?][crate::_faq#when-should-i-use-the-builder-vs-derive-apis]\n- The [cookbook][crate::_cookbook] for more application-focused examples\n\n## Quick Start\n\nYou can create an application declaratively with a `struct` and some\nattributes.  **This requires enabling the [`derive` feature flag][crate::_features].**\n\n```rust\nuse std::path::PathBuf;\n\nuse clap::{Parser, Subcommand};\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    /// Optional name to operate on\n    #[clap(value_parser)]\n    name: Option<String>,\n\n    /// Sets a custom config file\n    #[clap(short, long, value_parser, value_name = \"FILE\")]\n    config: Option<PathBuf>,\n\n    /// Turn debugging information on\n    #[clap(short, long, action = clap::ArgAction::Count)]\n    debug: u8,\n\n    #[clap(subcommand)]\n    command: Option<Commands>,\n}\n\n#[derive(Subcommand)]\nenum Commands {\n    /// does testing things\n    Test {\n        /// lists test values\n        #[clap(short, long, action)]\n        list: bool,\n    },\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    // You can check the value provided by positional arguments, or option arguments\n    if let Some(name) = cli.name.as_deref() {\n        println!(\"Value for name: {}\", name);\n    }\n\n    if let Some(config_path) = cli.config.as_deref() {\n        println!(\"Value for config: {}\", config_path.display());\n    }\n\n    // You can see how many times a particular flag or argument occurred\n    // Note, only flags can have multiple occurrences\n    match cli.debug {\n        0 => println!(\"Debug mode is off\"),\n        1 => println!(\"Debug mode is kind of on\"),\n        2 => println!(\"Debug mode is on\"),\n        _ => println!(\"Don't be crazy\"),\n    }\n\n    // You can check for the existence of subcommands, and if found use their\n    // matches just as you would the top level cmd\n    match &cli.command {\n        Some(Commands::Test { list }) => {\n            if *list {\n                println!(\"Printing testing lists...\");\n            } else {\n                println!(\"Not printing testing lists...\");\n            }\n        }\n        None => {}\n    }\n\n    // Continued program logic goes here...\n}\n```\n\n```console\n$ 01_quick_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    01_quick_derive[EXE] [OPTIONS] [NAME] [SUBCOMMAND]\n\nARGS:\n    <NAME>    Optional name to operate on\n\nOPTIONS:\n    -c, --config <FILE>    Sets a custom config file\n    -d, --debug            Turn debugging information on\n    -h, --help             Print help information\n    -V, --version          Print version information\n\nSUBCOMMANDS:\n    help    Print this message or the help of the given subcommand(s)\n    test    does testing things\n\n```\n\nBy default, the program does nothing:\n```console\n$ 01_quick_derive\nDebug mode is off\n\n```\n\nBut you can mix and match the various features\n```console\n$ 01_quick_derive -dd test\nDebug mode is on\nNot printing testing lists...\n\n```\n\n## Configuring the Parser\n\nYou use derive [`Parser`][crate::Parser] to start building a parser.\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(name = \"MyApp\")]\n#[clap(author = \"Kevin K. <kbknapp@gmail.com>\")]\n#[clap(version = \"1.0\")]\n#[clap(about = \"Does awesome things\", long_about = None)]\nstruct Cli {\n    #[clap(long, value_parser)]\n    two: String,\n    #[clap(long, value_parser)]\n    one: String,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"two: {:?}\", cli.two);\n    println!(\"one: {:?}\", cli.one);\n}\n```\n\n```console\n$ 02_apps_derive --help\nMyApp 1.0\nKevin K. <kbknapp@gmail.com>\nDoes awesome things\n\nUSAGE:\n    02_apps_derive[EXE] --two <TWO> --one <ONE>\n\nOPTIONS:\n    -h, --help         Print help information\n        --one <ONE>    \n        --two <TWO>    \n    -V, --version      Print version information\n\n$ 02_apps_derive --version\nMyApp 1.0\n\n```\n\nYou can use `#[clap(author, version, about)]` attribute defaults to fill these fields in from your `Cargo.toml` file.\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)] // Read from `Cargo.toml`\nstruct Cli {\n    #[clap(long, value_parser)]\n    two: String,\n    #[clap(long, value_parser)]\n    one: String,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"two: {:?}\", cli.two);\n    println!(\"one: {:?}\", cli.one);\n}\n```\n```console\n$ 02_crate_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    02_crate_derive[EXE] --two <TWO> --one <ONE>\n\nOPTIONS:\n    -h, --help         Print help information\n        --one <ONE>    \n        --two <TWO>    \n    -V, --version      Print version information\n\n$ 02_crate_derive --version\nclap [..]\n\n```\n\nYou can use attributes to change the application level behavior of clap.  Any [`Command`][crate::Command]] builder function can be used as an attribute.\n\n```rust\nuse clap::{AppSettings, Parser};\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\n#[clap(allow_negative_numbers = true)]\n#[clap(global_setting(AppSettings::DeriveDisplayOrder))]\nstruct Cli {\n    #[clap(long, value_parser)]\n    two: String,\n    #[clap(long, value_parser)]\n    one: String,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"two: {:?}\", cli.two);\n    println!(\"one: {:?}\", cli.one);\n}\n```\n```console\n$ 02_app_settings_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    02_app_settings_derive[EXE] --two <TWO> --one <ONE>\n\nOPTIONS:\n        --two <TWO>    \n        --one <ONE>    \n    -h, --help         Print help information\n    -V, --version      Print version information\n\n$ 02_app_settings_derive --one -1 --one -3 --two 10\ntwo: \"10\"\none: \"-3\"\n\n```\n\n## Adding Arguments\n\n### Positionals\n\nYou can have users specify values by their position on the command-line:\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    #[clap(value_parser)]\n    name: Option<String>,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"name: {:?}\", cli.name.as_deref());\n}\n```\n```console\n$ 03_03_positional_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_03_positional_derive[EXE] [NAME]\n\nARGS:\n    <NAME>    \n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 03_03_positional_derive\nname: None\n\n$ 03_03_positional_derive bob\nname: Some(\"bob\")\n\n```\n\n### Options\n\nYou can name your arguments with a flag:\n- Order doesn't matter\n- They can be optional\n- Intent is clearer\n\nThe `#[clap(short = 'n')]` and `#[clap(long = \"name\")]` attributes that define\nthe flags are [`Arg`][crate::Args] methods that are derived from the field name when no value\nis specified (`#[clap(short)]` and `#[clap(long)]`).\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    #[clap(short, long, value_parser)]\n    name: Option<String>,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"name: {:?}\", cli.name.as_deref());\n}\n```\n```console\n$ 03_02_option_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_02_option_derive[EXE] [OPTIONS]\n\nOPTIONS:\n    -h, --help           Print help information\n    -n, --name <NAME>    \n    -V, --version        Print version information\n\n$ 03_02_option_derive\nname: None\n\n$ 03_02_option_derive --name bob\nname: Some(\"bob\")\n\n$ 03_02_option_derive --name=bob\nname: Some(\"bob\")\n\n$ 03_02_option_derive -n bob\nname: Some(\"bob\")\n\n$ 03_02_option_derive -n=bob\nname: Some(\"bob\")\n\n$ 03_02_option_derive -nbob\nname: Some(\"bob\")\n\n```\n\n### Flags\n\nFlags can also be switches that can be on/off.  This is enabled via the\n`#[clap(action = ArgAction::SetTrue)]` attribute though this is implied when the field is a\n`bool`.\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    #[clap(short, long, action)]\n    verbose: bool,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"verbose: {:?}\", cli.verbose);\n}\n```\n```console\n$ 03_01_flag_bool_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_01_flag_bool_derive[EXE] [OPTIONS]\n\nOPTIONS:\n    -h, --help       Print help information\n    -v, --verbose    \n    -V, --version    Print version information\n\n$ 03_01_flag_bool_derive\nverbose: false\n\n$ 03_01_flag_bool_derive --verbose\nverbose: true\n\n$ 03_01_flag_bool_derive --verbose --verbose\nverbose: true\n\n```\n\nOr counted with `#[clap(action = clap::ArgAction::Count)]`:\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    #[clap(short, long, action = clap::ArgAction::Count)]\n    verbose: u8,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"verbose: {:?}\", cli.verbose);\n}\n```\n```console\n$ 03_01_flag_count_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_01_flag_count_derive[EXE] [OPTIONS]\n\nOPTIONS:\n    -h, --help       Print help information\n    -v, --verbose    \n    -V, --version    Print version information\n\n$ 03_01_flag_count_derive\nverbose: 0\n\n$ 03_01_flag_count_derive --verbose\nverbose: 1\n\n$ 03_01_flag_count_derive --verbose --verbose\nverbose: 2\n\n```\n\n### Subcommands\n\nSubcommands are derived with `#[derive(Subcommand)]` and be added via `#[clap(subcommand)]` attribute. Each\ninstance of a [Subcommand][crate::Subcommand] can have its own version, author(s), Args, and even its own\nsubcommands.\n\n```rust\nuse clap::{Parser, Subcommand};\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\n#[clap(propagate_version = true)]\nstruct Cli {\n    #[clap(subcommand)]\n    command: Commands,\n}\n\n#[derive(Subcommand)]\nenum Commands {\n    /// Adds files to myapp\n    Add {\n        #[clap(value_parser)]\n        name: Option<String>,\n    },\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    // You can check for the existence of subcommands, and if found use their\n    // matches just as you would the top level cmd\n    match &cli.command {\n        Commands::Add { name } => {\n            println!(\"'myapp add' was used, name is: {:?}\", name)\n        }\n    }\n}\n```\nWe used a struct-variant to define the `add` subcommand.\nAlternatively, you can use a struct for your subcommand's arguments:\n```rust\nuse clap::{Args, Parser, Subcommand};\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\n#[clap(propagate_version = true)]\nstruct Cli {\n    #[clap(subcommand)]\n    command: Commands,\n}\n\n#[derive(Subcommand)]\nenum Commands {\n    /// Adds files to myapp\n    Add(Add),\n}\n\n#[derive(Args)]\nstruct Add {\n    #[clap(value_parser)]\n    name: Option<String>,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    // You can check for the existence of subcommands, and if found use their\n    // matches just as you would the top level cmd\n    match &cli.command {\n        Commands::Add(name) => {\n            println!(\"'myapp add' was used, name is: {:?}\", name.name)\n        }\n    }\n}\n```\n\n```console\n$ 03_04_subcommands_derive help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_04_subcommands_derive[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    add     Adds files to myapp\n    help    Print this message or the help of the given subcommand(s)\n\n$ 03_04_subcommands_derive help add\n03_04_subcommands_derive[EXE]-add [..]\nAdds files to myapp\n\nUSAGE:\n    03_04_subcommands_derive[EXE] add [NAME]\n\nARGS:\n    <NAME>    \n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 03_04_subcommands_derive add bob\n'myapp add' was used, name is: Some(\"bob\")\n\n```\n\nBecause we used `command: Commands` instead of `command: Option<Commands>`:\n```console\n$ 03_04_subcommands_derive\n? failed\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_04_subcommands_derive[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    add     Adds files to myapp\n    help    Print this message or the help of the given subcommand(s)\n\n```\n\nBecause we added `#[clap(propagate_version = true)]`:\n```console\n$ 03_04_subcommands_derive --version\nclap [..]\n\n$ 03_04_subcommands_derive add --version\n03_04_subcommands_derive[EXE]-add [..]\n\n```\n\n### Defaults\n\nWe've previously showed that arguments can be [`required`][crate::Arg::required] or optional.\nWhen optional, you work with a `Option` and can `unwrap_or`.  Alternatively, you can\nset `#[clap(default_value_t)]`.\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    #[clap(default_value_t = String::from(\"alice\"), value_parser)]\n    name: String,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"name: {:?}\", cli.name);\n}\n```\n```console\n$ 03_05_default_values_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_05_default_values_derive[EXE] [NAME]\n\nARGS:\n    <NAME>    [default: alice]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 03_05_default_values_derive\nname: \"alice\"\n\n$ 03_05_default_values_derive bob\nname: \"bob\"\n\n```\n\n## Validation\n\n### Enumerated values\n\nIf you have arguments of specific values you want to test for, you can derive\n[`ValueEnum`][crate::ValueEnum].\n\nThis allows you specify the valid values for that argument. If the user does not use one of\nthose specific values, they will receive a graceful exit with error message informing them\nof the mistake, and what the possible valid values are\n\n```rust\nuse clap::{Parser, ValueEnum};\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    /// What mode to run the program in\n    #[clap(arg_enum, value_parser)]\n    mode: Mode,\n}\n\n#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, ValueEnum)]\nenum Mode {\n    Fast,\n    Slow,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    match cli.mode {\n        Mode::Fast => {\n            println!(\"Hare\");\n        }\n        Mode::Slow => {\n            println!(\"Tortoise\");\n        }\n    }\n}\n```\n```console\n$ 04_01_enum_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_01_enum_derive[EXE] <MODE>\n\nARGS:\n    <MODE>    What mode to run the program in [possible values: fast, slow]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 04_01_enum_derive fast\nHare\n\n$ 04_01_enum_derive slow\nTortoise\n\n$ 04_01_enum_derive medium\n? failed\nerror: \"medium\" isn't a valid value for '<MODE>'\n\t[possible values: fast, slow]\n\nFor more information try --help\n\n```\n\n### Validated values\n\nMore generally, you can validate and parse into any data type.\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    /// Network port to use\n    #[clap(value_parser = clap::value_parser!(u16).range(1..))]\n    port: u16,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"PORT = {}\", cli.port);\n}\n```\n```console\n$ 04_02_parse_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_02_parse_derive[EXE] <PORT>\n\nARGS:\n    <PORT>    Network port to use\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 04_02_parse_derive 22\nPORT = 22\n\n$ 04_02_parse_derive foobar\n? failed\nerror: Invalid value \"foobar\" for '<PORT>': invalid digit found in string\n\nFor more information try --help\n\n$ 04_02_parse_derive 0\n? failed\nerror: Invalid value \"0\" for '<PORT>': 0 is not in 1..=65535\n\nFor more information try --help\n\n```\n\nA custom parser can be used to improve the error messages or provide additional validation:\n\n```rust\nuse std::ops::RangeInclusive;\n\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    /// Network port to use\n    #[clap(value_parser = port_in_range)]\n    port: u16,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"PORT = {}\", cli.port);\n}\n\nconst PORT_RANGE: RangeInclusive<usize> = 1..=65535;\n\nfn port_in_range(s: &str) -> Result<u16, String> {\n    let port: usize = s\n        .parse()\n        .map_err(|_| format!(\"`{}` isn't a port number\", s))?;\n    if PORT_RANGE.contains(&port) {\n        Ok(port as u16)\n    } else {\n        Err(format!(\n            \"Port not in range {}-{}\",\n            PORT_RANGE.start(),\n            PORT_RANGE.end()\n        ))\n    }\n}\n```\n```console\n$ 04_02_validate_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_02_validate_derive[EXE] <PORT>\n\nARGS:\n    <PORT>    Network port to use\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 04_02_validate_derive 22\nPORT = 22\n\n$ 04_02_validate_derive foobar\n? failed\nerror: Invalid value \"foobar\" for '<PORT>': `foobar` isn't a port number\n\nFor more information try --help\n\n$ 04_02_validate_derive 0\n? failed\nerror: Invalid value \"0\" for '<PORT>': Port not in range 1-65535\n\nFor more information try --help\n\n```\n\n### Argument Relations\n\nYou can declare dependencies or conflicts between [`Arg`][crate::Arg]s or even\n[`ArgGroup`][crate::ArgGroup]s.\n\n[`ArgGroup`][crate::ArgGroup]s  make it easier to declare relations instead of having to list\neach individually, or when you want a rule to apply \"any but not all\" arguments.\n\nPerhaps the most common use of [`ArgGroup`][crate::ArgGroup]s is to require one and *only* one\nargument to be present out of a given set. Imagine that you had multiple arguments, and you\nwant one of them to be required, but making all of them required isn't feasible because perhaps\nthey conflict with each other.\n\n```rust\nuse clap::{ArgGroup, Parser};\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\n#[clap(group(\n            ArgGroup::new(\"vers\")\n                .required(true)\n                .args(&[\"set-ver\", \"major\", \"minor\", \"patch\"]),\n        ))]\nstruct Cli {\n    /// set version manually\n    #[clap(long, value_name = \"VER\", value_parser)]\n    set_ver: Option<String>,\n\n    /// auto inc major\n    #[clap(long, action)]\n    major: bool,\n\n    /// auto inc minor\n    #[clap(long, action)]\n    minor: bool,\n\n    /// auto inc patch\n    #[clap(long, action)]\n    patch: bool,\n\n    /// some regular input\n    #[clap(group = \"input\", value_parser)]\n    input_file: Option<String>,\n\n    /// some special input argument\n    #[clap(long, group = \"input\", value_parser)]\n    spec_in: Option<String>,\n\n    #[clap(short, requires = \"input\", value_parser)]\n    config: Option<String>,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    // Let's assume the old version 1.2.3\n    let mut major = 1;\n    let mut minor = 2;\n    let mut patch = 3;\n\n    // See if --set_ver was used to set the version manually\n    let version = if let Some(ver) = cli.set_ver.as_deref() {\n        ver.to_string()\n    } else {\n        // Increment the one requested (in a real program, we'd reset the lower numbers)\n        let (maj, min, pat) = (cli.major, cli.minor, cli.patch);\n        match (maj, min, pat) {\n            (true, _, _) => major += 1,\n            (_, true, _) => minor += 1,\n            (_, _, true) => patch += 1,\n            _ => unreachable!(),\n        };\n        format!(\"{}.{}.{}\", major, minor, patch)\n    };\n\n    println!(\"Version: {}\", version);\n\n    // Check for usage of -c\n    if let Some(config) = cli.config.as_deref() {\n        let input = cli\n            .input_file\n            .as_deref()\n            .unwrap_or_else(|| cli.spec_in.as_deref().unwrap());\n        println!(\"Doing work using input {} and config {}\", input, config);\n    }\n}\n```\n```console\n$ 04_03_relations_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_03_relations_derive[EXE] [OPTIONS] <--set-ver <VER>|--major|--minor|--patch> [INPUT_FILE]\n\nARGS:\n    <INPUT_FILE>    some regular input\n\nOPTIONS:\n    -c <CONFIG>                \n    -h, --help                 Print help information\n        --major                auto inc major\n        --minor                auto inc minor\n        --patch                auto inc patch\n        --set-ver <VER>        set version manually\n        --spec-in <SPEC_IN>    some special input argument\n    -V, --version              Print version information\n\n$ 04_03_relations_derive\n? failed\nerror: The following required arguments were not provided:\n    <--set-ver <VER>|--major|--minor|--patch>\n\nUSAGE:\n    04_03_relations_derive[EXE] [OPTIONS] <--set-ver <VER>|--major|--minor|--patch> [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_03_relations_derive --major\nVersion: 2.2.3\n\n$ 04_03_relations_derive --major --minor\n? failed\nerror: The argument '--major' cannot be used with '--minor'\n\nUSAGE:\n    04_03_relations_derive[EXE] <--set-ver <VER>|--major|--minor|--patch>\n\nFor more information try --help\n\n$ 04_03_relations_derive --major -c config.toml\n? failed\nerror: The following required arguments were not provided:\n    <INPUT_FILE|--spec-in <SPEC_IN>>\n\nUSAGE:\n    04_03_relations_derive[EXE] -c <CONFIG> <--set-ver <VER>|--major|--minor|--patch> <INPUT_FILE|--spec-in <SPEC_IN>>\n\nFor more information try --help\n\n$ 04_03_relations_derive --major -c config.toml --spec-in input.txt\nVersion: 2.2.3\nDoing work using input input.txt and config config.toml\n\n```\n\n### Custom Validation\n\nAs a last resort, you can create custom errors with the basics of clap's formatting.\n\n```rust\nuse clap::{CommandFactory, ErrorKind, Parser};\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    /// set version manually\n    #[clap(long, value_name = \"VER\", value_parser)]\n    set_ver: Option<String>,\n\n    /// auto inc major\n    #[clap(long, action)]\n    major: bool,\n\n    /// auto inc minor\n    #[clap(long, action)]\n    minor: bool,\n\n    /// auto inc patch\n    #[clap(long, action)]\n    patch: bool,\n\n    /// some regular input\n    #[clap(value_parser)]\n    input_file: Option<String>,\n\n    /// some special input argument\n    #[clap(long, value_parser)]\n    spec_in: Option<String>,\n\n    #[clap(short, value_parser)]\n    config: Option<String>,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    // Let's assume the old version 1.2.3\n    let mut major = 1;\n    let mut minor = 2;\n    let mut patch = 3;\n\n    // See if --set-ver was used to set the version manually\n    let version = if let Some(ver) = cli.set_ver.as_deref() {\n        if cli.major || cli.minor || cli.patch {\n            let mut cmd = Cli::command();\n            cmd.error(\n                ErrorKind::ArgumentConflict,\n                \"Can't do relative and absolute version change\",\n            )\n            .exit();\n        }\n        ver.to_string()\n    } else {\n        // Increment the one requested (in a real program, we'd reset the lower numbers)\n        let (maj, min, pat) = (cli.major, cli.minor, cli.patch);\n        match (maj, min, pat) {\n            (true, false, false) => major += 1,\n            (false, true, false) => minor += 1,\n            (false, false, true) => patch += 1,\n            _ => {\n                let mut cmd = Cli::command();\n                cmd.error(\n                    ErrorKind::ArgumentConflict,\n                    \"Can only modify one version field\",\n                )\n                .exit();\n            }\n        };\n        format!(\"{}.{}.{}\", major, minor, patch)\n    };\n\n    println!(\"Version: {}\", version);\n\n    // Check for usage of -c\n    if let Some(config) = cli.config.as_deref() {\n        // todo: remove `#[allow(clippy::or_fun_call)]` lint when MSRV is bumped.\n        #[allow(clippy::or_fun_call)]\n        let input = cli\n            .input_file\n            .as_deref()\n            // 'or' is preferred to 'or_else' here since `Option::as_deref` is 'const'\n            .or(cli.spec_in.as_deref())\n            .unwrap_or_else(|| {\n                let mut cmd = Cli::command();\n                cmd.error(\n                    ErrorKind::MissingRequiredArgument,\n                    \"INPUT_FILE or --spec-in is required when using --config\",\n                )\n                .exit()\n            });\n        println!(\"Doing work using input {} and config {}\", input, config);\n    }\n}\n```\n```console\n$ 04_04_custom_derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_04_custom_derive[EXE] [OPTIONS] [INPUT_FILE]\n\nARGS:\n    <INPUT_FILE>    some regular input\n\nOPTIONS:\n    -c <CONFIG>                \n    -h, --help                 Print help information\n        --major                auto inc major\n        --minor                auto inc minor\n        --patch                auto inc patch\n        --set-ver <VER>        set version manually\n        --spec-in <SPEC_IN>    some special input argument\n    -V, --version              Print version information\n\n$ 04_04_custom_derive\n? failed\nerror: Can only modify one version field\n\nUSAGE:\n    clap [OPTIONS] [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_04_custom_derive --major\nVersion: 2.2.3\n\n$ 04_04_custom_derive --major --minor\n? failed\nerror: Can only modify one version field\n\nUSAGE:\n    clap [OPTIONS] [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_04_custom_derive --major -c config.toml\n? failed\nVersion: 2.2.3\nerror: INPUT_FILE or --spec-in is required when using --config\n\nUSAGE:\n    clap [OPTIONS] [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_04_custom_derive --major -c config.toml --spec-in input.txt\nVersion: 2.2.3\nDoing work using input input.txt and config config.toml\n\n```\n\n## Testing\n\nclap reports most development errors as `debug_assert!`s.  Rather than checking every\nsubcommand, you should have a test that calls\n[`Command::debug_assert`][crate::App::debug_assert]:\n```rust,no_run\nuse clap::Parser;\n\n#[derive(Parser)]\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    /// Network port to use\n    #[clap(value_parser)]\n    port: u16,\n}\n\nfn main() {\n    let cli = Cli::parse();\n\n    println!(\"PORT = {}\", cli.port);\n}\n\n#[test]\nfn verify_cli() {\n    use clap::CommandFactory;\n    Cli::command().debug_assert()\n}\n```","links":{"crate::Arg::required":"0:3972:1654","crate::App::debug_assert":"0:4456:1667","crate::ArgGroup":"0:4105:1655","crate::Parser":"0:164:1664","crate::Args":"0:204:1661","crate::ValueEnum":"0:211:1666","crate::_features":"0:121:1696","crate::Command":"0:853:1653","crate::Arg":"0:3972:1654","crate::_faq#when-should-i-use-the-builder-vs-derive-apis":"0:120:1695","crate::Subcommand":"0:207:1665","crate::_cookbook":"0:103:1693"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:3252:5215":{"id":"0:3252:5215","crate_id":0,"name":"Usage","span":{"filename":"src/output/usage.rs","begin":[11,0],"end":[14,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:3255:2562","0:3256:2596"],"impls":["0:3257","a:2:3310:6658-0:3252:5215","a:2:3269:211-0:3252:5215","a:2:9340:7907-0:3252:5215","a:2:9339:7908-0:3252:5215","a:2:3281:220-0:3252:5215","b:2:3198-0:3252:5215","b:2:2872-0:3252:5215","b:2:2869-0:3252:5215","b:2:4002-0:3252:5215","b:2:3202-0:3252:5215","b:2:3213-0:3252:5215","b:2:3208-0:3252:5215"]}},"a:2:9339:7908-0:5291:9008":{"id":"a:2:9339:7908-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"30:92:13896":{"id":"30:92:13896","crate_id":30,"name":"OsStringBytes","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:93:73392","30:94:73393"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"30:114:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4117":{"id":"0:4117","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[80,18],"end":[80,23]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4119:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3333:920":{"id":"0:3333:920","crate_id":0,"name":"new","span":{"filename":"src/output/fmt.rs","begin":[24,4],"end":[30,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["stream",{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["color_when",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4921:7467":{"id":"a:2:3310:6658-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1898":{"id":"0:1898","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[47,0],"end":[47,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::EnumValueParser","name":"EnumValueParser","id":"0:4647:2916","glob":false}},"b:2:3213-0:5141:7832":{"id":"b:2:3213-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2209":{"id":"0:2209","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[48,0],"end":[56,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2210:956"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1321":{"id":"0:1321","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[140,0],"end":[247,1]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":"Reflection","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1323:4666","0:1324:4668","0:1325:6700","0:1326:6703","0:1327:4758","0:1328:6652","0:1329:6709","0:1330:6712","0:1331:6717","0:1333:2748"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5274:127":{"id":"0:5274:127","crate_id":0,"name":"Error","span":{"filename":"src/output/fmt.rs","begin":[139,4],"end":[139,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:1397:7028":{"id":"b:2:2872-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4063:3357":{"id":"0:4063:3357","crate_id":0,"name":"ArgProvider","span":{"filename":"src/builder/arg.rs","begin":[5191,0],"end":[5195,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4064:4844","0:4066:4875","0:4068:4876"],"impls":["a:2:3310:6658-0:4063:3357","a:2:3269:211-0:4063:3357","a:2:9340:7907-0:4063:3357","a:2:9339:7908-0:4063:3357","a:2:3281:220-0:4063:3357","b:2:3198-0:4063:3357","b:2:2872-0:4063:3357","b:2:2869-0:4063:3357","b:2:4002-0:4063:3357","b:2:3202-0:4063:3357","b:2:3213-0:4063:3357","b:2:3208-0:4063:3357","b:5:787-0:4063:3357","b:31:25-0:4063:3357","0:4070","0:4072","0:4074","0:4075","0:4077","0:4078","0:666"]}},"b:2:2872-0:4588:1673":{"id":"b:2:2872-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"b:2:2872-0:4833:1674":{"id":"b:2:2872-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:958:5717":{"id":"0:958:5717","crate_id":0,"name":"override_usage","span":{"filename":"src/builder/command.rs","begin":[1661,4],"end":[1664,5]},"visibility":"public","docs":"Overrides the `clap` generated usage string for help and error messages.\n\n**NOTE:** Using this setting disables `clap`s \"context-aware\" usage\nstrings. After this setting is set, this will be *the only* usage string\ndisplayed to the user!\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .override_usage(\"myapp [-clDas] <some_file>\")\n# ;\n```\n[`ArgMatches::usage`]: ArgMatches::usage()","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["usage",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"44:5419:13664":{"id":"44:5419:13664","crate_id":44,"name":"ObjectSegment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5421:268","44:5422:1304","44:5423:273","44:5424:73845","44:5425:9353","44:5426:56595","44:5427:73846","44:5428:899","44:5429:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"44:5487:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:31:25-0:5141:7832":{"id":"b:31:25-0:5141:7832","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"a:2:3281:220-0:1394:2909":{"id":"a:2:3281:220-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2432":{"id":"0:2432","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1484,0],"end":[1484,47]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8548:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2009:61":{"id":"0:2009:61","crate_id":0,"name":"raw","span":{"filename":"src/error/mod.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Create an unformatted error\n\nThis is for you need to pass the error up to\na place that has access to the `Command` at which point you can call [`Error::format`].\n\nPrefer [`Command::error`] for generating errors.\n\n[`Command::error`]: crate::Command::error","links":{"`Error::format`":"0:4886:127","crate::Command::error":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["message",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"std::fmt::Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl std::fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2155:7850":{"id":"0:2155:7850","crate_id":0,"name":"get_mut","span":{"filename":"src/parser/arg_matcher.rs","begin":[107,4],"end":[109,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3795:356":{"id":"0:3795:356","crate_id":0,"name":"bitxor","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Returns the left flags, but with all the right flags toggled.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5078:660":{"id":"0:5078:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/value_source.rs","begin":[2,9],"end":[2,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2028:7501":{"id":"0:2028:7501","crate_id":0,"name":"set_color","span":{"filename":"src/error/mod.rs","begin":[217,4],"end":[220,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["color_when",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4530:1672":{"id":"a:2:3269:211-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:929:4309":{"id":"0:929:4309","crate_id":0,"name":"hide_possible_values","span":{"filename":"src/builder/command.rs","begin":[1304,4],"end":[1310,5]},"visibility":"public","docs":"Tells `clap` *not* to print possible values when displaying help information.\n\nThis can be useful if there are many values, or they are explained elsewhere.\n\nTo set this per argument, see\n[`Arg::hide_possible_values`][crate::Arg::hide_possible_values].\n\n**NOTE:** This choice is propagated to all child subcommands.","links":{"crate::Arg::hide_possible_values":"0:3972:1654"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1001:6055":{"id":"0:1001:6055","crate_id":0,"name":"visible_long_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[2649,4],"end":[2654,5]},"visibility":"public","docs":"Add aliases, which function as *visible* long flag subcommands.\n\nSee [`Command::long_flag_aliases`].\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n            .subcommand(Command::new(\"test\").long_flag(\"test\")\n                .visible_long_flag_aliases(&[\"testing\", \"testall\", \"test_all\"]))\n            .get_matches_from(vec![\"myprog\", \"--testing\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::long_flag_aliases`]: Command::long_flag_aliases()","links":{"`Command::long_flag_aliases`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4080:3370":{"id":"b:2:3202-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:5010:7834":{"id":"b:5:787-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5033:779":{"id":"0:5033:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1552,4],"end":[1552,71]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: type_complexity)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Map","id":"2:46798:7923","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}},"b:2:4002-0:4530:1672":{"id":"b:2:4002-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4301:5181":{"id":"0:4301:5181","crate_id":0,"name":"LAST","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4534:3367":{"id":"0:4534:3367","crate_id":0,"name":"aliases","span":{"filename":"src/builder/possible_value.rs","begin":[33,4],"end":[33,28]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"43:1233:13260":{"id":"43:1233:13260","crate_id":43,"name":"Reader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:1234:13619","43:1235:15308","43:1236:13309","43:1237:793","43:1238:2671","43:1239:16198","43:1240:73660","43:1241:73661","43:1242:73651","43:1243:2881","43:1244:1308","43:1245:7433","43:1246:73662","43:1247:1397","43:1248:7178","43:1249:73663","43:1250:73664","43:1252:2564","43:1253:73665","43:1255:73666","43:1257:73622","43:1259:73626","43:1261:73623","43:1263:73627","43:1265:73624","43:1267:73628","43:1269:73629","43:1271:73630","43:1273:73625","43:1275:73667","43:1276:73668","43:1277:73669","43:1278:73670","43:1280:73671","43:1281:73672","43:1282:73673","43:1285:73674","43:1286:73675","43:1287:73676","43:1288:73677","43:1289:73678"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4547":{"id":"0:4547","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[29,32],"end":[29,41]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4549:604","0:4550:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3797:357":{"id":"0:3797:357","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Toggles the set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3050:2603":{"id":"0:3050:2603","crate_id":0,"name":"help","span":{"filename":"src/output/help.rs","begin":[2,0],"end":[1176,1]},"visibility":{"restricted":{"parent":"0:3049:1702","path":"::output"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3096:3014","0:3117:8725","0:3207:8716","0:3209:8756","0:3210:8787","0:3211:5214","0:3219:8723","0:3220:8850","0:3221:8771"],"is_stripped":false}},"b:2:4002-0:1394:2909":{"id":"b:2:4002-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13500:31597":{"id":"2:13500:31597","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1059:6329":{"id":"0:1059:6329","crate_id":0,"name":"has_subcommands","span":{"filename":"src/builder/command.rs","begin":[3445,4],"end":[3447,5]},"visibility":"public","docs":"Returns `true` if this `Command` has subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3736:3219":{"id":"0:3736:3219","crate_id":0,"name":"NO_BIN_NAME","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:13559:31613":{"id":"2:13559:31613","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:16010:9064","str::split_terminator":"1:16010:9064","self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49626:9282","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:457:3937":{"id":"0:457:3937","crate_id":0,"name":"allow_invalid_utf8","span":{"filename":"src/builder/arg.rs","begin":[1743,4],"end":[1749,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::value_parser(...)`] with either [`ValueParser::os_string()`][crate::builder::ValueParser::os_string]\nor [`ValueParser::path_buf()`][crate::builder::ValueParser::path_buf]","links":{"crate::builder::ValueParser::path_buf":"0:1394:2909","crate::builder::ValueParser::os_string":"0:1394:2909"},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::value_parser(...)` with either `ValueParser::os_string()` or `ValueParser::path_buf()`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::value_parser(...)` with either `ValueParser::os_string()` or `ValueParser::path_buf()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4105:1655":{"id":"a:2:9340:7907-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1381:2901":{"id":"0:1381:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1,0],"end":[2089,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1707:7282","0:1394:2909","0:1397:7028","0:1448:7030","0:1462:2908","0:4629:2907","0:4635:2919","0:4641:2920","0:4647:2916","0:4657:2904","0:4664:2905","0:4676:2906","0:4688:2914","0:4694:2917","0:4700:2915","0:4706:2918","0:1643:2910"],"is_stripped":false}},"0:1649":{"id":"0:1649","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1830,0],"end":[1835,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1650:1664","0:1651:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4783:11154":{"id":"2:4783:11154","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:2763","2:4785:29637","2:4786:5300"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"44:5518:56594":{"id":"44:5518:56594","crate_id":44,"name":"SymbolMapEntry","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5519:268"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13590:31622":{"id":"2:13590:31622","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1410:920":{"id":"0:1410:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[108,4],"end":[114,5]},"visibility":"public","docs":"Custom parser for argument values\n\nTo create a custom parser, see [`TypedValueParser`]\n\nPre-existing implementations include:\n- [`EnumValueParser`] and  [`PossibleValuesParser`] for static enumerated values\n- [`BoolishValueParser`] and [`FalseyValueParser`] for alternative `bool` implementations\n- [`RangedI64ValueParser`] and [`RangedU64ValueParser`]\n- [`NonEmptyStringValueParser`]\n\n# Example\n\n```rust\ntype EnvVar = (String, Option<String>);\nfn parse_env_var(env: &str) -> Result<EnvVar, std::io::Error> {\n    if let Some((var, value)) = env.split_once('=') {\n        Ok((var.to_owned(), Some(value.to_owned())))\n    } else {\n        Ok((env.to_owned(), None))\n    }\n}\n\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"env\")\n            .value_parser(clap::builder::ValueParser::new(parse_env_var))\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"key=value\"]).unwrap();\nlet port: &EnvVar = m.get_one(\"env\")\n    .expect(\"required\");\nassert_eq!(*port, (\"key\".into(), Some(\"value\".into())));\n```","links":{"`BoolishValueParser`":"0:4700:2915","`PossibleValuesParser`":"0:4657:2904","`RangedI64ValueParser`":"0:4664:2905","`RangedU64ValueParser`":"0:4676:2906","`TypedValueParser`":"0:1462:2908","`NonEmptyStringValueParser`":"0:4706:2918","`FalseyValueParser`":"0:4694:2917","`EnumValueParser`":"0:4647:2916"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["other",{"kind":"generic","inner":"P"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"","id":"0:1462:2908","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4894:481":{"id":"0:4894:481","crate_id":0,"name":"context","span":{"filename":"src/error/mod.rs","begin":[59,4],"end":[59,45]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}}},"b:2:4002-0:4694:2917":{"id":"b:2:4002-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3783:10068":{"id":"0:3783:10068","crate_id":0,"name":"intersection","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns the intersection between the flags in `self` and\n`other`.\n\nSpecifically, the returned set contains only the flags which are\npresent in *both* `self` *and* `other`.\n\nThis is equivalent to using the `&` operator (e.g.\n[`ops::BitAnd`]), as in `flags & other`.\n\n[`ops::BitAnd`]: https://doc.rust-lang.org/std/ops/trait.BitAnd.html","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4124:604":{"id":"0:4124:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/arg_group.rs","begin":[80,25],"end":[80,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4984":{"id":"0:4984","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,34],"end":[1314,36]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:596:4774":{"id":"0:596:4774","crate_id":0,"name":"is_require_value_delimiter_set","span":{"filename":"src/builder/arg.rs","begin":[4649,4],"end":[4651,5]},"visibility":"public","docs":"Report whether [`Arg::require_value_delimiter`] is set","links":{"`Arg::require_value_delimiter`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4807:7450":{"id":"b:2:3213-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:140:2571":{"id":"0:140:2571","crate_id":0,"name":"app_from_crate","span":{"filename":"src/macros.rs","begin":[369,0],"end":[400,1]},"visibility":"public","docs":"Deprecated, replaced with [`clap::command!`][crate::command]","links":{"crate::command":"0:139:2561"},"attrs":["#[cfg(feature = \"cargo\")]","#[deprecated(since = \"3.1.0\", note = \"Replaced with `clap::command!\")]","#[macro_export]"],"deprecation":{"since":"3.1.0","note":"Replaced with `clap::command!"},"kind":"macro","inner":"macro_rules! app_from_crate {\n    () => { ... };\n    ($sep:expr) => { ... };\n}"},"2:13514:29565":{"id":"2:13514:29565","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:32036:74266":{"id":"2:32036:74266","crate_id":2,"name":"carrying_mul","span":null,"visibility":"public","docs":"Calculates the \"full multiplication\" `self * rhs + carry`\nwithout the possibility to overflow.\n\nThis returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.\n\nPerforms \"long multiplication\" which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create \"big integers\" which represent larger values.\n\n# Examples\n\nBasic usage:\n\nPlease note that this example is shared between integer types.\nWhich explains why `u32` is used here.\n\n```\n#![feature(bigint_helper_methods)]\nassert_eq!(5u32.carrying_mul(2, 0), (10, 0));\nassert_eq!(5u32.carrying_mul(2, 10), (20, 0));\nassert_eq!(1_000_000_000u32.carrying_mul(10, 0), (1410065408, 2));\nassert_eq!(1_000_000_000u32.carrying_mul(10, 10), (1410065418, 2));\nassert_eq!(u64::MAX.carrying_mul(u64::MAX, u64::MAX), (0, u64::MAX));\n```\n\nIf `carry` is zero, this is similar to [`overflowing_mul`](Self::overflowing_mul),\nexcept that it gives the value of the overflow instead of just whether one happened:\n\n```\n#![feature(bigint_helper_methods)]\nlet r = u8::carrying_mul(7, 13, 0);\nassert_eq!((r.0, r.1 != 0), u8::overflowing_mul(7, 13));\nlet r = u8::carrying_mul(13, 42, 0);\nassert_eq!((r.0, r.1 != 0), u8::overflowing_mul(13, 42));\n```\n\nThe value of the first field in the returned tuple matches what you'd get\nby combining the [`wrapping_mul`](Self::wrapping_mul) and\n[`wrapping_add`](Self::wrapping_add) methods:\n\n```\n#![feature(bigint_helper_methods)]\nassert_eq!(\n    789_u16.carrying_mul(456, 123).0,\n    789_u16.wrapping_mul(456).wrapping_add(123),\n);\n```","links":{"Self::wrapping_add":"1:16024:9076","Self::overflowing_mul":"1:16024:9076","Self::wrapping_mul":"1:16024:9076"},"attrs":["#[unstable(feature = \"bigint_helper_methods\", issue = \"85532\")]","#[rustc_const_unstable(feature = \"bigint_helper_methods\", issue = \"85532\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}],["carry",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"u64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:5174:8567":{"id":"b:2:2869-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4960:660":{"id":"0:4960:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,9],"end":[67,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2075:7569":{"id":"0:2075:7569","crate_id":0,"name":"put_usage","span":{"filename":"src/error/mod.rs","begin":[1025,0],"end":[1028,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["c",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["usage",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Into<String>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5229:1542":{"id":"0:5229:1542","crate_id":0,"name":"0","span":{"filename":"src/mkeymap.rs","begin":[29,13],"end":[29,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:4925:660":{"id":"0:4925:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/mod.rs","begin":[1114,9],"end":[1114,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:5058:7830":{"id":"a:2:3281:220-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4890":{"id":"0:4890","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[39,9],"end":[39,14]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4891:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:4172:1671":{"id":"a:2:9339:7908-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:5291:9008":{"id":"a:2:3310:6658-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:415:2657":{"id":"0:415:2657","crate_id":0,"name":"setting","span":{"filename":"src/builder/arg.rs","begin":[852,4],"end":[858,5]},"visibility":"public","docs":"Apply a setting to the argument.\n\nSee [`ArgSettings`] for a full list of possibilities and examples.\n\n# Examples\n\n```no_run\n# use clap::{Arg, ArgSettings};\nArg::new(\"config\")\n    .setting(ArgSettings::Required)\n    .setting(ArgSettings::TakesValue)\n# ;\n```\n\n```no_run\n# use clap::{Arg, ArgSettings};\nArg::new(\"config\")\n    .setting(ArgSettings::Required | ArgSettings::TakesValue)\n# ;\n```","links":{"`ArgSettings`":"0:4172:1671"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["setting",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgFlags","id":"0:4157:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1804:997":{"id":"0:1804:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/builder/debug_asserts.rs","begin":[364,4],"end":[379,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5203":{"id":"0:5203","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[15,18],"end":[15,27]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5317:6571":{"id":"0:5317:6571","crate_id":0,"name":"help_hash","span":{"filename":"src/util/id.rs","begin":[34,0],"end":[38,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4624:715":{"id":"0:4624:715","crate_id":0,"name":"hash","span":{"filename":"src/builder/value_hint.rs","begin":[27,31],"end":[27,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2455":{"id":"0:2455","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1556,0],"end":[1565,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["sum","enumerate","array_chunks","reduce","try_collect","skip_while","next_chunk","advance_by","cmp","eq","peekable","max_by","cloned","collect","product","is_sorted_by_key","try_reduce","ge","collect_into","count","map_while","last","nth","any","copied","max","all","max_by_key","__iterator_get_unchecked","cmp_by","try_find","position","partition","scan","step_by","take","flatten","partial_cmp_by","rposition","lt","size_hint","partition_in_place","fuse","intersperse","partial_cmp","chain","skip","filter_map","find","eq_by","unzip","is_partitioned","rev","inspect","intersperse_with","filter","take_while","find_map","try_for_each","min","ne","is_sorted","fold","cycle","try_fold","by_ref","for_each","flat_map","min_by_key","le","zip","min_by","map","gt","is_sorted_by"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2457:2763","0:2458:922","0:2459:5300"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13612:31629":{"id":"2:13612:31629","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16004:9059","self::pattern":"2:13134:9255"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4556:6725":{"id":"a:2:3281:220-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4933:7836":{"id":"b:2:3213-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5219:408":{"id":"0:5219:408","crate_id":0,"name":"clone","span":{"filename":"src/mkeymap.rs","begin":[15,40],"end":[15,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:32006:74243":{"id":"2:32006:74243","crate_id":2,"name":"overflowing_shl","span":null,"visibility":"public","docs":"Shifts self left by `rhs` bits.\n\nReturns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.\n\n# Examples\n\nBasic usage\n\n```\nassert_eq!(0x1u64.overflowing_shl(4), (0x10, false));\nassert_eq!(0x1u64.overflowing_shl(132), (0x10, true));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4588:1673":{"id":"b:2:3208-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1465:2747":{"id":"0:1465:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/value_parser.rs","begin":[622,4],"end":[629,5]},"visibility":"default","docs":"Parse the argument value\n\nWhen `arg` is `None`, an external subcommand value is being parsed.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5005:408":{"id":"0:5005:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1399,9],"end":[1399,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1767:2510":{"id":"0:1767:2510","crate_id":0,"name":"from_str","span":{"filename":"src/builder/regex.rs","begin":[61,4],"end":[63,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:13073:2509","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3111:8710":{"id":"0:3111:8710","crate_id":0,"name":"DEFAULT_NO_ARGS_TEMPLATE","span":{"filename":"src/output/help.rs","begin":[49,4],"end":[53,6]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"unstable-v4\")]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"default":"\"\\\n        {before-help}{name} {version}\\n\\\n        {author-with-newline}{about-with-newline}\\n\\\n        {usage-heading}\\n    {usage}{after-help}\\\n    \""}},"b:2:3208-0:4942:7020":{"id":"b:2:3208-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:451:3893":{"id":"0:451:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/arg.rs","begin":[1604,4],"end":[1612,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::value_parser(PossibleValuesParser::new(...))`]","links":{},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::value_parser(PossibleValuesParser::new(...)).takes_value(true)`\")]","#[must_use]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::value_parser(PossibleValuesParser::new(...)).takes_value(true)`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["values",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:5020:1678":{"id":"b:2:3208-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:653":{"id":"0:653","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5094,0],"end":[5129,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:655:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1017:6279":{"id":"0:1017:6279","crate_id":0,"name":"get_usage_name","span":{"filename":"src/builder/command.rs","begin":[3265,4],"end":[3267,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1225:6599":{"id":"0:1225:6599","crate_id":0,"name":"Captures","span":{"filename":"src/builder/command.rs","begin":[4825,0],"end":[4825,32]},"visibility":"crate","docs":"A workaround:\n<https://github.com/rust-lang/rust/issues/34511#issuecomment-373423999>","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":["0:1227"]}},"0:3647:2672":{"id":"0:3647:2672","crate_id":0,"name":"Flags","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:3648:5189"],"impls":["0:3723","a:2:3310:6658-0:3647:2672","a:2:3269:211-0:3647:2672","a:2:9340:7907-0:3647:2672","a:2:9339:7908-0:3647:2672","a:2:3281:220-0:3647:2672","b:2:3198-0:3647:2672","b:2:2872-0:3647:2672","b:2:2869-0:3647:2672","b:2:4002-0:3647:2672","b:2:3202-0:3647:2672","b:2:3213-0:3647:2672","b:2:3208-0:3647:2672","b:5:787-0:3647:2672","b:31:25-0:3647:2672","0:3649","0:3650","0:3651","0:3654","0:3655","0:3657","0:3659","0:3661","0:3663","0:3666","0:3715","0:3717","0:3719","0:3721","0:3788","0:3791","0:3793","0:3796","0:3798","0:3801","0:3803","0:3806","0:3808","0:3811","0:3814"]}},"0:456:3933":{"id":"0:456:3933","crate_id":0,"name":"allow_hyphen_values","span":{"filename":"src/builder/arg.rs","begin":[1724,4],"end":[1730,5]},"visibility":"public","docs":"Allows values which start with a leading hyphen (`-`)\n\n**NOTE:** Setting this requires [`Arg::takes_value`]\n\n**WARNING**: Take caution when using this setting combined with\n[`Arg::multiple_values`], as this becomes ambiguous `$ prog --arg -- -- val`. All\nthree `--, --, val` will be values when the user may have thought the second `--` would\nconstitute the normal, \"Only positional args follow\" idiom. To fix this, consider using\n[`Arg::multiple_occurrences`] which only allows a single value at a time.\n\n**WARNING**: When building your CLIs, consider the effects of allowing leading hyphens and\nthe user passing in a value that matches a valid short. For example, `prog -opt -F` where\n`-F` is supposed to be a value, yet `-F` is *also* a valid short for another arg.\nCare should be taken when designing these args. This is compounded by the ability to \"stack\"\nshort args. I.e. if `-val` is supposed to be a value, but `-v`, `-a`, and `-l` are all valid\nshorts.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"pat\")\n        .takes_value(true)\n        .allow_hyphen_values(true)\n        .long(\"pattern\"))\n    .get_matches_from(vec![\n        \"prog\", \"--pattern\", \"-file\"\n    ]);\n\nassert_eq!(m.value_of(\"pat\"), Some(\"-file\"));\n```\n\nNot setting `Arg::allow_hyphen_values(true)` and supplying a value which starts with a\nhyphen is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"pat\")\n        .takes_value(true)\n        .long(\"pattern\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--pattern\", \"-file\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```\n[`Arg::number_of_values(1)`]: Arg::number_of_values()","links":{"`Arg::multiple_occurrences`":"0:3972:1654","`Arg::takes_value`":"0:3972:1654","`Arg::multiple_values`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4874:7628":{"id":"0:4874:7628","crate_id":0,"name":"Io","span":{"filename":"src/error/kind.rs","begin":[388,4],"end":[388,6]},"visibility":"default","docs":"Represents an [I/O error].\nCan occur when writing to `stderr` or `stdout` or reading a configuration file.\n\n[I/O error]: std::io::Error","links":{"std::io::Error":"1:4080:127"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46111:7917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5234:604":{"id":"0:5234:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[25,16],"end":[25,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:423:2901":{"id":"0:423:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/arg.rs","begin":[1015,4],"end":[1018,5]},"visibility":"public","docs":"Specify the type of the argument.\n\nThis allows parsing and validating a value before storing it into\n[`ArgMatches`][crate::ArgMatches].\n\nSee also\n- [`value_parser!`][crate::value_parser!] for auto-selecting a value parser for a given type\n  - [`BoolishValueParser`][crate::builder::BoolishValueParser], and [`FalseyValueParser`][crate::builder::FalseyValueParser] for alternative `bool` implementations\n  - [`NonEmptyStringValueParser`][crate::builder::NonEmptyStringValueParser] for basic validation for strings\n- [`RangedI64ValueParser`][crate::builder::RangedI64ValueParser] and [`RangedU64ValueParser`][crate::builder::RangedU64ValueParser] for numeric ranges\n- [`EnumValueParser`][crate::builder::EnumValueParser] and  [`PossibleValuesParser`][crate::builder::PossibleValuesParser] for static enumerated values\n- or any other [`TypedValueParser`][crate::builder::TypedValueParser] implementation\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"color\")\n            .long(\"color\")\n            .value_parser([\"always\", \"auto\", \"never\"])\n            .default_value(\"auto\")\n    )\n    .arg(\n        clap::Arg::new(\"hostname\")\n            .long(\"hostname\")\n            .value_parser(clap::builder::NonEmptyStringValueParser::new())\n            .takes_value(true)\n            .required(true)\n    )\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(clap::value_parser!(u16).range(3000..))\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut(\n    [\"cmd\", \"--hostname\", \"rust-lang.org\", \"--port\", \"3001\"]\n).unwrap();\n\nlet color: &String = m.get_one(\"color\")\n    .expect(\"default\");\nassert_eq!(color, \"auto\");\n\nlet hostname: &String = m.get_one(\"hostname\")\n    .expect(\"required\");\nassert_eq!(hostname, \"rust-lang.org\");\n\nlet port: u16 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```","links":{"crate::builder::PossibleValuesParser":"0:4657:2904","crate::builder::TypedValueParser":"0:1462:2908","crate::builder::EnumValueParser":"0:4647:2916","crate::builder::FalseyValueParser":"0:4694:2917","crate::builder::NonEmptyStringValueParser":"0:4706:2918","crate::value_parser!":"0:1706:2901","crate::ArgMatches":"0:4953:1658","crate::builder::RangedU64ValueParser":"0:4676:2906","crate::builder::RangedI64ValueParser":"0:4664:2905","crate::builder::BoolishValueParser":"0:4700:2915"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["parser",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"super::ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<super::ValueParser>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"super::ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4119:660":{"id":"0:4119:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_group.rs","begin":[80,18],"end":[80,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1277:6635":{"id":"0:1277:6635","crate_id":0,"name":"unroll_arg_requires","span":{"filename":"src/builder/command.rs","begin":[4990,4],"end":[5018,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["func",{"kind":"generic","inner":"F"}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3519:130","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3585:3144":{"id":"0:3585:3144","crate_id":0,"name":"DontCollapseArgsInUsage","span":{"filename":"src/builder/app_settings.rs","begin":[289,4],"end":[289,27]},"visibility":"default","docs":"Deprecated, replaced with [`Command::dont_collapse_args_in_usage`] and\n[`Command::is_dont_collapse_args_in_usage_set`]","links":{"`Command::is_dont_collapse_args_in_usage_set`":"0:4456:1667","`Command::dont_collapse_args_in_usage`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::dont_collapse_args_in_usage` and `Command::is_dont_collapse_args_in_usage_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::dont_collapse_args_in_usage` and `Command::is_dont_collapse_args_in_usage_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3360:660":{"id":"0:3360:660","crate_id":0,"name":"fmt","span":{"filename":"src/output/fmt.rs","begin":[126,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:3211:5214":{"id":"b:2:4002-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:5070:1677":{"id":"a:2:9340:7907-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4688:2914":{"id":"0:4688:2914","crate_id":0,"name":"BoolValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[1453,0],"end":[1453,29]},"visibility":"public","docs":"Implementation for [`ValueParser::bool`]\n\nUseful for composing new [`TypedValueParser`]s","links":{"`ValueParser::bool`":"0:1394:2909","`TypedValueParser`":"0:1462:2908"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:1595","a:2:3310:6658-0:4688:2914","a:2:3269:211-0:4688:2914","a:2:9340:7907-0:4688:2914","a:2:9339:7908-0:4688:2914","a:2:3281:220-0:4688:2914","b:2:3198-0:4688:2914","b:2:2872-0:4688:2914","b:2:2869-0:4688:2914","b:2:4002-0:4688:2914","b:2:3202-0:4688:2914","b:2:3213-0:4688:2914","b:2:3208-0:4688:2914","b:5:787-0:4688:2914","0:4689","0:4690","0:4692","0:1599","0:1605"]}},"0:2398":{"id":"0:2398","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1365,0],"end":[1365,43]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8548:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:968:5517":{"id":"0:968:5517","crate_id":0,"name":"global_setting","span":{"filename":"src/builder/command.rs","begin":[1831,4],"end":[1835,5]},"visibility":"public","docs":"Apply a setting for the current command and all subcommands.\n\nSee [`Command::setting`] to apply a setting only to this command.\n\nSee [`AppSettings`] for a full list of possibilities and examples.\n\n# Examples\n\n```no_run\n# use clap::{Command, AppSettings};\nCommand::new(\"myprog\")\n    .global_setting(AppSettings::AllowNegativeNumbers)\n# ;\n```","links":{"`AppSettings`":"0:3542:1669","`Command::setting`":"0:4456:1667"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["setting",{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5298:5217":{"id":"a:2:9339:7908-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1574:7210":{"id":"0:1574:7210","crate_id":0,"name":"format_bounds","span":{"filename":"src/builder/value_parser.rs","begin":[1351,4],"end":[1371,5]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2545:7864":{"id":"0:2545:7864","crate_id":0,"name":"new_arg","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[27,4],"end":[38,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3009":{"id":"0:3009","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[38,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3010:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1317:4299":{"id":"0:1317:4299","crate_id":0,"name":"hide","span":{"filename":"src/builder/possible_value.rs","begin":[98,4],"end":[101,5]},"visibility":"public","docs":"Hides this value from help and shell completions.\n\nThis is an alternative to hiding through [`Arg::hide_possible_values(true)`], if you only\nwant to hide some values.\n\n# Examples\n\n```rust\n# use clap::PossibleValue;\nPossibleValue::new(\"secret\")\n    .hide(true)\n# ;\n```\n[`Arg::hide_possible_values(true)`]: crate::Arg::hide_possible_values()","links":{"crate::Arg::hide_possible_values()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2156:2674":{"id":"0:2156:2674","crate_id":0,"name":"remove","span":{"filename":"src/parser/arg_matcher.rs","begin":[111,4],"end":[113,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4316:10037":{"id":"0:4316:10037","crate_id":0,"name":"from_bits","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::option::Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5051:793":{"id":"0:5051:793","crate_id":0,"name":"len","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1656,4],"end":[1656,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:1661":{"id":"0:1661","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1856,0],"end":[1863,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":["0:1662:1664","0:1663:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5083":{"id":"0:5083","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,29],"end":[2,38]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5084:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:3647:2672":{"id":"b:2:3208-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1377:59":{"id":"0:1377:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_hint.rs","begin":[70,4],"end":[72,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:32014:74250":{"id":"2:32014:74250","crate_id":2,"name":"next_multiple_of","span":null,"visibility":"public","docs":"Calculates the smallest value greater than or equal to `self` that\nis a multiple of `rhs`.\n\n# Panics\n\nThis function will panic if `rhs` is zero.\n\n## Overflow behavior\n\nOn overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(int_roundings)]\nassert_eq!(16_u64.next_multiple_of(8), 16);\nassert_eq!(23_u64.next_multiple_of(8), 24);\n```","links":{},"attrs":["#[unstable(feature = \"int_roundings\", issue = \"88581\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4761:7449":{"id":"b:2:3202-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1999":{"id":"0:1999","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[26,0],"end":[26,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"context::ContextValue","name":"ContextValue","id":"0:4807:7450","glob":false}},"b:5:787-0:4657:2904":{"id":"b:5:787-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3021:2678":{"id":"0:3021:2678","crate_id":0,"name":"contains","span":{"filename":"src/mkeymap.rs","begin":[87,4],"end":[92,5]},"visibility":"crate","docs":"If any arg has corresponding key in this map, we can search the key with\nu64(for positional argument), char(for short flag), &str and OsString\n(for long flag)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"generic","inner":"K"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5308":{"id":"0:5308","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5309:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13526:31606":{"id":"2:13526:31606","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16010:9064"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49841:9257","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2343:8096":{"id":"0:2343:8096","crate_id":0,"name":"occurrences_of","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[617,4],"end":[621,5]},"visibility":"public","docs":"Deprecated, replaced with  [`ArgAction::Count`][crate::ArgAction],\n[`ArgMatches::get_many`]`.len()`, or [`ArgMatches::value_source`].","links":{"`ArgMatches::get_many`":"0:4953:1658","`ArgMatches::value_source`":"0:4953:1658","crate::ArgAction":"0:3503:1652"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with either `ArgAction::Count`, `ArgMatches::get_many(...).len()`, or `ArgMatches::value_source`\")]","#[track_caller]","#![allow(deprecated)]"],"deprecation":{"since":"3.2.0","note":"Replaced with either `ArgAction::Count`, `ArgMatches::get_many(...).len()`, or `ArgMatches::value_source`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:997:6038":{"id":"0:997:6038","crate_id":0,"name":"visible_long_flag_alias","span":{"filename":"src/builder/command.rs","begin":[2571,4],"end":[2574,5]},"visibility":"public","docs":"Add an alias, which functions as a \"visible\" long flag subcommand.\n\nThis will automatically dispatch as if this subcommand was used. This is more efficient,\nand easier than creating multiple hidden subcommands as one only needs to check for the\nexistence of this command, and not all variants.\n\nSee also [`Command::long_flag_alias`].\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n            .subcommand(Command::new(\"test\").long_flag(\"test\")\n                .visible_long_flag_alias(\"testing\"))\n            .get_matches_from(vec![\"myprog\", \"--testing\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::long_flag_alias`]: Command::long_flag_alias()","links":{"`Command::long_flag_alias`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4131:2923":{"id":"b:2:2872-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:4664:2905":{"id":"b:2:3208-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3446":{"id":"0:3446","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[50,0],"end":[59,1]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3447:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:9232","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4463:5247":{"id":"0:4463:5247","crate_id":0,"name":"bin_name","span":{"filename":"src/builder/command.rs","begin":[84,4],"end":[84,28]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3208-0:3542:1669":{"id":"b:2:3208-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:5070:1677":{"id":"b:2:3208-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1415:7087":{"id":"0:1415:7087","crate_id":0,"name":"path_buf","span":{"filename":"src/builder/value_parser.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"[`PathBuf`][std::path::PathBuf] parser for argument values\n\n# Example\n\n```rust\n# use std::path::PathBuf;\n# use std::path::Path;\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"output\")\n            .value_parser(clap::value_parser!(PathBuf))\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"hello.txt\"]).unwrap();\nlet port: &PathBuf = m.get_one(\"output\")\n    .expect(\"required\");\nassert_eq!(port, Path::new(\"hello.txt\"));\n\nassert!(cmd.try_get_matches_from_mut([\"cmd\", \"\"]).is_err());\n```","links":{"std::path::PathBuf":"1:7332:186"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1993:306":{"id":"0:1993:306","crate_id":0,"name":"as_str","span":{"filename":"src/error/kind.rs","begin":[400,4],"end":[433,5]},"visibility":"public","docs":"End-user description of the error case, where relevant","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2862:8604":{"id":"0:2862:8604","crate_id":0,"name":"gather_requires","span":{"filename":"src/parser/validator.rs","begin":[290,4],"end":[313,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5020:1678":{"id":"b:2:3202-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4636":{"id":"0:4636","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[722,9],"end":[722,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:928:5611":{"id":"0:928:5611","crate_id":0,"name":"dont_collapse_args_in_usage","span":{"filename":"src/builder/command.rs","begin":[1287,4],"end":[1293,5]},"visibility":"public","docs":"Disables the automatic collapsing of positional args into `[ARGS]` inside the usage string.\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .dont_collapse_args_in_usage(true)\n    .get_matches();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3993:3368":{"id":"0:3993:3368","crate_id":0,"name":"short_aliases","span":{"filename":"src/builder/arg.rs","begin":[81,4],"end":[81,47]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"char"},{"kind":"primitive","inner":"bool"}]}}],"bindings":[]}}}}},"b:2:3202-0:5174:8567":{"id":"b:2:3202-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:4635:2919":{"id":"b:2:3198-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:4641:2920":{"id":"b:2:3202-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:705:3362":{"id":"0:705:3362","crate_id":0,"name":"requires","span":{"filename":"src/builder/arg_group.rs","begin":[317,4],"end":[320,5]},"visibility":"public","docs":"Specify an argument or group that must be present when this group is.\n\nThis is not to be confused with a [required group]. Requirement rules function just like\n[argument requirement rules], you can name other arguments or groups that must be present\nwhen any one of the arguments from this group is used.\n\n**NOTE:** The name provided may be an argument or group name\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgGroup, ErrorKind};\nlet result = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .arg(Arg::new(\"debug\")\n        .short('d'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"])\n        .requires(\"debug\"))\n    .try_get_matches_from(vec![\"myprog\", \"-c\"]);\n// because we used an arg from the group, and the group requires \"-d\" to be used, it's an\n// error\nassert!(result.is_err());\nlet err = result.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::MissingRequiredArgument);\n```\n[required group]: ArgGroup::required()\n[argument requirement rules]: crate::Arg::requires()","links":{"ArgGroup::required()":"0:4105:1655","crate::Arg::requires()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:1394:2909":{"id":"a:2:3269:211-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:4700:2915":{"id":"b:2:2869-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:5156:7831":{"id":"a:2:3310:6658-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2866:9246":{"id":"2:2866:9246","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:29480"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1530:7090":{"id":"0:1530:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[994,4],"end":[1001,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4682":{"id":"0:4682","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1288,15],"end":[1288,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4684:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:5110:8389":{"id":"a:2:3310:6658-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:5141:7832":{"id":"b:2:2869-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:455:2880":{"id":"0:455:2880","crate_id":0,"name":"ignore_case","span":{"filename":"src/builder/arg.rs","begin":[1664,4],"end":[1670,5]},"visibility":"public","docs":"Match values against [`Arg::possible_values`] without matching case.\n\nWhen other arguments are conditionally required based on the\nvalue of a case-insensitive argument, the equality check done\nby [`Arg::required_if_eq`], [`Arg::required_if_eq_any`], or\n[`Arg::required_if_eq_all`] is case-insensitive.\n\n\n**NOTE:** Setting this requires [`Arg::takes_value`]\n\n**NOTE:** To do unicode case folding, enable the `unicode` feature flag.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"pv\")\n    .arg(Arg::new(\"option\")\n        .long(\"option\")\n        .takes_value(true)\n        .ignore_case(true)\n        .value_parser([\"test123\"]))\n    .get_matches_from(vec![\n        \"pv\", \"--option\", \"TeSt123\",\n    ]);\n\nassert!(m.value_of(\"option\").unwrap().eq_ignore_ascii_case(\"test123\"));\n```\n\nThis setting also works when multiple values can be defined:\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"pv\")\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .long(\"option\")\n        .takes_value(true)\n        .ignore_case(true)\n        .multiple_values(true)\n        .value_parser([\"test123\", \"test321\"]))\n    .get_matches_from(vec![\n        \"pv\", \"--option\", \"TeSt123\", \"teST123\", \"tESt321\"\n    ]);\n\nlet matched_vals = m.values_of(\"option\").unwrap().collect::<Vec<_>>();\nassert_eq!(&*matched_vals, &[\"TeSt123\", \"teST123\", \"tESt321\"]);\n```","links":{"`Arg::possible_values`":"0:3972:1654","`Arg::required_if_eq`":"0:3972:1654","`Arg::takes_value`":"0:3972:1654","`Arg::required_if_eq_all`":"0:3972:1654","`Arg::required_if_eq_any`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:477:600":{"id":"0:477:600","crate_id":0,"name":"env","span":{"filename":"src/builder/arg.rs","begin":[2481,4],"end":[2483,5]},"visibility":"public","docs":"Read from `name` environment variable when argument is not present.\n\nIf it is not present in the environment, then default\nrules will apply.\n\nIf user sets the argument in the environment:\n- When [`Arg::takes_value(true)`] is not set, the flag is considered raised.\n- When [`Arg::takes_value(true)`] is set, [`ArgMatches::value_of`] will\n  return value of the environment variable.\n\nIf user doesn't set the argument in the environment:\n- When [`Arg::takes_value(true)`] is not set, the flag is considered off.\n- When [`Arg::takes_value(true)`] is set, [`ArgMatches::value_of`] will\n  return the default specified.\n\n# Examples\n\nIn this example, we show the variable coming from the environment:\n\n```rust\n# use std::env;\n# use clap::{Command, Arg};\n\nenv::set_var(\"MY_FLAG\", \"env\");\n\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\")\n        .env(\"MY_FLAG\")\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert_eq!(m.value_of(\"flag\"), Some(\"env\"));\n```\n\nIn this example, because [`Arg::takes_value(false)`] (by default),\n`prog` is a flag that accepts an optional, case-insensitive boolean literal.\nA `false` literal is `n`, `no`, `f`, `false`, `off` or `0`.\nAn absent environment variable will also be considered as `false`.\nAnything else will considered as `true`.\n\n```rust\n# use std::env;\n# use clap::{Command, Arg};\n\nenv::set_var(\"TRUE_FLAG\", \"true\");\nenv::set_var(\"FALSE_FLAG\", \"0\");\n\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"true_flag\")\n        .long(\"true_flag\")\n        .env(\"TRUE_FLAG\"))\n    .arg(Arg::new(\"false_flag\")\n        .long(\"false_flag\")\n        .env(\"FALSE_FLAG\"))\n    .arg(Arg::new(\"absent_flag\")\n        .long(\"absent_flag\")\n        .env(\"ABSENT_FLAG\"))\n    .get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert!(m.is_present(\"true_flag\"));\nassert_eq!(m.value_of(\"true_flag\"), None);\nassert!(!m.is_present(\"false_flag\"));\nassert!(!m.is_present(\"absent_flag\"));\n```\n\nIn this example, we show the variable coming from an option on the CLI:\n\n```rust\n# use std::env;\n# use clap::{Command, Arg};\n\nenv::set_var(\"MY_FLAG\", \"env\");\n\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\")\n        .env(\"MY_FLAG\")\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"prog\", \"--flag\", \"opt\"\n    ]);\n\nassert_eq!(m.value_of(\"flag\"), Some(\"opt\"));\n```\n\nIn this example, we show the variable coming from the environment even with the\npresence of a default:\n\n```rust\n# use std::env;\n# use clap::{Command, Arg};\n\nenv::set_var(\"MY_FLAG\", \"env\");\n\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\")\n        .env(\"MY_FLAG\")\n        .takes_value(true)\n        .default_value(\"default\"))\n    .get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert_eq!(m.value_of(\"flag\"), Some(\"env\"));\n```\n\nIn this example, we show the use of multiple values in a single environment variable:\n\n```rust\n# use std::env;\n# use clap::{Command, Arg};\n\nenv::set_var(\"MY_FLAG_MULTI\", \"env1,env2\");\n\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\")\n        .env(\"MY_FLAG_MULTI\")\n        .takes_value(true)\n        .multiple_values(true)\n        .use_value_delimiter(true))\n    .get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert_eq!(m.values_of(\"flag\").unwrap().collect::<Vec<_>>(), vec![\"env1\", \"env2\"]);\n```\n[`ArgMatches::value_of`]: crate::ArgMatches::value_of()\n[`Arg::takes_value(true)`]: Arg::takes_value()\n[`Arg::use_value_delimiter(true)`]: Arg::use_value_delimiter()","links":{"Arg::takes_value()":"0:3972:1654","crate::ArgMatches::value_of()":"0:4953:1658"},"attrs":["#[cfg(feature = \"env\")]","#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2410":{"id":"0:2410","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1417,0],"end":[1421,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2413:8271"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:31986:70867":{"id":"2:31986:70867","crate_id":2,"name":"wrapping_div","span":null,"visibility":"public","docs":"Wrapping (modular) division. Computes `self / rhs`.\nWrapped division on unsigned types is just normal division.\nThere's no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.wrapping_div(10), 10);\n```","links":{},"attrs":["#[stable(feature = \"num_wrapping\", since = \"1.2.0\")]","#[rustc_const_stable(feature = \"const_wrapping_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31970:74216":{"id":"2:31970:74216","crate_id":2,"name":"checked_neg","span":null,"visibility":"public","docs":"Checked negation. Computes `-self`, returning `None` unless `self ==\n0`.\n\nNote that negating any positive integer will overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(0u64.checked_neg(), Some(0));\nassert_eq!(1u64.checked_neg(), None);\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_checked_int_methods\", since = \"1.47.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3664:715":{"id":"0:3664:715","crate_id":0,"name":"hash","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488:4294":{"id":"0:488:4294","crate_id":0,"name":"next_line_help","span":{"filename":"src/builder/arg.rs","begin":[2728,4],"end":[2734,5]},"visibility":"public","docs":"Render the [help][Arg::help] on the line after the argument.\n\nThis can be helpful for arguments with very long or complex help messages.\nThis can also be helpful for arguments with very long flag names, or many/long value names.\n\n**NOTE:** To apply this setting to all arguments and subcommands, consider using\n[`crate::Command::next_line_help`]\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .long(\"long-option-flag\")\n        .short('o')\n        .takes_value(true)\n        .next_line_help(true)\n        .value_names(&[\"value1\", \"value2\"])\n        .help(\"Some really long help and complex\\n\\\n               help that makes more sense to be\\n\\\n               on a line after the option\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nThe above example displays the following help message\n\n```text\nnlh\n\nUSAGE:\n    nlh [OPTIONS]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n    -o, --long-option-flag <value1> <value2>\n        Some really long help and complex\n        help that makes more sense to be\n        on a line after the option\n```","links":{"`crate::Command::next_line_help`":"0:4456:1667","Arg::help":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"44:2631:13632":{"id":"44:2631:13632","crate_id":44,"name":"Rel","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:2632:9673","44:2633:73811","44:2634:13619","44:2635:14627","44:2636:14628","44:2637:73907","44:2638:14865"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:5319:1660":{"id":"b:2:4002-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:4972:1709":{"id":"a:2:9339:7908-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1177:6524":{"id":"0:1177:6524","crate_id":0,"name":"_build_subcommand","span":{"filename":"src/builder/command.rs","begin":[4313,4],"end":[4393,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5165:408":{"id":"0:5165:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/parser.rs","begin":[1724,15],"end":[1724,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:899:5408":{"id":"0:899:5408","crate_id":0,"name":"try_get_matches_from_mut","span":{"filename":"src/builder/command.rs","begin":[680,4],"end":[731,5]},"visibility":"public","docs":"Parse the specified arguments, returning a [`clap::Result`] on failure.\n\nLike [`App::try_get_matches_from`] but doesn't consume the `Command`.\n\n**NOTE:** This method WILL NOT exit when `--help` or `--version` (or short versions) are\nused. It will return a [`clap::Error`], where the [`kind`] is a [`ErrorKind::DisplayHelp`]\nor [`ErrorKind::DisplayVersion`] respectively. You must call [`Error::exit`] or\nperform a [`std::process::exit`] yourself.\n\n**NOTE:** The first argument will be parsed as the binary name unless\n[`Command::no_binary_name`] is used.\n\n# Panics\n\nIf contradictory arguments or settings exist.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet arg_vec = vec![\"my_prog\", \"some\", \"args\", \"to\", \"parse\"];\n\nlet mut cmd = Command::new(\"myprog\");\n    // Args and options go here...\nlet matches = cmd.try_get_matches_from_mut(arg_vec)\n    .unwrap_or_else(|e| e.exit());\n```\n[`App::try_get_matches_from`]: Command::try_get_matches_from()\n[`clap::Result`]: Result\n[`clap::Error`]: crate::Error\n[`kind`]: crate::Error","links":{"Command::try_get_matches_from()":"0:4456:1667","`ErrorKind::DisplayHelp`":"0:4833:1674","`std::process::exit`":"1:7792:2754","`ErrorKind::DisplayVersion`":"0:4833:1674","crate::Error":"0:4886:127","`Error::exit`":"0:4886:127","`Command::no_binary_name`":"0:4456:1667","Result":"2:47718:205"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4816:7516":{"id":"0:4816:7516","crate_id":0,"name":"Strings","span":{"filename":"src/error/context.rs","begin":[52,4],"end":[52,24]},"visibility":"default","docs":"Many values","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]}},"b:2:3202-0:5058:7830":{"id":"b:2:3202-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4706:2918":{"id":"b:2:4002-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:3503:1652":{"id":"b:2:3198-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2042:7141":{"id":"0:2042:7141","crate_id":0,"name":"empty_value","span":{"filename":"src/error/mod.rs","begin":[300,4],"end":[313,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["good_vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5006":{"id":"0:5006","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1399,16],"end":[1399,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:5009:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3201:3031":{"id":"2:3201:3031","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5020:1678":{"id":"b:2:2872-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2381:8242":{"id":"0:2381:8242","crate_id":0,"name":"try_get_arg_t","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1187,4],"end":[1199,5]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5227:7399":{"id":"0:5227:7399","crate_id":0,"name":"Position","span":{"filename":"src/mkeymap.rs","begin":[29,4],"end":[29,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"}]}},"b:2:3213-0:5298:5217":{"id":"b:2:3213-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:5305:3334":{"id":"b:2:3202-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:559:4691":{"id":"0:559:4691","crate_id":0,"name":"get_long_and_visible_aliases","span":{"filename":"src/builder/arg.rs","begin":[4376,4],"end":[4385,5]},"visibility":"public","docs":"Get the long option name and its visible aliases, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4074":{"id":"0:4074","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5190,23],"end":[5190,25]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4131:2923":{"id":"b:2:4002-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2507:7849":{"id":"0:2507:7849","crate_id":0,"name":"matched_arg","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[2,0],"end":[240,1]},"visibility":{"restricted":{"parent":"0:2195:2748","path":"::parser::matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5058:7830"],"is_stripped":false}},"44:160:13572":{"id":"44:160:13572","crate_id":44,"name":"Pod","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3728:3208":{"id":"0:3728:3208","crate_id":0,"name":"DISABLE_VERSION_FOR_SC","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:32018:74254":{"id":"2:32018:74254","crate_id":2,"name":"next_power_of_two","span":null,"visibility":"public","docs":"Returns the smallest power of two greater than or equal to `self`.\n\nWhen return value overflows (i.e., `self > (1 << (N-1))` for type\n`uN`), it panics in debug mode and the return value is wrapped to 0 in\nrelease mode (the only situation in which method can return 0).\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(2u64.next_power_of_two(), 2);\nassert_eq!(3u64.next_power_of_two(), 4);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_int_pow\", since = \"1.50.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4549:604":{"id":"0:4549:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/possible_value.rs","begin":[29,32],"end":[29,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4994":{"id":"0:4994","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1341,16],"end":[1341,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4996:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"44:2877:13583":{"id":"44:2877:13583","crate_id":44,"name":"CompressionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:2878:9673","44:2879:13619","44:2880:14611","44:2881:14612","44:2882:14613"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4790:7562":{"id":"0:4790:7562","crate_id":0,"name":"TrailingArg","span":{"filename":"src/error/context.rs","begin":[34,4],"end":[34,15]},"visibility":"default","docs":"Trailing argument","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2475:5300":{"id":"0:2475:5300","crate_id":0,"name":"size_hint","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1606,4],"end":[1608,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2179:7894":{"id":"0:2179:7894","crate_id":0,"name":"pending_values_mut","span":{"filename":"src/parser/arg_matcher.rs","begin":[252,4],"end":[267,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["ident",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2451:59":{"id":"0:2451:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1539,4],"end":[1545,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2328:2493":{"id":"0:2328:2493","crate_id":0,"name":"value_of_t_or_exit","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[509,4],"end":[516,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_one()`]","links":{"`ArgMatches::get_one()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `ArgMatches::get_one()`\")]","#[track_caller]","#![allow(deprecated)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_one()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:3503:1652":{"id":"b:2:3208-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3117:8725":{"id":"0:3117:8725","crate_id":0,"name":"write_method","span":{"filename":"src/output/help.rs","begin":[124,0],"end":[134,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"macro","inner":"macro_rules! write_method {\n    ($_self:ident, $msg:ident, $meth:ident) => { ... };\n}"},"a:2:3281:220-0:5010:7834":{"id":"a:2:3281:220-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:4641:2920":{"id":"b:2:3208-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5284:660":{"id":"0:5284:660","crate_id":0,"name":"fmt","span":{"filename":"src/output/fmt.rs","begin":[135,22],"end":[135,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6859:12274":{"id":"1:6859:12274","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6860:31080"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:4807:7450":{"id":"b:2:3198-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4824":{"id":"0:4824","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[42,16],"end":[42,21]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4825:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:262:2944":{"id":"0:262:2944","crate_id":0,"name":"yaml_char","span":{"filename":"src/builder/macros.rs","begin":[104,0],"end":[112,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_char {\n    ($v:expr) => { ... };\n}"},"0:271:3028":{"id":"0:271:3028","crate_id":0,"name":"takes_values","span":{"filename":"src/builder/action.rs","begin":[257,4],"end":[271,5]},"visibility":"public","docs":"Returns whether this action accepts values on the command-line\n\n[`default_values`][super::Arg::default_values] and [`env`][super::Arg::env] may still be\nprocessed.","links":{"super::Arg::env":"0:3972:1654","super::Arg::default_values":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3972:1654":{"id":"b:2:3213-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4878":{"id":"0:4878","crate_id":0,"name":null,"span":{"filename":"src/error/kind.rs","begin":[2,9],"end":[2,14]},"visibility":{"restricted":{"parent":"0:1991:782","path":"::error::kind"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4879:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3102:5461":{"id":"0:3102:5461","crate_id":0,"name":"usage","span":{"filename":"src/output/help.rs","begin":[23,4],"end":[23,35]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}}}}},"0:260:2938":{"id":"0:260:2938","crate_id":0,"name":"yaml_vec","span":{"filename":"src/builder/macros.rs","begin":[70,0],"end":[87,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_vec {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"a:2:3281:220-0:4694:2917":{"id":"a:2:3281:220-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5311":{"id":"0:5311","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[9,16],"end":[9,18]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:4063:3357":{"id":"b:2:3198-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2395":{"id":"0:2395","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1359,0],"end":[1363,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2397:8271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,24],"end":[109,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::derive::Args","name":"Args","id":"0:204:1661","glob":false}},"0:1296:753":{"id":"0:1296:753","crate_id":0,"name":"index","span":{"filename":"src/builder/command.rs","begin":[5137,4],"end":[5139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3577:5211","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4613:7006":{"id":"0:4613:7006","crate_id":0,"name":"EmailAddress","span":{"filename":"src/builder/value_hint.rs","begin":[66,4],"end":[66,16]},"visibility":"default","docs":"Email address.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4582:1325":{"id":"0:4582:1325","crate_id":0,"name":"start","span":{"filename":"src/builder/usage_parser.rs","begin":[24,4],"end":[24,16]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"44:5464:13952":{"id":"44:5464:13952","crate_id":44,"name":"ObjectSymbol","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:5466:753","44:5467:73846","44:5468:899","44:5469:268","44:5470:1304","44:5471:782","44:5472:13263","44:5473:13603","44:5474:74002","44:5475:74003","44:5476:74152","44:5477:74153","44:5478:12413","44:5479:74154","44:5480:74155","44:5481:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"44:5487:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:5196:5213":{"id":"b:2:3208-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3776:10052":{"id":"0:3776:10052","crate_id":0,"name":"is_all","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1562":{"id":"0:1562","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1235,0],"end":[1244,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:7019","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1565:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8680:157":{"id":"2:8680:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8681:2763","2:8682:922","2:8683:10917","2:8686:5300","2:8687:495","2:8689:3567","2:8692:8485","2:8693:10918","2:8694:10919","2:8695:6367","2:8697:9551","2:8699:10920","2:8700:10921","2:8702:841","2:8705:10922","2:8712:6307","2:8714:4679","2:8717:6589","2:8718:4883","2:8719:10923","2:8721:6752","2:8723:10924","2:8726:1308","2:8727:6567","2:8728:10925","2:8732:6369","2:8735:8274","2:8736:10926","2:8737:10927","2:8739:10928","2:8740:4097","2:8742:10929","2:8745:10930","2:8747:10931","2:8757:10932","2:8772:10933","2:8774:10934","2:8778:8593","2:8787:8447","2:8790:10935","2:8792:10936","2:8795:276","2:8802:294","2:8809:2881","2:8816:7508","2:8825:10937","2:8835:1014","2:8842:10938","2:8849:4890","2:8850:8715","2:8851:9297","2:8863:9296","2:8870:8667","2:8882:9295","2:8889:7410","2:8890:10939","2:8895:4585","2:8898:2884","2:8901:10940","2:8902:10941","2:8904:8320","2:8906:10942","2:8908:415","2:8911:10943","2:8914:997","2:8917:10944","2:8920:604","2:8923:10945","2:8926:907","2:8928:826","2:8930:792","2:8932:713","2:8934:696","2:8936:10946","2:8937:10947","2:8945:10948"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:1394:2909":{"id":"b:2:3208-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:4694:2917":{"id":"b:2:3202-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2563:8321":{"id":"0:2563:8321","crate_id":0,"name":"num_vals_last_group","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[143,4],"end":[145,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1457:7090":{"id":"0:1457:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[569,4],"end":[577,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:279:2894":{"id":"0:279:2894","crate_id":0,"name":"app_settings","span":{"filename":"src/builder/app_settings.rs","begin":[1,0],"end":[864,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3542:1669","0:3647:2672"],"is_stripped":false}},"0:1418:1429":{"id":"0:1418:1429","crate_id":0,"name":"type_id","span":{"filename":"src/builder/value_parser.rs","begin":[237,4],"end":[239,5]},"visibility":"public","docs":"Describes the content of `AnyValue`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4942:7020":{"id":"b:2:2872-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:664:3379":{"id":"0:664:3379","crate_id":0,"name":"ValidatorOs","span":{"filename":"src/builder/arg.rs","begin":[5188,0],"end":[5188,97]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}},"0:3661":{"id":"0:3661","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3662:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4774:7555":{"id":"0:4774:7555","crate_id":0,"name":"ExpectedNumValues","span":{"filename":"src/error/context.rs","begin":[18,4],"end":[18,21]},"visibility":"default","docs":"Number of allowed values","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:5309:408":{"id":"0:5309:408","crate_id":0,"name":"clone","span":{"filename":"src/util/id.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2491":{"id":"0:2491","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1670,0],"end":[1674,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2493:8271"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:4910:7462":{"id":"a:2:9339:7908-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5077":{"id":"0:5077","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,9],"end":[2,14]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5078:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2066:681":{"id":"0:2066:681","crate_id":0,"name":"from","span":{"filename":"src/error/mod.rs","begin":[989,4],"end":[991,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"io::Error","id":"1:4080:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3130:8734":{"id":"0:3130:8734","crate_id":0,"name":"write_args_unsorted","span":{"filename":"src/output/help.rs","begin":[166,4],"end":[194,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes help for each argument in the order they were declared to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:599:4780":{"id":"0:599:4780","crate_id":0,"name":"is_last_set","span":{"filename":"src/builder/arg.rs","begin":[4664,4],"end":[4666,5]},"visibility":"public","docs":"Reports whether [`Arg::last`] is set","links":{"`Arg::last`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:551:4681":{"id":"0:551:4681","crate_id":0,"name":"get_all_short_aliases","span":{"filename":"src/builder/arg.rs","begin":[4321,4],"end":[4327,5]},"visibility":"public","docs":"Get *all* short aliases for this argument, if any, both visible and hidden.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1406:6977":{"id":"0:1406:6977","crate_id":0,"name":"Other","span":{"filename":"src/builder/value_parser.rs","begin":[70,4],"end":[70,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"AnyValueParser","id":"0:1448:7030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}]}},"0:4307:5187":{"id":"0:4307:5187","crate_id":0,"name":"MULTIPLE_VALS","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4495:660":{"id":"0:4495:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/command.rs","begin":[77,9],"end":[77,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2090":{"id":"0:2090","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1118,0],"end":[1122,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"debug\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2091:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4676:2906":{"id":"a:2:3269:211-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5264:8970":{"id":"0:5264:8970","crate_id":0,"name":"pieces","span":{"filename":"src/output/fmt.rs","begin":[19,4],"end":[19,32]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}}},"0:1107:6404":{"id":"0:1107:6404","crate_id":0,"name":"is_trailing_var_arg_set","span":{"filename":"src/builder/command.rs","begin":[3713,4],"end":[3715,5]},"visibility":"public","docs":"Report whether [`Command::trailing_var_arg`] is set","links":{"`Command::trailing_var_arg`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2417":{"id":"0:2417","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1426,0],"end":[1434,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"Creates an empty iterator.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2420:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5086":{"id":"0:5086","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,40],"end":[2,42]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1889":{"id":"0:1889","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[44,0],"end":[44,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::via_prelude","name":"via_prelude","id":"0:1685:2913","glob":false}},"a:2:3281:220-0:5298:5217":{"id":"a:2:3281:220-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4858:7536":{"id":"0:4858:7536","crate_id":0,"name":"MissingRequiredArgument","span":{"filename":"src/error/kind.rs","begin":[250,4],"end":[250,27]},"visibility":"default","docs":"Occurs when the user does not provide one or more required arguments.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"debug\")\n        .required(true))\n    .try_get_matches_from(vec![\"prog\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4690":{"id":"0:4690","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1451,15],"end":[1451,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4691:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5182:3335":{"id":"b:2:2869-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2147:920":{"id":"0:2147:920","crate_id":0,"name":"new","span":{"filename":"src/parser/arg_matcher.rs","begin":[23,4],"end":[48,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108:1844":{"id":"0:108:1844","crate_id":0,"name":"git","span":{"filename":"src/_cookbook/git.rs","begin":[1,0],"end":[7,47]},"visibility":"public","docs":"# Example: git-like CLI (Builder API)\n\n```rust\nuse std::ffi::OsString;\nuse std::path::PathBuf;\n\nuse clap::{arg, Command};\n\nfn cli() -> Command<'static> {\n    Command::new(\"git\")\n        .about(\"A fictional versioning CLI\")\n        .subcommand_required(true)\n        .arg_required_else_help(true)\n        .allow_external_subcommands(true)\n        .allow_invalid_utf8_for_external_subcommands(true)\n        .subcommand(\n            Command::new(\"clone\")\n                .about(\"Clones repos\")\n                .arg(arg!(<REMOTE> \"The remote to clone\"))\n                .arg_required_else_help(true),\n        )\n        .subcommand(\n            Command::new(\"push\")\n                .about(\"pushes things\")\n                .arg(arg!(<REMOTE> \"The remote to target\"))\n                .arg_required_else_help(true),\n        )\n        .subcommand(\n            Command::new(\"add\")\n                .about(\"adds things\")\n                .arg_required_else_help(true)\n                .arg(arg!(<PATH> ... \"Stuff to add\").value_parser(clap::value_parser!(PathBuf))),\n        )\n        .subcommand(\n            Command::new(\"stash\")\n                .args_conflicts_with_subcommands(true)\n                .args(push_args())\n                .subcommand(Command::new(\"push\").args(push_args()))\n                .subcommand(Command::new(\"pop\").arg(arg!([STASH])))\n                .subcommand(Command::new(\"apply\").arg(arg!([STASH]))),\n        )\n}\n\nfn push_args() -> Vec<clap::Arg<'static>> {\n    vec![arg!(-m --message <MESSAGE>).required(false)]\n}\n\nfn main() {\n    let matches = cli().get_matches();\n\n    match matches.subcommand() {\n        Some((\"clone\", sub_matches)) => {\n            println!(\n                \"Cloning {}\",\n                sub_matches.get_one::<String>(\"REMOTE\").expect(\"required\")\n            );\n        }\n        Some((\"push\", sub_matches)) => {\n            println!(\n                \"Pushing to {}\",\n                sub_matches.get_one::<String>(\"REMOTE\").expect(\"required\")\n            );\n        }\n        Some((\"add\", sub_matches)) => {\n            let paths = sub_matches\n                .get_many::<PathBuf>(\"PATH\")\n                .into_iter()\n                .flatten()\n                .collect::<Vec<_>>();\n            println!(\"Adding {:?}\", paths);\n        }\n        Some((\"stash\", sub_matches)) => {\n            let stash_command = sub_matches.subcommand().unwrap_or((\"push\", sub_matches));\n            match stash_command {\n                (\"apply\", sub_matches) => {\n                    let stash = sub_matches.get_one::<String>(\"STASH\");\n                    println!(\"Applying {:?}\", stash);\n                }\n                (\"pop\", sub_matches) => {\n                    let stash = sub_matches.get_one::<String>(\"STASH\");\n                    println!(\"Popping {:?}\", stash);\n                }\n                (\"push\", sub_matches) => {\n                    let message = sub_matches.get_one::<String>(\"message\");\n                    println!(\"Pushing {:?}\", message);\n                }\n                (name, _) => {\n                    unreachable!(\"Unsupported subcommand `{}`\", name)\n                }\n            }\n        }\n        Some((ext, sub_matches)) => {\n            let args = sub_matches\n                .get_many::<OsString>(\"\")\n                .into_iter()\n                .flatten()\n                .collect::<Vec<_>>();\n            println!(\"Calling out to {:?} with {:?}\", ext, args);\n        }\n        _ => unreachable!(), // If all subcommands are defined above, anything else is unreachabe!()\n    }\n\n    // Continued program logic goes here...\n}\n```\n\nGit is an example of several common subcommand patterns.\n\nHelp:\n```console\n$ git\n? failed\ngit \nA fictional versioning CLI\n\nUSAGE:\n    git[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help    Print help information\n\nSUBCOMMANDS:\n    add      adds things\n    clone    Clones repos\n    help     Print this message or the help of the given subcommand(s)\n    push     pushes things\n    stash    \n\n$ git help\ngit \nA fictional versioning CLI\n\nUSAGE:\n    git[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help    Print help information\n\nSUBCOMMANDS:\n    add      adds things\n    clone    Clones repos\n    help     Print this message or the help of the given subcommand(s)\n    push     pushes things\n    stash    \n\n$ git help add\ngit[EXE]-add \nadds things\n\nUSAGE:\n    git[EXE] add <PATH>...\n\nARGS:\n    <PATH>...    Stuff to add\n\nOPTIONS:\n    -h, --help    Print help information\n\n```\n\nA basic argument:\n```console\n$ git add\n? failed\ngit[EXE]-add \nadds things\n\nUSAGE:\n    git[EXE] add <PATH>...\n\nARGS:\n    <PATH>...    Stuff to add\n\nOPTIONS:\n    -h, --help    Print help information\n\n$ git add Cargo.toml Cargo.lock\nAdding [\"Cargo.toml\", \"Cargo.lock\"]\n\n```\n\nDefault subcommand:\n```console\n$ git stash -h\ngit[EXE]-stash \n\nUSAGE:\n    git[EXE] stash [OPTIONS]\n    git[EXE] stash <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help                 Print help information\n    -m, --message <MESSAGE>    \n\nSUBCOMMANDS:\n    apply    \n    help     Print this message or the help of the given subcommand(s)\n    pop      \n    push     \n\n$ git stash push -h\ngit[EXE]-stash-push \n\nUSAGE:\n    git[EXE] stash push [OPTIONS]\n\nOPTIONS:\n    -h, --help                 Print help information\n    -m, --message <MESSAGE>    \n\n$ git stash pop -h\ngit[EXE]-stash-pop \n\nUSAGE:\n    git[EXE] stash pop [STASH]\n\nARGS:\n    <STASH>    \n\nOPTIONS:\n    -h, --help    Print help information\n\n$ git stash -m \"Prototype\"\nPushing Some(\"Prototype\")\n\n$ git stash pop\nPopping None\n\n$ git stash push -m \"Prototype\"\nPushing Some(\"Prototype\")\n\n$ git stash pop\nPopping None\n\n```\n\nExternal subcommands:\n```console\n$ git custom-tool arg1 --foo bar\nCalling out to \"custom-tool\" with [\"arg1\", \"--foo\", \"bar\"]\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:5:6413-0:5261:2691":{"id":"b:5:6413-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:5298:5217":{"id":"a:2:9340:7907-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5000:779":{"id":"0:5000:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1402,4],"end":[1402,68]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: type_complexity)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Map","id":"2:46798:7923","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}},"1:5647:12314":{"id":"1:5647:12314","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5648:31031","1:5649:10201"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:5237":{"id":"0:5237","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[25,27],"end":[25,29]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4347":{"id":"0:4347","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:9212","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4348:181","0:4349:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1329:6709":{"id":"0:1329:6709","crate_id":0,"name":"get_visible_name","span":{"filename":"src/builder/possible_value.rs","begin":[194,4],"end":[200,5]},"visibility":"public","docs":"Get the name if argument value is not hidden, `None` otherwise","links":{},"attrs":["#[deprecated(since = \"3.1.4\", note =\n\"Use `PossibleValue::is_hide_set` and `PossibleValue::get_name`\")]"],"deprecation":{"since":"3.1.4","note":"Use `PossibleValue::is_hide_set` and `PossibleValue::get_name`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5110:8389":{"id":"b:2:4002-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:5298:5217":{"id":"b:2:3198-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:4556:6725":{"id":"b:2:2872-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:4676:2906":{"id":"a:2:9339:7908-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:1397:7028":{"id":"b:2:3202-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3749:3243":{"id":"0:3749:3243","crate_id":0,"name":"DISABLE_HELP_SC","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4970":{"id":"0:4970","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,43],"end":[67,45]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5092:7833":{"id":"b:2:2869-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1671:1664":{"id":"0:1671:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1881,4],"end":[1881,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}}},"0:1417:7090":{"id":"0:1417:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[227,4],"end":[234,5]},"visibility":"crate","docs":"Parse into a `AnyValue`\n\nWhen `arg` is `None`, an external subcommand value is being parsed.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:3198-0:1394:2909":{"id":"b:2:3198-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:3972:1654":{"id":"a:2:3269:211-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4496":{"id":"0:4496","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[77,16],"end":[77,21]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4498:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2882:8639":{"id":"0:2882:8639","crate_id":0,"name":"fails_arg_required_unless","span":{"filename":"src/parser/validator.rs","begin":[558,4],"end":[564,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5153":{"id":"0:5153","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1717,34],"end":[1717,36]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3815:684":{"id":"0:3815:684","crate_id":0,"name":"from_iter","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iterator",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::_core::iter::IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5319:1660":{"id":"b:2:3202-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:402:3490":{"id":"0:402:3490","crate_id":0,"name":"visible_aliases","span":{"filename":"src/builder/arg.rs","begin":[406,4],"end":[409,5]},"visibility":"public","docs":"Add aliases, which function as visible long flags.\n\nLike [`Arg::aliases`], except that they are visible inside the help message.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n                .long(\"test\")\n                .action(ArgAction::SetTrue)\n                .visible_aliases(&[\"something\", \"awesome\", \"cool\"]))\n       .get_matches_from(vec![\n            \"prog\", \"--awesome\"\n        ]);\nassert_eq!(*m.get_one::<bool>(\"test\").expect(\"defaulted by clap\"), true);\n```\n[`Command::aliases`]: Arg::aliases()","links":{"`Arg::aliases`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:3252:5215":{"id":"b:2:2869-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:222:2756":{"id":"0:222:2756","crate_id":0,"name":"try_parse","span":{"filename":"src/derive.rs","begin":[507,4],"end":[509,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3508:2987":{"id":"0:3508:2987","crate_id":0,"name":"StoreValue","span":{"filename":"src/builder/action.rs","begin":[81,4],"end":[81,14]},"visibility":"default","docs":"Deprecated, replaced with [`ArgAction::Set`] or [`ArgAction::Append`]","links":{"`ArgAction::Set`":"0:3503:1652","`ArgAction::Append`":"0:3503:1652"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgAction::Set` or `ArgAction::Append`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgAction::Set` or `ArgAction::Append`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3010:604":{"id":"0:3010:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[39,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"usize"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4629:2907":{"id":"b:2:3208-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:5196:5213":{"id":"a:2:3310:6658-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:5182:3335":{"id":"b:5:787-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2207":{"id":"0:2207","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[35,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2208:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1995:660":{"id":"0:1995:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/kind.rs","begin":[437,4],"end":[439,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"std::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13586:6463":{"id":"2:13586:6463","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1994":{"id":"0:1994","crate_id":0,"name":null,"span":{"filename":"src/error/kind.rs","begin":[436,0],"end":[440,1]},"visibility":{"restricted":{"parent":"0:1991:782","path":"::error::kind"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1995:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:4664:2905":{"id":"b:5:787-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:4231:2672":{"id":"a:2:3310:6658-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5055":{"id":"0:5055","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1653,16],"end":[1653,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5057:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:744:2561":{"id":"0:744:2561","crate_id":0,"name":"command","span":{"filename":"src/builder/command.rs","begin":[1,0],"end":[5164,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:853:1653","0:4456:1667","0:1225:6599","0:1299:6555"],"is_stripped":false}},"0:4089":{"id":"0:4089","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,9],"end":[5273,13]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4987:8033":{"id":"a:2:9340:7907-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:4947:3033":{"id":"b:2:3202-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5148:660":{"id":"0:5148:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/parser.rs","begin":[1717,16],"end":[1717,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2316:8078":{"id":"0:2316:8078","crate_id":0,"name":"grouped_values_of","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[435,4],"end":[443,5]},"visibility":"public","docs":"Get an [`Iterator`] over groups of values of a specific option.\n\nspecifically grouped by the occurrences of the options.\n\nEach group is a `Vec<&str>` containing the arguments passed to a single occurrence\nof the option.\n\nIf the option doesn't support multiple occurrences, or there was only a single occurrence,\nthe iterator will only contain a single item.\n\nReturns `None` if the option wasn't present.\n\n# Panics\n\nIf the value is invalid UTF-8.\n\nIf `id` is not a valid argument or group id.\n\n# Examples\n```rust\n# use clap::{Command,Arg, ArgAction};\nlet m = Command::new(\"myprog\")\n    .arg(Arg::new(\"exec\")\n        .short('x')\n        .min_values(1)\n        .action(ArgAction::Append)\n        .value_terminator(\";\"))\n    .get_matches_from(vec![\n        \"myprog\", \"-x\", \"echo\", \"hi\", \";\", \"-x\", \"echo\", \"bye\"]);\nlet vals: Vec<Vec<&str>> = m.grouped_values_of(\"exec\").unwrap().collect();\nassert_eq!(vals, [[\"echo\", \"hi\"], [\"echo\", \"bye\"]]);\n```\n[`Iterator`]: std::iter::Iterator","links":{"std::iter::Iterator":"2:8680:157"},"attrs":["#[cfg(feature = \"unstable-grouped\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4694:2917":{"id":"b:2:3213-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[2498,0],"end":[3052,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":"# Help","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:481:2603","0:483:3358","0:485:4269","0:486:3385","0:488:4294","0:489:4299","0:490:4309","0:491:4318","0:492:4326","0:493:4334","0:494:4346","0:495:4352"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:64:23246":{"id":"20:64:23246","crate_id":20,"name":"MarkedEventReceiver","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:65:30779"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2878:8631":{"id":"0:2878:8631","crate_id":0,"name":"is_missing_required_ok","span":{"filename":"src/parser/validator.rs","begin":[527,4],"end":[536,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["conflicts",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4484:5262":{"id":"0:4484:5262","crate_id":0,"name":"g_settings","span":{"filename":"src/builder/command.rs","begin":[105,4],"end":[105,24]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AppFlags","id":"0:3527:1668","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2890:8588":{"id":"0:2890:8588","crate_id":0,"name":"gather_conflicts","span":{"filename":"src/parser/validator.rs","begin":[615,4],"end":[641,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["arg_id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4657:2904":{"id":"b:2:3202-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4667:1362":{"id":"0:4667:1362","crate_id":0,"name":"target","span":{"filename":"src/builder/value_parser.rs","begin":[1093,4],"end":[1093,39]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"std::marker::PhantomData","id":"2:3287:7174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},"a:2:3269:211-0:5141:7832":{"id":"a:2:3269:211-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1578:7090":{"id":"0:1578:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[1381,4],"end":[1430,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["raw_value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4728:1542":{"id":"0:4728:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/regex.rs","begin":[12,13],"end":[12,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"25:2788:7323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:3990:2590":{"id":"0:3990:2590","crate_id":0,"name":"short","span":{"filename":"src/builder/arg.rs","begin":[78,4],"end":[78,34]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,25],"end":[113,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::AppFlags","name":"AppFlags","id":"0:3527:1668","glob":false}},"0:632:4843":{"id":"0:632:4843","crate_id":0,"name":"generated","span":{"filename":"src/builder/arg.rs","begin":[5010,4],"end":[5013,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4921:7467":{"id":"a:2:9339:7908-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:4855","5:785:5446","5:786:10950"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:203:2771":{"id":"0:203:2771","crate_id":0,"name":"update_from_arg_matches_mut","span":{"filename":"src/derive.rs","begin":[360,4],"end":[362,5]},"visibility":"default","docs":"Assign values from `ArgMatches` to `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4688:2914":{"id":"a:2:9339:7908-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1044:4689":{"id":"0:1044:4689","crate_id":0,"name":"get_all_aliases","span":{"filename":"src/builder/command.rs","begin":[3382,4],"end":[3384,5]},"visibility":"public","docs":"Iterate through the set of *all* the aliases for this subcommand, both visible and hidden.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5208:907":{"id":"0:5208:907","crate_id":0,"name":"ne","span":{"filename":"src/mkeymap.rs","begin":[15,18],"end":[15,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4830":{"id":"0:4830","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[42,34],"end":[42,36]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4460:5244":{"id":"0:4460:5244","crate_id":0,"name":"long_flag","span":{"filename":"src/builder/command.rs","begin":[81,4],"end":[81,33]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:147:547":{"id":"0:147:547","crate_id":0,"name":"derive","span":{"filename":"src/derive.rs","begin":[1,0],"end":[577,1]},"visibility":"crate","docs":"This module contains traits that are usable with the `#[derive(...)].`\nmacros in [`clap_derive`].","links":{"`clap_derive`":"22:0:1555"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:164:1664","0:190:1662","0:199:1663","0:204:1661","0:207:1665","0:211:1666","0:250:2753"],"is_stripped":false}},"0:2195:2748":{"id":"0:2195:2748","crate_id":0,"name":"matches","span":{"filename":"src/parser/matches/mod.rs","begin":[1,0],"end":[17,40]},"visibility":{"restricted":{"parent":"0:2094:1657","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2196:7909","0:2228:7910","0:2507:7849","0:2578:7911","0:2579","0:2582","0:2585","0:2589","0:2592","0:2595","0:2608","0:2611"],"is_stripped":false}},"0:1486":{"id":"0:1486","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[726,0],"end":[731,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1487:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4921:7467":{"id":"b:2:4002-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,56],"end":[116,62]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::parser::Values","name":"Values","id":"0:5020:1678","glob":false}},"0:4696":{"id":"0:4696","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1550,15],"end":[1550,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4697:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1200:6568":{"id":"0:1200:6568","crate_id":0,"name":"_propagate_subcommand","span":{"filename":"src/builder/command.rs","begin":[4598,4],"end":[4616,5]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:662:3377":{"id":"0:662:3377","crate_id":0,"name":"Validator","span":{"filename":"src/builder/arg.rs","begin":[5187,0],"end":[5187,93]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}},"0:4339:356":{"id":"0:4339:356","crate_id":0,"name":"bitxor","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Returns the left flags, but with all the right flags toggled.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4844:7523":{"id":"0:4844:7523","crate_id":0,"name":"NoEquals","span":{"filename":"src/error/kind.rs","begin":[118,4],"end":[118,12]},"visibility":"default","docs":"Occurs when the user doesn't use equals for an option that requires equal\nsign to provide values.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"color\")\n         .takes_value(true)\n         .require_equals(true)\n         .long(\"color\"))\n    .try_get_matches_from(vec![\"prog\", \"--color\", \"red\"]);\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::NoEquals);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:667:59":{"id":"0:667:59","crate_id":0,"name":"default","span":{"filename":"src/builder/arg.rs","begin":[5198,4],"end":[5200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3261:2596":{"id":"0:3261:2596","crate_id":0,"name":"required","span":{"filename":"src/output/usage.rs","begin":[24,4],"end":[27,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["required",{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4635:2919":{"id":"a:2:3310:6658-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5052":{"id":"0:5052","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1653,9],"end":[1653,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5054:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4953:1658":{"id":"a:2:3269:211-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:4910:7462":{"id":"b:2:3202-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4325:10059":{"id":"0:4325:10059","crate_id":0,"name":"toggle","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Toggles the specified flags in-place.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3601:3172":{"id":"0:3601:3172","crate_id":0,"name":"HidePossibleValues","span":{"filename":"src/builder/app_settings.rs","begin":[373,4],"end":[373,22]},"visibility":"default","docs":"Deprecated, replaced with [`Command::hide_possible_values`] and\n[`Arg::is_hide_possible_values_set`]","links":{"`Command::hide_possible_values`":"0:4456:1667","`Arg::is_hide_possible_values_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::hide_possible_values` and `Arg::is_hide_possible_values_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::hide_possible_values` and `Arg::is_hide_possible_values_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:460:3974":{"id":"0:460:3974","crate_id":0,"name":"use_value_delimiter","span":{"filename":"src/builder/arg.rs","begin":[1870,4],"end":[1881,5]},"visibility":"public","docs":"Specifies that an argument should allow grouping of multiple values via a\ndelimiter.\n\ni.e. should `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`,\nand `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the\nvalue delimiter for all arguments that accept values (options and positional arguments)\n\n**NOTE:** When this setting is used, it will default [`Arg::value_delimiter`]\nto the comma `,`.\n\n**NOTE:** Implicitly sets [`Arg::takes_value`]\n\n# Examples\n\nThe following example shows the default behavior.\n\n```rust\n# use clap::{Command, Arg};\nlet delims = Command::new(\"prog\")\n    .arg(Arg::new(\"option\")\n        .long(\"option\")\n        .use_value_delimiter(true)\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"prog\", \"--option=val1,val2,val3\",\n    ]);\n\nassert!(delims.contains_id(\"option\"));\nassert_eq!(delims.values_of(\"option\").unwrap().collect::<Vec<_>>(), [\"val1\", \"val2\", \"val3\"]);\n```\nThe next example shows the difference when turning delimiters off. This is the default\nbehavior\n\n```rust\n# use clap::{Command, Arg};\nlet nodelims = Command::new(\"prog\")\n    .arg(Arg::new(\"option\")\n        .long(\"option\")\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"prog\", \"--option=val1,val2,val3\",\n    ]);\n\nassert!(nodelims.contains_id(\"option\"));\nassert_eq!(nodelims.value_of(\"option\").unwrap(), \"val1,val2,val3\");\n```\n[`Arg::value_delimiter`]: Arg::value_delimiter()","links":{"`Arg::takes_value`":"0:3972:1654","Arg::value_delimiter()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4588:1673":{"id":"a:2:3281:220-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2498:59":{"id":"0:2498:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1680,4],"end":[1687,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:526:4529":{"id":"0:526:4529","crate_id":0,"name":"requires_if","span":{"filename":"src/builder/arg.rs","begin":[3880,4],"end":[3884,5]},"visibility":"public","docs":"Require another argument if this arg was present at runtime and its value equals to `val`.\n\nThis method takes `value, another_arg` pair. At runtime, clap will check\nif this arg (`self`) is present and its value equals to `val`.\nIf it does, `another_arg` will be marked as required.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .requires_if(\"val\", \"arg\")\n# ;\n```\n\nSetting `Arg::requires_if(val, arg)` requires that the `arg` be used at runtime if the\ndefining argument's value is equal to `val`. If the defining argument is anything other than\n`val`, the other argument isn't required.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .requires_if(\"my.cfg\", \"other\")\n        .long(\"config\"))\n    .arg(Arg::new(\"other\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"some.cfg\"\n    ]);\n\nassert!(res.is_ok()); // We didn't use --config=my.cfg, so other wasn't required\n```\n\nSetting `Arg::requires_if(val, arg)` and setting the value to `val` but *not* supplying\n`arg` is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .requires_if(\"my.cfg\", \"input\")\n        .long(\"config\"))\n    .arg(Arg::new(\"input\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"my.cfg\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[`Arg::requires(name)`]: Arg::requires()\n[Conflicting]: Arg::conflicts_with()\n[override]: Arg::overrides_with()","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["val",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["arg_id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4972:1709":{"id":"b:2:2872-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2874:29480":{"id":"2:2874:29480","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2038:7510":{"id":"0:2038:7510","crate_id":0,"name":"display_help","span":{"filename":"src/error/mod.rs","begin":[261,4],"end":[263,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["colorizer",{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2467:59":{"id":"0:2467:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1577,4],"end":[1584,5]},"visibility":"default","docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4694:2917":{"id":"a:2:9339:7908-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3796":{"id":"0:3796","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:3431:9225","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3797:357"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4559:6727":{"id":"0:4559:6727","crate_id":0,"name":"ValName","span":{"filename":"src/builder/usage_parser.rs","begin":[11,4],"end":[11,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4735":{"id":"0:4735","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[9,16],"end":[9,21]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:4737:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4609:7002":{"id":"0:4609:7002","crate_id":0,"name":"Hostname","span":{"filename":"src/builder/value_hint.rs","begin":[62,4],"end":[62,12]},"visibility":"default","docs":"Host name of a computer.\nShells usually parse `/etc/hosts` and `.ssh/known_hosts` to complete hostnames.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1432":{"id":"0:1432","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[413,0],"end":[418,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Create an `i64` [`ValueParser`] from a `..M` range\n\nSee [`RangedI64ValueParser`] for more control over the output type.\n\nSee also [`RangedU64ValueParser`]\n\n# Examples\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(..3000)\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"80\"]).unwrap();\nlet port: i64 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 80);\n```","links":{"`ValueParser`":"0:1394:2909","`RangedU64ValueParser`":"0:4676:2906","`RangedI64ValueParser`":"0:4664:2905"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46002:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1433:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3255:2562":{"id":"0:3255:2562","crate_id":0,"name":"cmd","span":{"filename":"src/output/usage.rs","begin":[12,4],"end":[12,29]},"visibility":{"restricted":{"parent":"0:3223:5461","path":"::output::usage"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}},"b:31:25-0:4530:1672":{"id":"b:31:25-0:4530:1672","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:5143:732":{"id":"0:5143:732","crate_id":0,"name":"ident","span":{"filename":"src/parser/parser.rs","begin":[1720,4],"end":[1720,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3202-0:4105:1655":{"id":"b:2:3202-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4011:2900":{"id":"0:4011:2900","crate_id":0,"name":"value_hint","span":{"filename":"src/builder/arg.rs","begin":[100,4],"end":[100,44]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:32020:74256":{"id":"2:32020:74256","crate_id":2,"name":"wrapping_next_power_of_two","span":null,"visibility":"public","docs":"Returns the smallest power of two greater than or equal to `n`. If\nthe next power of two is greater than the type's maximum value,\nthe return value is wrapped to `0`.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(wrapping_next_power_of_two)]\n\nassert_eq!(2u64.wrapping_next_power_of_two(), 2);\nassert_eq!(3u64.wrapping_next_power_of_two(), 4);\nassert_eq!(u64::MAX.wrapping_next_power_of_two(), 0);\n```","links":{},"attrs":["#[unstable(feature = \"wrapping_next_power_of_two\", issue = \"32463\", reason =\n\"needs decision on wrapping behaviour\")]","#[rustc_const_unstable(feature = \"wrapping_next_power_of_two\", issue =\n\"32463\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5092:7833":{"id":"a:2:9339:7908-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:5038:1676":{"id":"a:2:9339:7908-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3442:9013":{"id":"0:3442:9013","crate_id":0,"name":"precomputed_hashes","span":{"filename":"src/util/id.rs","begin":[17,0],"end":[31,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"macro","inner":"macro_rules! precomputed_hashes {\n    ($($fn_name:ident, $const:expr, $name:expr;)*) => { ... };\n}"},"0:5202:59":{"id":"0:5202:59","crate_id":0,"name":"default","span":{"filename":"src/mkeymap.rs","begin":[15,9],"end":[15,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2971":{"id":"0:2971","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[23,45],"end":[23,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::matches::ValueSource","name":"ValueSource","id":"0:5070:1677","glob":false}},"a:2:3310:6658-0:3252:5215":{"id":"a:2:3310:6658-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'help","bounds":[{"outlives":"'cmd"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3998:3374":{"id":"0:3998:3374","crate_id":0,"name":"max_occurs","span":{"filename":"src/builder/arg.rs","begin":[86,4],"end":[86,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:468:4093":{"id":"0:468:4093","crate_id":0,"name":"default_value_os","span":{"filename":"src/builder/arg.rs","begin":[2181,4],"end":[2183,5]},"visibility":"public","docs":"Value for the argument when not present.\n\nSee [`Arg::default_value`].\n\n[`Arg::default_value`]: Arg::default_value()\n[`OsStr`]: std::ffi::OsStr","links":{"Arg::default_value()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["val",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4744:1653":{"id":"0:4744:1653","crate_id":0,"name":"Command","span":{"filename":"src/builder/debug_asserts.rs","begin":[353,4],"end":[353,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"0:4298:5178":{"id":"0:4298:5178","crate_id":0,"name":"HIDE_POS_VALS","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:3031:5091":{"id":"0:3031:5091","crate_id":0,"name":"keys","span":{"filename":"src/mkeymap.rs","begin":[123,4],"end":[125,5]},"visibility":"crate","docs":"Return iterators of all keys.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13518:12378":{"id":"2:13518:12378","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:16010:9064","`str`":"1:16010:9064","crate::ops::Index":"2:3577:5211"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:265:2947":{"id":"0:265:2947","crate_id":0,"name":"yaml_to_str","span":{"filename":"src/builder/macros.rs","begin":[130,0],"end":[134,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_to_str {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"0:639":{"id":"0:639","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5068,0],"end":[5072,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:641:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2869-0:4953:1658":{"id":"b:2:2869-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:3503:1652":{"id":"a:2:3310:6658-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1721:1558":{"id":"0:1721:1558","crate_id":0,"name":"regex","span":{"filename":"src/builder/regex.rs","begin":[1,0],"end":[88,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"regex\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4724:1700"],"is_stripped":false}},"b:31:25-0:5070:1677":{"id":"b:31:25-0:5070:1677","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"1:5735:12301":{"id":"1:5735:12301","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5736:6882","1:5737:16200"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4729:7322":{"id":"0:4729:7322","crate_id":0,"name":"Regex","span":{"filename":"src/builder/regex.rs","begin":[14,4],"end":[14,25]},"visibility":"default","docs":"Used if the underlying is a regex","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"25:2978:7322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]}},"0:3597:3165":{"id":"0:3597:3165","crate_id":0,"name":"PropagateVersion","span":{"filename":"src/builder/app_settings.rs","begin":[352,4],"end":[352,20]},"visibility":"default","docs":"Deprecated, replaced with [`Command::propagate_version`] and [`Command::is_propagate_version_set`]","links":{"`Command::propagate_version`":"0:4456:1667","`Command::is_propagate_version_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::propagate_version` and `Command::is_propagate_version_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::propagate_version` and `Command::is_propagate_version_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:2163:7859":{"id":"0:2163:7859","crate_id":0,"name":"check_explicit","span":{"filename":"src/parser/arg_matcher.rs","begin":[139,4],"end":[141,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["predicate",{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:5156:7831":{"id":"b:5:787-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:5220:7335":{"id":"a:2:9340:7907-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:4933:7836":{"id":"a:2:3281:220-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1442:681":{"id":"0:1442:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[508,4],"end":[511,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["values",{"kind":"array","inner":{"type":{"kind":"generic","inner":"P"},"len":"C"}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5319:1660":{"id":"0:5319:1660","crate_id":0,"name":"ColorChoice","span":{"filename":"src/util/color.rs","begin":[3,0],"end":[56,1]},"visibility":"public","docs":"Represents the color preferences for program output","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5320:2694","0:5322:5551","0:5324:5552"],"impls":["a:2:3310:6658-0:5319:1660","a:2:3269:211-0:5319:1660","a:2:9340:7907-0:5319:1660","a:2:9339:7908-0:5319:1660","a:2:3281:220-0:5319:1660","b:2:3198-0:5319:1660","b:2:2872-0:5319:1660","b:2:2869-0:5319:1660","b:2:4002-0:5319:1660","b:2:3202-0:5319:1660","b:2:3213-0:5319:1660","b:2:3208-0:5319:1660","b:5:787-0:5319:1660","b:31:25-0:5319:1660","0:5326","0:5328","0:5329","0:5331","0:5332","0:5334","0:5335","0:3486"]}},"0:1315:920":{"id":"0:1315:920","crate_id":0,"name":"new","span":{"filename":"src/builder/possible_value.rs","begin":[55,4],"end":[60,5]},"visibility":"public","docs":"Create a [`PossibleValue`] with its name.\n\nThe name will be used to decide whether this value was provided by the user to an argument.\n\n**NOTE:** In case it is not [hidden] it will also be shown in help messages for arguments\nthat use it as a [possible value] and have not hidden them through [`Arg::hide_possible_values(true)`].\n\n# Examples\n\n```rust\n# use clap::PossibleValue;\nPossibleValue::new(\"fast\")\n# ;\n```\n[hidden]: PossibleValue::hide\n[possible value]: crate::Arg::possible_values\n[`Arg::hide_possible_values(true)`]: crate::Arg::hide_possible_values()","links":{"`PossibleValue`":"0:4530:1672","PossibleValue::hide":"0:4530:1672","crate::Arg::hide_possible_values()":"0:3972:1654","crate::Arg::possible_values":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4009:753":{"id":"0:4009:753","crate_id":0,"name":"index","span":{"filename":"src/builder/arg.rs","begin":[98,4],"end":[98,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"b:2:3213-0:5220:7335":{"id":"b:2:3213-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10389:189":{"id":"2:10389:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10390:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:410:3615":{"id":"0:410:3615","crate_id":0,"name":"exclusive","span":{"filename":"src/builder/arg.rs","begin":[737,4],"end":[743,5]},"visibility":"public","docs":"This argument must be passed alone; it conflicts with all other arguments.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .exclusive(true)\n# ;\n```\n\nSetting an exclusive argument and having any other arguments present at runtime\nis an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"exclusive\")\n        .takes_value(true)\n        .exclusive(true)\n        .long(\"exclusive\"))\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\"))\n    .arg(Arg::new(\"input\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--exclusive\", \"file.conf\", \"file.txt\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::ArgumentConflict);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:495:4352":{"id":"0:495:4352","crate_id":0,"name":"hide_long_help","span":{"filename":"src/builder/arg.rs","begin":[3045,4],"end":[3051,5]},"visibility":"public","docs":"Hides an argument from long help (`--help`).\n\n**NOTE:** This does **not** hide the argument from usage strings on error\n\n**NOTE:** Setting this option will cause next-line-help output style to be used\nwhen long help (`--help`) is called.\n\n# Examples\n\nSetting `hide_long_help(true)` will hide the argument when displaying long help text\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .hide_long_help(true)\n        .help(\"Some help text describing the --config arg\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nThe above example displays\n\n```text\nhelptest\n\nUSAGE:\n   helptest [OPTIONS]\n\nOPTIONS:\n-h, --help       Print help information\n-V, --version    Print version information\n```\n\nHowever, when -h is called\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .hide_long_help(true)\n        .help(\"Some help text describing the --config arg\"))\n    .get_matches_from(vec![\n        \"prog\", \"-h\"\n    ]);\n```\n\nThen the following would be displayed\n\n```text\nhelptest\n\nUSAGE:\n   helptest [OPTIONS]\n\nOPTIONS:\n    --config     Some help text describing the --config arg\n-h, --help       Print help information\n-V, --version    Print version information\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1452:3893":{"id":"0:1452:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[557,4],"end":[559,78]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9339:7908-0:4063:3357":{"id":"a:2:9339:7908-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2214":{"id":"0:2214","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[64,0],"end":[64,25]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1715:7285":{"id":"0:1715:7285","crate_id":0,"name":"_ValueParserViaValueEnumSealed","span":{"filename":"src/builder/value_parser.rs","begin":[2060,4],"end":[2060,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13547:7433":{"id":"2:13547:7433","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:16010:9064","prim@char":"1:16004:9059","self::pattern":"2:13134:9255","`DoubleEndedIterator`":"2:8523:120","str::rsplit":"1:16010:9064"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49558:9279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4700:2915":{"id":"b:2:3198-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3137:2581":{"id":"0:3137:2581","crate_id":0,"name":"long","span":{"filename":"src/output/help.rs","begin":[299,4],"end":[308,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes argument's long command to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4742:7344":{"id":"a:2:3281:220-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2200:7912":{"id":"0:2200:7912","crate_id":0,"name":"downcast_ref","span":{"filename":"src/parser/matches/any_value.rs","begin":[16,4],"end":[20,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::any::Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:5141:7832":{"id":"a:2:3281:220-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:7907-0:4706:2918":{"id":"a:2:9340:7907-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3788":{"id":"0:3788","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:3401:2679","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3789:181","0:3790:353"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4584:6731":{"id":"0:4584:6731","crate_id":0,"name":"explicit_name_set","span":{"filename":"src/builder/usage_parser.rs","begin":[26,4],"end":[26,27]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2872-0:4997:7835":{"id":"b:2:2872-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1414:4753":{"id":"0:1414:4753","crate_id":0,"name":"os_string","span":{"filename":"src/builder/value_parser.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"[`OsString`][std::ffi::OsString] parser for argument values\n\n# Example\n\n ```rust\n# use clap::{Command, Arg, builder::ValueParser};\nuse std::ffi::OsString;\nuse std::os::unix::ffi::{OsStrExt,OsStringExt};\nlet r = Command::new(\"myprog\")\n    .arg(\n        Arg::new(\"arg\")\n        .required(true)\n        .value_parser(ValueParser::os_string())\n    )\n    .try_get_matches_from(vec![\n        OsString::from(\"myprog\"),\n        OsString::from_vec(vec![0xe9])\n    ]);\n\nassert!(r.is_ok());\nlet m = r.unwrap();\nlet arg: &OsString = m.get_one(\"arg\")\n    .expect(\"required\");\nassert_eq!(arg.as_bytes(), &[0xe9]);\n```","links":{"std::ffi::OsString":"1:2934:180"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3543:3042":{"id":"0:3543:3042","crate_id":0,"name":"IgnoreErrors","span":{"filename":"src/builder/app_settings.rs","begin":[40,4],"end":[40,16]},"visibility":"default","docs":"Deprecated, replaced with [`Command::ignore_errors`]","links":{"`Command::ignore_errors`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::ignore_errors`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::ignore_errors`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:672":{"id":"0:672","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5280,0],"end":[5302,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:673:4271","0:674:4888","0:675:4891","0:676:4863"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:5305:3334":{"id":"b:2:4002-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1907":{"id":"0:1907","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[50,0],"end":[50,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::OsStringValueParser","name":"OsStringValueParser","id":"0:4635:2919","glob":false}},"0:5146:408":{"id":"0:5146:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/parser.rs","begin":[1717,9],"end":[1717,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3427:9224":{"id":"2:3427:9224","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:122:1697":{"id":"0:122:1697","crate_id":0,"name":"_tutorial","span":{"filename":"src/_tutorial.rs","begin":[10,0],"end":[204,7]},"visibility":"public","docs":"# Documentation: Builder Tutorial\n\n1. [Quick Start](#quick-start)\n2. [Configuring the Parser](#configuring-the-parser)\n3. [Adding Arguments](#adding-arguments)\n    1. [Positionals](#positionals)\n    2. [Options](#options)\n    3. [Flags](#flags)\n    4. [Subcommands](#subcommands)\n    5. [Defaults](#defaults)\n4. Validation\n    1. [Enumerated values](#enumerated-values)\n    2. [Validated values](#validated-values)\n    3. [Argument Relations](#argument-relations)\n    4. [Custom Validation](#custom-validation)\n5. [Testing](#testing)\n\nSee also\n- [FAQ: When should I use the builder vs derive APIs?][crate::_faq#when-should-i-use-the-builder-vs-derive-apis]\n- The [cookbook][crate::_cookbook] for more application-focused examples\n\n## Quick Start\n\nYou can create an application with several arguments using usage strings.\n\n```rust\nuse std::path::PathBuf;\n\nuse clap::{arg, command, value_parser, ArgAction, Command};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(arg!([name] \"Optional name to operate on\"))\n        .arg(\n            arg!(\n                -c --config <FILE> \"Sets a custom config file\"\n            )\n            // We don't have syntax yet for optional options, so manually calling `required`\n            .required(false)\n            .value_parser(value_parser!(PathBuf)),\n        )\n        .arg(\n            arg!(\n                -d --debug \"Turn debugging information on\"\n            )\n            .action(ArgAction::Count),\n        )\n        .subcommand(\n            Command::new(\"test\")\n                .about(\"does testing things\")\n                .arg(arg!(-l --list \"lists test values\").action(ArgAction::SetTrue)),\n        )\n        .get_matches();\n\n    // You can check the value provided by positional arguments, or option arguments\n    if let Some(name) = matches.get_one::<String>(\"name\") {\n        println!(\"Value for name: {}\", name);\n    }\n\n    if let Some(config_path) = matches.get_one::<PathBuf>(\"config\") {\n        println!(\"Value for config: {}\", config_path.display());\n    }\n\n    // You can see how many times a particular flag or argument occurred\n    // Note, only flags can have multiple occurrences\n    match matches\n        .get_one::<u8>(\"debug\")\n        .expect(\"Count's are defaulted\")\n    {\n        0 => println!(\"Debug mode is off\"),\n        1 => println!(\"Debug mode is kind of on\"),\n        2 => println!(\"Debug mode is on\"),\n        _ => println!(\"Don't be crazy\"),\n    }\n\n    // You can check for the existence of subcommands, and if found use their\n    // matches just as you would the top level cmd\n    if let Some(matches) = matches.subcommand_matches(\"test\") {\n        // \"$ myapp test\" was run\n        if *matches.get_one::<bool>(\"list\").expect(\"defaulted by clap\") {\n            // \"$ myapp test -l\" was run\n            println!(\"Printing testing lists...\");\n        } else {\n            println!(\"Not printing testing lists...\");\n        }\n    }\n\n    // Continued program logic goes here...\n}\n```\n\n```console\n$ 01_quick --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    01_quick[EXE] [OPTIONS] [name] [SUBCOMMAND]\n\nARGS:\n    <name>    Optional name to operate on\n\nOPTIONS:\n    -c, --config <FILE>    Sets a custom config file\n    -d, --debug            Turn debugging information on\n    -h, --help             Print help information\n    -V, --version          Print version information\n\nSUBCOMMANDS:\n    help    Print this message or the help of the given subcommand(s)\n    test    does testing things\n\n```\n\nBy default, the program does nothing:\n```console\n$ 01_quick\nDebug mode is off\n\n```\n\nBut you can mix and match the various features\n```console\n$ 01_quick -dd test\nDebug mode is on\nNot printing testing lists...\n\n```\n\n## Configuring the Parser\n\nYou use [`Command`][crate::Command] to start building a parser.\n\n```rust\nuse clap::{arg, Command};\n\nfn main() {\n    let matches = Command::new(\"MyApp\")\n        .version(\"1.0\")\n        .author(\"Kevin K. <kbknapp@gmail.com>\")\n        .about(\"Does awesome things\")\n        .arg(arg!(--two <VALUE>))\n        .arg(arg!(--one <VALUE>))\n        .get_matches();\n\n    println!(\n        \"two: {:?}\",\n        matches.get_one::<String>(\"two\").expect(\"required\")\n    );\n    println!(\n        \"one: {:?}\",\n        matches.get_one::<String>(\"one\").expect(\"required\")\n    );\n}\n```\n\n```console\n$ 02_apps --help\nMyApp 1.0\nKevin K. <kbknapp@gmail.com>\nDoes awesome things\n\nUSAGE:\n    02_apps[EXE] --two <VALUE> --one <VALUE>\n\nOPTIONS:\n    -h, --help           Print help information\n        --one <VALUE>    \n        --two <VALUE>    \n    -V, --version        Print version information\n\n$ 02_apps --version\nMyApp 1.0\n\n```\n\nYou can use [`command!()`][crate::command!] to fill these fields in from your `Cargo.toml`\nfile.  **This requires the [`cargo` feature flag][crate::_features].**\n\n```rust\nuse clap::{arg, command};\n\nfn main() {\n    // requires `cargo` feature, reading name, version, author, and description from `Cargo.toml`\n    let matches = command!()\n        .arg(arg!(--two <VALUE>))\n        .arg(arg!(--one <VALUE>))\n        .get_matches();\n\n    println!(\n        \"two: {:?}\",\n        matches.get_one::<String>(\"two\").expect(\"required\")\n    );\n    println!(\n        \"one: {:?}\",\n        matches.get_one::<String>(\"one\").expect(\"required\")\n    );\n}\n```\n```console\n$ 02_crate --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    02_crate[EXE] --two <VALUE> --one <VALUE>\n\nOPTIONS:\n    -h, --help           Print help information\n        --one <VALUE>    \n        --two <VALUE>    \n    -V, --version        Print version information\n\n$ 02_crate --version\nclap [..]\n\n```\n\nYou can use [`Command`][crate::Command] methods to change the application level behavior of\nclap.\n\n```rust\nuse clap::{arg, command, AppSettings, ArgAction};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .global_setting(AppSettings::DeriveDisplayOrder)\n        .allow_negative_numbers(true)\n        .arg(arg!(--two <VALUE>).action(ArgAction::Set))\n        .arg(arg!(--one <VALUE>).action(ArgAction::Set))\n        .get_matches();\n\n    println!(\n        \"two: {:?}\",\n        matches.get_one::<String>(\"two\").expect(\"required\")\n    );\n    println!(\n        \"one: {:?}\",\n        matches.get_one::<String>(\"one\").expect(\"required\")\n    );\n}\n```\n```console\n$ 02_app_settings --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    02_app_settings[EXE] --two <VALUE> --one <VALUE>\n\nOPTIONS:\n        --two <VALUE>    \n        --one <VALUE>    \n    -h, --help           Print help information\n    -V, --version        Print version information\n\n$ 02_app_settings --one -1 --one -3 --two 10\ntwo: \"10\"\none: \"-3\"\n\n```\n\n## Adding Arguments\n\n### Positionals\n\nYou can have users specify values by their position on the command-line:\n\n```rust\nuse clap::{arg, command};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(arg!([NAME]))\n        .get_matches();\n\n    println!(\"NAME: {:?}\", matches.get_one::<String>(\"NAME\"));\n}\n```\n```console\n$ 03_03_positional --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_03_positional[EXE] [NAME]\n\nARGS:\n    <NAME>    \n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 03_03_positional\nNAME: None\n\n$ 03_03_positional bob\nNAME: Some(\"bob\")\n\n```\n\n### Options\n\nYou can name your arguments with a flag:\n- Order doesn't matter\n- They can be optional\n- Intent is clearer\n\n```rust\nuse clap::{arg, command};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(arg!(-n --name <NAME>).required(false))\n        .get_matches();\n\n    println!(\"name: {:?}\", matches.get_one::<String>(\"name\"));\n}\n```\n```console\n$ 03_02_option --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_02_option[EXE] [OPTIONS]\n\nOPTIONS:\n    -h, --help           Print help information\n    -n, --name <NAME>    \n    -V, --version        Print version information\n\n$ 03_02_option\nname: None\n\n$ 03_02_option --name bob\nname: Some(\"bob\")\n\n$ 03_02_option --name=bob\nname: Some(\"bob\")\n\n$ 03_02_option -n bob\nname: Some(\"bob\")\n\n$ 03_02_option -n=bob\nname: Some(\"bob\")\n\n$ 03_02_option -nbob\nname: Some(\"bob\")\n\n```\n\n### Flags\n\nFlags can also be switches that can be on/off:\n\n```rust\nuse clap::{command, Arg, ArgAction};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(\n            Arg::new(\"verbose\")\n                .short('v')\n                .long(\"verbose\")\n                .action(ArgAction::SetTrue),\n        )\n        .get_matches();\n\n    println!(\n        \"verbose: {:?}\",\n        *matches\n            .get_one::<bool>(\"verbose\")\n            .expect(\"defaulted by clap\")\n    );\n}\n```\n```console\n$ 03_01_flag_bool --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_01_flag_bool[EXE] [OPTIONS]\n\nOPTIONS:\n    -h, --help       Print help information\n    -v, --verbose    \n    -V, --version    Print version information\n\n$ 03_01_flag_bool\nverbose: false\n\n$ 03_01_flag_bool --verbose\nverbose: true\n\n$ 03_01_flag_bool --verbose --verbose\nverbose: true\n\n```\n\nOr counted.\n\n```rust\nuse clap::{arg, command, ArgAction};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(arg!(-v - -verbose).action(ArgAction::Count))\n        .get_matches();\n\n    println!(\n        \"verbose: {:?}\",\n        matches\n            .get_one::<u8>(\"verbose\")\n            .expect(\"Count always defaulted\")\n    );\n}\n```\n```console\n$ 03_01_flag_count --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_01_flag_count[EXE] [OPTIONS]\n\nOPTIONS:\n    -h, --help       Print help information\n    -v, --verbose    \n    -V, --version    Print version information\n\n$ 03_01_flag_count\nverbose: 0\n\n$ 03_01_flag_count --verbose\nverbose: 1\n\n$ 03_01_flag_count --verbose --verbose\nverbose: 2\n\n```\n\n### Subcommands\n\nSubcommands are defined as [`Command`][crate::Command]s that get added via\n[`Command::subcommand`][crate::Command::subcommand]. Each instance of a Subcommand can have its\nown version, author(s), Args, and even its own subcommands.\n\n```rust\nuse clap::{arg, command, Command};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .propagate_version(true)\n        .subcommand_required(true)\n        .arg_required_else_help(true)\n        .subcommand(\n            Command::new(\"add\")\n                .about(\"Adds files to myapp\")\n                .arg(arg!([NAME])),\n        )\n        .get_matches();\n\n    match matches.subcommand() {\n        Some((\"add\", sub_matches)) => println!(\n            \"'myapp add' was used, name is: {:?}\",\n            sub_matches.get_one::<String>(\"NAME\")\n        ),\n        _ => unreachable!(\"Exhausted list of subcommands and subcommand_required prevents `None`\"),\n    }\n}\n```\n```console\n$ 03_04_subcommands help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_04_subcommands[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    add     Adds files to myapp\n    help    Print this message or the help of the given subcommand(s)\n\n$ 03_04_subcommands help add\n03_04_subcommands[EXE]-add [..]\nAdds files to myapp\n\nUSAGE:\n    03_04_subcommands[EXE] add [NAME]\n\nARGS:\n    <NAME>    \n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 03_04_subcommands add bob\n'myapp add' was used, name is: Some(\"bob\")\n\n```\n\nBecause we set [`Command::arg_required_else_help`][crate::Command::arg_required_else_help]:\n```console\n$ 03_04_subcommands\n? failed\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_04_subcommands[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    add     Adds files to myapp\n    help    Print this message or the help of the given subcommand(s)\n\n```\n\nBecause we set [`Command::propagate_version`][crate::Command::propagate_version]:\n```console\n$ 03_04_subcommands --version\nclap [..]\n\n$ 03_04_subcommands add --version\n03_04_subcommands[EXE]-add [..]\n\n```\n\n### Defaults\n\nWe've previously showed that arguments can be [`required`][crate::Arg::required] or optional.\nWhen optional, you work with a `Option` and can `unwrap_or`.  Alternatively, you can set\n[`Arg::default_value`][crate::Arg::default_value].\n\n```rust\nuse clap::{arg, command};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(arg!([NAME]).default_value(\"alice\"))\n        .get_matches();\n\n    println!(\n        \"NAME: {:?}\",\n        matches\n            .get_one::<String>(\"NAME\")\n            .expect(\"default ensures there is always a value\")\n    );\n}\n```\n```console\n$ 03_05_default_values --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    03_05_default_values[EXE] [NAME]\n\nARGS:\n    <NAME>    [default: alice]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 03_05_default_values\nNAME: \"alice\"\n\n$ 03_05_default_values bob\nNAME: \"bob\"\n\n```\n\n## Validation\n\n### Enumerated values\n\nIf you have arguments of specific values you want to test for, you can use the\n[`PossibleValuesParser`][crate::builder::PossibleValuesParser] or [`Arg::value_parser([\"val1\",\n...])`][crate::Arg::value_parser] for short.\n\nThis allows you specify the valid values for that argument. If the user does not use one of\nthose specific values, they will receive a graceful exit with error message informing them\nof the mistake, and what the possible valid values are\n\n```rust\nuse clap::{arg, command};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(\n            arg!(<MODE>)\n                .help(\"What mode to run the program in\")\n                .value_parser([\"fast\", \"slow\"]),\n        )\n        .get_matches();\n\n    // Note, it's safe to call unwrap() because the arg is required\n    match matches\n        .get_one::<String>(\"MODE\")\n        .expect(\"'MODE' is required and parsing will fail if its missing\")\n        .as_str()\n    {\n        \"fast\" => {\n            println!(\"Hare\");\n        }\n        \"slow\" => {\n            println!(\"Tortoise\");\n        }\n        _ => unreachable!(),\n    }\n}\n```\n```console\n$ 04_01_possible --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_01_possible[EXE] <MODE>\n\nARGS:\n    <MODE>    What mode to run the program in [possible values: fast, slow]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 04_01_possible fast\nHare\n\n$ 04_01_possible slow\nTortoise\n\n$ 04_01_possible medium\n? failed\nerror: \"medium\" isn't a valid value for '<MODE>'\n\t[possible values: fast, slow]\n\nFor more information try --help\n\n```\n\nWhen enabling the [`derive` feature][crate::_features], you can use\n[`ValueEnum`][crate::ValueEnum] to take care of the boiler plate for you, giving the same\nresults.\n\n```rust\nuse clap::{arg, builder::PossibleValue, command, value_parser, ValueEnum};\n\n#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\nenum Mode {\n    Fast,\n    Slow,\n}\n\n// Can also be derived] with feature flag `derive`\nimpl ValueEnum for Mode {\n    fn value_variants<'a>() -> &'a [Self] {\n        &[Mode::Fast, Mode::Slow]\n    }\n\n    fn to_possible_value<'a>(&self) -> Option<PossibleValue<'a>> {\n        Some(match self {\n            Mode::Fast => PossibleValue::new(\"fast\"),\n            Mode::Slow => PossibleValue::new(\"slow\"),\n        })\n    }\n}\n\nimpl std::fmt::Display for Mode {\n    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n        self.to_possible_value()\n            .expect(\"no values are skipped\")\n            .get_name()\n            .fmt(f)\n    }\n}\n\nimpl std::str::FromStr for Mode {\n    type Err = String;\n\n    fn from_str(s: &str) -> Result<Self, Self::Err> {\n        for variant in Self::value_variants() {\n            if variant.to_possible_value().unwrap().matches(s, false) {\n                return Ok(*variant);\n            }\n        }\n        Err(format!(\"Invalid variant: {}\", s))\n    }\n}\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(\n            arg!(<MODE>)\n                .help(\"What mode to run the program in\")\n                .value_parser(value_parser!(Mode)),\n        )\n        .get_matches();\n\n    // Note, it's safe to call unwrap() because the arg is required\n    match matches\n        .get_one::<Mode>(\"MODE\")\n        .expect(\"'MODE' is required and parsing will fail if its missing\")\n    {\n        Mode::Fast => {\n            println!(\"Hare\");\n        }\n        Mode::Slow => {\n            println!(\"Tortoise\");\n        }\n    }\n}\n```\n```console\n$ 04_01_enum --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_01_enum[EXE] <MODE>\n\nARGS:\n    <MODE>    What mode to run the program in [possible values: fast, slow]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 04_01_enum fast\nHare\n\n$ 04_01_enum slow\nTortoise\n\n$ 04_01_enum medium\n? failed\nerror: \"medium\" isn't a valid value for '<MODE>'\n\t[possible values: fast, slow]\n\nFor more information try --help\n\n```\n\n### Validated values\n\nMore generally, you can validate and parse into any data type.\n\n```rust\nuse clap::{arg, command, value_parser};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(\n            arg!(<PORT>)\n                .help(\"Network port to use\")\n                .value_parser(value_parser!(u16).range(1..)),\n        )\n        .get_matches();\n\n    // Note, it's safe to call unwrap() because the arg is required\n    let port: u16 = *matches\n        .get_one::<u16>(\"PORT\")\n        .expect(\"'PORT' is required and parsing will fail if its missing\");\n    println!(\"PORT = {}\", port);\n}\n```\n```console\n$ 04_02_parse --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_02_parse[EXE] <PORT>\n\nARGS:\n    <PORT>    Network port to use\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 04_02_parse 22\nPORT = 22\n\n$ 04_02_parse foobar\n? failed\nerror: Invalid value \"foobar\" for '<PORT>': invalid digit found in string\n\nFor more information try --help\n\n$ 04_02_parse_derive 0\n? failed\nerror: Invalid value \"0\" for '<PORT>': 0 is not in 1..=65535\n\nFor more information try --help\n\n```\n\nA custom parser can be used to improve the error messages or provide additional validation:\n\n```rust\nuse std::ops::RangeInclusive;\n\nuse clap::{arg, command};\n\nfn main() {\n    let matches = command!() // requires `cargo` feature\n        .arg(\n            arg!(<PORT>)\n                .help(\"Network port to use\")\n                .value_parser(port_in_range),\n        )\n        .get_matches();\n\n    // Note, it's safe to call unwrap() because the arg is required\n    let port: u16 = *matches\n        .get_one::<u16>(\"PORT\")\n        .expect(\"'PORT' is required and parsing will fail if its missing\");\n    println!(\"PORT = {}\", port);\n}\n\nconst PORT_RANGE: RangeInclusive<usize> = 1..=65535;\n\nfn port_in_range(s: &str) -> Result<u16, String> {\n    let port: usize = s\n        .parse()\n        .map_err(|_| format!(\"`{}` isn't a port number\", s))?;\n    if PORT_RANGE.contains(&port) {\n        Ok(port as u16)\n    } else {\n        Err(format!(\n            \"Port not in range {}-{}\",\n            PORT_RANGE.start(),\n            PORT_RANGE.end()\n        ))\n    }\n}\n```\n```console\n$ 04_02_validate --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_02_validate[EXE] <PORT>\n\nARGS:\n    <PORT>    Network port to use\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\n$ 04_02_validate 22\nPORT = 22\n\n$ 04_02_validate foobar\n? failed\nerror: Invalid value \"foobar\" for '<PORT>': `foobar` isn't a port number\n\nFor more information try --help\n\n$ 04_02_validate 0\n? failed\nerror: Invalid value \"0\" for '<PORT>': Port not in range 1-65535\n\nFor more information try --help\n\n```\n\n### Argument Relations\n\nYou can declare dependencies or conflicts between [`Arg`][crate::Arg]s or even\n[`ArgGroup`][crate::ArgGroup]s.\n\n[`ArgGroup`][crate::ArgGroup]s  make it easier to declare relations instead of having to list\neach individually, or when you want a rule to apply \"any but not all\" arguments.\n\nPerhaps the most common use of [`ArgGroup`][crate::ArgGroup]s is to require one and *only* one\nargument to be present out of a given set. Imagine that you had multiple arguments, and you\nwant one of them to be required, but making all of them required isn't feasible because perhaps\nthey conflict with each other.\n\n```rust\nuse std::path::PathBuf;\n\nuse clap::{arg, command, value_parser, ArgAction, ArgGroup};\n\nfn main() {\n    // Create application like normal\n    let matches = command!() // requires `cargo` feature\n        // Add the version arguments\n        .arg(arg!(--\"set-ver\" <VER> \"set version manually\").required(false))\n        .arg(arg!(--major         \"auto inc major\").action(ArgAction::SetTrue))\n        .arg(arg!(--minor         \"auto inc minor\").action(ArgAction::SetTrue))\n        .arg(arg!(--patch         \"auto inc patch\").action(ArgAction::SetTrue))\n        // Create a group, make it required, and add the above arguments\n        .group(\n            ArgGroup::new(\"vers\")\n                .required(true)\n                .args(&[\"set-ver\", \"major\", \"minor\", \"patch\"]),\n        )\n        // Arguments can also be added to a group individually, these two arguments\n        // are part of the \"input\" group which is not required\n        .arg(\n            arg!([INPUT_FILE] \"some regular input\")\n                .value_parser(value_parser!(PathBuf))\n                .group(\"input\"),\n        )\n        .arg(\n            arg!(--\"spec-in\" <SPEC_IN> \"some special input argument\")\n                .required(false)\n                .value_parser(value_parser!(PathBuf))\n                .group(\"input\"),\n        )\n        // Now let's assume we have a -c [config] argument which requires one of\n        // (but **not** both) the \"input\" arguments\n        .arg(\n            arg!(config: -c <CONFIG>)\n                .required(false)\n                .value_parser(value_parser!(PathBuf))\n                .requires(\"input\"),\n        )\n        .get_matches();\n\n    // Let's assume the old version 1.2.3\n    let mut major = 1;\n    let mut minor = 2;\n    let mut patch = 3;\n\n    // See if --set-ver was used to set the version manually\n    let version = if let Some(ver) = matches.get_one::<String>(\"set-ver\") {\n        ver.to_owned()\n    } else {\n        // Increment the one requested (in a real program, we'd reset the lower numbers)\n        let (maj, min, pat) = (\n            *matches.get_one::<bool>(\"major\").expect(\"defaulted by clap\"),\n            *matches.get_one::<bool>(\"minor\").expect(\"defaulted by clap\"),\n            *matches.get_one::<bool>(\"patch\").expect(\"defaulted by clap\"),\n        );\n        match (maj, min, pat) {\n            (true, _, _) => major += 1,\n            (_, true, _) => minor += 1,\n            (_, _, true) => patch += 1,\n            _ => unreachable!(),\n        };\n        format!(\"{}.{}.{}\", major, minor, patch)\n    };\n\n    println!(\"Version: {}\", version);\n\n    // Check for usage of -c\n    if matches.contains_id(\"config\") {\n        let input = matches\n            .get_one::<PathBuf>(\"INPUT_FILE\")\n            .unwrap_or_else(|| matches.get_one::<PathBuf>(\"spec-in\").unwrap())\n            .display();\n        println!(\n            \"Doing work using input {} and config {}\",\n            input,\n            matches.get_one::<PathBuf>(\"config\").unwrap().display()\n        );\n    }\n}\n```\n```console\n$ 04_03_relations --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_03_relations[EXE] [OPTIONS] <--set-ver <VER>|--major|--minor|--patch> [INPUT_FILE]\n\nARGS:\n    <INPUT_FILE>    some regular input\n\nOPTIONS:\n    -c <CONFIG>                \n    -h, --help                 Print help information\n        --major                auto inc major\n        --minor                auto inc minor\n        --patch                auto inc patch\n        --set-ver <VER>        set version manually\n        --spec-in <SPEC_IN>    some special input argument\n    -V, --version              Print version information\n\n$ 04_03_relations\n? failed\nerror: The following required arguments were not provided:\n    <--set-ver <VER>|--major|--minor|--patch>\n\nUSAGE:\n    04_03_relations[EXE] [OPTIONS] <--set-ver <VER>|--major|--minor|--patch> [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_03_relations --major\nVersion: 2.2.3\n\n$ 04_03_relations --major --minor\n? failed\nerror: The argument '--major' cannot be used with '--minor'\n\nUSAGE:\n    04_03_relations[EXE] <--set-ver <VER>|--major|--minor|--patch>\n\nFor more information try --help\n\n$ 04_03_relations --major -c config.toml\n? failed\nerror: The following required arguments were not provided:\n    <INPUT_FILE|--spec-in <SPEC_IN>>\n\nUSAGE:\n    04_03_relations[EXE] -c <CONFIG> <--set-ver <VER>|--major|--minor|--patch> <INPUT_FILE|--spec-in <SPEC_IN>>\n\nFor more information try --help\n\n$ 04_03_relations --major -c config.toml --spec-in input.txt\nVersion: 2.2.3\nDoing work using input input.txt and config config.toml\n\n```\n\n### Custom Validation\n\nAs a last resort, you can create custom errors with the basics of clap's formatting.\n\n```rust\nuse std::path::PathBuf;\n\nuse clap::{arg, command, value_parser, ArgAction, ErrorKind};\n\nfn main() {\n    // Create application like normal\n    let mut cmd = command!() // requires `cargo` feature\n        // Add the version arguments\n        .arg(arg!(--\"set-ver\" <VER> \"set version manually\").required(false))\n        .arg(arg!(--major         \"auto inc major\").action(ArgAction::SetTrue))\n        .arg(arg!(--minor         \"auto inc minor\").action(ArgAction::SetTrue))\n        .arg(arg!(--patch         \"auto inc patch\").action(ArgAction::SetTrue))\n        // Arguments can also be added to a group individually, these two arguments\n        // are part of the \"input\" group which is not required\n        .arg(arg!([INPUT_FILE] \"some regular input\").value_parser(value_parser!(PathBuf)))\n        .arg(\n            arg!(--\"spec-in\" <SPEC_IN> \"some special input argument\")\n                .required(false)\n                .value_parser(value_parser!(PathBuf)),\n        )\n        // Now let's assume we have a -c [config] argument which requires one of\n        // (but **not** both) the \"input\" arguments\n        .arg(\n            arg!(config: -c <CONFIG>)\n                .required(false)\n                .value_parser(value_parser!(PathBuf)),\n        );\n    let matches = cmd.get_matches_mut();\n\n    // Let's assume the old version 1.2.3\n    let mut major = 1;\n    let mut minor = 2;\n    let mut patch = 3;\n\n    // See if --set-ver was used to set the version manually\n    let version = if let Some(ver) = matches.get_one::<String>(\"set-ver\") {\n        if *matches.get_one::<bool>(\"major\").expect(\"defaulted by clap\")\n            || *matches.get_one::<bool>(\"minor\").expect(\"defaulted by clap\")\n            || *matches.get_one::<bool>(\"patch\").expect(\"defaulted by clap\")\n        {\n            cmd.error(\n                ErrorKind::ArgumentConflict,\n                \"Can't do relative and absolute version change\",\n            )\n            .exit();\n        }\n        ver.to_string()\n    } else {\n        // Increment the one requested (in a real program, we'd reset the lower numbers)\n        let (maj, min, pat) = (\n            *matches.get_one::<bool>(\"major\").expect(\"defaulted by clap\"),\n            *matches.get_one::<bool>(\"minor\").expect(\"defaulted by clap\"),\n            *matches.get_one::<bool>(\"patch\").expect(\"defaulted by clap\"),\n        );\n        match (maj, min, pat) {\n            (true, false, false) => major += 1,\n            (false, true, false) => minor += 1,\n            (false, false, true) => patch += 1,\n            _ => {\n                cmd.error(\n                    ErrorKind::ArgumentConflict,\n                    \"Can only modify one version field\",\n                )\n                .exit();\n            }\n        };\n        format!(\"{}.{}.{}\", major, minor, patch)\n    };\n\n    println!(\"Version: {}\", version);\n\n    // Check for usage of -c\n    if matches.contains_id(\"config\") {\n        let input = matches\n            .get_one::<PathBuf>(\"INPUT_FILE\")\n            .or_else(|| matches.get_one::<PathBuf>(\"spec-in\"))\n            .unwrap_or_else(|| {\n                cmd.error(\n                    ErrorKind::MissingRequiredArgument,\n                    \"INPUT_FILE or --spec-in is required when using --config\",\n                )\n                .exit()\n            })\n            .display();\n        println!(\n            \"Doing work using input {} and config {}\",\n            input,\n            matches.get_one::<PathBuf>(\"config\").unwrap().display()\n        );\n    }\n}\n```\n```console\n$ 04_04_custom --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    04_04_custom[EXE] [OPTIONS] [INPUT_FILE]\n\nARGS:\n    <INPUT_FILE>    some regular input\n\nOPTIONS:\n    -c <CONFIG>                \n    -h, --help                 Print help information\n        --major                auto inc major\n        --minor                auto inc minor\n        --patch                auto inc patch\n        --set-ver <VER>        set version manually\n        --spec-in <SPEC_IN>    some special input argument\n    -V, --version              Print version information\n\n$ 04_04_custom\n? failed\nerror: Can only modify one version field\n\nUSAGE:\n    04_04_custom[EXE] [OPTIONS] [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_04_custom --major\nVersion: 2.2.3\n\n$ 04_04_custom --major --minor\n? failed\nerror: Can only modify one version field\n\nUSAGE:\n    04_04_custom[EXE] [OPTIONS] [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_04_custom --major -c config.toml\n? failed\nVersion: 2.2.3\nerror: INPUT_FILE or --spec-in is required when using --config\n\nUSAGE:\n    04_04_custom[EXE] [OPTIONS] [INPUT_FILE]\n\nFor more information try --help\n\n$ 04_04_custom --major -c config.toml --spec-in input.txt\nVersion: 2.2.3\nDoing work using input input.txt and config config.toml\n\n```\n\n## Testing\n\nclap reports most development errors as `debug_assert!`s.  Rather than checking every\nsubcommand, you should have a test that calls\n[`Command::debug_assert`][crate::App::debug_assert]:\n```rust,no_run\nuse clap::{arg, command, value_parser};\n\nfn main() {\n    let matches = cmd().get_matches();\n\n    // Note, it's safe to call unwrap() because the arg is required\n    let port: usize = *matches\n        .get_one::<usize>(\"PORT\")\n        .expect(\"'PORT' is required and parsing will fail if its missing\");\n    println!(\"PORT = {}\", port);\n}\n\nfn cmd() -> clap::Command<'static> {\n    command!() // requires `cargo` feature\n        .arg(\n            arg!(<PORT>)\n                .help(\"Network port to use\")\n                .value_parser(value_parser!(usize)),\n        )\n}\n\n#[test]\nfn verify_cmd() {\n    cmd().debug_assert();\n}\n```","links":{"crate::Command::propagate_version":"0:4456:1667","crate::App::debug_assert":"0:4456:1667","crate::Arg::value_parser":"0:3972:1654","crate::Command::arg_required_else_help":"0:4456:1667","crate::Command":"0:853:1653","crate::Command::subcommand":"0:4456:1667","crate::_faq#when-should-i-use-the-builder-vs-derive-apis":"0:120:1695","crate::_cookbook":"0:103:1693","crate::command!":"0:139:2561","crate::ArgGroup":"0:4105:1655","crate::Arg::required":"0:3972:1654","crate::ValueEnum":"0:211:1666","crate::Arg":"0:3972:1654","crate::_features":"0:121:1696","crate::builder::PossibleValuesParser":"0:4657:2904","crate::Arg::default_value":"0:3972:1654"},"attrs":["#[cfg(feature = \"unstable-doc\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,25],"end":[100,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::Arg","name":"Arg","id":"0:3972:1654","glob":false}},"0:4015":{"id":"0:4015","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[60,18],"end":[60,23]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4017:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:500:3361":{"id":"0:500:3361","crate_id":0,"name":"groups","span":{"filename":"src/builder/arg.rs","begin":[3126,4],"end":[3129,5]},"visibility":"public","docs":"The names of [`ArgGroup`]'s the argument belongs to.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"debug\")\n    .long(\"debug\")\n    .groups(&[\"mode\", \"verbosity\"])\n# ;\n```\n\nArguments can be members of multiple groups and then the group checked as if it\nwas one of said arguments.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\")\n        .groups(&[\"mode\", \"verbosity\"]))\n    .arg(Arg::new(\"verbose\")\n        .long(\"verbose\")\n        .groups(&[\"mode\", \"verbosity\"]))\n    .get_matches_from(vec![\n        \"prog\", \"--debug\"\n    ]);\nassert!(m.contains_id(\"mode\"));\nassert!(m.contains_id(\"verbosity\"));\n```\n\n[`ArgGroup`]: crate::ArgGroup","links":{"crate::ArgGroup":"0:4105:1655"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["group_ids",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4975:2748":{"id":"0:4975:2748","crate_id":0,"name":"matches","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1318,4],"end":[1318,34]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:5107":{"id":"0:5107","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1680,27],"end":[1680,29]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:520:4502":{"id":"0:520:4502","crate_id":0,"name":"required_if_eq_any","span":{"filename":"src/builder/arg.rs","begin":[3740,4],"end":[3744,5]},"visibility":"public","docs":"Specify this argument is [required] based on multiple conditions.\n\nThe conditions are set up in a `(arg, val)` style tuple. The requirement will only become\nvalid if one of the specified `arg`'s value equals its corresponding `val`.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .required_if_eq_any(&[\n        (\"extra\", \"val\"),\n        (\"option\", \"spec\")\n    ])\n# ;\n```\n\nSetting `Arg::required_if_eq_any(&[(arg, val)])` makes this arg required if any of the `arg`s\nare used at runtime and it's corresponding value is equal to `val`. If the `arg`'s value is\nanything other than `val`, this argument isn't required.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_if_eq_any(&[\n            (\"extra\", \"val\"),\n            (\"option\", \"spec\")\n        ])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"extra\")\n        .takes_value(true)\n        .long(\"extra\"))\n    .arg(Arg::new(\"option\")\n        .takes_value(true)\n        .long(\"option\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--option\", \"other\"\n    ]);\n\nassert!(res.is_ok()); // We didn't use --option=spec, or --extra=val so \"cfg\" isn't required\n```\n\nSetting `Arg::required_if_eq_any(&[(arg, val)])` and having any of the `arg`s used with its\nvalue of `val` but *not* using this arg is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_if_eq_any(&[\n            (\"extra\", \"val\"),\n            (\"option\", \"spec\")\n        ])\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"extra\")\n        .takes_value(true)\n        .long(\"extra\"))\n    .arg(Arg::new(\"option\")\n        .takes_value(true)\n        .long(\"option\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--option\", \"spec\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[`Arg::requires(name)`]: Arg::requires()\n[Conflicting]: Arg::conflicts_with()\n[required]: Arg::required()","links":{"Arg::required()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ifs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3450:543":{"id":"0:3450:543","crate_id":0,"name":"deref","span":{"filename":"src/util/id.rs","begin":[64,4],"end":[66,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3492:116","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4578:3333":{"id":"a:2:9339:7908-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4205:4319":{"id":"0:4205:4319","crate_id":0,"name":"HideDefaultValue","span":{"filename":"src/builder/arg_settings.rs","begin":[192,4],"end":[192,20]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::hide_default_value`] and [`Arg::is_hide_default_value_set`]","links":{"`Arg::hide_default_value`":"0:3972:1654","`Arg::is_hide_default_value_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::hide_default_value` and `Arg::is_hide_default_value_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::hide_default_value` and `Arg::is_hide_default_value_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4864:7539":{"id":"0:4864:7539","crate_id":0,"name":"InvalidUtf8","span":{"filename":"src/error/kind.rs","begin":[320,4],"end":[320,15]},"visibility":"default","docs":"Occurs when the user provides a value containing invalid UTF-8.\n\nTo allow arbitrary data\n- Set [`Arg::allow_invalid_utf8`] for argument values\n- Set [`Command::allow_invalid_utf8_for_external_subcommands`] for external-subcommand\n  values\n\n# Platform Specific\n\nNon-Windows platforms only (such as Linux, Unix, OSX, etc.)\n\n# Examples\n\n ```\n# use clap::{Command, Arg, ErrorKind};\n# use std::os::unix::ffi::OsStringExt;\n# use std::ffi::OsString;\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"utf8\")\n        .short('u')\n        .takes_value(true))\n    .try_get_matches_from(vec![OsString::from(\"myprog\"),\n                                OsString::from(\"-u\"),\n                                OsString::from_vec(vec![0xE9])]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::InvalidUtf8);\n```\n\n[`Arg::allow_invalid_utf8`]: crate::Arg::allow_invalid_utf8\n[`Command::allow_invalid_utf8_for_external_subcommands`]: crate::Command::allow_invalid_utf8_for_external_subcommands","links":{"crate::Arg::allow_invalid_utf8":"0:3972:1654","crate::Command::allow_invalid_utf8_for_external_subcommands":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:986:272":{"id":"0:986:272","crate_id":0,"name":"alias","span":{"filename":"src/builder/command.rs","begin":[2353,4],"end":[2356,5]},"visibility":"public","docs":"Sets a hidden alias to this subcommand.\n\nThis allows the subcommand to be accessed via *either* the original name, or this given\nalias. This is more efficient and easier than creating multiple hidden subcommands as one\nonly needs to check for the existence of this command, and not all aliased variants.\n\n**NOTE:** Aliases defined with this method are *hidden* from the help\nmessage. If you're looking for aliases that will be displayed in the help\nmessage, see [`Command::visible_alias`].\n\n**NOTE:** When using aliases and checking for the existence of a\nparticular subcommand within an [`ArgMatches`] struct, one only needs to\nsearch for the original name and not all aliases.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n    .subcommand(Command::new(\"test\")\n        .alias(\"do-stuff\"))\n    .get_matches_from(vec![\"myprog\", \"do-stuff\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::visible_alias`]: Command::visible_alias()","links":{"`Command::visible_alias`":"0:4456:1667","`ArgMatches`":"0:4953:1658"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4657:2904":{"id":"b:2:2869-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1060:6331":{"id":"0:1060:6331","crate_id":0,"name":"get_subcommand_help_heading","span":{"filename":"src/builder/command.rs","begin":[3451,4],"end":[3453,5]},"visibility":"public","docs":"Returns the help heading for listing subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13507:31600":{"id":"2:13507:31600","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4706:2918":{"id":"a:2:3281:220-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:4647:2916":{"id":"b:2:3202-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:4578:3333":{"id":"a:2:9340:7907-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:5291:9008":{"id":"b:2:2872-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1199:6511":{"id":"0:1199:6511","crate_id":0,"name":"_propagate","span":{"filename":"src/builder/command.rs","begin":[4589,4],"end":[4596,5]},"visibility":"crate","docs":"Propagate settings","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5057:660":{"id":"0:5057:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1653,16],"end":[1653,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1648:2901":{"id":"0:1648:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1826,4],"end":[1828,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3447:660":{"id":"0:3447:660","crate_id":0,"name":"fmt","span":{"filename":"src/util/id.rs","begin":[51,4],"end":[58,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4105:1655":{"id":"b:2:3208-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:4700:2915":{"id":"a:2:3281:220-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2383:8249":{"id":"0:2383:8249","crate_id":0,"name":"try_remove_arg_t","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1202,4],"end":[1222,5]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5319:1660":{"id":"b:2:3213-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13550:31610":{"id":"2:13550:31610","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:16004:9059","self::pattern":"2:13134:9255"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12926:9258","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4856:7517":{"id":"0:4856:7517","crate_id":0,"name":"ArgumentConflict","span":{"filename":"src/error/kind.rs","begin":[235,4],"end":[235,20]},"visibility":"default","docs":"Occurs when the user provides two values which conflict with each other and can't be used\ntogether.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\")\n        .conflicts_with(\"color\"))\n    .arg(Arg::new(\"color\")\n        .long(\"color\"))\n    .try_get_matches_from(vec![\"prog\", \"--debug\", \"--color\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::ArgumentConflict);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3567:3104":{"id":"0:3567:3104","crate_id":0,"name":"AllowExternalSubcommands","span":{"filename":"src/builder/app_settings.rs","begin":[188,4],"end":[188,28]},"visibility":"default","docs":"Deprecated, replaced with [`Command::allow_external_subcommands`] and\n[`Command::is_allow_external_subcommands_set`]","links":{"`Command::allow_external_subcommands`":"0:4456:1667","`Command::is_allow_external_subcommands_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::allow_external_subcommands` and `Command::is_allow_external_subcommands_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::allow_external_subcommands` and `Command::is_allow_external_subcommands_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3775:2564":{"id":"0:3775:2564","crate_id":0,"name":"is_empty","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3777:10054":{"id":"0:3777:10054","crate_id":0,"name":"intersects","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4657:2904":{"id":"a:2:3310:6658-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1379:126":{"id":"0:1379:126","crate_id":0,"name":"Err","span":{"filename":"src/builder/value_hint.rs","begin":[76,4],"end":[76,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:4237:907":{"id":"0:4237:907","crate_id":0,"name":"ne","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4231:2672":{"id":"b:2:2869-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3105:6590":{"id":"0:3105:6590","crate_id":0,"name":"use_long","span":{"filename":"src/output/help.rs","begin":[26,4],"end":[26,18]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"a:2:9340:7907-0:5038:1676":{"id":"a:2:9340:7907-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1402:180":{"id":"0:1402:180","crate_id":0,"name":"OsString","span":{"filename":"src/builder/value_parser.rs","begin":[67,4],"end":[67,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4068:4876":{"id":"0:4068:4876","crate_id":0,"name":"User","span":{"filename":"src/builder/arg.rs","begin":[5194,4],"end":[5194,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2039:7511":{"id":"0:2039:7511","crate_id":0,"name":"display_help_error","span":{"filename":"src/error/mod.rs","begin":[265,4],"end":[272,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["colorizer",{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5010:7834":{"id":"a:2:9339:7908-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1801":{"id":"0:1801","crate_id":0,"name":null,"span":{"filename":"src/builder/debug_asserts.rs","begin":[357,0],"end":[361,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:1802:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4085:1542":{"id":"0:4085:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/arg.rs","begin":[5276,13],"end":[5276,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:4551":{"id":"0:4551","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[29,43],"end":[29,45]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3778:2678":{"id":"0:3778:2678","crate_id":0,"name":"contains","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4324:2674":{"id":"0:4324:2674","crate_id":0,"name":"remove","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Removes the specified flags in-place.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31978:1228":{"id":"2:31978:1228","crate_id":2,"name":"saturating_sub","span":null,"visibility":"public","docs":"Saturating integer subtraction. Computes `self - rhs`, saturating\nat the numeric bounds instead of overflowing.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.saturating_sub(27), 73);\nassert_eq!(13u64.saturating_sub(127), 0);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[rustc_const_stable(feature = \"const_saturating_int_methods\", since =\n\"1.47.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3773:10040":{"id":"0:3773:10040","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4676:2906":{"id":"b:5:787-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3466":{"id":"0:3466","crate_id":0,"name":null,"span":{"filename":"src/util/mod.rs","begin":[8,0],"end":[8,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fnv::Key","name":"Key","id":"0:3388:3335","glob":false}},"a:2:3281:220-0:4926:5216":{"id":"a:2:3281:220-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2048:7528":{"id":"0:2048:7528","crate_id":0,"name":"invalid_subcommand","span":{"filename":"src/error/mod.rs","begin":[356,4],"end":[380,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["subcmd",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["did_you_mean",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["name",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2012:782":{"id":"0:2012:782","crate_id":0,"name":"kind","span":{"filename":"src/error/mod.rs","begin":[93,4],"end":[95,5]},"visibility":"public","docs":"Type of error for programmatic processing","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3722:660":{"id":"0:3722:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5010:7834":{"id":"b:2:3213-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2692:8351":{"id":"0:2692:8351","crate_id":0,"name":"cur_idx","span":{"filename":"src/parser/parser.rs","begin":[27,4],"end":[27,24]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Cell","id":"2:4965:8347","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"2:13609:31628":{"id":"2:13609:31628","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4229":{"id":"0:4229","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[32,33],"end":[32,38]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4230:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1642:59":{"id":"0:1642:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[1775,4],"end":[1777,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1201:6512":{"id":"0:1201:6512","crate_id":0,"name":"_check_help_and_version","span":{"filename":"src/builder/command.rs","begin":[4619,4],"end":[4760,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(clippy :: blocks_in_if_conditions)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1655":{"id":"0:1655","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1842,0],"end":[1847,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"bool"},"items":["0:1656:1664","0:1657:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13594:31625":{"id":"2:13594:31625","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13164:9248","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4536":{"id":"0:4536","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[29,9],"end":[29,14]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4538:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3415:2678":{"id":"0:3415:2678","crate_id":0,"name":"contains","span":{"filename":"src/util/graph.rs","begin":[46,4],"end":[48,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["req",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:4080:3370":{"id":"b:2:3208-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1549":{"id":"0:1549","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1176,0],"end":[1233,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"},{"trait_bound":{"trait":{"name":"std::error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1551:7050","0:1552:7090"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:4942:7020":{"id":"a:2:9339:7908-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:637:4861":{"id":"0:637:4861","crate_id":0,"name":"is_multiple","span":{"filename":"src/builder/arg.rs","begin":[5059,4],"end":[5061,5]},"visibility":"crate","docs":"Either multiple values or occurrences","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2478:8271":{"id":"0:2478:8271","crate_id":0,"name":"next_back","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1613,4],"end":[1615,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5182:3335":{"id":"a:2:9339:7908-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3048:8695":{"id":"0:3048:8695","crate_id":0,"name":"append_keys","span":{"filename":"src/mkeymap.rs","begin":[170,0],"end":[193,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":"Generate key types for an specific Arg.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["keys",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:426:3794":{"id":"0:426:3794","crate_id":0,"name":"number_of_values","span":{"filename":"src/builder/arg.rs","begin":[1232,4],"end":[1235,5]},"visibility":"public","docs":"The number of values allowed for this argument.\n\nFor example, if you had a\n`-f <file>` argument where you wanted exactly 3 'files' you would set\n`.number_of_values(3)`, and this argument wouldn't be satisfied unless the user provided\n3 and only 3 values.\n\n**NOTE:** Does *not* require [`Arg::multiple_occurrences(true)`] to be set. Setting\n[`Arg::multiple_occurrences(true)`] would allow `-f <file> <file> <file> -f <file> <file> <file>` where\nas *not* setting it would only allow one occurrence of this argument.\n\n**NOTE:** implicitly sets [`Arg::takes_value(true)`] and [`Arg::multiple_values(true)`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"file\")\n    .short('f')\n    .number_of_values(3);\n```\n\nNot supplying the correct number of values is an error\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .number_of_values(2)\n        .short('F'))\n    .try_get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::WrongNumberOfValues);\n```\n[`Arg::multiple_occurrences(true)`]: Arg::multiple_occurrences()","links":{"Arg::multiple_occurrences()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["qty",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13543:10914":{"id":"2:13543:10914","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13134:9255","prim@char":"1:16004:9059","`None`":"2:47591:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4172:1671":{"id":"b:2:4002-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3789:181":{"id":"0:3789:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:4359:684":{"id":"0:4359:684","crate_id":0,"name":"from_iter","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iterator",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::_core::iter::IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4991":{"id":"0:4991","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1341,9],"end":[1341,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4993:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:980:5900":{"id":"0:980:5900","crate_id":0,"name":"trailing_var_arg","span":{"filename":"src/builder/command.rs","begin":[2124,4],"end":[2130,5]},"visibility":"public","docs":"Specifies that the final positional argument is a \"VarArg\" and that `clap` should not\nattempt to parse any further args.\n\nThe values of the trailing positional argument will contain all args from itself on.\n\n**NOTE:** The final positional argument **must** have [`Arg::multiple_values(true)`] or the usage\nstring equivalent.\n\n# Examples\n\n```rust\n# use clap::{Command, arg};\nlet m = Command::new(\"myprog\")\n    .trailing_var_arg(true)\n    .arg(arg!(<cmd> ... \"commands to run\"))\n    .get_matches_from(vec![\"myprog\", \"arg1\", \"-r\", \"val1\"]);\n\nlet trail: Vec<&str> = m.values_of(\"cmd\").unwrap().collect();\nassert_eq!(trail, [\"arg1\", \"-r\", \"val1\"]);\n```\n[`Arg::multiple_values(true)`]: crate::Arg::multiple_values()","links":{"crate::Arg::multiple_values()":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3995:3371":{"id":"0:3995:3371","crate_id":0,"name":"possible_vals","span":{"filename":"src/builder/arg.rs","begin":[83,4],"end":[83,55]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:1566":{"id":"0:1566","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1246,0],"end":[1250,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1568:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2029:7502":{"id":"0:2029:7502","crate_id":0,"name":"set_help_flag","span":{"filename":"src/error/mod.rs","begin":[222,4],"end":[225,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["help_flag",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1531:2747":{"id":"0:1531:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/value_parser.rs","begin":[1003,4],"end":[1035,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:32019:74255":{"id":"2:32019:74255","crate_id":2,"name":"checked_next_power_of_two","span":null,"visibility":"public","docs":"Returns the smallest power of two greater than or equal to `n`. If\nthe next power of two is greater than the type's maximum value,\n`None` is returned, otherwise the power of two is wrapped in `Some`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(2u64.checked_next_power_of_two(), Some(2));\nassert_eq!(3u64.checked_next_power_of_two(), Some(4));\nassert_eq!(u64::MAX.checked_next_power_of_two(), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_int_pow\", since = \"1.50.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4459:899":{"id":"0:4459:899","crate_id":0,"name":"name","span":{"filename":"src/builder/command.rs","begin":[80,4],"end":[80,16]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1913":{"id":"0:1913","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[54,0],"end":[54,21]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"command::App","name":"App","id":"0:4456:1667","glob":false}},"a:2:3269:211-0:4761:7449":{"id":"a:2:3269:211-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4615":{"id":"0:4615","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,9],"end":[27,14]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4616:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1279:6642":{"id":"0:1279:6642","crate_id":0,"name":"find_short_subcmd","span":{"filename":"src/builder/command.rs","begin":[5021,4],"end":[5025,5]},"visibility":"crate","docs":"Find a flag subcommand name by short flag or an alias","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:2512":{"id":"1:1075:2512","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:4855","1:1077:12929","1:1078:23434","1:1079:3280","1:1080:2513","1:1081:23435","1:1082:23436"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5282:408":{"id":"0:5282:408","crate_id":0,"name":"clone","span":{"filename":"src/output/fmt.rs","begin":[135,15],"end":[135,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4926:5216":{"id":"a:2:3310:6658-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4987:8033":{"id":"b:2:3213-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3764:3271":{"id":"0:3764:3271","crate_id":0,"name":"USE_LONG_FORMAT_FOR_HELP_SC","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4532:899":{"id":"0:4532:899","crate_id":0,"name":"name","span":{"filename":"src/builder/possible_value.rs","begin":[31,4],"end":[31,20]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:1120":{"id":"0:1120","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[3787,0],"end":[4105,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":"Deprecated","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"44:220:13578":{"id":"44:220:13578","crate_id":44,"name":"ReadRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:222:793","44:223:73859","44:224:73860","44:225:73861","44:226:12445","44:229:31033","44:231:73663","44:234:73862"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9339:7908-0:4833:1674":{"id":"a:2:9339:7908-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2471":{"id":"0:2471","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1600,0],"end":[1609,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["sum","enumerate","array_chunks","reduce","try_collect","skip_while","next_chunk","advance_by","cmp","eq","peekable","max_by","cloned","collect","product","is_sorted_by_key","try_reduce","ge","collect_into","count","map_while","last","nth","any","copied","max","all","max_by_key","__iterator_get_unchecked","cmp_by","try_find","position","partition","scan","step_by","take","flatten","partial_cmp_by","rposition","lt","size_hint","partition_in_place","fuse","intersperse","partial_cmp","chain","skip","filter_map","find","eq_by","unzip","is_partitioned","rev","inspect","intersperse_with","filter","take_while","find_map","try_for_each","min","ne","is_sorted","fold","cycle","try_fold","by_ref","for_each","flat_map","min_by_key","le","zip","min_by","map","gt","is_sorted_by"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2473:2763","0:2474:922","0:2475:5300"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:32000:74237":{"id":"2:32000:74237","crate_id":2,"name":"overflowing_mul","span":null,"visibility":"public","docs":"Calculates the multiplication of `self` and `rhs`.\n\nReturns a tuple of the multiplication along with a boolean\nindicating whether an arithmetic overflow would occur. If an\noverflow would have occurred then the wrapped value is returned.\n\n# Examples\n\nBasic usage:\n\nPlease note that this example is shared between integer types.\nWhich explains why `u32` is used here.\n\n```\nassert_eq!(5u32.overflowing_mul(2), (10, false));\nassert_eq!(1_000_000_000u32.overflowing_mul(10), (1410065408, true));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                          without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4657:2904":{"id":"a:2:3281:220-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1766:126":{"id":"0:1766:126","crate_id":0,"name":"Err","span":{"filename":"src/builder/regex.rs","begin":[59,4],"end":[59,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"25:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"1:5727:12300":{"id":"1:5727:12300","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728:6882","1:5729:31039","1:5730:31040"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:4933:7836":{"id":"b:2:2869-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3223:5461":{"id":"0:3223:5461","crate_id":0,"name":"usage","span":{"filename":"src/output/usage.rs","begin":[1,0],"end":[449,1]},"visibility":{"restricted":{"parent":"0:3049:1702","path":"::output"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3252:5215"],"is_stripped":false}},"0:2577":{"id":"0:2577","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/matched_arg.rs","begin":[225,0],"end":[225,25]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:875:2658":{"id":"0:875:2658","crate_id":0,"name":"group","span":{"filename":"src/builder/command.rs","begin":[354,4],"end":[357,5]},"visibility":"public","docs":"Adds an [`ArgGroup`] to the application.\n\n[`ArgGroup`]s are a family of related arguments.\nBy placing them in a logical group, you can build easier requirement and exclusion rules.\n\nExample use cases:\n- Make an entire [`ArgGroup`] required, meaning that one (and *only*\n  one) argument from that group must be present at runtime.\n- Name an [`ArgGroup`] as a conflict to another argument.\n  Meaning any of the arguments that belong to that group will cause a failure if present with\n  the conflicting argument.\n- Ensure exclusion between arguments.\n- Extract a value from a group instead of determining exactly which argument was used.\n\n# Examples\n\nThe following example demonstrates using an [`ArgGroup`] to ensure that one, and only one,\nof the arguments from the specified group is present at runtime.\n\n```no_run\n# use clap::{Command, arg, ArgGroup};\nCommand::new(\"cmd\")\n    .arg(arg!(\"--set-ver [ver] 'set the version manually'\"))\n    .arg(arg!(\"--major 'auto increase major'\"))\n    .arg(arg!(\"--minor 'auto increase minor'\"))\n    .arg(arg!(\"--patch 'auto increase patch'\"))\n    .group(ArgGroup::new(\"vers\")\n         .args(&[\"set-ver\", \"major\", \"minor\",\"patch\"])\n         .required(true))\n# ;\n```","links":{"`ArgGroup`":"0:4105:1655"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["group",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:492:4326":{"id":"0:492:4326","crate_id":0,"name":"hide_env","span":{"filename":"src/builder/arg.rs","begin":[2863,4],"end":[2869,5]},"visibility":"public","docs":"Do not display in help the environment variable name.\n\nThis is useful when the variable option is explained elsewhere in the help text.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"mode\")\n        .long(\"mode\")\n        .env(\"MODE\")\n        .takes_value(true)\n        .hide_env(true));\n```\n\nIf we were to run the above program with `--help` the `[env: MODE]` portion of the help\ntext would be omitted.","links":{},"attrs":["#[cfg(feature = \"env\")]","#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5092:7833":{"id":"0:5092:7833","crate_id":0,"name":"ParseState","span":{"filename":"src/parser/parser.rs","begin":[1681,0],"end":[1685,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5093:8361","0:5095:8373","0:5098:8374"],"impls":["a:2:3310:6658-0:5092:7833","a:2:3269:211-0:5092:7833","a:2:9340:7907-0:5092:7833","a:2:9339:7908-0:5092:7833","a:2:3281:220-0:5092:7833","b:2:3198-0:5092:7833","b:2:2872-0:5092:7833","b:2:2869-0:5092:7833","b:2:4002-0:5092:7833","b:2:3202-0:5092:7833","b:2:3213-0:5092:7833","b:2:3208-0:5092:7833","b:31:25-0:5092:7833","0:5101","0:5103","0:5104","0:5107","0:5108"]}},"0:3300:6526":{"id":"0:3300:6526","crate_id":0,"name":"get_required_usage_from","span":{"filename":"src/output/usage.rs","begin":[331,4],"end":[448,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["incls",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],["matcher",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["incl_last",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"IndexSet","id":"31:927:8701","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4340":{"id":"0:4340","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:3431:9225","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4341:357"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1662:1664":{"id":"0:1662:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1857,4],"end":[1857,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i8"}}],"bindings":[]}}}}}},"0:2894:4695":{"id":"0:2894:4695","crate_id":0,"name":"get_possible_values","span":{"filename":"src/parser/validator.rs","begin":[678,0],"end":[692,1]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4233":{"id":"0:4233","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4326:2675":{"id":"0:4326:2675","crate_id":0,"name":"set","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3745:3035":{"id":"0:3745:3035","crate_id":0,"name":"COLOR_AUTO","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4687:660":{"id":"0:4687:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[1288,22],"end":[1288,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10610:142":{"id":"2:10610:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10611:715","2:10613:11101"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:3393:9003":{"id":"b:2:4002-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4700:2915":{"id":"b:2:3213-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3215:1542":{"id":"0:3215:1542","crate_id":0,"name":"0","span":{"filename":"src/output/help.rs","begin":[1118,11],"end":[1118,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'writer","mutable":true,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Write","id":"1:4723:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}},"b:2:4002-0:2688:1664":{"id":"b:2:4002-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:4105:1655":{"id":"b:2:2869-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:427:2601":{"id":"0:427:2601","crate_id":0,"name":"max_values","span":{"filename":"src/builder/arg.rs","begin":[1296,4],"end":[1299,5]},"visibility":"public","docs":"The *maximum* number of values are for this argument.\n\nFor example, if you had a\n`-f <file>` argument where you wanted up to 3 'files' you would set `.max_values(3)`, and\nthis argument would be satisfied if the user provided, 1, 2, or 3 values.\n\n**NOTE:** This does *not* implicitly set [`Arg::multiple_occurrences(true)`]. This is because\n`-o val -o val` is multiple occurrences but a single value and `-o val1 val2` is a single\noccurrence with multiple values. For positional arguments this **does** set\n[`Arg::multiple_occurrences(true)`] because there is no way to determine the difference between multiple\noccurrences and multiple values.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"file\")\n    .short('f')\n    .max_values(3);\n```\n\nSupplying less than the maximum number of values is allowed\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .max_values(3)\n        .short('F'))\n    .try_get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"file2\"\n    ]);\n\nassert!(res.is_ok());\nlet m = res.unwrap();\nlet files: Vec<_> = m.values_of(\"file\").unwrap().collect();\nassert_eq!(files, [\"file1\", \"file2\"]);\n```\n\nSupplying more than the maximum number of values is an error\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .max_values(2)\n        .short('F'))\n    .try_get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"file2\", \"file3\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```\n[`Arg::multiple_occurrences(true)`]: Arg::multiple_occurrences()","links":{"Arg::multiple_occurrences()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["qty",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:918:1556":{"id":"0:918:1556","crate_id":0,"name":"color","span":{"filename":"src/builder/command.rs","begin":[1020,4],"end":[1031,5]},"visibility":"public","docs":"Sets when to color output.\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n**NOTE:** Default behaviour is [`ColorChoice::Auto`].\n\n# Examples\n\n```no_run\n# use clap::{Command, ColorChoice};\nCommand::new(\"myprog\")\n    .color(ColorChoice::Never)\n    .get_matches();\n```\n[`ColorChoice::Auto`]: crate::ColorChoice::Auto","links":{"crate::ColorChoice::Auto":"0:5319:1660"},"attrs":["#[cfg(feature = \"color\")]","#[inline]","#[must_use]","#![allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["color",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4937:7559":{"id":"0:4937:7559","crate_id":0,"name":"UnknownArgument","span":{"filename":"src/parser/error.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":"Argument not defined in [`Command`][crate::Command]","links":{"crate::Command":"0:853:1653"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"struct","variant_inner":[]}},"0:904:5470":{"id":"0:904:5470","crate_id":0,"name":"print_long_help","span":{"filename":"src/builder/command.rs","begin":[770,4],"end":[778,5]},"visibility":"public","docs":"Prints the long help message (`--help`) to [`io::stdout()`].\n\nSee also [`Command::print_help`].\n\n# Examples\n\n```rust\n# use clap::Command;\nlet mut cmd = Command::new(\"myprog\");\ncmd.print_long_help();\n```\n[`io::stdout()`]: std::io::stdout()\n[`BufWriter`]: std::io::BufWriter\n[`-h` (short)]: Arg::help()\n[`--help` (long)]: Arg::long_help()","links":{"std::io::stdout()":"1:4477:8981","`Command::print_help`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3734:3215":{"id":"0:3734:3215","crate_id":0,"name":"HIDDEN","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1064:6338":{"id":"0:1064:6338","crate_id":0,"name":"get_before_long_help","span":{"filename":"src/builder/command.rs","begin":[3482,4],"end":[3484,5]},"visibility":"public","docs":"Returns the help heading for listing subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:1397:7028":{"id":"a:2:3310:6658-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:395:3450":{"id":"0:395:3450","crate_id":0,"name":"short_alias","span":{"filename":"src/builder/arg.rs","begin":[269,4],"end":[274,5]},"visibility":"public","docs":"Add an alias, which functions as a hidden short flag.\n\nThis is more efficient, and easier than creating multiple hidden arguments as one only\nneeds to check for the existence of this command, and not all variants.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n            .short('t')\n            .short_alias('e')\n            .takes_value(true))\n       .get_matches_from(vec![\n            \"prog\", \"-e\", \"cool\"\n        ]);\nassert!(m.contains_id(\"test\"));\nassert_eq!(m.value_of(\"test\"), Some(\"cool\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4588:1673":{"id":"b:5:787-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3454":{"id":"0:3454","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[79,0],"end":[86,1]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3455:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4172:1671":{"id":"a:2:3269:211-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:4131:2923":{"id":"b:5:787-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4711:660":{"id":"0:4711:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[1736,22],"end":[1736,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3431:9225":{"id":"2:3431:9225","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2458:922":{"id":"0:2458:922","crate_id":0,"name":"next","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1559,4],"end":[1561,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:5058:7830":{"id":"b:2:3198-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:4807:7450":{"id":"a:2:3281:220-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2339:8089":{"id":"0:2339:8089","crate_id":0,"name":"is_present","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[568,4],"end":[575,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgAction::SetTrue`][crate::ArgAction] or\n[`ArgMatches::contains_id`].","links":{"`ArgMatches::contains_id`":"0:4953:1658","crate::ArgAction":"0:3503:1652"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)`\")]","#[track_caller]"],"deprecation":{"since":"3.2.0","note":"Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4987:8033":{"id":"b:2:3208-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:4231:2672":{"id":"b:2:3208-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4248:715":{"id":"0:4248:715","crate_id":0,"name":"hash","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3740:9232":{"id":"2:3740:9232","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:30544"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2698:920":{"id":"0:2698:920","crate_id":0,"name":"new","span":{"filename":"src/parser/parser.rs","begin":[37,4],"end":[44,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5135":{"id":"0:5135","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1688,16],"end":[1688,25]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5741:12286":{"id":"1:5741:12286","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:16698","1:5743:31044","1:5744:6882","1:5745:31045","1:5746:12509","1:5747:12510","1:5748:31046","1:5749:1304","1:5750:31047","1:5751:31048","1:5752:31049","1:5753:31050","1:5754:31051","1:5755:31052","1:5756:31053","1:5757:31054"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3278:8916":{"id":"0:3278:8916","crate_id":0,"name":"get_args_tag","span":{"filename":"src/output/usage.rs","begin":[190,4],"end":[289,5]},"visibility":{"restricted":{"parent":"0:3223:5461","path":"::output::usage"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["incl_reqs",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4664:2905":{"id":"b:2:2869-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:4987:8033":{"id":"b:2:3202-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3971:353":{"id":"0:3971:353","crate_id":0,"name":"bitor","span":{"filename":"src/builder/app_settings.rs","begin":[575,0],"end":[671,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3401:2679","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1230":{"id":"0:1230","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[4829,0],"end":[5090,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1232:6601","0:1235:6603","0:1238:6605","0:1241:2881","0:1243:6606","0:1244:2675","0:1245:6608","0:1246:6609","0:1248:6611","0:1250:6344","0:1253:6615","0:1255:6617","0:1259:6618","0:1262:6620","0:1268:6364","0:1270:6624","0:1273:6626","0:1275:6365","0:1277:6635","0:1279:6642","0:1282:6644","0:1285:4862","0:1286:6645","0:1287:6648","0:1289:6649"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5119:8403":{"id":"0:5119:8403","crate_id":0,"name":"AttachedValueNotConsumed","span":{"filename":"src/parser/parser.rs","begin":[1696,4],"end":[1696,28]},"visibility":"default","docs":"Value attached to the short flag is not consumed(e.g. 'u' for `-cu` is\nnot consumed).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13593:31624":{"id":"2:13593:31624","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5110:8389":{"id":"b:2:3213-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5013:793":{"id":"0:5013:793","crate_id":0,"name":"len","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1464,4],"end":[1464,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"a:2:3269:211-0:4664:2905":{"id":"a:2:3269:211-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:223:2759":{"id":"0:223:2759","crate_id":0,"name":"parse_from","span":{"filename":"src/derive.rs","begin":[511,4],"end":[517,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"It","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"It"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"It"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4997:7835":{"id":"a:2:9339:7908-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9340:7907-0:1397:7028":{"id":"a:2:9340:7907-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3751:3246":{"id":"0:3751:3246","crate_id":0,"name":"ARGS_NEGATE_SCS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4343:181":{"id":"0:4343:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2869-0:1397:7028":{"id":"b:2:2869-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2094:1657":{"id":"0:2094:1657","crate_id":0,"name":"parser","span":{"filename":"src/parser/mod.rs","begin":[1,0],"end":[27,42]},"visibility":"public","docs":"[`Command`][crate::Command] line argument parser","links":{"crate::Command":"0:853:1653"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2095:7828","0:2185:1656","0:2195:2748","0:2614:1657","0:2770:2664","0:2897:7445","0:2958","0:2961","0:2965","0:2968","0:2971","0:2974","0:2978","0:2981"],"is_stripped":false}},"b:2:4002-0:3542:1669":{"id":"b:2:4002-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:5020:1678":{"id":"b:5:787-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1484":{"id":"0:1484","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[713,0],"end":[717,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1485:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3579:3125":{"id":"0:3579:3125","crate_id":0,"name":"SubcommandPrecedenceOverArg","span":{"filename":"src/builder/app_settings.rs","begin":[248,4],"end":[248,31]},"visibility":"default","docs":"Deprecated, replaced with [`Command::subcommand_precedence_over_arg`] and\n[`Command::is_subcommand_precedence_over_arg_set`]","links":{"`Command::is_subcommand_precedence_over_arg_set`":"0:4456:1667","`Command::subcommand_precedence_over_arg`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::subcommand_precedence_over_arg` and `Command::is_subcommand_precedence_over_arg_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::subcommand_precedence_over_arg` and `Command::is_subcommand_precedence_over_arg_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1319:3367":{"id":"0:1319:3367","crate_id":0,"name":"aliases","span":{"filename":"src/builder/possible_value.rs","begin":[130,4],"end":[136,5]},"visibility":"public","docs":"Sets multiple *hidden* aliases for this argument value.\n\n# Examples\n\n```rust\n# use clap::PossibleValue;\nPossibleValue::new(\"slow\")\n    .aliases([\"not-fast\", \"snake-like\"])\n# ;\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4892:7456":{"id":"b:2:3202-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2414":{"id":"0:2414","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1423,0],"end":[1423,57]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8548:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3787:10106":{"id":"0:3787:10106","crate_id":0,"name":"complement","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns the complement of this set of flags.\n\nSpecifically, the returned set contains all the flags which are\nnot set in `self`, but which are allowed for this type.\n\nAlternatively, it can be thought of as the set difference\nbetween [`Self::all()`] and `self` (e.g. `Self::all() - self`)\n\nThis is equivalent to using the `!` operator (e.g.\n[`ops::Not`]), as in `!flags`.\n\n[`Self::all()`]: Self::all\n[`ops::Not`]: https://doc.rust-lang.org/std/ops/trait.Not.html","links":{"Self::all":"0:3647:2672"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4556:6725":{"id":"0:4556:6725","crate_id":0,"name":"UsageToken","span":{"filename":"src/builder/usage_parser.rs","begin":[9,0],"end":[18,1]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4557:6726","0:4559:6727","0:4561:6728","0:4563:6729","0:4565:3014","0:4567:5130","0:4569:232","0:4571:115"],"impls":["a:2:3310:6658-0:4556:6725","a:2:3269:211-0:4556:6725","a:2:9340:7907-0:4556:6725","a:2:9339:7908-0:4556:6725","a:2:3281:220-0:4556:6725","b:2:3198-0:4556:6725","b:2:2872-0:4556:6725","b:2:2869-0:4556:6725","b:2:4002-0:4556:6725","b:2:3202-0:4556:6725","b:2:3213-0:4556:6725","b:2:3208-0:4556:6725","0:4573","0:4574","0:4576"]}},"0:4471:5252":{"id":"0:4471:5252","crate_id":0,"name":"after_help","span":{"filename":"src/builder/command.rs","begin":[92,4],"end":[92,34]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:1453:7127":{"id":"0:1453:7127","crate_id":0,"name":"clone_any","span":{"filename":"src/builder/value_parser.rs","begin":[561,4],"end":[561,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"AnyValueParser","id":"0:1448:7030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:657":{"id":"0:657","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5131,0],"end":[5185,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:659:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:6":{"id":"0:6","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::Command","name":"Command","id":"0:853:1653","glob":false}},"0:1173:6502":{"id":"0:1173:6502","crate_id":0,"name":"build","span":{"filename":"src/builder/command.rs","begin":[4217,4],"end":[4220,5]},"visibility":"public","docs":"Prepare for introspecting on all included [`Command`]s\n\nCall this on the top-level [`Command`] when done building and before reading state for\ncases like completions, custom help output, etc.","links":{"`Command`":"0:853:1653"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2050:7535":{"id":"0:2050:7535","crate_id":0,"name":"missing_required_argument","span":{"filename":"src/error/mod.rs","begin":[393,4],"end":[406,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["required",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:3211:5214":{"id":"a:2:9340:7907-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2196:7909":{"id":"0:2196:7909","crate_id":0,"name":"any_value","span":{"filename":"src/parser/matches/any_value.rs","begin":[1,0],"end":[112,1]},"visibility":{"restricted":{"parent":"0:2195:2748","path":"::parser::matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4942:7020","0:4947:3033"],"is_stripped":false}},"0:2158:7853":{"id":"0:2158:7853","crate_id":0,"name":"arg_ids","span":{"filename":"src/parser/arg_matcher.rs","begin":[119,4],"end":[121,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"indexmap::map::Keys","id":"31:548:7854","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164:1664":{"id":"0:164:1664","crate_id":0,"name":"Parser","span":{"filename":"src/derive.rs","begin":[78,0],"end":[245,1]},"visibility":"public","docs":"Parse command-line arguments into `Self`.\n\nThe primary one-stop-shop trait used to create an instance of a `clap`\n[`Command`], conduct the parsing, and turn the resulting [`ArgMatches`] back\ninto concrete instance of the user struct.\n\nThis trait is primarily a convenience on top of [`FromArgMatches`] +\n[`CommandFactory`] which uses those two underlying traits to build the two\nfundamental functions `parse` which uses the `std::env::args_os` iterator,\nand `parse_from` which allows the consumer to supply the iterator (along\nwith fallible options for each).\n\nSee also [`Subcommand`] and [`Args`].\n\nSee the [derive reference](crate::_derive) for attributes and best practices.\n\n**NOTE:** Deriving requires the [`derive` feature flag][crate::_features]\n\n# Examples\n\nThe following example creates a `Context` struct that would be used\nthroughout the application representing the normalized values coming from\nthe CLI.\n\n ```\n/// My super CLI\n#[derive(clap::Parser)]\n#[clap(name = \"demo\")]\nstruct Context {\n    /// More verbose output\n    #[clap(long)]\n    verbose: bool,\n    /// An optional name\n    #[clap(short, long)]\n    name: Option<String>,\n}\n```\n\nThe equivalent [`Command`] struct + `From` implementation:\n\n```rust\n# use clap::{Command, Arg, ArgMatches, ArgAction};\nCommand::new(\"demo\")\n    .about(\"My super CLI\")\n    .arg(Arg::new(\"verbose\")\n        .long(\"verbose\")\n        .action(ArgAction::SetTrue)\n        .help(\"More verbose output\"))\n    .arg(Arg::new(\"name\")\n        .long(\"name\")\n        .short('n')\n        .help(\"An optional name\")\n        .takes_value(true));\n\nstruct Context {\n    verbose: bool,\n    name: Option<String>,\n}\n\nimpl From<ArgMatches> for Context {\n    fn from(m: ArgMatches) -> Self {\n        Context {\n            verbose: *m.get_one::<bool>(\"verbose\").expect(\"defaulted_by_clap\"),\n            name: m.get_one::<String>(\"name\").cloned(),\n        }\n    }\n}\n```\n","links":{"crate::_features":"0:121:1696","`Args`":"0:204:1661","crate::_derive":"0:115:1694","`Subcommand`":"0:207:1665","`ArgMatches`":"0:4953:1658","`FromArgMatches`":"0:199:1663","`Command`":"0:853:1653","`CommandFactory`":"0:190:1662"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:165:2747","0:166:2756","0:167:2759","0:170:2766","0:173:2769","0:176:2773"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromArgMatches","id":"0:199:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"CommandFactory","id":"0:190:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:219"]}},"b:2:3198-0:1397:7028":{"id":"b:2:3198-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1099:6389":{"id":"0:1099:6389","crate_id":0,"name":"is_disable_colored_help_set","span":{"filename":"src/builder/command.rs","begin":[3672,4],"end":[3674,5]},"visibility":"public","docs":"Report whether [`Command::disable_colored_help`] is set","links":{"`Command::disable_colored_help`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:259:2934":{"id":"0:259:2934","crate_id":0,"name":"yaml_vec_or_str","span":{"filename":"src/builder/macros.rs","begin":[44,0],"end":[67,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_vec_or_str {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"0:674:4888":{"id":"0:674:4888","crate_id":0,"name":"set_implicit","span":{"filename":"src/builder/arg.rs","begin":[5285,4],"end":[5287,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["implicit",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:948:5253":{"id":"0:948:5253","crate_id":0,"name":"after_long_help","span":{"filename":"src/builder/command.rs","begin":[1549,4],"end":[1552,5]},"visibility":"public","docs":"Free-form help text for after auto-generated long help (`--help`).\n\nThis is often used to describe how to use the arguments, caveats to be noted, or license\nand contact information.\n\nIf [`Command::after_help`] is not specified, this message will be displayed for `-h`.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .after_long_help(\"Does really amazing things to great people... but be careful with -R, \\\n                     like, for real, be careful with this!\")\n# ;\n```","links":{"`Command::after_help`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["help",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4780:7543":{"id":"0:4780:7543","crate_id":0,"name":"MaxOccurrences","span":{"filename":"src/error/context.rs","begin":[24,4],"end":[24,18]},"visibility":"default","docs":"Maximum number of allowed occurrences","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3412:779":{"id":"0:3412:779","crate_id":0,"name":"iter","span":{"filename":"src/util/graph.rs","begin":[42,4],"end":[44,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1808:7373":{"id":"0:1808:7373","crate_id":0,"name":"detect_duplicate_flags","span":{"filename":"src/builder/debug_asserts.rs","begin":[388,0],"end":[412,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flags",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["short_or_long",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:931:5639":{"id":"0:931:5639","crate_id":0,"name":"infer_subcommands","span":{"filename":"src/builder/command.rs","begin":[1366,4],"end":[1372,5]},"visibility":"public","docs":"Allow partial matches of [subcommand] names and their [aliases].\n\nFor example, to match a subcommand named `test`, one could use `t`, `te`, `tes`, and\n`test`.\n\n**NOTE:** The match *must not* be ambiguous at all in order to succeed. i.e. to match `te`\nto `test` there could not also be a subcommand or alias `temp` because both start with `te`\n\n**CAUTION:** This setting can interfere with [positional/free arguments], take care when\ndesigning CLIs which allow inferred subcommands and have potential positional/free\narguments whose values could start with the same characters as subcommands. If this is the\ncase, it's recommended to use settings such as [`Command::args_conflicts_with_subcommands`] in\nconjunction with this setting.\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .infer_subcommands(true)\n    .subcommand(Command::new(\"test\"))\n    .get_matches_from(vec![\n        \"prog\", \"te\"\n    ]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n\n[subcommand]: crate::Command::subcommand()\n[positional/free arguments]: crate::Arg::index()\n[aliases]: crate::Command::aliases()","links":{"crate::Command::subcommand()":"0:4456:1667","crate::Arg::index()":"0:3972:1654","`Command::args_conflicts_with_subcommands`":"0:4456:1667","crate::Command::aliases()":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3739:3225":{"id":"0:3739:3225","crate_id":0,"name":"LEADING_HYPHEN","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:3782:2675":{"id":"0:3782:2675","crate_id":0,"name":"set","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226:2766":{"id":"0:226:2766","crate_id":0,"name":"try_parse_from","span":{"filename":"src/derive.rs","begin":[519,4],"end":[525,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"It","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"It"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"It"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:173:2769":{"id":"0:173:2769","crate_id":0,"name":"update_from","span":{"filename":"src/derive.rs","begin":[130,4],"end":[143,5]},"visibility":"default","docs":"Update from iterator, exit on error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["itr",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6413-0:3972:1654":{"id":"b:5:6413-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:586:4713":{"id":"0:586:4713","crate_id":0,"name":"is_global_set","span":{"filename":"src/builder/arg.rs","begin":[4597,4],"end":[4599,5]},"visibility":"public","docs":"Report whether [`Arg::global`] is set","links":{"`Arg::global`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3408:2673":{"id":"0:3408:2673","crate_id":0,"name":"insert","span":{"filename":"src/util/graph.rs","begin":[27,4],"end":[33,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["req",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13617:12929":{"id":"2:13617:12929","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4963":{"id":"0:4963","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,23],"end":[67,30]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4964:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:905:5463":{"id":"0:905:5463","crate_id":0,"name":"write_help","span":{"filename":"src/builder/command.rs","begin":[796,4],"end":[802,5]},"visibility":"public","docs":"Writes the short help message (`-h`) to a [`io::Write`] object.\n\nSee also [`Command::write_long_help`].\n\n# Examples\n\n```rust\n# use clap::Command;\nuse std::io;\nlet mut cmd = Command::new(\"myprog\");\nlet mut out = io::stdout();\ncmd.write_help(&mut out).expect(\"failed to write to stdout\");\n```\n[`io::Write`]: std::io::Write\n[`-h` (short)]: Arg::help()\n[`--help` (long)]: Arg::long_help()","links":{"`Command::write_long_help`":"0:4456:1667","std::io::Write":"1:4723:2682"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4942:7020":{"id":"b:5:787-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4578:3333":{"id":"0:4578:3333","crate_id":0,"name":"UsageParser","span":{"filename":"src/builder/usage_parser.rs","begin":[21,0],"end":[27,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4580:5461","0:4581:4930","0:4582:1325","0:4583:6730","0:4584:6731"],"impls":["0:1352","a:2:3310:6658-0:4578:3333","a:2:3269:211-0:4578:3333","a:2:9340:7907-0:4578:3333","a:2:9339:7908-0:4578:3333","a:2:3281:220-0:4578:3333","b:2:3198-0:4578:3333","b:2:2872-0:4578:3333","b:2:2869-0:4578:3333","b:2:4002-0:4578:3333","b:2:3202-0:4578:3333","b:2:3213-0:4578:3333","b:2:3208-0:4578:3333","0:4585"]}},"0:3510:2990":{"id":"0:3510:2990","crate_id":0,"name":"IncOccurrence","span":{"filename":"src/builder/action.rs","begin":[90,4],"end":[90,17]},"visibility":"default","docs":"Deprecated, replaced with [`ArgAction::SetTrue`] or [`ArgAction::Count`]","links":{"`ArgAction::Count`":"0:3503:1652","`ArgAction::SetTrue`":"0:3503:1652"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgAction::SetTrue` or `ArgAction::Count`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgAction::SetTrue` or `ArgAction::Count`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4883":{"id":"0:4883","crate_id":0,"name":null,"span":{"filename":"src/error/kind.rs","begin":[2,29],"end":[2,38]},"visibility":{"restricted":{"parent":"0:1991:782","path":"::error::kind"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4964:59":{"id":"0:4964:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,23],"end":[67,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1676":{"id":"0:1676","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1896,0],"end":[1901,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":["0:1677:1664","0:1678:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4860:7538":{"id":"0:4860:7538","crate_id":0,"name":"MissingSubcommand","span":{"filename":"src/error/kind.rs","begin":[271,4],"end":[271,21]},"visibility":"default","docs":"Occurs when a subcommand is required (as defined by [`Command::subcommand_required`]),\nbut the user does not provide one.\n\n# Examples\n\n```rust\n# use clap::{Command, ErrorKind};\nlet err = Command::new(\"prog\")\n    .subcommand_required(true)\n    .subcommand(Command::new(\"test\"))\n    .try_get_matches_from(vec![\n        \"myprog\",\n    ]);\nassert!(err.is_err());\nassert_eq!(err.unwrap_err().kind(), ErrorKind::MissingSubcommand);\n# ;\n```\n\n[`Command::subcommand_required`]: crate::Command::subcommand_required","links":{"crate::Command::subcommand_required":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4250":{"id":"0:4250","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4251:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1073:6349":{"id":"0:1073:6349","crate_id":0,"name":"get_groups","span":{"filename":"src/builder/command.rs","begin":[3523,4],"end":[3525,5]},"visibility":"public","docs":"Iterate through the set of groups.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1464:7090":{"id":"0:1464:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[612,4],"end":[617,43]},"visibility":"default","docs":"Parse the argument value\n\nWhen `arg` is `None`, an external subcommand value is being parsed.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2569:7504":{"id":"0:2569:7504","crate_id":0,"name":"set_source","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[173,4],"end":[179,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["source",{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4800:660":{"id":"0:4800:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/context.rs","begin":[2,22],"end":[2,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3198:8857":{"id":"0:3198:8857","crate_id":0,"name":"write_display_name","span":{"filename":"src/output/help.rs","begin":[963,4],"end":[976,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes binary name of a Parser Object to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3985:3362":{"id":"0:3985:3362","crate_id":0,"name":"requires","span":{"filename":"src/builder/arg.rs","begin":[73,4],"end":[73,55]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}}},"0:539:4661":{"id":"0:539:4661","crate_id":0,"name":"overrides_with_all","span":{"filename":"src/builder/arg.rs","begin":[4247,4],"end":[4250,5]},"visibility":"public","docs":"Sets multiple mutually overridable arguments by name.\n\ni.e. this argument and the following argument will override each other in POSIX style\n(whichever argument was specified at runtime **last** \"wins\")\n\n**NOTE:** When an argument is overridden it is essentially as if it never was used, any\nconflicts, requirements, etc. are evaluated **after** all \"overrides\" have been removed\n\n**NOTE:** Overriding an argument implies they [conflict][Arg::conflicts_with_all`].\n\n# Examples\n\n```rust\n# use clap::{Command, arg};\nlet m = Command::new(\"prog\")\n    .arg(arg!(-f --flag \"some flag\")\n        .conflicts_with(\"color\"))\n    .arg(arg!(-d --debug \"other flag\"))\n    .arg(arg!(-c --color \"third flag\")\n        .overrides_with_all(&[\"flag\", \"debug\"]))\n    .get_matches_from(vec![\n        \"prog\", \"-f\", \"-d\", \"-c\"]);\n            //    ^~~~~~^~~~~~~~~ flag and debug are overridden by color\n\nassert!(m.is_present(\"color\")); // even though flag conflicts with color, it's as if flag\n                                // and debug were never used because they were overridden\n                                // with color\nassert!(!m.is_present(\"debug\"));\nassert!(!m.is_present(\"flag\"));\n```","links":{"Arg::conflicts_with_all`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:882:5263":{"id":"0:882:5263","crate_id":0,"name":"subcommands","span":{"filename":"src/builder/command.rs","begin":[435,4],"end":[444,5]},"visibility":"public","docs":"Adds multiple subcommands to the list of valid possibilities.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, };\n# Command::new(\"myprog\")\n.subcommands( vec![\n       Command::new(\"config\").about(\"Controls configuration functionality\")\n                                .arg(Arg::new(\"config_file\")),\n       Command::new(\"debug\").about(\"Controls debug functionality\")])\n# ;\n```\n[`IntoIterator`]: std::iter::IntoIterator","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["subcmds",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:2823:3377":{"id":"a:2:3269:211-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:4706:2918":{"id":"b:2:3208-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:4987:8033":{"id":"b:2:2869-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:4761:7449":{"id":"b:2:2869-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1546:7104":{"id":"0:1546:7104","crate_id":0,"name":"range","span":{"filename":"src/builder/value_parser.rs","begin":[1103,4],"end":[1151,5]},"visibility":"public","docs":"Narrow the supported range","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["range",{"kind":"generic","inner":"B"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:7019","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3759:3261":{"id":"0:3759:3261","crate_id":0,"name":"CONTAINS_LAST","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"a:2:9340:7907-0:5048:1675":{"id":"a:2:9340:7907-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5231:660":{"id":"0:5231:660","crate_id":0,"name":"fmt","span":{"filename":"src/mkeymap.rs","begin":[25,9],"end":[25,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1802:604":{"id":"0:1802:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/debug_asserts.rs","begin":[358,4],"end":[360,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:2688:1664":{"id":"a:2:9339:7908-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:5156:7831":{"id":"b:2:2869-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4544:408":{"id":"0:4544:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/possible_value.rs","begin":[29,25],"end":[29,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2346:8148":{"id":"0:2346:8148","crate_id":0,"name":"index_of","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[758,4],"end":[762,5]},"visibility":"public","docs":"The first index of that an argument showed up.\n\nIndices are similar to argv indices, but are not exactly 1:1.\n\nFor flags (i.e. those arguments which don't have an associated value), indices refer\nto occurrence of the switch, such as `-f`, or `--flag`. However, for options the indices\nrefer to the *values* `-o val` would therefore not represent two distinct indices, only the\nindex for `val` would be recorded. This is by design.\n\nBesides the flag/option discrepancy, the primary difference between an argv index and clap\nindex, is that clap continues counting once all arguments have properly separated, whereas\nan argv index does not.\n\nThe examples should clear this up.\n\n*NOTE:* If an argument is allowed multiple times, this method will only give the *first*\nindex.  See [`ArgMatches::indices_of`].\n\n# Panics\n\nIf `id` is is not a valid argument or group id.\n\n# Examples\n\nThe argv indices are listed in the comments below. See how they correspond to the clap\nindices. Note that if it's not listed in a clap index, this is because it's not saved in\nin an `ArgMatches` struct for querying.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .takes_value(true))\n    .get_matches_from(vec![\"myapp\", \"-f\", \"-o\", \"val\"]);\n           // ARGV indices: ^0       ^1    ^2    ^3\n           // clap indices:          ^1          ^3\n\nassert_eq!(m.index_of(\"flag\"), Some(1));\nassert_eq!(m.index_of(\"option\"), Some(3));\n```\n\nNow notice, if we use one of the other styles of options:\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .takes_value(true))\n    .get_matches_from(vec![\"myapp\", \"-f\", \"-o=val\"]);\n           // ARGV indices: ^0       ^1    ^2\n           // clap indices:          ^1       ^3\n\nassert_eq!(m.index_of(\"flag\"), Some(1));\nassert_eq!(m.index_of(\"option\"), Some(3));\n```\n\nThings become much more complicated, or clear if we look at a more complex combination of\nflags. Let's also throw in the final option style for good measure.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"flag2\")\n        .short('F'))\n    .arg(Arg::new(\"flag3\")\n        .short('z'))\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .takes_value(true))\n    .get_matches_from(vec![\"myapp\", \"-fzF\", \"-oval\"]);\n           // ARGV indices: ^0      ^1       ^2\n           // clap indices:         ^1,2,3    ^5\n           //\n           // clap sees the above as 'myapp -f -z -F -o val'\n           //                         ^0    ^1 ^2 ^3 ^4 ^5\nassert_eq!(m.index_of(\"flag\"), Some(1));\nassert_eq!(m.index_of(\"flag2\"), Some(3));\nassert_eq!(m.index_of(\"flag3\"), Some(2));\nassert_eq!(m.index_of(\"option\"), Some(5));\n```\n\nOne final combination of flags/options to see how they combine:\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"flag2\")\n        .short('F'))\n    .arg(Arg::new(\"flag3\")\n        .short('z'))\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .takes_value(true))\n    .get_matches_from(vec![\"myapp\", \"-fzFoval\"]);\n           // ARGV indices: ^0       ^1\n           // clap indices:          ^1,2,3^5\n           //\n           // clap sees the above as 'myapp -f -z -F -o val'\n           //                         ^0    ^1 ^2 ^3 ^4 ^5\nassert_eq!(m.index_of(\"flag\"), Some(1));\nassert_eq!(m.index_of(\"flag2\"), Some(3));\nassert_eq!(m.index_of(\"flag3\"), Some(2));\nassert_eq!(m.index_of(\"option\"), Some(5));\n```\n\nThe last part to mention is when values are sent in multiple groups with a [delimiter].\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"option\")\n        .short('o')\n        .use_value_delimiter(true)\n        .multiple_values(true))\n    .get_matches_from(vec![\"myapp\", \"-o=val1,val2,val3\"]);\n           // ARGV indices: ^0       ^1\n           // clap indices:             ^2   ^3   ^4\n           //\n           // clap sees the above as 'myapp -o val1 val2 val3'\n           //                         ^0    ^1 ^2   ^3   ^4\nassert_eq!(m.index_of(\"option\"), Some(2));\nassert_eq!(m.indices_of(\"option\").unwrap().collect::<Vec<_>>(), &[2, 3, 4]);\n```\n[delimiter]: crate::Arg::value_delimiter()","links":{"`ArgMatches::indices_of`":"0:4953:1658","crate::Arg::value_delimiter()":"0:3972:1654"},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2712:8436":{"id":"0:2712:8436","crate_id":0,"name":"match_arg_error","span":{"filename":"src/parser/parser.rs","begin":[479,4],"end":[535,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg_os",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"clap_lex::ParsedArg","id":"29:107:8439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["valid_arg_found",{"kind":"primitive","inner":"bool"}],["trailing_values",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapError","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:992:5254":{"id":"0:992:5254","crate_id":0,"name":"short_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[2457,4],"end":[2463,5]},"visibility":"public","docs":"Add aliases, which function as \"hidden\" short flag subcommands.\n\nThese will automatically dispatch as if this subcommand was used. This is more efficient,\nand easier than creating multiple hidden subcommands as one only needs to check for the\nexistence of this command, and not all variants.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n    .subcommand(Command::new(\"test\").short_flag('t')\n        .short_flag_aliases(&['a', 'b', 'c']))\n        .arg(Arg::new(\"input\")\n            .help(\"the file to add\")\n            .required(false))\n    .get_matches_from(vec![\"myprog\", \"-a\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"char"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4694:2917":{"id":"b:2:2872-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4709:408":{"id":"0:4709:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[1736,15],"end":[1736,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3717":{"id":"0:3717","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10381:9312","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3718:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:638:4862":{"id":"0:638:4862","crate_id":0,"name":"get_display_order","span":{"filename":"src/builder/arg.rs","begin":[5063,4],"end":[5065,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4833:1674":{"id":"b:2:3198-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4656:660":{"id":"0:4656:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[868,16],"end":[868,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1376":{"id":"0:1376","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[69,0],"end":[73,1]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1377:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3542:1669":{"id":"0:3542:1669","crate_id":0,"name":"AppSettings","span":{"filename":"src/builder/app_settings.rs","begin":[34,0],"end":[523,1]},"visibility":"public","docs":"Application level settings, which affect how [`Command`] operates\n\n**NOTE:** When these settings are used, they apply only to current command, and are *not*\npropagated down or up through child or parent subcommands\n\n[`Command`]: crate::Command","links":{"crate::Command":"0:853:1653"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:3543:3042","0:3545:3064","0:3547:3068","0:3549:3072","0:3551:3075","0:3553:3079","0:3555:3082","0:3557:3086","0:3559:3089","0:3561:3092","0:3563:3096","0:3565:3100","0:3567:3104","0:3569:3107","0:3571:3110","0:3573:3113","0:3575:3117","0:3577:3121","0:3579:3125","0:3581:3129","0:3583:3140","0:3585:3144","0:3587:3147","0:3589:3151","0:3591:3154","0:3593:3158","0:3595:3162","0:3597:3165","0:3599:3168","0:3601:3172","0:3603:3175","0:3605:3178","0:3607:3181","0:3609:3182"],"impls":["a:2:3310:6658-0:3542:1669","a:2:3269:211-0:3542:1669","a:2:9340:7907-0:3542:1669","a:2:9339:7908-0:3542:1669","a:2:3281:220-0:3542:1669","b:2:3198-0:3542:1669","b:2:2872-0:3542:1669","b:2:2869-0:3542:1669","b:2:4002-0:3542:1669","b:2:3202-0:3542:1669","b:2:3213-0:3542:1669","b:2:3208-0:3542:1669","b:5:787-0:3542:1669","0:3639","0:3641","0:3642","0:3644","0:3645","0:3969","0:297"]}},"0:5084:604":{"id":"0:5084:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/matches/value_source.rs","begin":[2,29],"end":[2,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31962:74208":{"id":"2:31962:74208","crate_id":2,"name":"checked_rem","span":null,"visibility":"public","docs":"Checked integer remainder. Computes `self % rhs`, returning `None`\nif `rhs == 0`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(5u64.checked_rem(2), Some(1));\nassert_eq!(5u64.checked_rem(0), None);\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_checked_int_div\", since = \"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1664":{"id":"0:1664","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1864,0],"end":[1871,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":["0:1665:1664","0:1666:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4223":{"id":"0:4223","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[32,9],"end":[32,14]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4224:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4234":{"id":"0:4234","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4896:7463":{"id":"0:4896:7463","crate_id":0,"name":"source","span":{"filename":"src/error/mod.rs","begin":[61,4],"end":[61,55]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:32035:74265":{"id":"2:32035:74265","crate_id":2,"name":"widening_mul","span":null,"visibility":"public","docs":"Calculates the complete product `self * rhs` without the possibility to overflow.\n\nThis returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.\n\n# Examples\n\nBasic usage:\n\nPlease note that this example is shared between integer types.\nWhich explains why `u32` is used here.\n\n```\n#![feature(bigint_helper_methods)]\nassert_eq!(5u32.widening_mul(2), (10, 0));\nassert_eq!(1_000_000_000u32.widening_mul(10), (1410065408, 2));\n```","links":{},"attrs":["#[unstable(feature = \"bigint_helper_methods\", issue = \"85532\")]","#[rustc_const_unstable(feature = \"const_bigint_helper_methods\", issue =\n\"85532\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"u64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1187:6548":{"id":"0:1187:6548","crate_id":0,"name":"_panic_on_missing_help","span":{"filename":"src/builder/command.rs","begin":[4506,4],"end":[4525,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["help_required_globally",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2161:7857":{"id":"0:2161:7857","crate_id":0,"name":"subcommand_name","span":{"filename":"src/parser/arg_matcher.rs","begin":[131,4],"end":[133,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5010:7834":{"id":"b:2:4002-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5336:604":{"id":"0:5336:604","crate_id":0,"name":"eq","span":{"filename":"src/util/color.rs","begin":[2,33],"end":[2,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:493:4334":{"id":"0:493:4334","crate_id":0,"name":"hide_env_values","span":{"filename":"src/builder/arg.rs","begin":[2893,4],"end":[2899,5]},"visibility":"public","docs":"Do not display in help any values inside the associated ENV variables for the argument.\n\nThis is useful when ENV vars contain sensitive values.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"connect\")\n    .arg(Arg::new(\"host\")\n        .long(\"host\")\n        .env(\"CONNECT\")\n        .takes_value(true)\n        .hide_env_values(true));\n\n```\n\nIf we were to run the above program with `$ CONNECT=super_secret connect --help` the\n`[default: CONNECT=super_secret]` portion of the help text would be omitted.","links":{},"attrs":["#[cfg(feature = \"env\")]","#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:546:4672":{"id":"0:546:4672","crate_id":0,"name":"get_long_help","span":{"filename":"src/builder/arg.rs","begin":[4287,4],"end":[4289,5]},"visibility":"public","docs":"Get the long help specified for this argument, if any\n\n# Examples\n\n```rust\n# use clap::Arg;\nlet arg = Arg::new(\"foo\").long_help(\"long help\");\nassert_eq!(Some(\"long help\"), arg.get_long_help());\n```\n","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4530:1672":{"id":"a:2:9340:7907-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4356:3464":{"id":"0:4356:3464","crate_id":0,"name":"extend","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iterator",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::_core::iter::IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4926:5216":{"id":"a:2:3269:211-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:4080:3370":{"id":"b:2:3198-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1094:6380":{"id":"0:1094:6380","crate_id":0,"name":"is_disable_version_flag_set","span":{"filename":"src/builder/command.rs","begin":[3647,4],"end":[3649,5]},"visibility":"public","docs":"Report whether [`Command::disable_version_flag`] is set","links":{"`Command::disable_version_flag`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3735:3217":{"id":"0:3735:3217","crate_id":0,"name":"TRAILING_VARARG","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"a:2:3281:220-0:4910:7462":{"id":"a:2:3281:220-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:5020:1678":{"id":"b:2:3198-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5181:660":{"id":"0:5181:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/validator.rs","begin":[605,25],"end":[605,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4304:5184":{"id":"0:4304:5184","crate_id":0,"name":"HIDE_ENV_VALS","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"env\")]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"b:2:3198-0:4578:3333":{"id":"b:2:3198-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5147":{"id":"0:5147","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1717,16],"end":[1717,21]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5148:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4748:7443":{"id":"1:4748:7443","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:11364","1:4750:11365","1:4751:11366","1:4753:9499","1:4754:7485","1:4756:7433","1:4757:6462"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:9494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3281:220-0:4131:2923":{"id":"a:2:3281:220-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3012:604":{"id":"0:3012:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[48,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1004:6086":{"id":"0:1004:6086","crate_id":0,"name":"subcommand_required","span":{"filename":"src/builder/command.rs","begin":[2752,4],"end":[2758,5]},"visibility":"public","docs":"If no [`subcommand`] is present at runtime, error and exit gracefully.\n\n# Examples\n\n```rust\n# use clap::{Command, ErrorKind};\nlet err = Command::new(\"myprog\")\n    .subcommand_required(true)\n    .subcommand(Command::new(\"test\"))\n    .try_get_matches_from(vec![\n        \"myprog\",\n    ]);\nassert!(err.is_err());\nassert_eq!(err.unwrap_err().kind(), ErrorKind::MissingSubcommand);\n# ;\n```\n\n[`subcommand`]: crate::Command::subcommand()","links":{"crate::Command::subcommand()":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1019:6283":{"id":"0:1019:6283","crate_id":0,"name":"get_bin_name","span":{"filename":"src/builder/command.rs","begin":[3277,4],"end":[3279,5]},"visibility":"public","docs":"Get the name of the binary.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:978:3933":{"id":"0:978:3933","crate_id":0,"name":"allow_hyphen_values","span":{"filename":"src/builder/command.rs","begin":[2067,4],"end":[2073,5]},"visibility":"public","docs":"Specifies that leading hyphens are allowed in all argument *values* (e.g. `-10`).\n\nOtherwise they will be parsed as another flag or option.  See also\n[`Command::allow_negative_numbers`].\n\n**NOTE:** Use this setting with caution as it silences certain circumstances which would\notherwise be an error (such as accidentally forgetting to specify a value for leading\noption). It is preferred to set this on a per argument basis, via [`Arg::allow_hyphen_values`].\n\n# Examples\n\n```rust\n# use clap::{Arg, Command};\n// Imagine you needed to represent negative numbers as well, such as -10\nlet m = Command::new(\"nums\")\n    .allow_hyphen_values(true)\n    .arg(Arg::new(\"neg\"))\n    .get_matches_from(vec![\n        \"nums\", \"-20\"\n    ]);\n\nassert_eq!(m.value_of(\"neg\"), Some(\"-20\"));\n# ;\n```\n[`Arg::allow_hyphen_values`]: crate::Arg::allow_hyphen_values()","links":{"crate::Arg::allow_hyphen_values()":"0:3972:1654","`Command::allow_negative_numbers`":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4588:1673":{"id":"a:2:9339:7908-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4618":{"id":"0:4618","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,16],"end":[27,25]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4619:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2364":{"id":"0:2364","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1075,0],"end":[1176,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"# Advanced","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2365:7974","0:2368:7988","0:2371:8015","0:2372:8025","0:2375:8034","0:2378:8042"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4617":{"id":"0:4617","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,16],"end":[27,25]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5171":{"id":"0:5171","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1724,40],"end":[1724,42]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:4664:2905":{"id":"b:2:3202-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:985:5244":{"id":"0:985:5244","crate_id":0,"name":"long_flag","span":{"filename":"src/builder/command.rs","begin":[2315,4],"end":[2325,5]},"visibility":"public","docs":"Sets the long version of the subcommand flag without the preceding `--`.\n\nAllows the subcommand to be used as if it were an [`Arg::long`].\n\n**NOTE:** Any leading `-` characters will be stripped.\n\n# Examples\n\nTo set `long_flag` use a word containing valid UTF-8 codepoints. If you supply a double leading\n`--` such as `--sync` they will be stripped. Hyphens in the middle of the word; however,\nwill *not* be stripped (i.e. `sync-file` is allowed).\n\n```\n# use clap::{Command, Arg, ArgAction};\nlet matches = Command::new(\"pacman\")\n    .subcommand(\n        Command::new(\"sync\").long_flag(\"sync\").arg(\n            Arg::new(\"search\")\n                .short('s')\n                .long(\"search\")\n                .action(ArgAction::SetTrue)\n                .help(\"search remote repositories for matching strings\"),\n        ),\n    )\n    .get_matches_from(vec![\"pacman\", \"--sync\", \"--search\"]);\n\nassert_eq!(matches.subcommand_name().unwrap(), \"sync\");\nlet sync_matches = matches.subcommand_matches(\"sync\").unwrap();\nassert!(*sync_matches.get_one::<bool>(\"search\").expect(\"defaulted by clap\"));\n```\n\n[`Arg::long`]: Arg::long()","links":{"Arg::long()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["long",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4456:1667":{"id":"a:2:9340:7907-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"43:62:13257":{"id":"43:62:13257","crate_id":43,"name":"Endianity","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:63:73620","43:64:73621","43:65:73622","43:67:73623","43:69:73624","43:71:73625","43:73:73626","43:74:73627","43:75:73628","43:76:73629","43:77:73630","43:78:11595","43:79:11596","43:80:11597"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4574":{"id":"0:4574","crate_id":0,"name":null,"span":{"filename":"src/builder/usage_parser.rs","begin":[8,9],"end":[8,18]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4575:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1330:6712":{"id":"0:1330:6712","crate_id":0,"name":"get_visible_quoted_name","span":{"filename":"src/builder/possible_value.rs","begin":[204,4],"end":[214,5]},"visibility":"crate","docs":"Get the name if argument value is not hidden, `None` otherwise,\nbut wrapped in quotes if it contains whitespace","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4647:2916":{"id":"b:2:2872-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1745":{"id":"0:1745","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[17,0],"end":[24,1]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1747:3889"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4947:3033":{"id":"a:2:3269:211-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:4080:3370":{"id":"a:2:3310:6658-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1423:681":{"id":"0:1423:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[289,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["p",{"kind":"generic","inner":"P"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"44:2135:13561":{"id":"44:2135:13561","crate_id":44,"name":"SectionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:2136:14383","44:2137:9673","44:2138:13619","44:2139:14600","44:2140:14601","44:2141:14460","44:2142:14602","44:2143:14603","44:2144:14604","44:2145:14605","44:2146:14606","44:2147:14607","44:2148:14608","44:2149:899","44:2152:73845","44:2153:9353","44:2156:73887","44:2160:13594","44:2163:11437","44:2166:73901","44:2169:74012","44:2172:13636","44:2175:73888","44:2178:2658","44:2181:74013","44:2184:715","44:2187:74014","44:2190:57454","44:2193:74015","44:2196:74016","44:2199:74017"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1363:2590":{"id":"0:1363:2590","crate_id":0,"name":"short","span":{"filename":"src/builder/usage_parser.rs","begin":[147,4],"end":[161,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2753:7861":{"id":"0:2753:7861","crate_id":0,"name":"start_custom_arg","span":{"filename":"src/parser/parser.rs","begin":[1576,4],"end":[1585,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["source",{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:32015:74251":{"id":"2:32015:74251","crate_id":2,"name":"checked_next_multiple_of","span":null,"visibility":"public","docs":"Calculates the smallest value greater than or equal to `self` that\nis a multiple of `rhs`. Returns `None` if `rhs` is zero or the\noperation would result in overflow.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(int_roundings)]\nassert_eq!(16_u64.checked_next_multiple_of(8), Some(16));\nassert_eq!(23_u64.checked_next_multiple_of(8), Some(24));\nassert_eq!(1_u64.checked_next_multiple_of(0), None);\nassert_eq!(u64::MAX.checked_next_multiple_of(2), None);\n```","links":{},"attrs":["#[unstable(feature = \"int_roundings\", issue = \"88581\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3200:8859":{"id":"0:3200:8859","crate_id":0,"name":"write_bin_name","span":{"filename":"src/output/help.rs","begin":[979,4],"end":[994,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes binary name of a Parser Object to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5122:8400":{"id":"0:5122:8400","crate_id":0,"name":"rest","span":{"filename":"src/parser/parser.rs","begin":[1699,8],"end":[1699,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3198-0:4921:7467":{"id":"b:2:3198-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4491:5267":{"id":"0:4491:5267","crate_id":0,"name":"subcommand_value_name","span":{"filename":"src/builder/command.rs","begin":[112,4],"end":[112,45]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:1460:3893":{"id":"0:1460:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[593,4],"end":[597,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3800:351":{"id":"0:3800:351","crate_id":0,"name":"bitand","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Returns the intersection between the two sets of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4183:3636":{"id":"0:4183:3636","crate_id":0,"name":"Global","span":{"filename":"src/builder/arg_settings.rs","begin":[87,4],"end":[87,10]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::global`] and [`Arg::is_global_set`]","links":{"`Arg::global`":"0:3972:1654","`Arg::is_global_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::global` and `Arg::is_global_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::global` and `Arg::is_global_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:5293:2589":{"id":"0:5293:2589","crate_id":0,"name":"id","span":{"filename":"src/util/graph.rs","begin":[3,4],"end":[3,9]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:589:4760":{"id":"0:589:4760","crate_id":0,"name":"is_hide_default_value_set","span":{"filename":"src/builder/arg.rs","begin":[4612,4],"end":[4614,5]},"visibility":"public","docs":"Report whether [`Arg::hide_default_value`] is set","links":{"`Arg::hide_default_value`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3361":{"id":"0:3361","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[144,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3362:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:3096:3014":{"id":"b:2:3213-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4710":{"id":"0:4710","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1736,22],"end":[1736,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4711:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5100:1542":{"id":"0:5100:1542","crate_id":0,"name":"0","span":{"filename":"src/parser/parser.rs","begin":[1684,8],"end":[1684,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3141:8769":{"id":"0:3141:8769","crate_id":0,"name":"write_before_help","span":{"filename":"src/output/help.rs","begin":[391,4],"end":[405,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4694:2917":{"id":"b:2:3198-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2431:8271":{"id":"0:2431:8271","crate_id":0,"name":"next_back","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1479,4],"end":[1481,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2699":{"id":"0:2699","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[48,0],"end":[1598,1]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["0:2702:6496","0:2712:8436","0:2715:8376","0:2717:8445","0:2720:8378","0:2723:8422","0:2724:8438","0:2725:8387","0:2732:8406","0:2738:8474","0:2740:8414","0:2742:8509","0:2743:8395","0:2744:8477","0:2745:8523","0:2746:8433","0:2750:8434","0:2751:8540","0:2753:7861","0:2754:7868"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:5048:1675":{"id":"a:2:3310:6658-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3209:8756":{"id":"0:3209:8756","crate_id":0,"name":"TAB","span":{"filename":"src/output/help.rs","begin":[1114,0],"end":[1114,25]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"    \"","value":null,"is_literal":true}},"0:3557:3086":{"id":"0:3557:3086","crate_id":0,"name":"DontDelimitTrailingValues","span":{"filename":"src/builder/app_settings.rs","begin":[141,4],"end":[141,29]},"visibility":"default","docs":"Deprecated, replaced with [`Command::dont_delimit_trailing_values`] and\n[`Command::is_dont_delimit_trailing_values_set`]","links":{"`Command::is_dont_delimit_trailing_values_set`":"0:4456:1667","`Command::dont_delimit_trailing_values`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::dont_delimit_trailing_values` and `Command::is_dont_delimit_trailing_values_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::dont_delimit_trailing_values` and `Command::is_dont_delimit_trailing_values_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:2184:543":{"id":"0:2184:543","crate_id":0,"name":"deref","span":{"filename":"src/parser/arg_matcher.rs","begin":[277,4],"end":[279,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3492:116","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3126:2696":{"id":"0:3126:2696","crate_id":0,"name":"none","span":{"filename":"src/output/help.rs","begin":[149,4],"end":[151,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4679:1362":{"id":"0:4679:1362","crate_id":0,"name":"target","span":{"filename":"src/builder/value_parser.rs","begin":[1291,4],"end":[1291,39]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"std::marker::PhantomData","id":"2:3287:7174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},"5:5833:9253":{"id":"5:5833:9253","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1244:2675":{"id":"0:1244:2675","crate_id":0,"name":"set","span":{"filename":"src/builder/command.rs","begin":[4862,4],"end":[4864,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3997:3373":{"id":"0:3997:3373","crate_id":0,"name":"num_vals","span":{"filename":"src/builder/arg.rs","begin":[85,4],"end":[85,38]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:2409:5300":{"id":"0:2409:5300","crate_id":0,"name":"size_hint","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1412,4],"end":[1414,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4933:7836":{"id":"b:2:3198-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:4647:2916":{"id":"b:2:3198-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31937:74191":{"id":"2:31937:74191","crate_id":2,"name":"BITS","span":null,"visibility":"public","docs":"The size of this integer type in bits.\n\n# Examples\n\n```\nassert_eq!(u64::BITS, 64);\n```","links":{},"attrs":["#[stable(feature = \"int_bits_const\", since = \"1.53.0\")]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"primitive","inner":"u32"},"default":"64"}},"0:4314:276":{"id":"0:4314:276","crate_id":0,"name":"all","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns the set containing all flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5324:5552":{"id":"0:5324:5552","crate_id":0,"name":"Never","span":{"filename":"src/util/color.rs","begin":[55,4],"end":[55,9]},"visibility":"default","docs":"Disables colored output no matter if the output is going to a terminal/TTY, or not.\n\n# Platform Specific\n\nThis setting only applies to Unix, Linux, and macOS (i.e. non-Windows platforms)\n\n# Examples\n\n ```no_run\n# use clap::{Command, ColorChoice};\nCommand::new(\"myprog\")\n    .color(ColorChoice::Never)\n    .get_matches();\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[892,0],"end":[2495,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":"# Value Handling","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:421:2597","0:422:2893","0:423:2901","0:425:3775","0:426:3794","0:427:2601","0:428:2600","0:429:2593","0:430:3847","0:431:2900","0:432:2664","0:439:3378","0:446:3887","0:449:2898","0:451:3893","0:455:2880","0:456:3933","0:457:3937","0:458:3941","0:459:3952","0:460:3974","0:461:3979","0:462:3986","0:463:4014","0:464:4018","0:465:4046","0:466:61","0:467:3029","0:468:4093","0:469:4094","0:471:4089","0:472:4142","0:473:4146","0:474:4147","0:476:4143","0:477:600","0:478:4198"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4605:6997":{"id":"0:4605:6997","crate_id":0,"name":"CommandWithArguments","span":{"filename":"src/builder/value_hint.rs","begin":[57,4],"end":[57,24]},"visibility":"default","docs":"Capture the remaining arguments as a command name and arguments for that command. This is\ncommon when writing shell wrappers that execute anther command, for example `sudo` or `env`.\n\nThis hint is special, the argument must be a positional argument and have\n[`.multiple_values(true)`] and Command must use [`Command::trailing_var_arg(true)`]. The result is that the\ncommand line `my_app ls -la /` will be parsed as `[\"ls\", \"-la\", \"/\"]` and clap won't try to\nparse the `-la` argument itself.\n\n[`Command::trailing_var_arg(true)`]: crate::Command::trailing_var_arg\n[`.multiple_values(true)`]: crate::Arg::multiple_values()","links":{"crate::Command::trailing_var_arg":"0:4456:1667","crate::Arg::multiple_values()":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:485:4269":{"id":"0:485:4269","crate_id":0,"name":"display_order","span":{"filename":"src/builder/arg.rs","begin":[2665,4],"end":[2668,5]},"visibility":"public","docs":"Allows custom ordering of args within the help message.\n\nArgs with a lower value will be displayed first in the help message. This is helpful when\none would like to emphasise frequently used args, or prioritize those towards the top of\nthe list. Args with duplicate display orders will be displayed in alphabetical order.\n\n**NOTE:** The default is 999 for all arguments.\n\n**NOTE:** This setting is ignored for [positional arguments] which are always displayed in\n[index] order.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"a\") // Typically args are grouped alphabetically by name.\n                             // Args without a display_order have a value of 999 and are\n                             // displayed alphabetically with all other 999 valued args.\n        .long(\"long-option\")\n        .short('o')\n        .takes_value(true)\n        .help(\"Some help and text\"))\n    .arg(Arg::new(\"b\")\n        .long(\"other-option\")\n        .short('O')\n        .takes_value(true)\n        .display_order(1)   // In order to force this arg to appear *first*\n                            // all we have to do is give it a value lower than 999.\n                            // Any other args with a value of 1 will be displayed\n                            // alphabetically with this one...then 2 values, then 3, etc.\n        .help(\"I should be first!\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nThe above example displays the following help message\n\n```text\ncust-ord\n\nUSAGE:\n    cust-ord [OPTIONS]\n\nOPTIONS:\n    -h, --help                Print help information\n    -V, --version             Print version information\n    -O, --other-option <b>    I should be first!\n    -o, --long-option <a>     Some help and text\n```\n[positional arguments]: Arg::index()\n[index]: Arg::index()","links":{"Arg::index()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ord",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2826:2562":{"id":"0:2826:2562","crate_id":0,"name":"cmd","span":{"filename":"src/parser/validator.rs","begin":[12,4],"end":[12,29]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}},"0:4330:10096":{"id":"0:4330:10096","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns the [symmetric difference][sym-diff] between the flags\nin `self` and `other`.\n\nSpecifically, the returned set contains the flags present which\nare present in `self` or `other`, but that are not present in\nboth. Equivalently, it contains the flags present in *exactly\none* of the sets `self` and `other`.\n\nThis is equivalent to using the `^` operator (e.g.\n[`ops::BitXor`]), as in `flags ^ other`.\n\n[sym-diff]: https://en.wikipedia.org/wiki/Symmetric_difference\n[`ops::BitXor`]: https://doc.rust-lang.org/std/ops/trait.BitXor.html","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1070:6347":{"id":"0:1070:6347","crate_id":0,"name":"find_subcommand_mut","span":{"filename":"src/builder/command.rs","begin":[3514,4],"end":[3519,5]},"visibility":"public","docs":"Find subcommand such that its name or one of aliases equals `name`, returning\na mutable reference to the subcommand.\n\nThis does not recurse through subcommands of subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31974:1446":{"id":"2:31974:1446","crate_id":2,"name":"unchecked_shr","span":null,"visibility":"public","docs":"Unchecked shift right. Computes `self >> rhs`, assuming that\n`rhs` is less than the number of bits in `self`.\n\n# Safety\n\nThis results in undefined behavior if `rhs` is larger than\nor equal to the number of bits in `self`,\ni.e. when [`checked_shr`] would return `None`.\n\n[`checked_shr`]: u64::checked_shr","links":{"u64::checked_shr":"1:16024:9076"},"attrs":["#[unstable(feature = \"unchecked_math\", reason = \"niche optimization path\",\nissue = \"85122\",)]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue =\n\"85122\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2169:7872":{"id":"0:2169:7872","crate_id":0,"name":"start_occurrence_of_group","span":{"filename":"src/parser/arg_matcher.rs","begin":[177,4],"end":[185,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:462:3986":{"id":"0:462:3986","crate_id":0,"name":"value_delimiter","span":{"filename":"src/builder/arg.rs","begin":[1919,4],"end":[1922,5]},"visibility":"public","docs":"Separator between the arguments values, defaults to `,` (comma).\n\n**NOTE:** implicitly sets [`Arg::use_value_delimiter(true)`]\n\n**NOTE:** implicitly sets [`Arg::takes_value(true)`]\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"config\")\n        .short('c')\n        .long(\"config\")\n        .value_delimiter(';'))\n    .get_matches_from(vec![\n        \"prog\", \"--config=val1;val2;val3\"\n    ]);\n\nassert_eq!(m.values_of(\"config\").unwrap().collect::<Vec<_>>(), [\"val1\", \"val2\", \"val3\"])\n```\n[`Arg::use_value_delimiter(true)`]: Arg::use_value_delimiter()\n[`Arg::takes_value(true)`]: Arg::takes_value()","links":{"Arg::use_value_delimiter()":"0:3972:1654","Arg::takes_value()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["d",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:3503:1652":{"id":"a:2:9340:7907-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3489:7448":{"id":"0:3489:7448","crate_id":0,"name":"USAGE_CODE","span":{"filename":"src/util/mod.rs","begin":[23,0],"end":[23,37]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"i32"},"expr":"2","value":"2i32","is_literal":true}},"a:2:3269:211-0:3096:3014":{"id":"a:2:3269:211-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:4105:1655":{"id":"a:2:3281:220-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3720:660":{"id":"0:3720:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2387:8253":{"id":"0:2387:8253","crate_id":0,"name":"verify_arg","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1238,4],"end":[1259,5]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:504:4401":{"id":"0:504:4401","crate_id":0,"name":"default_value_if_os","span":{"filename":"src/builder/arg.rs","begin":[3256,4],"end":[3265,5]},"visibility":"public","docs":"Provides a conditional default value in the exact same manner as [`Arg::default_value_if`]\nonly using [`OsStr`]s instead.\n\n[`Arg::default_value_if`]: Arg::default_value_if()\n[`OsStr`]: std::ffi::OsStr","links":{"Arg::default_value_if()":"0:3972:1654","std::ffi::OsStr":"1:2937:179"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}],["val",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["default",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5091:415":{"id":"0:5091:415","crate_id":0,"name":"cmp","span":{"filename":"src/parser/matches/value_source.rs","begin":[2,56],"end":[2,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1396:1542":{"id":"0:1396:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/value_parser.rs","begin":[59,23],"end":[59,39]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2974":{"id":"0:2974","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[24,0],"end":[24,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"error::MatchesError","name":"MatchesError","id":"0:4933:7836","glob":false}},"0:1325:6700":{"id":"0:1325:6700","crate_id":0,"name":"get_visible_help","span":{"filename":"src/builder/possible_value.rs","begin":[157,4],"end":[163,5]},"visibility":"crate","docs":"Get the help specified for this argument, if any and the argument\nvalue is not hidden","links":{},"attrs":["#[inline]","#[cfg(feature = \"unstable-v4\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4953:1658":{"id":"a:2:3310:6658-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4480:5259":{"id":"0:4480:5259","crate_id":0,"name":"term_w","span":{"filename":"src/builder/command.rs","begin":[101,4],"end":[101,25]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:2828":{"id":"0:2828","crate_id":0,"name":null,"span":{"filename":"src/parser/validator.rs","begin":[16,0],"end":[603,1]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["0:2831:920","0:2832:8435","0:2836:8577","0:2840:8574","0:2843:8586","0:2849:8589","0:2853:8601","0:2862:8604","0:2866:8576","0:2868:8613","0:2869:8612","0:2871:8575","0:2878:8631","0:2879:8635","0:2882:8639","0:2884:8632"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:31:25-0:4063:3357":{"id":"b:31:25-0:4063:3357","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:2912:8556":{"id":"0:2912:8556","crate_id":0,"name":"did_you_mean_flag","span":{"filename":"src/parser/features/suggestions.rs","begin":[36,0],"end":[73,1]},"visibility":"crate","docs":"Returns a suffix that can be empty, or is the standard 'did you mean' phrase","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["remaining_args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}],["longs",{"kind":"generic","inner":"I"}],["subcommands",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"impl IntoIterator<Item = &'a mut Command<'help>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[{"region_predicate":{"lifetime":"'help","bounds":[{"outlives":"'a"}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2869-0:5110:8389":{"id":"b:2:2869-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:4676:2906":{"id":"b:2:2869-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3256:2596":{"id":"0:3256:2596","crate_id":0,"name":"required","span":{"filename":"src/output/usage.rs","begin":[13,4],"end":[13,42]},"visibility":{"restricted":{"parent":"0:3223:5461","path":"::output::usage"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}}],"bindings":[]}}}}},"0:1834":{"id":"0:1834","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[28,23],"end":[28,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"app_settings::AppFlags","name":"AppFlags","id":"0:3527:1668","glob":false}},"2:10620:146":{"id":"2:10620:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10621:652","2:10622:2517","2:10623:11594","2:10624:11595","2:10625:11596","2:10626:11597","2:10627:11598","2:10628:11599","2:10629:11600","2:10630:11601","2:10631:11602","2:10632:11603","2:10633:11604","2:10634:11605","2:10635:11606","2:10636:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:1397:7028":{"id":"b:2:3208-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31972:1445":{"id":"2:31972:1445","crate_id":2,"name":"unchecked_shl","span":null,"visibility":"public","docs":"Unchecked shift left. Computes `self << rhs`, assuming that\n`rhs` is less than the number of bits in `self`.\n\n# Safety\n\nThis results in undefined behavior if `rhs` is larger than\nor equal to the number of bits in `self`,\ni.e. when [`checked_shl`] would return `None`.\n\n[`checked_shl`]: u64::checked_shl","links":{"u64::checked_shl":"1:16024:9076"},"attrs":["#[unstable(feature = \"unchecked_math\", reason = \"niche optimization path\",\nissue = \"85122\",)]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue =\n\"85122\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3178:8835":{"id":"0:3178:8835","crate_id":0,"name":"subcommand_next_line_help","span":{"filename":"src/output/help.rs","begin":[789,4],"end":[807,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["spec_vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5332":{"id":"0:5332","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[2,29],"end":[2,31]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2832:8435":{"id":"0:2832:8435","crate_id":0,"name":"validate","span":{"filename":"src/parser/validator.rs","begin":[22,4],"end":[89,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["parse_state",{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[114,34],"end":[114,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Result","name":"Result","id":"0:2005:205","glob":false}},"b:2:2872-0:4947:3033":{"id":"b:2:2872-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3716:660":{"id":"0:3716:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2067":{"id":"0:2067","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[994,0],"end":[998,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2068:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4203:3569":{"id":"0:4203:3569","crate_id":0,"name":"Last","span":{"filename":"src/builder/arg_settings.rs","begin":[183,4],"end":[183,8]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::last`] and [`Arg::is_last_set`]","links":{"`Arg::last`":"0:3972:1654","`Arg::is_last_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::last` and `Arg::is_last_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::last` and `Arg::is_last_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"44:2946:13630":{"id":"44:2946:13630","crate_id":44,"name":"NoteHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:2947:13619","44:2948:14671","44:2949:14672","44:2950:14673"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:629:4839":{"id":"0:629:4839","crate_id":0,"name":"_build","span":{"filename":"src/builder/arg.rs","begin":[4941,4],"end":[5008,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13521:31604":{"id":"2:13521:31604","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16010:9064"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4886:127":{"id":"a:2:3281:220-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4829:907":{"id":"0:4829:907","crate_id":0,"name":"ne","span":{"filename":"src/error/context.rs","begin":[42,23],"end":[42,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4807:7450":{"id":"0:4807:7450","crate_id":0,"name":"ContextValue","span":{"filename":"src/error/context.rs","begin":[44,0],"end":[55,1]},"visibility":"public","docs":"A piece of error information","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4808:174","0:4810:7029","0:4813:216","0:4816:7516","0:4819:7544"],"impls":["a:2:3310:6658-0:4807:7450","a:2:3269:211-0:4807:7450","a:2:9340:7907-0:4807:7450","a:2:9339:7908-0:4807:7450","a:2:3281:220-0:4807:7450","b:2:3198-0:4807:7450","b:2:2872-0:4807:7450","b:2:2869-0:4807:7450","b:2:4002-0:4807:7450","b:2:3202-0:4807:7450","b:2:3213-0:4807:7450","b:2:3208-0:4807:7450","b:5:787-0:4807:7450","b:31:25-0:4807:7450","0:4822","0:4824","0:4826","0:4827","0:4830","0:4831"]}},"0:4927:2748":{"id":"0:4927:2748","crate_id":0,"name":"matches","span":{"filename":"src/parser/arg_matcher.rs","begin":[18,4],"end":[18,23]},"visibility":{"restricted":{"parent":"0:2095:7828","path":"::parser::arg_matcher"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4251:660":{"id":"0:4251:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2984:1701":{"id":"0:2984:1701","crate_id":0,"name":"mkeymap","span":{"filename":"src/mkeymap.rs","begin":[1,0],"end":[193,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5182:3335","0:5196:5213","0:5220:7335","0:3048:8695"],"is_stripped":false}},"0:4942:7020":{"id":"0:4942:7020","crate_id":0,"name":"AnyValue","span":{"filename":"src/parser/matches/any_value.rs","begin":[2,0],"end":[7,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4943:2669","0:4944:2589"],"impls":["0:2197","a:2:3310:6658-0:4942:7020","a:2:3269:211-0:4942:7020","a:2:9340:7907-0:4942:7020","a:2:9339:7908-0:4942:7020","a:2:3281:220-0:4942:7020","b:2:3198-0:4942:7020","b:2:2872-0:4942:7020","b:2:2869-0:4942:7020","b:2:4002-0:4942:7020","b:2:3202-0:4942:7020","b:2:3213-0:4942:7020","b:2:3208-0:4942:7020","b:5:787-0:4942:7020","0:4945","0:2207"]}},"0:4895:867":{"id":"0:4895:867","crate_id":0,"name":"message","span":{"filename":"src/error/mod.rs","begin":[60,4],"end":[60,28]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2217":{"id":"0:2217","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[72,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2218:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:588:4758":{"id":"0:588:4758","crate_id":0,"name":"is_hide_set","span":{"filename":"src/builder/arg.rs","begin":[4607,4],"end":[4609,5]},"visibility":"public","docs":"Report whether [`Arg::hide`] is set","links":{"`Arg::hide`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1222:6594":{"id":"0:1222:6594","crate_id":0,"name":"format_group","span":{"filename":"src/builder/command.rs","begin":[4803,4],"end":[4820,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["g",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:432:2664":{"id":"0:432:2664","crate_id":0,"name":"validator","span":{"filename":"src/builder/arg.rs","begin":[1525,4],"end":[1534,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::value_parser(...)`]","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::value_parser(...)`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::value_parser(...)`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'help"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1596:920":{"id":"0:1596:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[1457,4],"end":[1459,5]},"visibility":"public","docs":"Implementation for [`ValueParser::bool`]","links":{"`ValueParser::bool`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5080:408":{"id":"0:5080:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/value_source.rs","begin":[2,16],"end":[2,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2449":{"id":"0:2449","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1538,0],"end":[1546,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"Creates an empty iterator.","links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2451:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4788:7527":{"id":"0:4788:7527","crate_id":0,"name":"SuggestedValue","span":{"filename":"src/error/context.rs","begin":[32,4],"end":[32,18]},"visibility":"default","docs":"Potential fix for the user","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/builder/action.rs","begin":[252,0],"end":[323,1]},"visibility":{"restricted":{"parent":"0:269:2893","path":"::builder::action"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:271:3028","0:272:3029","0:273:3030","0:274:3032"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4211:4327":{"id":"0:4211:4327","crate_id":0,"name":"HideEnv","span":{"filename":"src/builder/arg_settings.rs","begin":[221,4],"end":[221,11]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::hide_env`] and [`Arg::is_hide_env_set`]","links":{"`Arg::hide_env`":"0:3972:1654","`Arg::is_hide_env_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::hide_env` and `Arg::is_hide_env_set`\")]","#[cfg(feature = \"env\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::hide_env` and `Arg::is_hide_env_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1480:7050":{"id":"0:1480:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[686,4],"end":[686,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3375:8994":{"id":"0:3375:8994","crate_id":0,"name":"fnv","span":{"filename":"src/util/fnv.rs","begin":[1,0],"end":[46,1]},"visibility":{"restricted":{"parent":"0:3374:1659","path":"::util"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3387:9000","0:3388:3335","0:3393:9003"],"is_stripped":false}},"0:1160:6481":{"id":"0:1160:6481","crate_id":0,"name":"get_override_help","span":{"filename":"src/builder/command.rs","begin":[4117,4],"end":[4119,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31954:1441":{"id":"2:31954:1441","crate_id":2,"name":"unchecked_add","span":null,"visibility":"public","docs":"Unchecked integer addition. Computes `self + rhs`, assuming overflow\ncannot occur.\n\n# Safety\n\nThis results in undefined behavior when\n`self + rhs > u64::MAX` or `self + rhs < u64::MIN`,\ni.e. when [`checked_add`] would return `None`.\n\n[`checked_add`]: u64::checked_add","links":{"u64::checked_add":"1:16024:9076"},"attrs":["#[unstable(feature = \"unchecked_math\", reason = \"niche optimization path\",\nissue = \"85122\",)]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue =\n\"85122\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"43:450:13222":{"id":"43:450:13222","crate_id":43,"name":"UnwindOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:452:3031"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"primitive","inner":"usize"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ReaderOffset","id":"43:1197:13261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:981:5945":{"id":"0:981:5945","crate_id":0,"name":"allow_missing_positional","span":{"filename":"src/builder/command.rs","begin":[2240,4],"end":[2246,5]},"visibility":"public","docs":"Allows one to implement two styles of CLIs where positionals can be used out of order.\n\nThe first example is a CLI where the second to last positional argument is optional, but\nthe final positional argument is required. Such as `$ prog [optional] <required>` where one\nof the two following usages is allowed:\n\n* `$ prog [optional] <required>`\n* `$ prog <required>`\n\nThis would otherwise not be allowed. This is useful when `[optional]` has a default value.\n\n**Note:** when using this style of \"missing positionals\" the final positional *must* be\n[required] if `--` will not be used to skip to the final positional argument.\n\n**Note:** This style also only allows a single positional argument to be \"skipped\" without\nthe use of `--`. To skip more than one, see the second example.\n\nThe second example is when one wants to skip multiple optional positional arguments, and use\nof the `--` operator is OK (but not required if all arguments will be specified anyways).\n\nFor example, imagine a CLI which has three positional arguments `[foo] [bar] [baz]...` where\n`baz` accepts multiple values (similar to man `ARGS...` style training arguments).\n\nWith this setting the following invocations are posisble:\n\n* `$ prog foo bar baz1 baz2 baz3`\n* `$ prog foo -- baz1 baz2 baz3`\n* `$ prog -- baz1 baz2 baz3`\n\n# Examples\n\nStyle number one from above:\n\n```rust\n# use clap::{Command, Arg};\n// Assume there is an external subcommand named \"subcmd\"\nlet m = Command::new(\"myprog\")\n    .allow_missing_positional(true)\n    .arg(Arg::new(\"arg1\"))\n    .arg(Arg::new(\"arg2\")\n        .required(true))\n    .get_matches_from(vec![\n        \"prog\", \"other\"\n    ]);\n\nassert_eq!(m.value_of(\"arg1\"), None);\nassert_eq!(m.value_of(\"arg2\"), Some(\"other\"));\n```\n\nNow the same example, but using a default value for the first optional positional argument\n\n```rust\n# use clap::{Command, Arg};\n// Assume there is an external subcommand named \"subcmd\"\nlet m = Command::new(\"myprog\")\n    .allow_missing_positional(true)\n    .arg(Arg::new(\"arg1\")\n        .default_value(\"something\"))\n    .arg(Arg::new(\"arg2\")\n        .required(true))\n    .get_matches_from(vec![\n        \"prog\", \"other\"\n    ]);\n\nassert_eq!(m.value_of(\"arg1\"), Some(\"something\"));\nassert_eq!(m.value_of(\"arg2\"), Some(\"other\"));\n```\n\nStyle number two from above:\n\n```rust\n# use clap::{Command, Arg};\n// Assume there is an external subcommand named \"subcmd\"\nlet m = Command::new(\"myprog\")\n    .allow_missing_positional(true)\n    .arg(Arg::new(\"foo\"))\n    .arg(Arg::new(\"bar\"))\n    .arg(Arg::new(\"baz\").takes_value(true).multiple_values(true))\n    .get_matches_from(vec![\n        \"prog\", \"foo\", \"bar\", \"baz1\", \"baz2\", \"baz3\"\n    ]);\n\nassert_eq!(m.value_of(\"foo\"), Some(\"foo\"));\nassert_eq!(m.value_of(\"bar\"), Some(\"bar\"));\nassert_eq!(m.values_of(\"baz\").unwrap().collect::<Vec<_>>(), &[\"baz1\", \"baz2\", \"baz3\"]);\n```\n\nNow nofice if we don't specify `foo` or `baz` but use the `--` operator.\n\n```rust\n# use clap::{Command, Arg};\n// Assume there is an external subcommand named \"subcmd\"\nlet m = Command::new(\"myprog\")\n    .allow_missing_positional(true)\n    .arg(Arg::new(\"foo\"))\n    .arg(Arg::new(\"bar\"))\n    .arg(Arg::new(\"baz\").takes_value(true).multiple_values(true))\n    .get_matches_from(vec![\n        \"prog\", \"--\", \"baz1\", \"baz2\", \"baz3\"\n    ]);\n\nassert_eq!(m.value_of(\"foo\"), None);\nassert_eq!(m.value_of(\"bar\"), None);\nassert_eq!(m.values_of(\"baz\").unwrap().collect::<Vec<_>>(), &[\"baz1\", \"baz2\", \"baz3\"]);\n```\n\n[required]: crate::Arg::required()","links":{"crate::Arg::required()":"0:3972:1654"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1159:6480":{"id":"0:1159:6480","crate_id":0,"name":"get_override_usage","span":{"filename":"src/builder/command.rs","begin":[4113,4],"end":[4115,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4172:1671":{"id":"b:5:787-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1619":{"id":"0:1619","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1651,0],"end":[1664,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1620:920","0:1621:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4731:1542":{"id":"0:4731:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/regex.rs","begin":[14,10],"end":[14,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"25:2978:7322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3198-0:5291:9008":{"id":"b:2:3198-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4742:7344":{"id":"b:2:3213-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4977:660":{"id":"0:4977:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,9],"end":[1314,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4080:3370":{"id":"b:2:2869-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5183:6486":{"id":"0:5183:6486","crate_id":0,"name":"key","span":{"filename":"src/mkeymap.rs","begin":[11,4],"end":[11,16]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3732:3212":{"id":"0:3732:3212","crate_id":0,"name":"NO_AUTO_VERSION","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1366:59":{"id":"0:1366:59","crate_id":0,"name":"default","span":{"filename":"src/builder/usage_parser.rs","begin":[201,4],"end":[215,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:5220:7335":{"id":"a:2:3310:6658-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4810:7029":{"id":"0:4810:7029","crate_id":0,"name":"Bool","span":{"filename":"src/error/context.rs","begin":[48,4],"end":[48,14]},"visibility":"default","docs":"A single value","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"bool"}]}},"0:1065:6339":{"id":"0:1065:6339","crate_id":0,"name":"get_after_help","span":{"filename":"src/builder/command.rs","begin":[3488,4],"end":[3490,5]},"visibility":"public","docs":"Returns the help heading for listing subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:5070:1677":{"id":"b:2:3198-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4297:5177":{"id":"0:4297:5177","crate_id":0,"name":"DELIM_NOT_SET","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1646":{"id":"0:1646","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1824,0],"end":[1829,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1647:1664","0:1648:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4090":{"id":"0:4090","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,15],"end":[5273,20]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4091:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5193:660":{"id":"0:5193:660","crate_id":0,"name":"fmt","span":{"filename":"src/mkeymap.rs","begin":[9,24],"end":[9,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3440:9227":{"id":"2:3440:9227","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4358":{"id":"0:4358","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8475:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4359:684"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:5020:1678":{"id":"a:2:9340:7907-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:4700:2915":{"id":"a:2:9339:7908-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5257:604":{"id":"0:5257:604","crate_id":0,"name":"eq","span":{"filename":"src/output/fmt.rs","begin":[8,29],"end":[8,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3384:9216":{"id":"2:3384:9216","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4108:899":{"id":"0:4108:899","crate_id":0,"name":"name","span":{"filename":"src/builder/arg_group.rs","begin":[83,4],"end":[83,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:4329:10085":{"id":"0:4329:10085","crate_id":0,"name":"difference","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns the difference between the flags in `self` and `other`.\n\nSpecifically, the returned set contains all flags present in\n`self`, except for the ones present in `other`.\n\nIt is also conceptually equivalent to the \"bit-clear\" operation:\n`flags & !other` (and this syntax is also supported).\n\nThis is equivalent to using the `-` operator (e.g.\n[`ops::Sub`]), as in `flags - other`.\n\n[`ops::Sub`]: https://doc.rust-lang.org/std/ops/trait.Sub.html","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1723":{"id":"0:0:1723","crate_id":0,"name":"clap","span":{"filename":"src/lib.rs","begin":[6,0],"end":[232,1]},"visibility":"public","docs":"> **Command Line Argument Parser for Rust**\n\nQuick Links:\n- Derive [tutorial][_derive::_tutorial] and [reference][_derive]\n- Builder [tutorial][_tutorial] and [reference](index.html)\n- [Cookbook][_cookbook]\n- [FAQ][_faq]\n- [Discussions](https://github.com/clap-rs/clap/discussions)\n\n## Aspirations\n\n- Out of the box, users get a polished CLI experience\n  - Including common argument behavior, help generation, suggested fixes for users, colored output, [shell completions](https://github.com/clap-rs/clap/tree/master/clap_complete), etc\n- Flexible enough to port your existing CLI interface\n  - However, we won't necessarily streamline support for each use case\n- Reasonable parse performance\n- Resilient maintainership, including\n  - Willing to break compatibility rather than batching up breaking changes in large releases\n  - Leverage feature flags to keep to one active branch\n  - Being under [WG-CLI](https://github.com/rust-cli/team/) to increase the bus factor\n- We follow semver and will wait about 6-9 months between major breaking changes\n- We will support the last two minor Rust releases (MSRV, currently 1.56.1)\n\nWhile these aspirations can be at odds with fast build times and low binary\nsize, we will still strive to keep these reasonable for the flexibility you\nget.  Check out the\n[argparse-benchmarks](https://github.com/rust-cli/argparse-benchmarks-rs) for\nCLI parsers optimized for other use cases.\n\n## Example\n\nRun\n```console\n$ cargo add clap --features derive\n```\n*(See also [feature flag reference][_features])*\n\nThen define your CLI in `main.rs`:\n ```no_run\nuse clap::Parser;\n\n/// Simple program to greet a person\n#[derive(Parser, Debug)]\n#[clap(author, version, about, long_about = None)]\nstruct Args {\n    /// Name of the person to greet\n    #[clap(short, long, value_parser)]\n    name: String,\n\n    /// Number of times to greet\n    #[clap(short, long, value_parser, default_value_t = 1)]\n    count: u8,\n}\n\nfn main() {\n    let args = Args::parse();\n\n    for _ in 0..args.count {\n        println!(\"Hello {}!\", args.name)\n    }\n}\n```\n\nAnd try it out:\n```console\n$ demo --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    demo[EXE] [OPTIONS] --name <NAME>\n\nOPTIONS:\n    -c, --count <COUNT>    Number of times to greet [default: 1]\n    -h, --help             Print help information\n    -n, --name <NAME>      Name of the person to greet\n    -V, --version          Print version information\n\n$ demo --name Me\nHello Me!\n\n```\n*(version number and `.exe` extension on windows replaced by placeholders)*\n\nSee also the derive [tutorial][_derive::_tutorial] and [reference][_derive]\n\n### Related Projects\n\nAugment clap:\n- [wild](https://crates.io/crates/wild) for supporting wildcards (`*`) on Windows like you do Linux\n- [argfile](https://crates.io/crates/argfile) for loading additional arguments from a file (aka response files)\n- [shadow-rs](https://crates.io/crates/shadow-rs) for generating `Command::long_version`\n- [clap_mangen](https://crates.io/crates/clap_mangen) for generating man page source (roff)\n- [clap_complete](https://crates.io/crates/clap_complete) for shell completion support\n\nCLI Helpers\n- [clap-verbosity-flag](https://crates.io/crates/clap-verbosity-flag)\n- [clap-cargo](https://crates.io/crates/clap-cargo)\n- [concolor-clap](https://crates.io/crates/concolor-clap)\n\nTesting\n- [`trycmd`](https://crates.io/crates/trycmd):  Bulk snapshot testing\n- [`snapbox`](https://crates.io/crates/snapbox):  Specialized snapshot testing\n- [`assert_cmd`](https://crates.io/crates/assert_cmd) and [`assert_fs`](https://crates.io/crates/assert_fs): Customized testing\n\nDocumentation:\n- [Command-line Apps for Rust](https://rust-cli.github.io/book/index.html) book\n","links":{"_features":"0:121:1696","_derive::_tutorial":"0:116:1697","_tutorial":"0:122:1697","_cookbook":"0:103:1693","_derive":"0:115:1694","_faq":"0:120:1695"},"attrs":["#![doc(html_logo_url =\n\"https://raw.githubusercontent.com/clap-rs/clap/master/assets/clap.png\")]","#![warn(missing_docs, missing_debug_implementations,\nmissing_copy_implementations, trivial_casts, unused_allocation,\ntrivial_numeric_casts, clippy :: single_char_pattern)]","#![forbid(unsafe_code)]","#![allow(clippy :: single_component_path_imports)]","#![allow(clippy :: branches_sharing_code)]","#![allow(clippy :: if_same_then_else)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:103:1693","0:115:1694","0:120:1695","0:121:1696","0:122:1697","0:127:1699","0:147:547","0:255:1651","0:1928:1656","0:2094:1657","0:2984:1701","0:3049:1702","0:3374:1659","0:3","0:6","0:10","0:13","0:16","0:19","0:22","0:26","0:29","0:32","0:35","0:38","0:41","0:44","0:48","0:51","0:54","0:57","0:60","0:63","0:67","0:70","0:74","0:77","0:80","0:83","0:94","0:100","0:101","0:252","0:3497:1703","0:3498:1705","0:135:2530","0:136:2540","0:137:2549","0:138:500","0:139:2561","0:140:2571","0:142:2580","0:1706:2901"],"is_stripped":false}},"0:565:4704":{"id":"0:565:4704","crate_id":0,"name":"get_value_delimiter","span":{"filename":"src/builder/arg.rs","begin":[4437,4],"end":[4439,5]},"visibility":"public","docs":"Get the delimiter between multiple values","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5070:1677":{"id":"a:2:9339:7908-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:109:1845":{"id":"0:109:1845","crate_id":0,"name":"git_derive","span":{"filename":"src/_cookbook/git_derive.rs","begin":[1,0],"end":[7,54]},"visibility":"public","docs":"# Example: git-like CLI (Derive API)\n\n```rust\nuse std::ffi::OsString;\nuse std::path::PathBuf;\n\nuse clap::{Args, Parser, Subcommand};\n\n/// A fictional versioning CLI\n#[derive(Debug, Parser)] // requires `derive` feature\n#[clap(name = \"git\")]\n#[clap(about = \"A fictional versioning CLI\", long_about = None)]\nstruct Cli {\n    #[clap(subcommand)]\n    command: Commands,\n}\n\n#[derive(Debug, Subcommand)]\nenum Commands {\n    /// Clones repos\n    #[clap(arg_required_else_help = true)]\n    Clone {\n        /// The remote to clone\n        #[clap(value_parser)]\n        remote: String,\n    },\n    /// pushes things\n    #[clap(arg_required_else_help = true)]\n    Push {\n        /// The remote to target\n        #[clap(value_parser)]\n        remote: String,\n    },\n    /// adds things\n    #[clap(arg_required_else_help = true)]\n    Add {\n        /// Stuff to add\n        #[clap(required = true, value_parser)]\n        path: Vec<PathBuf>,\n    },\n    Stash(Stash),\n    #[clap(external_subcommand)]\n    External(Vec<OsString>),\n}\n\n#[derive(Debug, Args)]\n#[clap(args_conflicts_with_subcommands = true)]\nstruct Stash {\n    #[clap(subcommand)]\n    command: Option<StashCommands>,\n\n    #[clap(flatten)]\n    push: StashPush,\n}\n\n#[derive(Debug, Subcommand)]\nenum StashCommands {\n    Push(StashPush),\n    Pop {\n        #[clap(value_parser)]\n        stash: Option<String>,\n    },\n    Apply {\n        #[clap(value_parser)]\n        stash: Option<String>,\n    },\n}\n\n#[derive(Debug, Args)]\nstruct StashPush {\n    #[clap(short, long, value_parser)]\n    message: Option<String>,\n}\n\nfn main() {\n    let args = Cli::parse();\n\n    match args.command {\n        Commands::Clone { remote } => {\n            println!(\"Cloning {}\", remote);\n        }\n        Commands::Push { remote } => {\n            println!(\"Pushing to {}\", remote);\n        }\n        Commands::Add { path } => {\n            println!(\"Adding {:?}\", path);\n        }\n        Commands::Stash(stash) => {\n            let stash_cmd = stash.command.unwrap_or(StashCommands::Push(stash.push));\n            match stash_cmd {\n                StashCommands::Push(push) => {\n                    println!(\"Pushing {:?}\", push);\n                }\n                StashCommands::Pop { stash } => {\n                    println!(\"Popping {:?}\", stash);\n                }\n                StashCommands::Apply { stash } => {\n                    println!(\"Applying {:?}\", stash);\n                }\n            }\n        }\n        Commands::External(args) => {\n            println!(\"Calling out to {:?} with {:?}\", &args[0], &args[1..]);\n        }\n    }\n\n    // Continued program logic goes here...\n}\n```\n\n**This requires enabling the [`derive` feature flag][crate::_features].**\n\nGit is an example of several common subcommand patterns.\n\nHelp:\n```console\n$ git-derive\n? failed\ngit \nA fictional versioning CLI\n\nUSAGE:\n    git-derive[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help    Print help information\n\nSUBCOMMANDS:\n    add      adds things\n    clone    Clones repos\n    help     Print this message or the help of the given subcommand(s)\n    push     pushes things\n    stash    \n\n$ git-derive help\ngit \nA fictional versioning CLI\n\nUSAGE:\n    git-derive[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help    Print help information\n\nSUBCOMMANDS:\n    add      adds things\n    clone    Clones repos\n    help     Print this message or the help of the given subcommand(s)\n    push     pushes things\n    stash    \n\n$ git-derive help add\ngit-derive[EXE]-add \nadds things\n\nUSAGE:\n    git-derive[EXE] add <PATH>...\n\nARGS:\n    <PATH>...    Stuff to add\n\nOPTIONS:\n    -h, --help    Print help information\n\n```\n\nA basic argument:\n```console\n$ git-derive add\n? failed\ngit-derive[EXE]-add \nadds things\n\nUSAGE:\n    git-derive[EXE] add <PATH>...\n\nARGS:\n    <PATH>...    Stuff to add\n\nOPTIONS:\n    -h, --help    Print help information\n\n$ git-derive add Cargo.toml Cargo.lock\nAdding [\"Cargo.toml\", \"Cargo.lock\"]\n\n```\n\nDefault subcommand:\n```console\n$ git-derive stash -h\ngit-derive[EXE]-stash \n\nUSAGE:\n    git-derive[EXE] stash [OPTIONS]\n    git-derive[EXE] stash <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help                 Print help information\n    -m, --message <MESSAGE>    \n\nSUBCOMMANDS:\n    apply    \n    help     Print this message or the help of the given subcommand(s)\n    pop      \n    push     \n\n$ git-derive stash push -h\ngit-derive[EXE]-stash-push \n\nUSAGE:\n    git-derive[EXE] stash push [OPTIONS]\n\nOPTIONS:\n    -h, --help                 Print help information\n    -m, --message <MESSAGE>    \n\n$ git-derive stash pop -h\ngit-derive[EXE]-stash-pop \n\nUSAGE:\n    git-derive[EXE] stash pop [STASH]\n\nARGS:\n    <STASH>    \n\nOPTIONS:\n    -h, --help    Print help information\n\n$ git-derive stash -m \"Prototype\"\nPushing StashPush { message: Some(\"Prototype\") }\n\n$ git-derive stash pop\nPopping None\n\n$ git-derive stash push -m \"Prototype\"\nPushing StashPush { message: Some(\"Prototype\") }\n\n$ git-derive stash pop\nPopping None\n\n```\n\nExternal subcommands:\n```console\n$ git-derive custom-tool arg1 --foo bar\nCalling out to \"custom-tool\" with [\"arg1\", \"--foo\", \"bar\"]\n\n```","links":{"crate::_features":"0:121:1696"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:4145:660":{"id":"0:4145:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_predicate.rs","begin":[1,22],"end":[1,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"30:76:13892":{"id":"30:76:13892","crate_id":30,"name":"OsStrBytes","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:77:73406","30:80:73407"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"30:114:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4351:1356":{"id":"0:4351:1356","crate_id":0,"name":"sub_assign","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Disables all flags enabled in the set.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1183:6505":{"id":"0:1183:6505","crate_id":0,"name":"_build_bin_names_internal","span":{"filename":"src/builder/command.rs","begin":[4395,4],"end":[4504,5]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2168:7868":{"id":"0:2168:7868","crate_id":0,"name":"start_occurrence_of_arg","span":{"filename":"src/parser/arg_matcher.rs","begin":[166,4],"end":[175,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5196:5213":{"id":"a:2:3269:211-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5318:6578":{"id":"0:5318:6578","crate_id":0,"name":"version_hash","span":{"filename":"src/util/id.rs","begin":[34,0],"end":[38,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:940:2563":{"id":"0:940:2563","crate_id":0,"name":"author","span":{"filename":"src/builder/command.rs","begin":[1457,4],"end":[1460,5]},"visibility":"public","docs":"Sets the author(s) for the help message.\n\n**Pro-tip:** Use `clap`s convenience macro [`crate_authors!`] to\nautomatically set your application's author(s) to the same thing as your\ncrate at compile time.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n     .author(\"Me, me@mymain.com\")\n# ;\n```\n[`crate_authors!`]: ./macro.crate_authors!.html","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["author",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:594:4770":{"id":"0:594:4770","crate_id":0,"name":"is_hide_long_help_set","span":{"filename":"src/builder/arg.rs","begin":[4639,4],"end":[4641,5]},"visibility":"public","docs":"Report whether [`Arg::hide_long_help`] is set","links":{"`Arg::hide_long_help`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:3096:3014":{"id":"a:2:3310:6658-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'help","bounds":[{"outlives":"'cmd"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4293:5174":{"id":"0:4293:5174","crate_id":0,"name":"TAKES_VAL","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4967:604":{"id":"0:4967:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,32],"end":[67,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2060:7561":{"id":"0:2060:7561","crate_id":0,"name":"unnecessary_double_dash","span":{"filename":"src/error/mod.rs","begin":[569,4],"end":[579,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4854:7554":{"id":"0:4854:7554","crate_id":0,"name":"WrongNumberOfValues","span":{"filename":"src/error/kind.rs","begin":[216,4],"end":[216,23]},"visibility":"default","docs":"Occurs when the user provides a different number of values for an argument than what's\nbeen defined by setting [`Arg::number_of_values`] or than was implicitly set by\n[`Arg::value_names`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"some_opt\")\n        .long(\"opt\")\n        .takes_value(true)\n        .number_of_values(2))\n    .try_get_matches_from(vec![\"prog\", \"--opt\", \"wrong\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::WrongNumberOfValues);\n```\n\n[`Arg::number_of_values`]: crate::Arg::number_of_values()\n[`Arg::value_names`]: crate::Arg::value_names()","links":{"crate::Arg::number_of_values()":"0:3972:1654","crate::Arg::value_names()":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4784:7531":{"id":"0:4784:7531","crate_id":0,"name":"SuggestedSubcommand","span":{"filename":"src/error/context.rs","begin":[28,4],"end":[28,23]},"visibility":"default","docs":"Potential fix for the user","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:31958:74205":{"id":"2:31958:74205","crate_id":2,"name":"checked_mul","span":null,"visibility":"public","docs":"Checked integer multiplication. Computes `self * rhs`, returning\n`None` if overflow occurred.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(5u64.checked_mul(1), Some(5));\nassert_eq!(u64::MAX.checked_mul(2), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_checked_int_methods\", since = \"1.47.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[152,8],"end":[152,17]},"visibility":"public","docs":"Deprecated, replaced with [`ValueEnum`]","links":{"`ValueEnum`":"0:211:1666"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `ValueEnum`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ValueEnum`"},"kind":"import","inner":{"source":"ValueEnum","name":"ArgEnum","id":"22:2539:1666","glob":false}},"0:1747:3889":{"id":"0:1747:3889","crate_id":0,"name":"is_match","span":{"filename":"src/builder/regex.rs","begin":[18,4],"end":[23,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3435:9226":{"id":"2:3435:9226","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3748:3241":{"id":"0:3748:3241","crate_id":0,"name":"ALLOW_NEG_NUMS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:2568:7463":{"id":"0:2568:7463","crate_id":0,"name":"source","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[169,4],"end":[171,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:250:2753":{"id":"0:250:2753","crate_id":0,"name":"format_error","span":{"filename":"src/derive.rs","begin":[574,0],"end":[577,1]},"visibility":{"restricted":{"parent":"0:147:547","path":"::derive"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["err",{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CommandFactory","id":"0:190:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:9339:7908-0:4080:3370":{"id":"a:2:9339:7908-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13153:9251":{"id":"2:13153:9251","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13155:12612","2:13156:922","2:13157:31006","2:13158:31007"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:32029:74261":{"id":"2:32029:74261","crate_id":2,"name":"from_le_bytes","span":null,"visibility":"public","docs":"Create a native endian integer value from its representation\nas a byte array in little endian.\n\n\n\n# Examples\n\n```\nlet value = u64::from_le_bytes([0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]);\nassert_eq!(value, 0x1234567890123456);\n```\n\nWhen starting from a slice rather than an array, fallible conversion APIs can be used:\n\n```\nfn read_le_u64(input: &mut &[u8]) -> u64 {\n    let (int_bytes, rest) = input.split_at(std::mem::size_of::<u64>());\n    *input = rest;\n    u64::from_le_bytes(int_bytes.try_into().unwrap())\n}\n```","links":{},"attrs":["#[stable(feature = \"int_to_from_bytes\", since = \"1.32.0\")]","#[rustc_const_stable(feature = \"const_int_conversion\", since = \"1.44.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bytes",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4635:2919":{"id":"a:2:9339:7908-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"25:1301:9427":{"id":"25:1301:9427","crate_id":25,"name":"Replacer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1302:23285","25:1303:13727","25:1305:10928"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:5058:7830":{"id":"b:2:2872-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:886:1656":{"id":"0:886:1656","crate_id":0,"name":"error","span":{"filename":"src/builder/command.rs","begin":[490,4],"end":[492,5]},"visibility":"public","docs":"Custom error message for post-parsing validation\n\n# Examples\n\n```rust\n# use clap::{Command, ErrorKind};\nlet mut cmd = Command::new(\"myprog\");\nlet err = cmd.error(ErrorKind::InvalidValue, \"Some failure case\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["message",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"std::fmt::Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl std::fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1093:6378":{"id":"0:1093:6378","crate_id":0,"name":"is_dont_delimit_trailing_values_set","span":{"filename":"src/builder/command.rs","begin":[3642,4],"end":[3644,5]},"visibility":"public","docs":"Report whether [`Command::dont_delimit_trailing_values`] is set","links":{"`Command::dont_delimit_trailing_values`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1616:3893":{"id":"0:1616:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[1592,4],"end":[1596,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2717:8445":{"id":"0:2717:8445","crate_id":0,"name":"possible_long_flag_subcommand","span":{"filename":"src/parser/parser.rs","begin":[571,4],"end":[599,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2218:415":{"id":"0:2218:415","crate_id":0,"name":"cmp","span":{"filename":"src/parser/matches/any_value.rs","begin":[73,4],"end":[75,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"std::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4591:6977":{"id":"0:4591:6977","crate_id":0,"name":"Other","span":{"filename":"src/builder/value_hint.rs","begin":[34,4],"end":[34,9]},"visibility":"default","docs":"None of the hints below apply. Disables shell completion for this argument.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:31997:74234":{"id":"2:31997:74234","crate_id":2,"name":"overflowing_sub","span":null,"visibility":"public","docs":"Calculates `self` - `rhs`\n\nReturns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.\n\n# Examples\n\nBasic usage\n\n```\n\nassert_eq!(5u64.overflowing_sub(2), (3, false));\nassert_eq!(0u64.overflowing_sub(1), (u64::MAX, true));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13073:2509":{"id":"2:13073:2509","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13074:126","2:13075:2510"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4616:660":{"id":"0:4616:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_hint.rs","begin":[27,9],"end":[27,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4635:2919":{"id":"a:2:3269:211-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4213:4335":{"id":"0:4213:4335","crate_id":0,"name":"HideEnvValues","span":{"filename":"src/builder/arg_settings.rs","begin":[231,4],"end":[231,17]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::hide_env_values`] and [`Arg::is_hide_env_values_set`]","links":{"`Arg::is_hide_env_values_set`":"0:3972:1654","`Arg::hide_env_values`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::hide_env_values` and `Arg::is_hide_env_values_set`\")]","#[cfg(feature = \"env\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::hide_env_values` and `Arg::is_hide_env_values_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"2:8438:9550":{"id":"2:8438:9550","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8440:8320"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:3096:3014":{"id":"b:2:3198-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"43:469:13215":{"id":"43:469:13215","crate_id":43,"name":"UnwindSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:471:15308","43:472:11457","43:474:73761","43:475:73762","43:477:73763","43:479:73764","43:481:73765"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Reader","id":"43:1233:13260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"_UnwindSectionPrivate","id":"43:459:13223","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:4807:7450":{"id":"b:2:4002-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2307:8051":{"id":"0:2307:8051","crate_id":0,"name":"args_present","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Check if any args were present on the command line\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet mut cmd = Command::new(\"myapp\")\n    .arg(Arg::new(\"output\")\n        .takes_value(true));\n\nlet m = cmd\n    .try_get_matches_from_mut(vec![\"myapp\", \"something\"])\n    .unwrap();\nassert!(m.args_present());\n\nlet m = cmd\n    .try_get_matches_from_mut(vec![\"myapp\"])\n    .unwrap();\nassert!(! m.args_present());","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5030:660":{"id":"0:5030:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1507,16],"end":[1507,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4947:3033":{"id":"a:2:9340:7907-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5314:59":{"id":"0:5314:59","crate_id":0,"name":"default","span":{"filename":"src/util/id.rs","begin":[9,20],"end":[9,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2208:660":{"id":"0:2208:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/any_value.rs","begin":[36,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:1394:2909":{"id":"b:2:2872-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5270:8972":{"id":"0:5270:8972","crate_id":0,"name":"Good","span":{"filename":"src/output/fmt.rs","begin":[137,4],"end":[137,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:863:298":{"id":"0:863:298","crate_id":0,"name":"args","span":{"filename":"src/builder/command.rs","begin":[215,4],"end":[228,5]},"visibility":"public","docs":"Adds multiple [arguments] to the list of valid possibilities.\n\n# Examples\n\n```no_run\n# use clap::{Command, arg, Arg};\nCommand::new(\"myprog\")\n    .args(&[\n        arg!(\"[debug] -d 'turns on debugging info'\"),\n        Arg::new(\"input\").help(\"the input file to use\")\n    ])\n# ;\n```\n[arguments]: Arg","links":{"Arg":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["args",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5205":{"id":"0:5205","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[15,18],"end":[15,27]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:5207:604","0:5208:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4308:5188":{"id":"0:4308:5188","crate_id":0,"name":"MULTIPLE","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1108:6406":{"id":"0:1108:6406","crate_id":0,"name":"is_allow_missing_positional_set","span":{"filename":"src/builder/command.rs","begin":[3718,4],"end":[3720,5]},"visibility":"public","docs":"Report whether [`Command::allow_missing_positional`] is set","links":{"`Command::allow_missing_positional`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3179:5324":{"id":"0:3179:5324","crate_id":0,"name":"subcmd","span":{"filename":"src/output/help.rs","begin":[810,4],"end":[818,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes subcommand to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sc_str",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["next_line_help",{"kind":"primitive","inner":"bool"}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4724:1700":{"id":"b:2:3198-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3740:3226":{"id":"0:3740:3226","crate_id":0,"name":"NO_POS_VALUES","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4700:2915":{"id":"0:4700:2915","crate_id":0,"name":"BoolishValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[1649,0],"end":[1649,32]},"visibility":"public","docs":"Parse bool-like string values, everything else is `true`\n\nSee also:\n- [`ValueParser::bool`] for different human readable bool representations\n- [`FalseyValueParser`] for assuming non-false is true\n\n# Example\n\nUsage:\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"append\")\n            .value_parser(clap::builder::BoolishValueParser::new())\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"true\"]).unwrap();\nlet port: bool = *m.get_one(\"append\")\n    .expect(\"required\");\nassert_eq!(port, true);\n```\n\nSemantics:\n```rust\n# use std::ffi::OsStr;\n# use clap::builder::TypedValueParser;\n# let cmd = clap::Command::new(\"test\");\n# let arg = None;\nlet value_parser = clap::builder::BoolishValueParser::new();\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"random\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"\")).is_err());\nassert!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"100\")).is_err());\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"true\")).unwrap(), true);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"Yes\")).unwrap(), true);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"oN\")).unwrap(), true);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"1\")).unwrap(), true);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"false\")).unwrap(), false);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"No\")).unwrap(), false);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"oFF\")).unwrap(), false);\nassert_eq!(value_parser.parse_ref(&cmd, arg, OsStr::new(\"0\")).unwrap(), false);\n```","links":{"`FalseyValueParser`":"0:4694:2917","`ValueParser::bool`":"0:1394:2909"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:1619","a:2:3310:6658-0:4700:2915","a:2:3269:211-0:4700:2915","a:2:9340:7907-0:4700:2915","a:2:9339:7908-0:4700:2915","a:2:3281:220-0:4700:2915","b:2:3198-0:4700:2915","b:2:2872-0:4700:2915","b:2:2869-0:4700:2915","b:2:4002-0:4700:2915","b:2:3202-0:4700:2915","b:2:3213-0:4700:2915","b:2:3208-0:4700:2915","b:5:787-0:4700:2915","0:4701","0:4702","0:4704","0:1624","0:1632"]}},"0:1495:920":{"id":"0:1495:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[770,4],"end":[772,5]},"visibility":"public","docs":"Implementation for [`ValueParser::path_buf`]","links":{"`ValueParser::path_buf`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:5092:7833":{"id":"a:2:3310:6658-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4172:1671":{"id":"b:2:3213-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:5141:7832":{"id":"b:2:3208-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:166:2756":{"id":"0:166:2756","crate_id":0,"name":"try_parse","span":{"filename":"src/derive.rs","begin":[95,4],"end":[98,5]},"visibility":"default","docs":"Parse from `std::env::args_os()`, return Err on error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4075":{"id":"0:4075","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5190,23],"end":[5190,25]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:2688:1664":{"id":"b:2:2869-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5169":{"id":"0:5169","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1724,29],"end":[1724,38]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5170:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1591:681":{"id":"0:1591:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[1434,4],"end":[1439,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["range",{"kind":"generic","inner":"B"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:1397:7028":{"id":"a:2:3281:220-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1380:2510":{"id":"0:1380:2510","crate_id":0,"name":"from_str","span":{"filename":"src/builder/value_hint.rs","begin":[77,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3213:5478":{"id":"0:3213:5478","crate_id":0,"name":"Normal","span":{"filename":"src/output/help.rs","begin":[1118,4],"end":[1118,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'writer","mutable":true,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Write","id":"1:4723:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}]}},"b:2:3202-0:3972:1654":{"id":"b:2:3202-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5061:8172":{"id":"0:5061:8172","crate_id":0,"name":"indices","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[19,4],"end":[19,23]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:3996:3372":{"id":"0:3996:3372","crate_id":0,"name":"val_names","span":{"filename":"src/builder/arg.rs","begin":[84,4],"end":[84,41]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:239:2827":{"id":"0:239:2827","crate_id":0,"name":"update_from_arg_matches","span":{"filename":"src/derive.rs","begin":[545,4],"end":[547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249:2861":{"id":"0:249:2861","crate_id":0,"name":"has_subcommand","span":{"filename":"src/derive.rs","begin":[569,4],"end":[571,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4588:1673":{"id":"0:4588:1673","crate_id":0,"name":"ValueHint","span":{"filename":"src/builder/value_hint.rs","begin":[29,0],"end":[67,1]},"visibility":"public","docs":"Provide shell with hint on how to complete an argument.\n\nSee [Arg::value_hint][crate::Arg::value_hint] to set this on an argument.\n\nSee the `clap_complete` crate for completion script generation.\n\nOverview of which hints are supported by which shell:\n\n| Hint                   | zsh | fish[^1]|\n| ---------------------- | --- | ------- |\n| `AnyPath`              | Yes | Yes     |\n| `FilePath`             | Yes | Yes     |\n| `DirPath`              | Yes | Yes     |\n| `ExecutablePath`       | Yes | Partial |\n| `CommandName`          | Yes | Yes     |\n| `CommandString`        | Yes | Partial |\n| `CommandWithArguments` | Yes |         |\n| `Username`             | Yes | Yes     |\n| `Hostname`             | Yes | Yes     |\n| `Url`                  | Yes |         |\n| `EmailAddress`         | Yes |         |\n\n[^1]: fish completions currently only support named arguments (e.g. -o or --opt), not\n      positional arguments.","links":{"crate::Arg::value_hint":"0:3972:1654"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4589:232","0:4591:6977","0:4593:4709","0:4595:6980","0:4597:6982","0:4599:6984","0:4601:6986","0:4603:6988","0:4605:6997","0:4607:6999","0:4609:7002","0:4611:7004","0:4613:7006"],"impls":["a:2:3310:6658-0:4588:1673","a:2:3269:211-0:4588:1673","a:2:9340:7907-0:4588:1673","a:2:9339:7908-0:4588:1673","a:2:3281:220-0:4588:1673","b:2:3198-0:4588:1673","b:2:2872-0:4588:1673","b:2:2869-0:4588:1673","b:2:4002-0:4588:1673","b:2:3202-0:4588:1673","b:2:3213-0:4588:1673","b:2:3208-0:4588:1673","b:5:787-0:4588:1673","b:31:25-0:4588:1673","0:4615","0:4617","0:4618","0:4620","0:4621","0:4623","0:4626","0:4627","0:1376","0:1378"]}},"b:2:3198-0:4942:7020":{"id":"b:2:3198-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:1209":{"id":"2:1209","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:293:7889","path":"::num"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"u64"},"items":["2:31935:7211","2:31936:7212","2:31937:74191","2:31938:12868","2:31939:74192","2:31940:74193","2:31941:49137","2:31942:74194","2:31943:74195","2:31944:74196","2:31945:1119","2:31946:1120","2:31947:74197","2:31948:74198","2:31949:74199","2:31950:74200","2:31951:74201","2:31952:74202","2:31953:74203","2:31954:1441","2:31955:74204","2:31956:73747","2:31957:1447","2:31958:74205","2:31959:1443","2:31960:74206","2:31961:74207","2:31962:74208","2:31963:74209","2:31964:74210","2:31965:74211","2:31966:74212","2:31967:74213","2:31968:74214","2:31969:74215","2:31970:74216","2:31971:74217","2:31972:1445","2:31973:74218","2:31974:1446","2:31975:74219","2:31976:1227","2:31977:74220","2:31978:1228","2:31979:74221","2:31980:74222","2:31981:74223","2:31982:1527","2:31983:74224","2:31984:1529","2:31985:1528","2:31986:70867","2:31987:74225","2:31988:74226","2:31989:74227","2:31990:70847","2:31991:74228","2:31992:74229","2:31993:74230","2:31994:74231","2:31995:74232","2:31996:74233","2:31997:74234","2:31998:74235","2:31999:74236","2:32000:74237","2:32001:74238","2:32002:74239","2:32003:74240","2:32004:74241","2:32005:74242","2:32006:74243","2:32007:74244","2:32008:74245","2:32009:49062","2:32010:74246","2:32011:74247","2:32012:74248","2:32013:74249","2:32014:74250","2:32015:74251","2:32016:74252","2:32018:74254","2:32019:74255","2:32020:74256","2:32021:74257","2:32023:74258","2:32025:74259","2:32027:74260","2:32029:74261","2:32031:74262","2:32033:74263","2:32034:74264","2:32035:74265","2:32036:74266"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:5269:8971":{"id":"b:2:3198-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5326":{"id":"0:5326","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[2,9],"end":[2,14]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5327:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:4578:3333":{"id":"b:2:3202-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5067:660":{"id":"0:5067:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[15,9],"end":[15,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3207:681":{"id":"2:3207:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"primitive","inner":"never"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4456:1667":{"id":"0:4456:1667","crate_id":0,"name":"App","span":{"filename":"src/builder/command.rs","begin":[78,0],"end":[114,1]},"visibility":"public","docs":"Deprecated, replaced with [`Command`]","links":{"`Command`":"0:853:1653"},"attrs":["#[deprecated(since = \"3.1.0\", note = \"Replaced with `Command`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4458:2589","0:4459:899","0:4460:5244","0:4461:5245","0:4462:5246","0:4463:5247","0:4464:2563","0:4465:1504","0:4466:5248","0:4467:2565","0:4468:5249","0:4469:5250","0:4470:5251","0:4471:5252","0:4472:5253","0:4473:3367","0:4474:5254","0:4475:5255","0:4476:5256","0:4477:5257","0:4478:5258","0:4479:3369","0:4480:5259","0:4481:5260","0:4482:5261","0:4483:2668","0:4484:5262","0:4485:298","0:4486:5263","0:4487:5264","0:4488:3361","0:4489:5265","0:4490:5266","0:4491:5267","0:4492:5268"],"impls":["0:855","0:912","0:932","0:982","0:1015","0:1120","0:1156","0:1230","a:2:3310:6658-0:4456:1667","a:2:3269:211-0:4456:1667","a:2:9340:7907-0:4456:1667","a:2:9339:7908-0:4456:1667","a:2:3281:220-0:4456:1667","b:2:3198-0:4456:1667","b:2:2872-0:4456:1667","b:2:2869-0:4456:1667","b:2:4002-0:4456:1667","b:2:3202-0:4456:1667","b:2:3213-0:4456:1667","b:2:3208-0:4456:1667","b:5:6413-0:4456:1667","b:5:787-0:4456:1667","b:31:25-0:4456:1667","0:4493","0:4496","0:4499","0:4501","0:4505","0:4507","0:1290","0:1293","0:1297"]}},"0:2026:7499":{"id":"0:2026:7499","crate_id":0,"name":"set_info","span":{"filename":"src/error/mod.rs","begin":[207,4],"end":[210,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["info",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:393:272":{"id":"0:393:272","crate_id":0,"name":"alias","span":{"filename":"src/builder/arg.rs","begin":[243,4],"end":[246,5]},"visibility":"public","docs":"Add an alias, which functions as a hidden long flag.\n\nThis is more efficient, and easier than creating multiple hidden arguments as one only\nneeds to check for the existence of this command, and not all variants.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n            .long(\"test\")\n            .alias(\"alias\")\n            .takes_value(true))\n       .get_matches_from(vec![\n            \"prog\", \"--alias\", \"cool\"\n        ]);\nassert!(m.contains_id(\"test\"));\nassert_eq!(m.value_of(\"test\"), Some(\"cool\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4886:127":{"id":"a:2:9339:7908-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:4706:2918":{"id":"b:2:2869-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:5141:7832":{"id":"b:5:787-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1358:6736":{"id":"0:1358:6736","crate_id":0,"name":"stop_at","span":{"filename":"src/builder/usage_parser.rs","begin":[104,4],"end":[114,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3519:130","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"u8"}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2044:7522":{"id":"0:2044:7522","crate_id":0,"name":"no_equals","span":{"filename":"src/error/mod.rs","begin":[315,4],"end":[324,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4632:408":{"id":"0:4632:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[674,15],"end":[674,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4723:2682":{"id":"1:4723:2682","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:2517","1:4725:11367","1:4727:11368","1:4728:5479","1:4729:8728","1:4730:11369","1:4731:10310","1:4740:10928"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:142:2580":{"id":"0:142:2580","crate_id":0,"name":"arg","span":{"filename":"src/macros.rs","begin":[761,0],"end":[774,1]},"visibility":"public","docs":"Create an [`Arg`] from a usage string.\n\nAllows creation of basic settings for the [`Arg`].\n\n**NOTE**: Not all settings may be set using the usage string method. Some properties are\nonly available via the builder pattern.\n\n# Syntax\n\nUsage strings typically following the form:\n\n```notrust\n[explicit name] [short] [long] [value names] [...] [help string]\n```\n\n### Explicit Name\n\nThe name may be either a bare-word or a string, followed by a `:`, like `name:` or\n`\"name\":`.\n\n*Note:* This is an optional field, if it's omitted the argument will use one of the additional\nfields as the name using the following priority order:\n\n 1. Explicit Name\n 2. Long\n 3. Value Name\n\nSee [`Arg::name`][crate::Arg::name].\n\n### Short\n\nA short flag is a `-` followed by either a bare-character or quoted character, like `-f` or\n`-'f'`.\n\nSee [`Arg::short`][crate::Arg::short].\n\n### Long\n\nA long flag is a `--` followed by either a bare-word or a string, like `--foo` or\n`--\"foo\"`.\n\nSee [`Arg::long`][crate::Arg::long].\n\n### Values (Value Notation)\n\nThis is set by placing bare-word between:\n- `[]` like `[FOO]`\n  - Positional argument: optional\n  - Named argument: optional value\n- `<>` like `<FOO>`: required\n\nSee [`Arg::value_name`][crate::Arg::value_name].\n\n### `...`\n\n`...` (three consecutive dots/periods) specifies that this argument may occur multiple\ntimes (not to be confused with multiple values per occurrence).\n\nSee [`Arg::multiple_occurrences`][crate::Arg::multiple_occurrences].\n\n### Help String\n\nThe help string is denoted between a pair of double quotes `\"\"` and may contain any\ncharacters.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, arg};\nCommand::new(\"prog\")\n    .args(&[\n        arg!(--config <FILE> \"a required file for the configuration and no short\"),\n        arg!(-d --debug ... \"turns on debugging information and allows multiples\"),\n        arg!([input] \"an optional input file to use\")\n])\n# ;\n```\n[`Arg`]: ./struct.Arg.html","links":{"crate::Arg::name":"0:3972:1654","crate::Arg::short":"0:3972:1654","crate::Arg::multiple_occurrences":"0:3972:1654","crate::Arg::long":"0:3972:1654","crate::Arg::value_name":"0:3972:1654"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! arg {\n    ( $name:ident: $($tail:tt)+ ) => { ... };\n    ( $($tail:tt)+ ) => { ... };\n}"},"a:2:3269:211-0:4105:1655":{"id":"a:2:3269:211-0:4105:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4573":{"id":"0:4573","crate_id":0,"name":null,"span":{"filename":"src/builder/usage_parser.rs","begin":[8,9],"end":[8,18]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2011:671":{"id":"0:2011:671","crate_id":0,"name":"format","span":{"filename":"src/error/mod.rs","begin":[83,4],"end":[90,5]},"visibility":"public","docs":"Format the existing message with the Command's context","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:3972:1654":{"id":"b:2:2872-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:579:4740":{"id":"0:579:4740","crate_id":0,"name":"is_forbid_empty_values_set","span":{"filename":"src/builder/arg.rs","begin":[4550,4],"end":[4552,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::get_value_parser()`]","links":{"`Arg::get_value_parser()`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::get_value_parser()`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::get_value_parser()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5168":{"id":"0:5168","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1724,29],"end":[1724,38]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:5031:8079":{"id":"b:2:3202-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:4833:1674":{"id":"b:2:3202-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1830":{"id":"0:1830","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[27,0],"end":[27,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"action::ArgAction","name":"ArgAction","id":"0:3503:1652","glob":false}},"0:2216:997":{"id":"0:2216:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/parser/matches/any_value.rs","begin":[67,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"std::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3814":{"id":"0:3814","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8475:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3815:684"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1568:59":{"id":"0:1568:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[1247,4],"end":[1249,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4926:5216":{"id":"b:2:3208-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2304:8032":{"id":"0:2304:8032","crate_id":0,"name":"remove_many","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[283,4],"end":[289,5]},"visibility":"public","docs":"Return values of a specific option or positional argument.\n\ni.e. an argument that takes multiple values at runtime.\n\nReturns an error if the wrong type was used.  No item will have been removed.\n\nReturns `None` if the option wasn't present.\n\n# Panic\n\nIf the argument definition and access mismatch.  To handle this case programmatically, see\n[`ArgMatches::try_remove_many`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, value_parser, ArgAction};\nlet mut m = Command::new(\"myprog\")\n    .arg(Arg::new(\"file\")\n        .action(ArgAction::Append)\n        .multiple_values(true)\n        .required(true)\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"myprog\", \"file1.txt\", \"file2.txt\", \"file3.txt\", \"file4.txt\",\n    ]);\nlet vals: Vec<String> = m.remove_many(\"file\")\n    .expect(\"`file`is required\")\n    .collect();\nassert_eq!(vals, [\"file1.txt\", \"file2.txt\", \"file3.txt\", \"file4.txt\"]);\n```","links":{"`ArgMatches::try_remove_many`":"0:4953:1658"},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1248:6611":{"id":"0:1248:6611","crate_id":0,"name":"has_visible_subcommands","span":{"filename":"src/builder/command.rs","begin":[4875,4],"end":[4879,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:32027:74260":{"id":"2:32027:74260","crate_id":2,"name":"from_be_bytes","span":null,"visibility":"public","docs":"Create a native endian integer value from its representation\nas a byte array in big endian.\n\n\n\n# Examples\n\n```\nlet value = u64::from_be_bytes([0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]);\nassert_eq!(value, 0x1234567890123456);\n```\n\nWhen starting from a slice rather than an array, fallible conversion APIs can be used:\n\n```\nfn read_be_u64(input: &mut &[u8]) -> u64 {\n    let (int_bytes, rest) = input.split_at(std::mem::size_of::<u64>());\n    *input = rest;\n    u64::from_be_bytes(int_bytes.try_into().unwrap())\n}\n```","links":{},"attrs":["#[stable(feature = \"int_to_from_bytes\", since = \"1.32.0\")]","#[rustc_const_stable(feature = \"const_int_conversion\", since = \"1.44.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bytes",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2167:7866":{"id":"0:2167:7866","crate_id":0,"name":"start_custom_group","span":{"filename":"src/parser/arg_matcher.rs","begin":[155,4],"end":[164,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["source",{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22920:12687":{"id":"2:22920:12687","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22921:15935","2:22922:1227","2:22923:1228","2:22924:24116","2:22925:24117","2:22926:24118","2:22927:24119","2:22928:24125","2:22929:24126","2:22930:24127"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3202-0:4972:1709":{"id":"b:2:3202-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1075:6351":{"id":"0:1075:6351","crate_id":0,"name":"get_arguments","span":{"filename":"src/builder/command.rs","begin":[3529,4],"end":[3531,5]},"visibility":"public","docs":"Iterate through the set of arguments.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4676:2906":{"id":"a:2:3310:6658-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:857:920":{"id":"0:857:920","crate_id":0,"name":"new","span":{"filename":"src/builder/command.rs","begin":[133,4],"end":[161,5]},"visibility":"public","docs":"Creates a new instance of an `Command`.\n\nIt is common, but not required, to use binary name as the `name`. This\nname will only be displayed to the user when they request to print\nversion or help and usage information.\n\nSee also [`command!`](crate::command!) and [`crate_name!`](crate::crate_name!).\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"My Program\")\n# ;\n```","links":{"crate::crate_name!":"0:138:500","crate::command!":"0:139:2561"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4284:660":{"id":"0:4284:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3743:3232":{"id":"0:3743:3232","crate_id":0,"name":"DISABLE_COLORED_HELP","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4335":{"id":"0:4335","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:3427:9224","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4336:354"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:5048:1675":{"id":"a:2:3269:211-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:5305:3334":{"id":"b:2:2872-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1494":{"id":"0:1494","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[768,0],"end":[773,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1495:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5108":{"id":"0:5108","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1680,27],"end":[1680,29]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4099":{"id":"0:4099","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,40],"end":[5273,42]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:4997:7835":{"id":"b:2:3208-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4578:3333":{"id":"b:2:4002-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4634:660":{"id":"0:4634:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[674,22],"end":[674,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3768:3279":{"id":"0:3768:3279","crate_id":0,"name":"NO_OP","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:5002":{"id":"0:5002","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1399,9],"end":[1399,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:5005:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5188:907":{"id":"0:5188:907","crate_id":0,"name":"ne","span":{"filename":"src/mkeymap.rs","begin":[9,9],"end":[9,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:255:1651":{"id":"0:255:1651","crate_id":0,"name":"builder","span":{"filename":"src/builder/mod.rs","begin":[1,0],"end":[61,43]},"visibility":"public","docs":"Define [`Command`] line [arguments][`Arg`]","links":{"`Command`":"0:853:1653","`Arg`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:256:1699","0:269:2893","0:279:2894","0:300:2580","0:679:2895","0:722:2896","0:726:2897","0:744:2561","0:1302:2898","0:1342:2899","0:1372:2900","0:1381:2901","0:1721:1558","0:1769:2902","0:1830","0:1834","0:1837","0:1840","0:1843","0:1847","0:1850","0:1853","0:1856","0:1859","0:1862","0:1865","0:1868","0:1871","0:1874","0:1877","0:1880","0:1883","0:1886","0:1889","0:1892","0:1895","0:1898","0:1901","0:1904","0:1907","0:1910","0:1913","0:1916"],"is_stripped":false}},"0:1426":{"id":"0:1426","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[323,0],"end":[328,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Create an `i64` [`ValueParser`] from a `N..M` range\n\nSee [`RangedI64ValueParser`] for more control over the output type.\n\nSee also [`RangedU64ValueParser`]\n\n# Examples\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(3000..4000)\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"3001\"]).unwrap();\nlet port: i64 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```","links":{"`RangedI64ValueParser`":"0:4664:2905","`ValueParser`":"0:1394:2909","`RangedU64ValueParser`":"0:4676:2906"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45956:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1427:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:4556:6725":{"id":"b:2:2869-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4982:604":{"id":"0:4982:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,23],"end":[1314,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:2823:3377":{"id":"a:2:9339:7908-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2206:1429":{"id":"0:2206:1429","crate_id":0,"name":"type_id","span":{"filename":"src/parser/matches/any_value.rs","begin":[30,4],"end":[32,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2296":{"id":"0:2296","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[80,0],"end":[867,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"# Arguments","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2297:7972","0:2299:7987","0:2301:8014","0:2302:8024","0:2304:8032","0:2306:8041","0:2307:8051","0:2308:2489","0:2310:8056","0:2312:8058","0:2314:2497","0:2316:8078","0:2319:8080","0:2322:8081","0:2324:2490","0:2328:2493","0:2331:2498","0:2336:2501","0:2339:8089","0:2341:7911","0:2343:8096","0:2346:8148","0:2348:8171"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4338:181":{"id":"0:4338:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:31935:7211":{"id":"2:31935:7211","crate_id":2,"name":"MIN","span":null,"visibility":"public","docs":"The smallest value that can be represented by this integer type.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(u64::MIN, 0);\n```","links":{},"attrs":["#[stable(feature = \"assoc_int_consts\", since = \"1.43.0\")]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"primitive","inner":"u64"},"default":"0"}},"a:2:9340:7907-0:4953:1658":{"id":"a:2:9340:7907-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3392:6486":{"id":"0:3392:6486","crate_id":0,"name":"key","span":{"filename":"src/util/fnv.rs","begin":[17,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5010:7834":{"id":"0:5010:7834","crate_id":0,"name":"RawValues","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1461,0],"end":[1465,1]},"visibility":"public","docs":"Iterate over raw argument values via [`ArgMatches::get_raw`].\n\n# Examples\n\n ```\n# use clap::{Command, arg, value_parser};\nuse std::ffi::OsString;\nuse std::os::unix::ffi::{OsStrExt,OsStringExt};\n\nlet m = Command::new(\"utf8\")\n    .arg(arg!(<arg> \"some arg\")\n        .value_parser(value_parser!(OsString)))\n    .get_matches_from(vec![OsString::from(\"myprog\"),\n                            // \"Hi {0xe9}!\"\n                            OsString::from_vec(vec![b'H', b'i', b' ', 0xe9, b'!'])]);\nassert_eq!(\n    &*m.get_raw(\"arg\")\n        .unwrap()\n        .next().unwrap()\n        .as_bytes(),\n    [b'H', b'i', b' ', 0xe9, b'!']\n);\n```","links":{"`ArgMatches::get_raw`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5012:779","0:5013:793"],"impls":["a:2:3310:6658-0:5010:7834","a:2:3269:211-0:5010:7834","a:2:9340:7907-0:5010:7834","a:2:9339:7908-0:5010:7834","a:2:3281:220-0:5010:7834","b:2:8483-0:5010:7834","b:2:3198-0:5010:7834","b:2:2872-0:5010:7834","b:2:2869-0:5010:7834","b:2:4002-0:5010:7834","b:2:3202-0:5010:7834","b:2:3213-0:5010:7834","b:2:3208-0:5010:7834","b:5:787-0:5010:7834","0:5014","0:5017","0:2424","0:2429","0:2432","0:2434"]}},"0:2769:2677":{"id":"0:2769:2677","crate_id":0,"name":"is_set","span":{"filename":"src/parser/parser.rs","begin":[1675,4],"end":[1677,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"resolved_path","inner":{"name":"AS","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4979:408":{"id":"0:4979:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,16],"end":[1314,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13615:2747":{"id":"2:13615:2747","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13073:2509","`FromStr`":"2:13073:2509"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4063:3357":{"id":"a:2:3269:211-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:31:25-0:3647:2672":{"id":"b:31:25-0:3647:2672","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"b:5:787-0:4456:1667":{"id":"b:5:787-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1520:3893":{"id":"0:1520:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[929,4],"end":[937,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:708:4573":{"id":"0:708:4573","crate_id":0,"name":"conflicts_with","span":{"filename":"src/builder/arg_group.rs","begin":[393,4],"end":[396,5]},"visibility":"public","docs":"Specify an argument or group that must **not** be present when this group is.\n\nExclusion (aka conflict) rules function just like [argument exclusion rules], you can name\nother arguments or groups that must *not* be present when one of the arguments from this\ngroup are used.\n\n**NOTE:** The name provided may be an argument, or group name\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgGroup, ErrorKind};\nlet result = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .arg(Arg::new(\"debug\")\n        .short('d'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"])\n        .conflicts_with(\"debug\"))\n    .try_get_matches_from(vec![\"myprog\", \"-c\", \"-d\"]);\n// because we used an arg from the group, and the group conflicts with \"-d\", it's an error\nassert!(result.is_err());\nlet err = result.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::ArgumentConflict);\n```\n[argument exclusion rules]: crate::Arg::conflicts_with()","links":{"crate::Arg::conflicts_with()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4244:997":{"id":"0:4244:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:547:4674":{"id":"0:547:4674","crate_id":0,"name":"get_help_heading","span":{"filename":"src/builder/arg.rs","begin":[4293,4],"end":[4295,5]},"visibility":"public","docs":"Get the help heading specified for this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4742:7344":{"id":"b:2:2869-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:4694:2917":{"id":"a:2:3269:211-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4226":{"id":"0:4226","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[32,16],"end":[32,25]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4227:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3449:221":{"id":"0:3449:221","crate_id":0,"name":"Target","span":{"filename":"src/util/id.rs","begin":[62,4],"end":[62,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u64"}}},"b:2:3213-0:4926:5216":{"id":"b:2:3213-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4138":{"id":"0:4138","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[1,9],"end":[1,13]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4453":{"id":"0:4453","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[302,0],"end":[330,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:3401:2679","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4454:181","0:4455:353"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8548:8272":{"id":"2:8548:8272","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8549:793","2:8550:2564"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2549:8317":{"id":"0:2549:8317","crate_id":0,"name":"set_occurrences","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[76,4],"end":[78,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[deprecated(since = \"3.2.0\")]"],"deprecation":{"since":"3.2.0","note":null},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["occurs",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2360:7857":{"id":"0:2360:7857","crate_id":0,"name":"subcommand_name","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1050,4],"end":[1052,5]},"visibility":"public","docs":"The name of the current [subcommand].\n\nReturns `None` if the subcommand wasn't present at runtime,\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\n let app_m = Command::new(\"git\")\n     .subcommand(Command::new(\"clone\"))\n     .subcommand(Command::new(\"push\"))\n     .subcommand(Command::new(\"commit\"))\n     .get_matches();\n\nmatch app_m.subcommand_name() {\n    Some(\"clone\")  => {}, // clone was used\n    Some(\"push\")   => {}, // push was used\n    Some(\"commit\") => {}, // commit was used\n    _              => {}, // Either no subcommand or one not tested for...\n}\n```\n[subcommand]: crate::Command::subcommand\n[`Command`]: crate::Command","links":{"crate::Command::subcommand":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4345":{"id":"0:4345","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:3423:9223","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4346:352"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1299:6555":{"id":"0:1299:6555","crate_id":0,"name":"two_elements_of","span":{"filename":"src/builder/command.rs","begin":[5148,0],"end":[5159,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:6105:8732":{"id":"5:6105:8732","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1085:6363":{"id":"0:1085:6363","crate_id":0,"name":"get_global_arg_conflicts_with","span":{"filename":"src/builder/command.rs","begin":[3586,4],"end":[3605,5]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3112:920":{"id":"0:3112:920","crate_id":0,"name":"new","span":{"filename":"src/output/help.rs","begin":[62,4],"end":[90,5]},"visibility":"crate","docs":"Create a new `Help` instance.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["writer",{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["usage",{"kind":"borrowed_ref","inner":{"lifetime":"'cmd","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}}}}],["use_long",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4647:2916":{"id":"b:2:3213-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5041:793":{"id":"0:5041:793","crate_id":0,"name":"len","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1596,4],"end":[1596,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:31973:74218":{"id":"2:31973:74218","crate_id":2,"name":"checked_shr","span":null,"visibility":"public","docs":"Checked shift right. Computes `self >> rhs`, returning `None`\nif `rhs` is larger than or equal to the number of bits in `self`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(0x10u64.checked_shr(4), Some(0x1));\nassert_eq!(0x10u64.checked_shr(129), None);\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_checked_int_methods\", since = \"1.47.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5320:2694":{"id":"0:5320:2694","crate_id":0,"name":"Auto","span":{"filename":"src/util/color.rs","begin":[21,4],"end":[21,8]},"visibility":"default","docs":"Enables colored output only when the output is going to a terminal or TTY.\n\n**NOTE:** This is the default behavior of `clap`.\n\n# Platform Specific\n\nThis setting only applies to Unix, Linux, and macOS (i.e. non-Windows platforms).\n\n# Examples\n\n ```no_run\n# use clap::{Command, ColorChoice};\nCommand::new(\"myprog\")\n    .color(ColorChoice::Auto)\n    .get_matches();\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4455:353":{"id":"0:4455:353","crate_id":0,"name":"bitor","span":{"filename":"src/builder/arg_settings.rs","begin":[302,0],"end":[330,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3401:2679","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6084:31632":{"id":"5:6084:31632","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:3636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:3636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2770:2664":{"id":"0:2770:2664","crate_id":0,"name":"validator","span":{"filename":"src/parser/validator.rs","begin":[2,0],"end":[692,1]},"visibility":{"restricted":{"parent":"0:2094:1657","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2823:3377","0:5174:8567","0:2894:4695"],"is_stripped":false}},"0:2493:8271":{"id":"0:2493:8271","crate_id":0,"name":"next_back","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1671,4],"end":[1673,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:528:4544":{"id":"0:528:4544","crate_id":0,"name":"requires_ifs","span":{"filename":"src/builder/arg.rs","begin":[3931,4],"end":[3937,5]},"visibility":"public","docs":"Allows multiple conditional requirements.\n\nThe requirement will only become valid if this arg's value equals `val`.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .requires_ifs(&[\n        (\"val\", \"arg\"),\n        (\"other_val\", \"arg2\"),\n    ])\n# ;\n```\n\nSetting `Arg::requires_ifs(&[\"val\", \"arg\"])` requires that the `arg` be used at runtime if the\ndefining argument's value is equal to `val`. If the defining argument's value is anything other\nthan `val`, `arg` isn't required.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .requires_ifs(&[\n            (\"special.conf\", \"opt\"),\n            (\"other.conf\", \"other\"),\n        ])\n        .long(\"config\"))\n    .arg(Arg::new(\"opt\")\n        .long(\"option\")\n        .takes_value(true))\n    .arg(Arg::new(\"other\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"special.conf\"\n    ]);\n\nassert!(res.is_err()); // We  used --config=special.conf so --option <val> is required\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[`Arg::requires(name)`]: Arg::requires()\n[Conflicting]: Arg::conflicts_with()\n[override]: Arg::overrides_with()","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ifs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"T"}]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:127:1699":{"id":"0:127:1699","crate_id":0,"name":"macros","span":{"filename":"src/macros.rs","begin":[1,0],"end":[1058,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[macro_use]","#[allow(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:144:2667","0:145:2680","0:146:519"],"is_stripped":false}},"0:1803":{"id":"0:1803","crate_id":0,"name":null,"span":{"filename":"src/builder/debug_asserts.rs","begin":[363,0],"end":[380,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:1804:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5261:2691":{"id":"b:2:2869-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:5182:3335":{"id":"a:2:9340:7907-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:4456:1667":{"id":"b:2:3208-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3103:4294":{"id":"0:3103:4294","crate_id":0,"name":"next_line_help","span":{"filename":"src/output/help.rs","begin":[24,4],"end":[24,24]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"25:1641:9427":{"id":"25:1641:9427","crate_id":25,"name":"Replacer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1642:23285","25:1643:13727","25:1645:10928"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1196:6513":{"id":"0:1196:6513","crate_id":0,"name":"_propagate_global_args","span":{"filename":"src/builder/command.rs","begin":[4545,4],"end":[4586,5]},"visibility":"crate","docs":"Propagate global args","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4641:2920":{"id":"a:2:3269:211-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1636":{"id":"0:1636","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1747,0],"end":[1772,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1637:7050","0:1638:7090"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2079:1066":{"id":"0:2079:1066","crate_id":0,"name":"quote","span":{"filename":"src/error/mod.rs","begin":[1050,0],"end":[1053,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl AsRef<str>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1853":{"id":"0:1853","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[32,0],"end":[32,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"command::Command","name":"Command","id":"0:853:1653","glob":false}},"b:2:4002-0:4080:3370":{"id":"b:2:4002-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4850:7550":{"id":"0:4850:7550","crate_id":0,"name":"TooFewValues","span":{"filename":"src/error/kind.rs","begin":[176,4],"end":[176,16]},"visibility":"default","docs":"Occurs when the user provides fewer values for an argument than were defined by setting\n[`Arg::min_values`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"some_opt\")\n        .long(\"opt\")\n        .min_values(3))\n    .try_get_matches_from(vec![\"prog\", \"--opt\", \"too\", \"few\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::TooFewValues);\n```\n[`Arg::min_values`]: crate::Arg::min_values()","links":{"crate::Arg::min_values()":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1286:6645":{"id":"0:1286:6645","crate_id":0,"name":"write_help_err","span":{"filename":"src/builder/command.rs","begin":[5038,4],"end":[5055,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["use_long",{"kind":"primitive","inner":"bool"}],["stream",{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3455:715":{"id":"0:3455:715","crate_id":0,"name":"hash","span":{"filename":"src/util/id.rs","begin":[80,4],"end":[85,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2565:8322":{"id":"0:2565:8322","crate_id":0,"name":"all_val_groups_empty","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[147,4],"end":[149,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2570:1429":{"id":"0:2570:1429","crate_id":0,"name":"type_id","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[181,4],"end":[183,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3216:5462":{"id":"0:3216:5462","crate_id":0,"name":"Buffer","span":{"filename":"src/output/help.rs","begin":[1119,4],"end":[1119,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'writer","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]}},"0:4476:5256":{"id":"0:4476:5256","crate_id":0,"name":"usage_str","span":{"filename":"src/builder/command.rs","begin":[97,4],"end":[97,33]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:5289":{"id":"0:5289","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[135,40],"end":[135,42]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:4987:8033":{"id":"b:5:787-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:4172:1671":{"id":"b:2:3202-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2428:5300":{"id":"0:2428:5300","crate_id":0,"name":"size_hint","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1473,4],"end":[1475,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31989:74227":{"id":"2:31989:74227","crate_id":2,"name":"wrapping_rem_euclid","span":null,"visibility":"public","docs":"Wrapping Euclidean modulo. Computes `self.rem_euclid(rhs)`.\nWrapped modulo calculation on unsigned types is\njust the regular remainder calculation.\nThere's no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to `self.wrapping_rem(rhs)`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(100u64.wrapping_rem_euclid(10), 0);\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4657:2904":{"id":"a:2:9339:7908-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:710:4584":{"id":"0:710:4584","crate_id":0,"name":"conflicts_with_all","span":{"filename":"src/builder/arg_group.rs","begin":[431,4],"end":[436,5]},"visibility":"public","docs":"Specify arguments or groups that must **not** be present when this group is.\n\nExclusion rules function just like [argument exclusion rules], you can name other arguments\nor groups that must *not* be present when one of the arguments from this group are used.\n\n**NOTE:** The names provided may be an argument, or group name\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgGroup, ErrorKind};\nlet result = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .arg(Arg::new(\"debug\")\n        .short('d'))\n    .arg(Arg::new(\"verb\")\n        .short('v'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"])\n        .conflicts_with_all(&[\"debug\", \"verb\"]))\n    .try_get_matches_from(vec![\"myprog\", \"-c\", \"-v\"]);\n// because we used an arg from the group, and the group conflicts with either \"-v\" or \"-d\"\n// it's an error\nassert!(result.is_err());\nlet err = result.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::ArgumentConflict);\n```\n\n[argument exclusion rules]: crate::Arg::conflicts_with_all()","links":{"crate::Arg::conflicts_with_all()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ns",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4693:660":{"id":"0:4693:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[1451,22],"end":[1451,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5028":{"id":"0:5028","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1507,16],"end":[1507,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5030:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:5291:9008":{"id":"a:2:3269:211-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:31963:74209":{"id":"2:31963:74209","crate_id":2,"name":"checked_rem_euclid","span":null,"visibility":"public","docs":"Checked Euclidean modulo. Computes `self.rem_euclid(rhs)`, returning `None`\nif `rhs == 0`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(5u64.checked_rem_euclid(2), Some(1));\nassert_eq!(5u64.checked_rem_euclid(0), None);\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1024:6290":{"id":"0:1024:6290","crate_id":0,"name":"get_long_version","span":{"filename":"src/builder/command.rs","begin":[3300,4],"end":[3302,5]},"visibility":"public","docs":"Get the long version of the cmd.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:5038:1676":{"id":"b:5:787-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5255":{"id":"0:5255","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[8,29],"end":[8,38]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4588:1673":{"id":"a:2:9340:7907-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:970:3385":{"id":"0:970:3385","crate_id":0,"name":"help_heading","span":{"filename":"src/builder/command.rs","begin":[1865,4],"end":[1870,5]},"visibility":"public","docs":"Deprecated, replaced with [`Command::next_help_heading`]","links":{"`Command::next_help_heading`":"0:4456:1667"},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `App::next_help_heading`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `App::next_help_heading`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["heading",{"kind":"generic","inner":"O"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"O"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4481:5260":{"id":"0:4481:5260","crate_id":0,"name":"max_w","span":{"filename":"src/builder/command.rs","begin":[102,4],"end":[102,24]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"2:31993:74230":{"id":"2:31993:74230","crate_id":2,"name":"wrapping_pow","span":null,"visibility":"public","docs":"Wrapping (modular) exponentiation. Computes `self.pow(exp)`,\nwrapping around at the boundary of the type.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(3u64.wrapping_pow(5), 243);\nassert_eq!(3u8.wrapping_pow(6), 217);\n```","links":{},"attrs":["#[stable(feature = \"no_panic_pow\", since = \"1.34.0\")]","#[rustc_const_stable(feature = \"const_int_pow\", since = \"1.50.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["exp",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4490:5266":{"id":"0:4490:5266","crate_id":0,"name":"current_disp_ord","span":{"filename":"src/builder/command.rs","begin":[111,4],"end":[111,35]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"b:2:3202-0:4921:7467":{"id":"b:2:3202-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3007":{"id":"0:3007","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[32,0],"end":[36,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3008:6610"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:4833:1674":{"id":"a:2:9340:7907-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:31947:74197":{"id":"2:31947:74197","crate_id":2,"name":"swap_bytes","span":null,"visibility":"public","docs":"Reverses the byte order of the integer.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0x1234567890123456u64;\nlet m = n.swap_bytes();\n\nassert_eq!(m, 0x5634129078563412);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4456:1667":{"id":"b:2:3202-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4646:660":{"id":"0:4646:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[764,22],"end":[764,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5196:5213":{"id":"b:2:2872-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31950:74200":{"id":"2:31950:74200","crate_id":2,"name":"from_le","span":null,"visibility":"public","docs":"Converts an integer from little endian to the target's endianness.\n\nOn little endian this is a no-op. On big endian the bytes are\nswapped.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0x1Au64;\n\nif cfg!(target_endian = \"little\") {\n    assert_eq!(u64::from_le(n), n)\n} else {\n    assert_eq!(u64::from_le(n), n.swap_bytes())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["x",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5837:9254":{"id":"5:5837:9254","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:2515"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1626:7090":{"id":"0:1626:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[1669,4],"end":[1689,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5261:2691":{"id":"b:2:4002-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:4657:2904":{"id":"b:2:3208-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3524":{"id":"0:3524","crate_id":0,"name":null,"span":{"filename":"src/builder/action.rs","begin":[23,16],"end":[23,21]},"visibility":{"restricted":{"parent":"0:269:2893","path":"::builder::action"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_copy_implementations)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3525:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4694:2917":{"id":"a:2:3310:6658-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:2688:1664":{"id":"a:2:3310:6658-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'help","bounds":[{"outlives":"'cmd"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:240:2771":{"id":"0:240:2771","crate_id":0,"name":"update_from_arg_matches_mut","span":{"filename":"src/derive.rs","begin":[548,4],"end":[550,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5223:1542":{"id":"0:5223:1542","crate_id":0,"name":"0","span":{"filename":"src/mkeymap.rs","begin":[27,10],"end":[27,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"char"}},"0:564:4702":{"id":"0:564:4702","crate_id":0,"name":"get_num_vals","span":{"filename":"src/builder/arg.rs","begin":[4431,4],"end":[4433,5]},"visibility":"public","docs":"Get the number of values for this argument.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1678:2901":{"id":"0:1678:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1898,4],"end":[1900,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:4105:1655":{"id":"b:31:25-0:4105:1655","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"a:2:3310:6658-0:4706:2918":{"id":"a:2:3310:6658-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:385:920":{"id":"0:385:920","crate_id":0,"name":"new","span":{"filename":"src/builder/arg.rs","begin":[122,4],"end":[124,5]},"visibility":"public","docs":"Create a new [`Arg`] with a unique name.\n\nThe name is used to check whether or not the argument was used at\nruntime, get values, set relationships with other args, etc..\n\n**NOTE:** In the case of arguments that take values (i.e. [`Arg::takes_value(true)`])\nand positional arguments (i.e. those without a preceding `-` or `--`) the name will also\nbe displayed when the user prints the usage/help information of the program.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"config\")\n# ;\n```\n[`Arg::takes_value(true)`]: Arg::takes_value()","links":{"`Arg`":"0:3972:1654","Arg::takes_value()":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2823:3377":{"id":"b:2:2872-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2566:7859":{"id":"0:2566:7859","crate_id":0,"name":"check_explicit","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[151,4],"end":[167,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4776:7551":{"id":"0:4776:7551","crate_id":0,"name":"MinValues","span":{"filename":"src/error/context.rs","begin":[20,4],"end":[20,13]},"visibility":"default","docs":"Minimum number of allowed values","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1466:3893":{"id":"0:1466:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[635,4],"end":[639,5]},"visibility":"default","docs":"Reflect on enumerated value properties\n\nError checking should not be done with this; it is mostly targeted at user-facing\napplications like errors and completion.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4664:2905":{"id":"a:2:3281:220-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:920:5564":{"id":"0:920:5564","crate_id":0,"name":"max_term_width","span":{"filename":"src/builder/command.rs","begin":[1076,4],"end":[1079,5]},"visibility":"public","docs":"Sets the maximum terminal width at which to wrap help messages.\n\nThis only applies when setting the current terminal width.  See [`Command::term_width`] for\nmore details.\n\nUsing `0` will ignore terminal widths and use source formatting.\n\n**NOTE:** This setting applies globally and *not* on a per-command basis.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .max_term_width(100)\n# ;\n```","links":{"`Command::term_width`":"0:4456:1667"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["w",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5294:9009":{"id":"0:5294:9009","crate_id":0,"name":"children","span":{"filename":"src/util/graph.rs","begin":[4,4],"end":[4,24]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"b:2:3198-0:4676:2906":{"id":"b:2:3198-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:406:3567":{"id":"0:406:3567","crate_id":0,"name":"last","span":{"filename":"src/builder/arg.rs","begin":[573,4],"end":[579,5]},"visibility":"public","docs":"This arg is the last, or final, positional argument (i.e. has the highest\nindex) and is *only* able to be accessed via the `--` syntax (i.e. `$ prog args --\nlast_arg`).\n\nEven, if no other arguments are left to parse, if the user omits the `--` syntax\nthey will receive an [`UnknownArgument`] error. Setting an argument to `.last(true)` also\nallows one to access this arg early using the `--` syntax. Accessing an arg early, even with\nthe `--` syntax is otherwise not possible.\n\n**NOTE:** This will change the usage string to look like `$ prog [OPTIONS] [-- <ARG>]` if\n`ARG` is marked as `.last(true)`.\n\n**NOTE:** This setting will imply [`crate::Command::dont_collapse_args_in_usage`] because failing\nto set this can make the usage string very confusing.\n\n**NOTE**: This setting only applies to positional arguments, and has no effect on OPTIONS\n\n**NOTE:** Setting this requires [`Arg::takes_value`]\n\n**CAUTION:** Using this setting *and* having child subcommands is not\nrecommended with the exception of *also* using\n[`crate::Command::args_conflicts_with_subcommands`]\n(or [`crate::Command::subcommand_negates_reqs`] if the argument marked `Last` is also\nmarked [`Arg::required`])\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"args\")\n    .takes_value(true)\n    .last(true)\n# ;\n```\n\nSetting `last` ensures the arg has the highest [index] of all positional args\nand requires that the `--` syntax be used to access it early.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"first\"))\n    .arg(Arg::new(\"second\"))\n    .arg(Arg::new(\"third\")\n        .takes_value(true)\n        .last(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"one\", \"--\", \"three\"\n    ]);\n\nassert!(res.is_ok());\nlet m = res.unwrap();\nassert_eq!(m.value_of(\"third\"), Some(\"three\"));\nassert!(m.value_of(\"second\").is_none());\n```\n\nEven if the positional argument marked `Last` is the only argument left to parse,\nfailing to use the `--` syntax results in an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"first\"))\n    .arg(Arg::new(\"second\"))\n    .arg(Arg::new(\"third\")\n        .takes_value(true)\n        .last(true))\n    .try_get_matches_from(vec![\n        \"prog\", \"one\", \"two\", \"three\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```\n[index]: Arg::index()\n[`UnknownArgument`]: crate::ErrorKind::UnknownArgument","links":{"`crate::Command::subcommand_negates_reqs`":"0:4456:1667","`Arg::takes_value`":"0:3972:1654","`crate::Command::dont_collapse_args_in_usage`":"0:4456:1667","Arg::index()":"0:3972:1654","crate::ErrorKind::UnknownArgument":"0:4833:1674","`crate::Command::args_conflicts_with_subcommands`":"0:4456:1667","`Arg::required`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4959":{"id":"0:4959","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,9],"end":[67,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4960:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1361:6739":{"id":"0:1361:6739","crate_id":0,"name":"short_or_long","span":{"filename":"src/builder/usage_parser.rs","begin":[116,4],"end":[131,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31942:74194":{"id":"2:31942:74194","crate_id":2,"name":"trailing_zeros","span":null,"visibility":"public","docs":"Returns the number of trailing zeros in the binary representation\nof `self`.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0b0101000u64;\n\nassert_eq!(n.trailing_zeros(), 3);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1007:6131":{"id":"0:1007:6131","crate_id":0,"name":"args_conflicts_with_subcommands","span":{"filename":"src/builder/command.rs","begin":[2876,4],"end":[2882,5]},"visibility":"public","docs":"Specifies that use of an argument prevents the use of [`subcommands`].\n\nBy default `clap` allows arguments between subcommands such\nas `<cmd> [cmd_args] <subcmd> [subcmd_args] <subsubcmd> [subsubcmd_args]`.\n\nThis setting disables that functionality and says that arguments can\nonly follow the *final* subcommand. For instance using this setting\nmakes only the following invocations possible:\n\n* `<cmd> <subcmd> <subsubcmd> [subsubcmd_args]`\n* `<cmd> <subcmd> [subcmd_args]`\n* `<cmd> [cmd_args]`\n\n# Examples\n\n```rust\n# use clap::Command;\nCommand::new(\"myprog\")\n    .args_conflicts_with_subcommands(true);\n```\n\n[`subcommands`]: crate::Command::subcommand()","links":{"crate::Command::subcommand()":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:4807:7450":{"id":"b:31:25-0:4807:7450","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"2:31961:74207":{"id":"2:31961:74207","crate_id":2,"name":"checked_div_euclid","span":null,"visibility":"public","docs":"Checked Euclidean division. Computes `self.div_euclid(rhs)`, returning `None`\nif `rhs == 0`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(128u64.checked_div_euclid(2), Some(64));\nassert_eq!(1u64.checked_div_euclid(0), None);\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1444":{"id":"0:1444","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[514,0],"end":[524,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1445:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:5110:8389":{"id":"b:2:2872-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4539":{"id":"0:4539","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[29,16],"end":[29,23]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4541:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:3542:1669":{"id":"b:2:2869-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1011:5267":{"id":"0:1011:5267","crate_id":0,"name":"subcommand_value_name","span":{"filename":"src/builder/command.rs","begin":[3184,4],"end":[3190,5]},"visibility":"public","docs":"Sets the value name used for subcommands when printing usage and help.\n\nBy default, this is \"SUBCOMMAND\".\n\nSee also [`Command::subcommand_help_heading`]\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .subcommand(Command::new(\"sub1\"))\n    .print_help()\n# ;\n```\n\nwill produce\n\n```text\nmyprog\n\nUSAGE:\n    myprog [SUBCOMMAND]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    help    Print this message or the help of the given subcommand(s)\n    sub1\n```\n\nbut usage of `subcommand_value_name`\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .subcommand(Command::new(\"sub1\"))\n    .subcommand_value_name(\"THING\")\n    .print_help()\n# ;\n```\n\nwill produce\n\n```text\nmyprog\n\nUSAGE:\n    myprog [THING]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    help    Print this message or the help of the given subcommand(s)\n    sub1\n```","links":{"`Command::subcommand_help_heading`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value_name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4884":{"id":"0:4884","crate_id":0,"name":null,"span":{"filename":"src/error/kind.rs","begin":[2,29],"end":[2,38]},"visibility":{"restricted":{"parent":"0:1991:782","path":"::error::kind"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4885:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:483:3358":{"id":"0:483:3358","crate_id":0,"name":"long_help","span":{"filename":"src/builder/arg.rs","begin":[2605,4],"end":[2608,5]},"visibility":"public","docs":"Sets the description of the argument for long help (`--help`).\n\nTypically this a more detailed (multi-line) message\nthat describes the arg.\n\nIf [`Arg::help`] is not specified, this message will be displayed for `-h`.\n\n**NOTE:** Only [`Arg::help`] is used in completion script generation in order to be concise\n\n# Examples\n\nAny valid UTF-8 is allowed in the help text. The one exception is when one wishes to\ninclude a newline in the help text and have the following text be properly aligned with all\nthe other help text.\n\nSetting `help` displays a short message to the side of the argument when the user passes\n`-h` or `--help` (by default).\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .long_help(\n\"The config file used by the myprog must be in JSON format\nwith only valid keys and may not contain other nonsense\nthat cannot be read by this program. Obviously I'm going on\nand on, so I'll stop now.\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nThe above example displays\n\n```text\nprog\n\nUSAGE:\n    prog [OPTIONS]\n\nOPTIONS:\n        --config\n            The config file used by the myprog must be in JSON format\n            with only valid keys and may not contain other nonsense\n            that cannot be read by this program. Obviously I'm going on\n            and on, so I'll stop now.\n\n    -h, --help\n            Print help information\n\n    -V, --version\n            Print version information\n```\n[`Arg::help`]: Arg::help()","links":{"Arg::help()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["h",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<Option<&'help str>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:3393:9003":{"id":"a:2:9340:7907-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:577:4697":{"id":"0:577:4697","crate_id":0,"name":"is_takes_value_set","span":{"filename":"src/builder/arg.rs","begin":[4536,4],"end":[4538,5]},"visibility":"public","docs":"Report whether [`Arg::is_takes_value_set`] is set","links":{"`Arg::is_takes_value_set`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5089:997":{"id":"0:5089:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/parser/matches/value_source.rs","begin":[2,44],"end":[2,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:458:3941":{"id":"0:458:3941","crate_id":0,"name":"forbid_empty_values","span":{"filename":"src/builder/arg.rs","begin":[1761,4],"end":[1767,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::value_parser(NonEmptyStringValueParser::new())`]","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::value_parser(NonEmptyStringValueParser::new())`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::value_parser(NonEmptyStringValueParser::new())`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4005:3382":{"id":"0:4005:3382","crate_id":0,"name":"default_vals_ifs","span":{"filename":"src/builder/arg.rs","begin":[93,4],"end":[93,85]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}]}}],"bindings":[]}}}}},"0:1614:7090":{"id":"0:1614:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[1572,4],"end":[1590,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["_arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:789:4855":{"id":"5:789:4855","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:938:5246":{"id":"0:938:5246","crate_id":0,"name":"display_name","span":{"filename":"src/builder/command.rs","begin":[1436,4],"end":[1439,5]},"visibility":"public","docs":"Overrides the runtime-determined display name of the program for help and error messages.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"My Program\")\n     .display_name(\"my_program\")\n# ;\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1175:5458":{"id":"0:1175:5458","crate_id":0,"name":"_build_self","span":{"filename":"src/builder/command.rs","begin":[4229,4],"end":[4311,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1336":{"id":"0:1336","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[249,0],"end":[253,1]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1338:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4071:660":{"id":"0:4071:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg.rs","begin":[5190,9],"end":[5190,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3404:920":{"id":"0:3404:920","crate_id":0,"name":"new","span":{"filename":"src/util/graph.rs","begin":[8,4],"end":[13,5]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31948:74198":{"id":"2:31948:74198","crate_id":2,"name":"reverse_bits","span":null,"visibility":"public","docs":"Reverses the order of bits in the integer. The least significant bit becomes the most significant bit,\n                second least-significant bit becomes second most-significant bit, etc.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0x1234567890123456u64;\nlet m = n.reverse_bits();\n\nassert_eq!(m, 0x6a2c48091e6a2c48);\nassert_eq!(0, 0u64.reverse_bits());\n```","links":{},"attrs":["#[stable(feature = \"reverse_bits\", since = \"1.37.0\")]","#[rustc_const_stable(feature = \"reverse_bits\", since = \"1.37.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3974:2589":{"id":"0:3974:2589","crate_id":0,"name":"id","span":{"filename":"src/builder/arg.rs","begin":[62,4],"end":[62,21]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3662:415":{"id":"0:3662:415","crate_id":0,"name":"cmp","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2889:920":{"id":"0:2889:920","crate_id":0,"name":"new","span":{"filename":"src/parser/validator.rs","begin":[611,4],"end":[613,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4870:7479":{"id":"0:4870:7479","crate_id":0,"name":"DisplayVersion","span":{"filename":"src/error/kind.rs","begin":[375,4],"end":[375,18]},"visibility":"default","docs":"Not a true \"error\" as it means `--version` or similar was used.\nThe message will be sent to `stdout`.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .version(\"3.0\")\n    .try_get_matches_from(vec![\"prog\", \"--version\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::DisplayVersion);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:5066":{"id":"0:5066","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/matched_arg.rs","begin":[15,9],"end":[15,14]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5067:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4086:4886":{"id":"0:4086:4886","crate_id":0,"name":"Explicit","span":{"filename":"src/builder/arg.rs","begin":[5277,4],"end":[5277,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"}]}},"0:2426:2763":{"id":"0:2426:2763","crate_id":0,"name":"Item","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1468,4],"end":[1468,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:1341:681":{"id":"0:1341:681","crate_id":0,"name":"from","span":{"filename":"src/builder/possible_value.rs","begin":[256,4],"end":[258,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1103:6397":{"id":"0:1103:6397","crate_id":0,"name":"is_infer_subcommands_set","span":{"filename":"src/builder/command.rs","begin":[3693,4],"end":[3695,5]},"visibility":"crate","docs":"Report whether [`Command::infer_subcommands`] is set","links":{"`Command::infer_subcommands`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1545:920":{"id":"0:1545:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[1098,4],"end":[1100,5]},"visibility":"public","docs":"Select full range of `i64`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3731:3211":{"id":"0:3731:3211","crate_id":0,"name":"NO_AUTO_HELP","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"b:2:3198-0:5220:7335":{"id":"b:2:3198-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:578:4737":{"id":"0:578:4737","crate_id":0,"name":"is_allow_hyphen_values_set","span":{"filename":"src/builder/arg.rs","begin":[4541,4],"end":[4543,5]},"visibility":"public","docs":"Report whether [`Arg::allow_hyphen_values`] is set","links":{"`Arg::allow_hyphen_values`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3767:3277":{"id":"0:3767:3277","crate_id":0,"name":"MULTICALL","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:3660:997":{"id":"0:3660:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1681:2901":{"id":"0:1681:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1904,4],"end":[1906,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1529:7050":{"id":"0:1529:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[992,4],"end":[992,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:9339:7908-0:5156:7831":{"id":"a:2:9339:7908-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3405":{"id":"0:3405","crate_id":0,"name":null,"span":{"filename":"src/util/graph.rs","begin":[19,0],"end":[49,1]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3407:6627","0:3408:2673","0:3411:6628","0:3412:779","0:3415:2678"],"negative":false,"synthetic":false,"blanket_impl":null}},"44:2839:13621":{"id":"44:2839:13621","crate_id":44,"name":"Dyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:2840:9673","44:2841:13619","44:2842:14643","44:2843:14644","44:2844:74056","44:2845:74057","44:2846:74058","44:2847:2573","44:2850:74059"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1601:7090":{"id":"0:1601:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[1472,4],"end":[1497,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4761:7449":{"id":"b:2:3198-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3658:408":{"id":"0:3658:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2965":{"id":"0:2965","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[23,24],"end":[23,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::matches::ArgMatches","name":"ArgMatches","id":"0:4953:1658","glob":false}},"a:2:3269:211-0:3393:9003":{"id":"a:2:3269:211-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10387:9319":{"id":"2:10387:9319","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10388:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:31:25-0:5220:7335":{"id":"b:31:25-0:5220:7335","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"2:13508:304":{"id":"2:13508:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:16021:9073","str::as_mut_ptr":"1:16010:9064"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3559:9235":{"id":"2:3559:9235","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:30555"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:459:3952":{"id":"0:459:3952","crate_id":0,"name":"require_equals","span":{"filename":"src/builder/arg.rs","begin":[1813,4],"end":[1819,5]},"visibility":"public","docs":"Requires that options use the `--option=val` syntax\n\ni.e. an equals between the option and associated value.\n\n**NOTE:** Setting this requires [`Arg::takes_value`]\n\n# Examples\n\nSetting `require_equals` requires that the option have an equals sign between\nit and the associated value.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .require_equals(true)\n        .long(\"config\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config=file.conf\"\n    ]);\n\nassert!(res.is_ok());\n```\n\nSetting `require_equals` and *not* supplying the equals will cause an\nerror.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .require_equals(true)\n        .long(\"config\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"file.conf\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::NoEquals);\n```","links":{"`Arg::takes_value`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1840":{"id":"0:1840","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[29,0],"end":[29,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg::Arg","name":"Arg","id":"0:3972:1654","glob":false}},"b:2:3202-0:4886:127":{"id":"b:2:3202-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4848:7547":{"id":"0:4848:7547","crate_id":0,"name":"TooManyValues","span":{"filename":"src/error/kind.rs","begin":[158,4],"end":[158,17]},"visibility":"default","docs":"Occurs when a user provides more values for an argument than were defined by setting\n[`Arg::max_values`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"arg\")\n        .max_values(2))\n    .try_get_matches_from(vec![\"prog\", \"too\", \"many\", \"values\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::TooManyValues);\n```\n[`Arg::max_values`]: crate::Arg::max_values()","links":{"crate::Arg::max_values()":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4001:2664":{"id":"0:4001:2664","crate_id":0,"name":"validator","span":{"filename":"src/builder/arg.rs","begin":[89,4],"end":[89,62]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'help"}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:1886":{"id":"0:1886","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[43,0],"end":[43,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::_AutoValueParser","name":"_AutoValueParser","id":"0:4712:2912","glob":false}},"0:4899:7466":{"id":"0:4899:7466","crate_id":0,"name":"wait_on_exit","span":{"filename":"src/error/mod.rs","begin":[64,4],"end":[64,22]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"30:196:9249":{"id":"30:196:9249","crate_id":30,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"30:114:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:31:25-0:4761:7449":{"id":"b:31:25-0:4761:7449","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:3008:6610":{"id":"0:3008:6610","crate_id":0,"name":"is_position","span":{"filename":"src/mkeymap.rs","begin":[33,4],"end":[35,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3807:1356":{"id":"0:3807:1356","crate_id":0,"name":"sub_assign","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Disables all flags enabled in the set.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:3972:1654":{"id":"b:2:4002-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4201:3953":{"id":"0:4201:3953","crate_id":0,"name":"RequireEquals","span":{"filename":"src/builder/arg_settings.rs","begin":[174,4],"end":[174,17]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::require_equals`] and [`Arg::is_require_equals_set`]","links":{"`Arg::require_equals`":"0:3972:1654","`Arg::is_require_equals_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::require_equals` and `Arg::is_require_equals_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::require_equals` and `Arg::is_require_equals_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"2:32012:74248":{"id":"2:32012:74248","crate_id":2,"name":"div_floor","span":null,"visibility":"public","docs":"Calculates the quotient of `self` and `rhs`, rounding the result towards negative infinity.\n\nThis is the same as performing `self / rhs` for all unsigned integers.\n\n# Panics\n\nThis function will panic if `rhs` is zero.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(int_roundings)]\nassert_eq!(7_u64.div_floor(4), 1);\n```","links":{},"attrs":["#[unstable(feature = \"int_roundings\", issue = \"88581\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3135:8741":{"id":"0:3135:8741","crate_id":0,"name":"write_arg","span":{"filename":"src/output/help.rs","begin":[252,4],"end":[281,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes help for an argument to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["last_arg",{"kind":"primitive","inner":"bool"}],["next_line_help",{"kind":"primitive","inner":"bool"}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2827:2596":{"id":"0:2827:2596","crate_id":0,"name":"required","span":{"filename":"src/parser/validator.rs","begin":[13,4],"end":[13,28]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:2872-0:2688:1664":{"id":"b:2:2872-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4819:7544":{"id":"0:4819:7544","crate_id":0,"name":"Number","span":{"filename":"src/error/context.rs","begin":[54,4],"end":[54,17]},"visibility":"default","docs":"A single value","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"isize"}]}},"b:2:3208-0:5031:8079":{"id":"b:2:3208-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1996":{"id":"0:1996","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[25,0],"end":[25,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"context::ContextKind","name":"ContextKind","id":"0:4761:7449","glob":false}},"0:3218:1542":{"id":"0:3218:1542","crate_id":0,"name":"0","span":{"filename":"src/output/help.rs","begin":[1119,11],"end":[1119,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'writer","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3269:211-0:4657:2904":{"id":"a:2:3269:211-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1435:681":{"id":"0:1435:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[444,4],"end":[447,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"resolved_path","inner":{"name":"std::ops::RangeToInclusive","id":"2:46048:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:5058:7830":{"id":"a:2:3310:6658-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:5141:7832":{"id":"b:2:4002-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13499:2564":{"id":"2:13499:2564","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:545:4668":{"id":"0:545:4668","crate_id":0,"name":"get_help","span":{"filename":"src/builder/arg.rs","begin":[4272,4],"end":[4274,5]},"visibility":"public","docs":"Get the help specified for this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1193:6556":{"id":"0:1193:6556","crate_id":0,"name":"two_groups_of","span":{"filename":"src/builder/command.rs","begin":[4537,4],"end":[4542,5]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":["#[allow(unused)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["condition",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3519:130","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:3647:2672":{"id":"b:2:2872-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5243:408":{"id":"0:5243:408","crate_id":0,"name":"clone","span":{"filename":"src/mkeymap.rs","begin":[25,37],"end":[25,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3153:8739":{"id":"0:3153:8739","crate_id":0,"name":"will_args_wrap","span":{"filename":"src/output/help.rs","begin":[558,4],"end":[565,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Will use next line help on writing args.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31957:1447":{"id":"2:31957:1447","crate_id":2,"name":"unchecked_sub","span":null,"visibility":"public","docs":"Unchecked integer subtraction. Computes `self - rhs`, assuming overflow\ncannot occur.\n\n# Safety\n\nThis results in undefined behavior when\n`self - rhs > u64::MAX` or `self - rhs < u64::MIN`,\ni.e. when [`checked_sub`] would return `None`.\n\n[`checked_sub`]: u64::checked_sub","links":{"u64::checked_sub":"1:16024:9076"},"attrs":["#[unstable(feature = \"unchecked_math\", reason = \"niche optimization path\",\nissue = \"85122\",)]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue =\n\"85122\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1673":{"id":"0:1673","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1888,0],"end":[1895,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":["0:1674:1664","0:1675:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:5031:8079":{"id":"a:2:3269:211-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2578:7911":{"id":"0:2578:7911","crate_id":0,"name":"value_source","span":{"filename":"src/parser/matches/value_source.rs","begin":[1,0],"end":[11,1]},"visibility":{"restricted":{"parent":"0:2195:2748","path":"::parser::matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5070:1677"],"is_stripped":false}},"0:2183:221":{"id":"0:2183:221","crate_id":0,"name":"Target","span":{"filename":"src/parser/arg_matcher.rs","begin":[275,4],"end":[275,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3448":{"id":"0:3448","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[61,0],"end":[67,1]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3449:221","0:3450:543"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4670":{"id":"0:4670","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1090,15],"end":[1090,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4672:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:7907-0:5141:7832":{"id":"a:2:9340:7907-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:31:25-0:4972:1709":{"id":"b:31:25-0:4972:1709","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:1487:920":{"id":"0:1487:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[728,4],"end":[730,5]},"visibility":"public","docs":"Implementation for [`ValueParser::os_string`]","links":{"`ValueParser::os_string`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4311:5192":{"id":"0:4311:5192","crate_id":0,"name":"EXCLUSIVE","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4918:408":{"id":"0:4918:408","crate_id":0,"name":"clone","span":{"filename":"src/error/mod.rs","begin":[1064,9],"end":[1064,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1810:7385":{"id":"0:1810:7385","crate_id":0,"name":"find_duplicates","span":{"filename":"src/builder/debug_asserts.rs","begin":[418,0],"end":[426,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":"Find duplicates in a sorted array.\n\nThe algorithm is simple: the array is sorted, duplicates\nmust be placed next to each other, we can check only adjacent elements.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:100":{"id":"0:100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[152,0],"end":[152,29]},"visibility":"public","docs":"Deprecated, replaced with [`ValueEnum`]","links":{"`ValueEnum`":"0:211:1666"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `ValueEnum`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ValueEnum`"},"kind":"import","inner":{"source":"ValueEnum","name":"ArgEnum","id":"0:211:1666","glob":false}},"0:5081":{"id":"0:5081","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,23],"end":[2,27]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4833:1674":{"id":"0:4833:1674","crate_id":0,"name":"ErrorKind","span":{"filename":"src/error/kind.rs","begin":[4,0],"end":[396,1]},"visibility":"public","docs":"Command line argument parser kind of error","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4834:7526","0:4836:7559","0:4838:7530","0:4840:7534","0:4842:6950","0:4844:7523","0:4846:7552","0:4848:7547","0:4850:7550","0:4852:7542","0:4854:7554","0:4856:7517","0:4858:7536","0:4860:7538","0:4862:7557","0:4864:7539","0:4866:7478","0:4868:7512","0:4870:7479","0:4872:7564","0:4874:7628","0:4876:7629"],"impls":["0:1992","a:2:3310:6658-0:4833:1674","a:2:3269:211-0:4833:1674","a:2:9340:7907-0:4833:1674","a:2:9339:7908-0:4833:1674","a:2:3281:220-0:4833:1674","b:2:3198-0:4833:1674","b:2:2872-0:4833:1674","b:2:2869-0:4833:1674","b:2:4002-0:4833:1674","b:2:3202-0:4833:1674","b:2:3213-0:4833:1674","b:2:3208-0:4833:1674","b:5:6413-0:4833:1674","b:5:787-0:4833:1674","0:4878","0:4880","0:4881","0:4883","0:4884","0:1994"]}},"0:4146":{"id":"0:4146","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[1,29],"end":[1,38]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2482:59":{"id":"0:2482:59","crate_id":0,"name":"default","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1624,4],"end":[1630,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4972:1709":{"id":"a:2:3310:6658-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4750:1542":{"id":"0:4750:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/debug_asserts.rs","begin":[354,8],"end":[354,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2961":{"id":"0:2961","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[22,0],"end":[22,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::matches::ValuesRef","name":"ValuesRef","id":"0:4997:7835","glob":false}},"b:31:25-0:4588:1673":{"id":"b:31:25-0:4588:1673","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"b:5:787-0:1394:2909":{"id":"b:5:787-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:4953:1658":{"id":"a:2:9339:7908-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:996:6033":{"id":"0:996:6033","crate_id":0,"name":"visible_short_flag_alias","span":{"filename":"src/builder/command.rs","begin":[2545,4],"end":[2549,5]},"visibility":"public","docs":"Add an alias, which functions as  \"visible\" short flag subcommand\n\nThis will automatically dispatch as if this subcommand was used. This is more efficient,\nand easier than creating multiple hidden subcommands as one only needs to check for the\nexistence of this command, and not all variants.\n\nSee also [`Command::short_flag_alias`].\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n            .subcommand(Command::new(\"test\").short_flag('t')\n                .visible_short_flag_alias('d'))\n            .get_matches_from(vec![\"myprog\", \"-d\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::short_flag_alias`]: Command::short_flag_alias()","links":{"`Command::short_flag_alias`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4989:779":{"id":"0:4989:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1344,4],"end":[1344,76]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: type_complexity)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Map","id":"2:46798:7923","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"std::vec::IntoIter","id":"5:7379:8270","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}},"0:536:4584":{"id":"0:536:4584","crate_id":0,"name":"conflicts_with_all","span":{"filename":"src/builder/arg.rs","begin":[4098,4],"end":[4101,5]},"visibility":"public","docs":"This argument is mutually exclusive with the specified arguments.\n\nSee [`Arg::conflicts_with`].\n\n**NOTE:** Conflicting rules take precedence over being required by default. Conflict rules\nonly need to be set for one of the two arguments, they do not need to be set for each.\n\n**NOTE:** Defining a conflict is two-way, but does *not* need to defined for both arguments\n(i.e. if A conflicts with B, defining A.conflicts_with(B) is sufficient. You do not need\nneed to also do B.conflicts_with(A))\n\n**NOTE:** [`Arg::exclusive(true)`] allows specifying an argument which conflicts with every other argument.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .conflicts_with_all(&[\"debug\", \"input\"])\n# ;\n```\n\nSetting conflicting argument, and having any of the arguments present at runtime with a\nconflicting argument is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .conflicts_with_all(&[\"debug\", \"input\"])\n        .long(\"config\"))\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\"))\n    .arg(Arg::new(\"input\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"file.conf\", \"file.txt\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::ArgumentConflict);\n```\n[`Arg::conflicts_with`]: Arg::conflicts_with()\n[`Arg::exclusive(true)`]: Arg::exclusive()","links":{"Arg::conflicts_with()":"0:3972:1654","Arg::exclusive()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2091:920":{"id":"0:2091:920","crate_id":0,"name":"new","span":{"filename":"src/error/mod.rs","begin":[1119,4],"end":[1121,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:915:5534":{"id":"0:915:5534","crate_id":0,"name":"ignore_errors","span":{"filename":"src/builder/command.rs","begin":[953,4],"end":[959,5]},"visibility":"public","docs":"Try not to fail on parse errors, like missing option values.\n\n**Note:** Make sure you apply it as `global_setting` if you want this setting\nto be propagated to subcommands and sub-subcommands!\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```rust\n# use clap::{Command, arg};\nlet cmd = Command::new(\"cmd\")\n  .ignore_errors(true)\n  .arg(arg!(-c --config <FILE> \"Sets a custom config file\").required(false))\n  .arg(arg!(-x --stuff <FILE> \"Sets a custom stuff file\").required(false))\n  .arg(arg!(f: -f \"Flag\"));\n\nlet r = cmd.try_get_matches_from(vec![\"cmd\", \"-c\", \"file\", \"-f\", \"-x\"]);\n\nassert!(r.is_ok(), \"unexpected error: {:?}\", r);\nlet m = r.unwrap();\nassert_eq!(m.value_of(\"config\"), Some(\"file\"));\nassert!(m.is_present(\"f\"));\nassert_eq!(m.value_of(\"stuff\"), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1369:6755":{"id":"0:1369:6755","crate_id":0,"name":"long_end","span":{"filename":"src/builder/usage_parser.rs","begin":[229,0],"end":[231,1]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["b",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4466:5248":{"id":"0:4466:5248","crate_id":0,"name":"long_version","span":{"filename":"src/builder/command.rs","begin":[87,4],"end":[87,36]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8485:2763":{"id":"2:8485:2763","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2553:7882":{"id":"0:2553:7882","crate_id":0,"name":"push_index","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[93,4],"end":[95,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5281":{"id":"0:5281","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[135,15],"end":[135,20]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5282:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3393:9003":{"id":"0:3393:9003","crate_id":0,"name":"FnvHasher","span":{"filename":"src/util/fnv.rs","begin":[24,0],"end":[24,33]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:3395:1542"],"impls":["0:3396","a:2:3310:6658-0:3393:9003","a:2:3269:211-0:3393:9003","a:2:9340:7907-0:3393:9003","a:2:9339:7908-0:3393:9003","a:2:3281:220-0:3393:9003","b:2:3198-0:3393:9003","b:2:2872-0:3393:9003","b:2:2869-0:3393:9003","b:2:4002-0:3393:9003","b:2:3202-0:3393:9003","b:2:3213-0:3393:9003","b:2:3208-0:3393:9003","0:3398"]}},"0:4630":{"id":"0:4630","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[674,9],"end":[674,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:32005:74242":{"id":"2:32005:74242","crate_id":2,"name":"overflowing_neg","span":null,"visibility":"public","docs":"Negates self in an overflowing fashion.\n\nReturns `!self + 1` using wrapping operations to return the value\nthat represents the negation of this unsigned value. Note that for\npositive unsigned values overflow always occurs, but negating 0 does\nnot overflow.\n\n# Examples\n\nBasic usage\n\n```\nassert_eq!(0u64.overflowing_neg(), (0, false));\nassert_eq!(2u64.overflowing_neg(), (-2i32 as u64, true));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4629:2907":{"id":"a:2:3310:6658-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:3332"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:990:3367":{"id":"0:990:3367","crate_id":0,"name":"aliases","span":{"filename":"src/builder/command.rs","begin":[2432,4],"end":[2435,5]},"visibility":"public","docs":"Sets multiple hidden aliases to this subcommand.\n\nThis allows the subcommand to be accessed via *either* the original name or any of the\ngiven aliases. This is more efficient, and easier than creating multiple hidden subcommands\nas one only needs to check for the existence of this command and not all aliased variants.\n\n**NOTE:** Aliases defined with this method are *hidden* from the help\nmessage. If looking for aliases that will be displayed in the help\nmessage, see [`Command::visible_aliases`].\n\n**NOTE:** When using aliases and checking for the existence of a\nparticular subcommand within an [`ArgMatches`] struct, one only needs to\nsearch for the original name and not all aliases.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"myprog\")\n    .subcommand(Command::new(\"test\")\n        .aliases(&[\"do-stuff\", \"do-tests\", \"tests\"]))\n        .arg(Arg::new(\"input\")\n            .help(\"the file to add\")\n            .required(false))\n    .get_matches_from(vec![\"myprog\", \"do-tests\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::visible_aliases`]: Command::visible_aliases()","links":{"`ArgMatches`":"0:4953:1658","`Command::visible_aliases`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:5010:7834":{"id":"b:2:3208-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4319:2564":{"id":"0:4319:2564","crate_id":0,"name":"is_empty","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8442:9549":{"id":"2:8442:9549","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8444:10942"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:31:25-0:4456:1667":{"id":"b:31:25-0:4456:1667","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"2:31992:74229":{"id":"2:31992:74229","crate_id":2,"name":"wrapping_shr","span":null,"visibility":"public","docs":"Panic-free bitwise shift-right; yields `self >> mask(rhs)`,\nwhere `mask` removes any high-order bits of `rhs` that\nwould cause the shift to exceed the bitwidth of the type.\n\nNote that this is *not* the same as a rotate-right; the\nRHS of a wrapping shift-right is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a [`rotate_right`](Self::rotate_right) function,\nwhich may be what you want instead.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(128u64.wrapping_shr(7), 1);\nassert_eq!(128u64.wrapping_shr(128), 128);\n```","links":{"Self::rotate_right":"1:16024:9076"},"attrs":["#[stable(feature = \"num_wrapping\", since = \"1.2.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1478:920":{"id":"0:1478:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[680,4],"end":[682,5]},"visibility":"public","docs":"Implementation for [`ValueParser::string`]","links":{"`ValueParser::string`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1446":{"id":"0:1446","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[526,0],"end":[536,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1447:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:930:5623":{"id":"0:930:5623","crate_id":0,"name":"infer_long_args","span":{"filename":"src/builder/command.rs","begin":[1325,4],"end":[1331,5]},"visibility":"public","docs":"Allow partial matches of long arguments or their [aliases].\n\nFor example, to match an argument named `--test`, one could use `--t`, `--te`, `--tes`, and\n`--test`.\n\n**NOTE:** The match *must not* be ambiguous at all in order to succeed. i.e. to match\n`--te` to `--test` there could not also be another argument or alias `--temp` because both\nstart with `--te`\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n[aliases]: crate::Command::aliases()","links":{"crate::Command::aliases()":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5174:8567":{"id":"a:2:3269:211-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1548:7210":{"id":"0:1548:7210","crate_id":0,"name":"format_bounds","span":{"filename":"src/builder/value_parser.rs","begin":[1153,4],"end":[1173,5]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1451:1429":{"id":"0:1451:1429","crate_id":0,"name":"type_id","span":{"filename":"src/builder/value_parser.rs","begin":[555,4],"end":[555,36]},"visibility":"default","docs":"Describes the content of `AnyValue`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1000:6050":{"id":"0:1000:6050","crate_id":0,"name":"visible_short_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[2625,4],"end":[2631,5]},"visibility":"public","docs":"Add aliases, which function as *visible* short flag subcommands.\n\nSee [`Command::short_flag_aliases`].\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n            .subcommand(Command::new(\"test\").short_flag('b')\n                .visible_short_flag_aliases(&['t']))\n            .get_matches_from(vec![\"myprog\", \"-t\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::short_flag_aliases`]: Command::short_flag_aliases()","links":{"`Command::short_flag_aliases`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"char"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:3647:2672":{"id":"a:2:9339:7908-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1067:6343":{"id":"0:1067:6343","crate_id":0,"name":"find_subcommand","span":{"filename":"src/builder/command.rs","begin":[3502,4],"end":[3507,5]},"visibility":"public","docs":"Find subcommand such that its name or one of aliases equals `name`.\n\nThis does not recurse through subcommands of subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23545:12679":{"id":"2:23545:12679","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23546:1270","2:23547:1269","2:23548:1267","2:23549:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:22957:12686","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:429:2593":{"id":"0:429:2593","crate_id":0,"name":"value_name","span":{"filename":"src/builder/arg.rs","begin":[1420,4],"end":[1422,5]},"visibility":"public","docs":"Placeholder for the argument's value in the help message / usage.\n\nThis name is cosmetic only; the name is **not** used to access arguments.\nThis setting can be very helpful when describing the type of input the user should be\nusing, such as `FILE`, `INTERFACE`, etc. Although not required, it's somewhat convention to\nuse all capital letters for the value name.\n\n**NOTE:** implicitly sets [`Arg::takes_value(true)`]\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"cfg\")\n    .long(\"config\")\n    .value_name(\"FILE\")\n# ;\n```\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"config\")\n        .long(\"config\")\n        .value_name(\"FILE\")\n        .help(\"Some help text\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\nRunning the above program produces the following output\n\n```text\nvalnames\n\nUSAGE:\n   valnames [OPTIONS]\n\nOPTIONS:\n    --config <FILE>     Some help text\n    -h, --help          Print help information\n    -V, --version       Print version information\n```\n[option]: Arg::takes_value()\n[positional]: Arg::index()\n[`Arg::takes_value(true)`]: Arg::takes_value()","links":{"Arg::takes_value()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5031:8079":{"id":"a:2:9339:7908-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:4807:7450":{"id":"b:2:3208-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2560:7880":{"id":"0:2560:7880","crate_id":0,"name":"append_val","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[128,4],"end":[135,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["raw_val",{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4662":{"id":"0:4662","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[981,16],"end":[981,21]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4663:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1871":{"id":"0:1871","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[38,0],"end":[38,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::StringValueParser","name":"StringValueParser","id":"0:4629:2907","glob":false}},"0:3015":{"id":"0:3015","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[65,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3016:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1416":{"id":"0:1416","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[223,0],"end":[260,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1417:7090","0:1418:1429","0:1419:3893","0:1420:7091"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:4231:2672":{"id":"a:2:9339:7908-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:644:604":{"id":"0:644:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/arg.rs","begin":[5075,4],"end":[5077,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4553":{"id":"0:4553","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[29,43],"end":[29,45]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1668:1664":{"id":"0:1668:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1873,4],"end":[1873,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i16"}}],"bindings":[]}}}}}},"0:3769:2671":{"id":"0:3769:2671","crate_id":0,"name":"empty","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns an empty set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2968":{"id":"0:2968","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[23,36],"end":[23,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::matches::Indices","name":"Indices","id":"0:5048:1675","glob":false}},"0:112:1848":{"id":"0:112:1848","crate_id":0,"name":"pacman","span":{"filename":"src/_cookbook/pacman.rs","begin":[1,0],"end":[7,50]},"visibility":"public","docs":"# Example: pacman-like CLI (Builder API)\n\n```rust\nuse clap::{Arg, ArgAction, Command};\n\nfn main() {\n    let matches = Command::new(\"pacman\")\n        .about(\"package manager utility\")\n        .version(\"5.2.1\")\n        .subcommand_required(true)\n        .arg_required_else_help(true)\n        .author(\"Pacman Development Team\")\n        // Query subcommand\n        //\n        // Only a few of its arguments are implemented below.\n        .subcommand(\n            Command::new(\"query\")\n                .short_flag('Q')\n                .long_flag(\"query\")\n                .about(\"Query the package database.\")\n                .arg(\n                    Arg::new(\"search\")\n                        .short('s')\n                        .long(\"search\")\n                        .help(\"search locally installed packages for matching strings\")\n                        .conflicts_with(\"info\")\n                        .takes_value(true)\n                        .multiple_values(true),\n                )\n                .arg(\n                    Arg::new(\"info\")\n                        .long(\"info\")\n                        .short('i')\n                        .conflicts_with(\"search\")\n                        .help(\"view package information\")\n                        .takes_value(true)\n                        .multiple_values(true),\n                ),\n        )\n        // Sync subcommand\n        //\n        // Only a few of its arguments are implemented below.\n        .subcommand(\n            Command::new(\"sync\")\n                .short_flag('S')\n                .long_flag(\"sync\")\n                .about(\"Synchronize packages.\")\n                .arg(\n                    Arg::new(\"search\")\n                        .short('s')\n                        .long(\"search\")\n                        .conflicts_with(\"info\")\n                        .takes_value(true)\n                        .multiple_values(true)\n                        .help(\"search remote repositories for matching strings\"),\n                )\n                .arg(\n                    Arg::new(\"info\")\n                        .long(\"info\")\n                        .conflicts_with(\"search\")\n                        .short('i')\n                        .action(ArgAction::SetTrue)\n                        .help(\"view package information\"),\n                )\n                .arg(\n                    Arg::new(\"package\")\n                        .help(\"packages\")\n                        .required_unless_present(\"search\")\n                        .takes_value(true)\n                        .multiple_values(true),\n                ),\n        )\n        .get_matches();\n\n    match matches.subcommand() {\n        Some((\"sync\", sync_matches)) => {\n            if sync_matches.contains_id(\"search\") {\n                let packages: Vec<_> = sync_matches\n                    .get_many::<String>(\"search\")\n                    .expect(\"contains_id\")\n                    .map(|s| s.as_str())\n                    .collect();\n                let values = packages.join(\", \");\n                println!(\"Searching for {}...\", values);\n                return;\n            }\n\n            let packages: Vec<_> = sync_matches\n                .get_many::<String>(\"package\")\n                .expect(\"is present\")\n                .map(|s| s.as_str())\n                .collect();\n            let values = packages.join(\", \");\n\n            if *sync_matches\n                .get_one::<bool>(\"info\")\n                .expect(\"defaulted by clap\")\n            {\n                println!(\"Retrieving info for {}...\", values);\n            } else {\n                println!(\"Installing {}...\", values);\n            }\n        }\n        Some((\"query\", query_matches)) => {\n            if let Some(packages) = query_matches.get_many::<String>(\"info\") {\n                let comma_sep = packages.map(|s| s.as_str()).collect::<Vec<_>>().join(\", \");\n                println!(\"Retrieving info for {}...\", comma_sep);\n            } else if let Some(queries) = query_matches.get_many::<String>(\"search\") {\n                let comma_sep = queries.map(|s| s.as_str()).collect::<Vec<_>>().join(\", \");\n                println!(\"Searching Locally for {}...\", comma_sep);\n            } else {\n                println!(\"Displaying all locally installed packages...\");\n            }\n        }\n        _ => unreachable!(), // If all subcommands are defined above, anything else is unreachable\n    }\n}\n```\n\n[`pacman`](https://wiki.archlinux.org/index.php/pacman) defines subcommands via flags.\n\nHere, `-S` is a short flag subcommand:\n```console\n$ pacman -S package\nInstalling package...\n\n```\n\nHere `--sync` is a long flag subcommand:\n```console\n$ pacman --sync package\nInstalling package...\n\n```\n\nNow the short flag subcommand (`-S`) with a long flag:\n```console\n$ pacman -S --search name\nSearching for name...\n\n```\n\nAnd the various forms of short flags that work:\n```console\n$ pacman -S -s name\nSearching for name...\n\n$ pacman -Ss name\nSearching for name...\n\n```\n*(users can \"stack\" short subcommands with short flags or with other short flag subcommands)*\n\nIn the help, this looks like:\n```console\n$ pacman -h\npacman 5.2.1\nPacman Development Team\npackage manager utility\n\nUSAGE:\n    pacman[EXE] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    help                Print this message or the help of the given subcommand(s)\n    query -Q --query    Query the package database.\n    sync -S --sync      Synchronize packages.\n\n$ pacman -S -h\npacman[EXE]-sync \nSynchronize packages.\n\nUSAGE:\n    pacman[EXE] {sync|--sync|-S} [OPTIONS] [--] [package]...\n\nARGS:\n    <package>...    packages\n\nOPTIONS:\n    -h, --help                  Print help information\n    -i, --info                  view package information\n    -s, --search <search>...    search remote repositories for matching strings\n\n```\n\nAnd errors:\n```console\n$ pacman -S -s foo -i bar\n? failed\nerror: The argument '--search <search>...' cannot be used with '--info'\n\nUSAGE:\n    pacman[EXE] {sync|--sync|-S} --search <search>... <package>...\n\nFor more information try --help\n\n```\n\n**NOTE:** Keep in mind that subcommands, flags, and long flags are *case sensitive*: `-Q` and `-q` are different flags/subcommands. For example, you can have both `-Q` subcommand and `-q` flag, and they will be properly disambiguated.\nLet's make a quick program to illustrate.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:4941:660":{"id":"0:4941:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/error.rs","begin":[4,16],"end":[4,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1015":{"id":"0:1015","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[3263,0],"end":[3784,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":"# Reflection","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1017:6279","0:1018:6282","0:1019:6283","0:1020:6285","0:1022:4666","0:1023:6288","0:1024:6290","0:1025:6292","0:1026:6294","0:1027:6296","0:1028:6298","0:1029:6300","0:1030:4674","0:1031:6303","0:1032:4687","0:1036:6309","0:1040:6311","0:1044:4689","0:1047:6314","0:1050:6316","0:1053:2677","0:1054:5459","0:1055:6324","0:1057:6326","0:1059:6329","0:1060:6331","0:1061:6334","0:1062:6336","0:1063:6337","0:1064:6338","0:1065:6339","0:1066:6340","0:1067:6343","0:1070:6347","0:1073:6349","0:1075:6351","0:1077:6353","0:1080:6355","0:1083:6362","0:1085:6363","0:1089:6368","0:1091:6374","0:1092:6376","0:1093:6378","0:1094:6380","0:1095:6382","0:1096:4756","0:1097:6385","0:1098:6387","0:1099:6389","0:1100:6391","0:1101:6393","0:1102:6395","0:1103:6397","0:1104:6399","0:1105:4737","0:1106:6402","0:1107:6404","0:1108:6406","0:1109:4758","0:1110:6409","0:1111:6411","0:1112:6413","0:1113:6417","0:1116:6419","0:1117:6421","0:1118:6423","0:1119:6425"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1165:6487":{"id":"0:1165:6487","crate_id":0,"name":"get_keymap","span":{"filename":"src/builder/command.rs","begin":[4137,4],"end":[4139,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4093:660":{"id":"0:4093:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg.rs","begin":[5273,22],"end":[5273,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4629:2907":{"id":"b:2:3213-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7795:11620":{"id":"1:7795:11620","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7796:23882"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4577:660":{"id":"0:4577:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/usage_parser.rs","begin":[8,20],"end":[8,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4556:6725":{"id":"a:2:9340:7907-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5265":{"id":"0:5265","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[14,9],"end":[14,14]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5266:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4588:1673":{"id":"a:2:3269:211-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4741:9498":{"id":"1:4741:9498","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:8409","1:4743:23645","1:4744:23646","1:4745:23647"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1816:7374":{"id":"0:1816:7374","crate_id":0,"name":"_verify_positionals","span":{"filename":"src/builder/debug_asserts.rs","begin":[467,0],"end":[631,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4095":{"id":"0:4095","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,29],"end":[5273,38]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4096:604","0:4097:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:31:25-0:5156:7831":{"id":"b:31:25-0:5156:7831","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"b:2:4002-0:4629:2907":{"id":"b:2:4002-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5236":{"id":"0:5236","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[25,27],"end":[25,29]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4668":{"id":"0:4668","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1090,9],"end":[1090,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2457:2763":{"id":"0:2457:2763","crate_id":0,"name":"Item","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1557,4],"end":[1557,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:3636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:548:2599":{"id":"0:548:2599","crate_id":0,"name":"get_short","span":{"filename":"src/builder/arg.rs","begin":[4299,4],"end":[4301,5]},"visibility":"public","docs":"Get the short option name for this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3756:3255":{"id":"0:3756:3255","crate_id":0,"name":"BIN_NAME_BUILT","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:2434":{"id":"0:2434","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1487,0],"end":[1495,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"Creates an empty iterator.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:2435:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4805":{"id":"0:4805","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[2,40],"end":[2,42]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1618:59":{"id":"0:1618:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[1600,4],"end":[1602,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4647:2916":{"id":"b:5:787-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:4892:7456":{"id":"b:2:3198-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3207:8716":{"id":"0:3207:8716","crate_id":0,"name":"dimensions","span":{"filename":"src/output/help.rs","begin":[1106,0],"end":[1112,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:5:787-0:4700:2915":{"id":"b:5:787-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1679":{"id":"0:1679","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1902,0],"end":[1907,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":["0:1680:1664","0:1681:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1029:6300":{"id":"0:1029:6300","crate_id":0,"name":"get_long_about","span":{"filename":"src/builder/command.rs","begin":[3334,4],"end":[3336,5]},"visibility":"public","docs":"Get the help message specified via [`Command::long_about`].\n\n[`App::long_about`]: Command::long_about()","links":{"`Command::long_about`":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4972:1709":{"id":"b:2:3198-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1467":{"id":"0:1467","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[642,0],"end":[669,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3519:130","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"std::error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"F"},"items":["0:1471:7050","0:1472:7090"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3655":{"id":"0:3655","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:892:2764":{"id":"0:892:2764","crate_id":0,"name":"get_matches_from","span":{"filename":"src/builder/command.rs","begin":[595,4],"end":[604,5]},"visibility":"public","docs":"Parse the specified arguments, exiting on failure.\n\n**NOTE:** The first argument will be parsed as the binary name unless\n[`Command::no_binary_name`] is used.\n\n# Panics\n\nIf contradictory arguments or settings exist.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet arg_vec = vec![\"my_prog\", \"some\", \"args\", \"to\", \"parse\"];\n\nlet matches = Command::new(\"myprog\")\n    // Args and options go here...\n    .get_matches_from(arg_vec);\n```\n[`App::get_matches`]: Command::get_matches()\n[`clap::Result`]: Result\n[`Vec`]: std::vec::Vec","links":{"`Command::no_binary_name`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3457":{"id":"0:3457","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[88,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3458:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:717":{"id":"0:717","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[479,0],"end":[529,1]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":"Deprecated in [Issue #3087](https://github.com/clap-rs/clap/issues/3087), maybe [`clap::Parser`][crate::Parser] would fit your use case?","links":{"crate::Parser":"0:164:1664"},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Yaml","id":"20:620:1717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:719:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4836:7559":{"id":"0:4836:7559","crate_id":0,"name":"UnknownArgument","span":{"filename":"src/error/kind.rs","begin":[33,4],"end":[33,19]},"visibility":"default","docs":"Occurs when a user provides a flag, option, argument or subcommand which isn't defined.\n\n# Examples\n\n```rust\n# use clap::{Command, arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(arg!(--flag \"some flag\"))\n    .try_get_matches_from(vec![\"prog\", \"--other\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::UnknownArgument);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2585":{"id":"0:2585","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[8,0],"end":[8,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg_matches::ValuesRef","name":"ValuesRef","id":"0:4997:7835","glob":false}},"0:5050:779":{"id":"0:5050:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1655,4],"end":[1655,33]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Cloned","id":"2:46699:7921","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4193:4015":{"id":"0:4193:4015","crate_id":0,"name":"RequireDelimiter","span":{"filename":"src/builder/arg_settings.rs","begin":[134,4],"end":[134,20]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::require_value_delimiter`] and\n[`Arg::is_require_value_delimiter_set`]","links":{"`Arg::require_value_delimiter`":"0:3972:1654","`Arg::is_require_value_delimiter_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::require_value_delimiter` and `Arg::is_require_value_delimiter_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::require_value_delimiter` and `Arg::is_require_value_delimiter_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:4530:1672":{"id":"b:2:3208-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:4629:2907":{"id":"a:2:3281:220-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"43:1676:13351":{"id":"43:1676:13351","crate_id":43,"name":"LineProgram","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:1679:13418","43:1680:73808"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Offset","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Reader","id":"43:1233:13260","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Reader","id":"43:1233:13260","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Offset"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Offset"},"bounds":[{"trait_bound":{"trait":{"name":"ReaderOffset","id":"43:1197:13261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:4917":{"id":"0:4917","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1064,9],"end":[1064,14]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4918:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[179,0],"end":[179,33]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"regex\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::RegexRef","name":"RegexRef","id":"0:4724:1700","glob":false}},"0:1807:415":{"id":"0:1807:415","crate_id":0,"name":"cmp","span":{"filename":"src/builder/debug_asserts.rs","begin":[383,4],"end":[385,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"43:194:13912":{"id":"43:194:13912","crate_id":43,"name":"ArrayLike","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:195:2763"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"43:189:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1018:6282":{"id":"0:1018:6282","crate_id":0,"name":"get_display_name","span":{"filename":"src/builder/command.rs","begin":[3271,4],"end":[3273,5]},"visibility":"public","docs":"Get the name of the binary.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1013:6278":{"id":"0:1013:6278","crate_id":0,"name":"subcommand_help_heading","span":{"filename":"src/builder/command.rs","begin":[3253,4],"end":[3259,5]},"visibility":"public","docs":"Sets the help heading used for subcommands when printing usage and help.\n\nBy default, this is \"SUBCOMMANDS\".\n\nSee also [`Command::subcommand_value_name`]\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .subcommand(Command::new(\"sub1\"))\n    .print_help()\n# ;\n```\n\nwill produce\n\n```text\nmyprog\n\nUSAGE:\n    myprog [SUBCOMMAND]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    help    Print this message or the help of the given subcommand(s)\n    sub1\n```\n\nbut usage of `subcommand_help_heading`\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .subcommand(Command::new(\"sub1\"))\n    .subcommand_help_heading(\"THINGS\")\n    .print_help()\n# ;\n```\n\nwill produce\n\n```text\nmyprog\n\nUSAGE:\n    myprog [SUBCOMMAND]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nTHINGS:\n    help    Print this message or the help of the given subcommand(s)\n    sub1\n```","links":{"`Command::subcommand_value_name`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["heading",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5058:7830":{"id":"b:2:4002-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1010:6258":{"id":"0:1010:6258","crate_id":0,"name":"multicall","span":{"filename":"src/builder/command.rs","begin":[3115,4],"end":[3121,5]},"visibility":"public","docs":"Multiple-personality program dispatched on the binary name (`argv[0]`)\n\nA \"multicall\" executable is a single executable\nthat contains a variety of applets,\nand decides which applet to run based on the name of the file.\nThe executable can be called from different names by creating hard links\nor symbolic links to it.\n\nThis is desirable for:\n- Easy distribution, a single binary that can install hardlinks to access the different\n  personalities.\n- Minimal binary size by sharing common code (e.g. standard library, clap)\n- Custom shells or REPLs where there isn't a single top-level command\n\nSetting `multicall` will cause\n- `argv[0]` to be stripped to the base name and parsed as the first argument, as if\n  [`Command::no_binary_name`][App::no_binary_name] was set.\n- Help and errors to report subcommands as if they were the top-level command\n\nWhen the subcommand is not present, there are several strategies you may employ, depending\non your needs:\n- Let the error percolate up normally\n- Print a specialized error message using the\n  [`Error::context`][crate::Error::context]\n- Print the [help][App::write_help] but this might be ambiguous\n- Disable `multicall` and re-parse it\n- Disable `multicall` and re-parse it with a specific subcommand\n\nWhen detecting the error condition, the [`ErrorKind`] isn't sufficient as a sub-subcommand\nmight report the same error.  Enable\n[`allow_external_subcommands`][App::allow_external_subcommands] if you want to specifically\nget the unrecognized binary name.\n\n**NOTE:** Multicall can't be used with [`no_binary_name`] since they interpret\nthe command name in incompatible ways.\n\n**NOTE:** The multicall command cannot have arguments.\n\n**NOTE:** Applets are slightly semantically different from subcommands,\nso it's recommended to use [`Command::subcommand_help_heading`] and\n[`Command::subcommand_value_name`] to change the descriptive text as above.\n\n# Examples\n\n`hostname` is an example of a multicall executable.\nBoth `hostname` and `dnsdomainname` are provided by the same executable\nand which behaviour to use is based on the executable file name.\n\nThis is desirable when the executable has a primary purpose\nbut there is related functionality that would be convenient to provide\nand implement it to be in the same executable.\n\nThe name of the cmd is essentially unused\nand may be the same as the name of a subcommand.\n\nThe names of the immediate subcommands of the Command\nare matched against the basename of the first argument,\nwhich is conventionally the path of the executable.\n\nThis does not allow the subcommand to be passed as the first non-path argument.\n\n```rust\n# use clap::{Command, ErrorKind};\nlet mut cmd = Command::new(\"hostname\")\n    .multicall(true)\n    .subcommand(Command::new(\"hostname\"))\n    .subcommand(Command::new(\"dnsdomainname\"));\nlet m = cmd.try_get_matches_from_mut(&[\"/usr/bin/hostname\", \"dnsdomainname\"]);\nassert!(m.is_err());\nassert_eq!(m.unwrap_err().kind(), ErrorKind::UnknownArgument);\nlet m = cmd.get_matches_from(&[\"/usr/bin/dnsdomainname\"]);\nassert_eq!(m.subcommand_name(), Some(\"dnsdomainname\"));\n```\n\nBusybox is another common example of a multicall executable\nwith a subcommmand for each applet that can be run directly,\ne.g. with the `cat` applet being run by running `busybox cat`,\nor with `cat` as a link to the `busybox` binary.\n\nThis is desirable when the launcher program has additional options\nor it is useful to run the applet without installing a symlink\ne.g. to test the applet without installing it\nor there may already be a command of that name installed.\n\nTo make an applet usable as both a multicall link and a subcommand\nthe subcommands must be defined both in the top-level Command\nand as subcommands of the \"main\" applet.\n\n```rust\n# use clap::Command;\nfn applet_commands() -> [Command<'static>; 2] {\n    [Command::new(\"true\"), Command::new(\"false\")]\n}\nlet mut cmd = Command::new(\"busybox\")\n    .multicall(true)\n    .subcommand(\n        Command::new(\"busybox\")\n            .subcommand_value_name(\"APPLET\")\n            .subcommand_help_heading(\"APPLETS\")\n            .subcommands(applet_commands()),\n    )\n    .subcommands(applet_commands());\n// When called from the executable's canonical name\n// its applets can be matched as subcommands.\nlet m = cmd.try_get_matches_from_mut(&[\"/usr/bin/busybox\", \"true\"]).unwrap();\nassert_eq!(m.subcommand_name(), Some(\"busybox\"));\nassert_eq!(m.subcommand().unwrap().1.subcommand_name(), Some(\"true\"));\n// When called from a link named after an applet that applet is matched.\nlet m = cmd.get_matches_from(&[\"/usr/bin/true\"]);\nassert_eq!(m.subcommand_name(), Some(\"true\"));\n```\n\n[`no_binary_name`]: crate::Command::no_binary_name\n[`App::subcommand_value_name`]: crate::Command::subcommand_value_name\n[`App::subcommand_help_heading`]: crate::Command::subcommand_help_heading","links":{"App::no_binary_name":"0:4456:1667","`ErrorKind`":"0:4833:1674","crate::Error::context":"0:4886:127","App::allow_external_subcommands":"0:4456:1667","crate::Command::no_binary_name":"0:4456:1667","`Command::subcommand_value_name`":"0:4456:1667","App::write_help":"0:4456:1667","`Command::subcommand_help_heading`":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1856":{"id":"0:1856","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[33,0],"end":[33,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"possible_value::PossibleValue","name":"PossibleValue","id":"0:4530:1672","glob":false}},"b:5:787-0:4629:2907":{"id":"b:5:787-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4470:5251":{"id":"0:4470:5251","crate_id":0,"name":"before_long_help","span":{"filename":"src/builder/command.rs","begin":[91,4],"end":[91,40]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,58],"end":[113,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::ArgSettings","name":"ArgSettings","id":"0:4172:1671","glob":false}},"0:922:5576":{"id":"0:922:5576","crate_id":0,"name":"propagate_version","span":{"filename":"src/builder/command.rs","begin":[1128,4],"end":[1134,5]},"visibility":"public","docs":"Specifies to use the version of the current command for all [`subcommands`].\n\nDefaults to `false`; subcommands have independent version strings from their parents.\n\n**Note:** Make sure you apply it as `global_setting` if you want this setting\nto be propagated to subcommands and sub-subcommands!\n\n**NOTE:** This choice is propagated to all child subcommands.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .version(\"v1.1\")\n    .propagate_version(true)\n    .subcommand(Command::new(\"test\"))\n    .get_matches();\n// running `$ myprog test --version` will display\n// \"myprog-test v1.1\"\n```\n\n[`subcommands`]: crate::Command::subcommand()","links":{"crate::Command::subcommand()":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4354:952":{"id":"0:4354:952","crate_id":0,"name":"not","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Returns the complement of this set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31938:12868":{"id":"2:31938:12868","crate_id":2,"name":"from_str_radix","span":null,"visibility":"public","docs":"Converts a string slice in a given base to an integer.\n\nThe string is expected to be an optional `+` sign\nfollowed by digits.\nLeading and trailing whitespace represent an error.\nDigits are a subset of these characters, depending on `radix`:\n\n* `0-9`\n* `a-z`\n* `A-Z`\n\n# Panics\n\nThis function panics if `radix` is not in the range from 2 to 36.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(u64::from_str_radix(\"A\", 16), Ok(10));\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["radix",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseIntError","id":"2:24317:12870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1331:6717":{"id":"0:1331:6717","crate_id":0,"name":"get_name_and_aliases","span":{"filename":"src/builder/possible_value.rs","begin":[219,4],"end":[221,5]},"visibility":"public","docs":"Returns all valid values of the argument value.\n\nNamely the name and all aliases.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5246:5460":{"id":"0:5246:5460","crate_id":0,"name":"Stdout","span":{"filename":"src/output/fmt.rs","begin":[10,4],"end":[10,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4891:660":{"id":"0:4891:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/mod.rs","begin":[39,9],"end":[39,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2322:8081":{"id":"0:2322:8081","crate_id":0,"name":"values_of_os","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[467,4],"end":[476,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_many()`]","links":{"`ArgMatches::get_many()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgMatches::get_many()`\")]","#[track_caller]","#![allow(deprecated)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:200:2780":{"id":"0:200:2780","crate_id":0,"name":"from_arg_matches","span":{"filename":"src/derive.rs","begin":[318,4],"end":[318,69]},"visibility":"default","docs":"Instantiate `Self` from [`ArgMatches`], parsing the arguments as needed.\n\nMotivation: If our application had two CLI options, `--name\n<STRING>` and the flag `--debug`, we may create a struct as follows:\n\n ```no_run\nstruct Context {\n    name: String,\n    debug: bool\n}\n```\n\nWe then need to convert the `ArgMatches` that `clap` generated into our struct.\n`from_arg_matches` serves as the equivalent of:\n\n ```no_run\n# use clap::ArgMatches;\n# struct Context {\n#   name: String,\n#   debug: bool\n# }\nimpl From<ArgMatches> for Context {\n   fn from(m: ArgMatches) -> Self {\n       Context {\n           name: m.get_one::<String>(\"name\").unwrap().clone(),\n           debug: *m.get_one::<bool>(\"debug\").expect(\"defaulted by clap\"),\n       }\n   }\n}\n```","links":{"`ArgMatches`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1462:2908":{"id":"0:1462:2908","crate_id":0,"name":"TypedValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[605,0],"end":[640,1]},"visibility":"public","docs":"Parse/validate argument values","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1463:7050","0:1464:7090","0:1465:2747","0:1466:3893"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"implementations":["0:1467","0:1479","0:1488","0:1496","0:1506","0:1528","0:1549","0:1575","0:1599","0:1612","0:1624","0:1636"]}},"0:5095:8373":{"id":"0:5095:8373","crate_id":0,"name":"Opt","span":{"filename":"src/parser/parser.rs","begin":[1683,4],"end":[1683,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:1162:6483":{"id":"0:1162:6483","crate_id":0,"name":"get_term_width","span":{"filename":"src/builder/command.rs","begin":[4125,4],"end":[4127,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1677:1664":{"id":"0:1677:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1897,4],"end":[1897,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}}},"b:2:3213-0:3647:2672":{"id":"b:2:3213-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1083:6362":{"id":"0:1083:6362","crate_id":0,"name":"get_arg_conflicts_with","span":{"filename":"src/builder/command.rs","begin":[3554,4],"end":[3575,5]},"visibility":"public","docs":"Get a list of all arguments the given argument conflicts with.\n\nIf the provided argument is declared as global, the conflicts will be determined\nbased on the propagation rules of global arguments.\n\n### Panics\n\nIf the given arg contains a conflict with an argument that is unknown to\nthis `Command`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4796":{"id":"0:4796","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[2,9],"end":[2,13]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2755":{"id":"0:2755","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1601,0],"end":[1671,1]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["0:2758:8398","0:2764:8451","0:2765:8522"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3798":{"id":"0:3798","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:3396:9218","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3799:181","0:3800:351"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5298:5217":{"id":"b:2:2869-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8483-0:4987:8033":{"id":"b:2:8483-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8485:2763","2:8486:8270","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:5335":{"id":"0:5335","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[2,33],"end":[2,42]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5336:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4886:127":{"id":"a:2:3310:6658-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3096:3014":{"id":"0:3096:3014","crate_id":0,"name":"Help","span":{"filename":"src/output/help.rs","begin":[20,0],"end":[27,1]},"visibility":"crate","docs":"`clap` Help Writer.\n\nWraps a writer stream providing different methods to generate help for `clap` objects.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:3100:8706","0:3101:2562","0:3102:5461","0:3103:4294","0:3104:5259","0:3105:6590"],"impls":["0:3106","0:3118","0:3169","0:3180","0:3201","a:2:3310:6658-0:3096:3014","a:2:3269:211-0:3096:3014","a:2:9340:7907-0:3096:3014","a:2:9339:7908-0:3096:3014","a:2:3281:220-0:3096:3014","b:2:3198-0:3096:3014","b:2:2872-0:3096:3014","b:2:2869-0:3096:3014","b:2:4002-0:3096:3014","b:2:3202-0:3096:3014","b:2:3213-0:3096:3014","b:2:3208-0:3096:3014"]}},"0:4938":{"id":"0:4938","crate_id":0,"name":null,"span":{"filename":"src/parser/error.rs","begin":[4,9],"end":[4,14]},"visibility":{"restricted":{"parent":"0:2185:1656","path":"::parser::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_copy_implementations)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4939:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:32007:74244":{"id":"2:32007:74244","crate_id":2,"name":"overflowing_shr","span":null,"visibility":"public","docs":"Shifts self right by `rhs` bits.\n\nReturns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.\n\n# Examples\n\nBasic usage\n\n```\nassert_eq!(0x10u64.overflowing_shr(4), (0x1, false));\nassert_eq!(0x10u64.overflowing_shr(132), (0x1, true));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2045:7177":{"id":"0:2045:7177","crate_id":0,"name":"invalid_value","span":{"filename":"src/error/mod.rs","begin":[326,4],"end":[354,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bad_val",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["good_vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2215":{"id":"0:2215","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[66,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2216:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3742:3230":{"id":"0:3742:3230","crate_id":0,"name":"DERIVE_DISP_ORDER","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"5:791:10950":{"id":"5:791:10950","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4080:3370":{"id":"b:2:3213-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3983:3360":{"id":"0:3983:3360","crate_id":0,"name":"overrides","span":{"filename":"src/builder/arg.rs","begin":[71,4],"end":[71,33]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4181:3942":{"id":"0:4181:3942","crate_id":0,"name":"ForbidEmptyValues","span":{"filename":"src/builder/arg_settings.rs","begin":[78,4],"end":[78,21]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::value_parser(NonEmptyStringValueParser::new())`]","links":{},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::value_parser(NonEmptyStringValueParser::new())`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::value_parser(NonEmptyStringValueParser::new())`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:5098:8374":{"id":"0:5098:8374","crate_id":0,"name":"Pos","span":{"filename":"src/parser/parser.rs","begin":[1684,4],"end":[1684,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:5090":{"id":"0:5090","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,56],"end":[2,59]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5091:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5196:5213":{"id":"b:2:2869-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31983:74224":{"id":"2:31983:74224","crate_id":2,"name":"wrapping_add_signed","span":null,"visibility":"public","docs":"Wrapping (modular) addition with a signed integer. Computes\n`self + rhs`, wrapping around at the boundary of the type.\n\n# Examples\n\nBasic usage:\n\n```\n# #![feature(mixed_integer_ops)]\nassert_eq!(1u64.wrapping_add_signed(2), 3);\nassert_eq!(1u64.wrapping_add_signed(-2), u64::MAX);\nassert_eq!((u64::MAX - 2).wrapping_add_signed(4), 1);\n```","links":{},"attrs":["#[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5302":{"id":"0:5302","crate_id":0,"name":null,"span":{"filename":"src/util/graph.rs","begin":[16,9],"end":[16,14]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:5304:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5254:660":{"id":"0:5254:660","crate_id":0,"name":"fmt","span":{"filename":"src/output/fmt.rs","begin":[8,22],"end":[8,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3786:10096":{"id":"0:3786:10096","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns the [symmetric difference][sym-diff] between the flags\nin `self` and `other`.\n\nSpecifically, the returned set contains the flags present which\nare present in `self` or `other`, but that are not present in\nboth. Equivalently, it contains the flags present in *exactly\none* of the sets `self` and `other`.\n\nThis is equivalent to using the `^` operator (e.g.\n[`ops::BitXor`]), as in `flags ^ other`.\n\n[sym-diff]: https://en.wikipedia.org/wiki/Symmetric_difference\n[`ops::BitXor`]: https://doc.rust-lang.org/std/ops/trait.BitXor.html","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4761:7449":{"id":"0:4761:7449","crate_id":0,"name":"ContextKind","span":{"filename":"src/error/context.rs","begin":[4,0],"end":[39,1]},"visibility":"public","docs":"Semantics for a piece of error information","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4762:7530","0:4764:7518","0:4766:7519","0:4768:7521","0:4770:7526","0:4772:7545","0:4774:7555","0:4776:7551","0:4778:7599","0:4780:7543","0:4782:7532","0:4784:7531","0:4786:7560","0:4788:7527","0:4790:7562","0:4792:5215","0:4794:7663"],"impls":["a:2:3310:6658-0:4761:7449","a:2:3269:211-0:4761:7449","a:2:9340:7907-0:4761:7449","a:2:9339:7908-0:4761:7449","a:2:3281:220-0:4761:7449","b:2:3198-0:4761:7449","b:2:2872-0:4761:7449","b:2:2869-0:4761:7449","b:2:4002-0:4761:7449","b:2:3202-0:4761:7449","b:2:3213-0:4761:7449","b:2:3208-0:4761:7449","b:5:787-0:4761:7449","b:31:25-0:4761:7449","0:4796","0:4797","0:4799","0:4801","0:4802","0:4804","0:4805"]}},"0:866:5312":{"id":"0:866:5312","crate_id":0,"name":"mut_arg","span":{"filename":"src/builder/command.rs","begin":[255,4],"end":[275,5]},"visibility":"public","docs":"Allows one to mutate an [`Arg`] after it's been added to a [`Command`].\n\nThis can be useful for modifying the auto-generated help or version arguments.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\n\nlet mut cmd = Command::new(\"foo\")\n    .arg(Arg::new(\"bar\")\n        .short('b'))\n    .mut_arg(\"bar\", |a| a.short('B'));\n\nlet res = cmd.try_get_matches_from_mut(vec![\"foo\", \"-b\"]);\n\n// Since we changed `bar`'s short to \"B\" this should err as there\n// is no `-b` anymore, only `-B`\n\nassert!(res.is_err());\n\nlet res = cmd.try_get_matches_from_mut(vec![\"foo\", \"-B\"]);\nassert!(res.is_ok());\n```","links":{"`Command`":"0:853:1653","`Arg`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4676:2906":{"id":"a:2:9340:7907-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3396:9218":{"id":"2:3396:9218","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2429":{"id":"0:2429","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1478,0],"end":[1482,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2431:8271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1273:6626":{"id":"0:1273:6626","crate_id":0,"name":"required_graph","span":{"filename":"src/builder/command.rs","begin":[4943,4],"end":[4958,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:5261:2691":{"id":"a:2:3310:6658-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2694:8356":{"id":"0:2694:8356","crate_id":0,"name":"flag_subcmd_skip","span":{"filename":"src/parser/parser.rs","begin":[32,4],"end":[32,27]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":"Counter indicating the number of items to skip\nwhen revisiting the group of flags which includes the flag subcommand.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2005:205":{"id":"0:2005:205","crate_id":0,"name":"Result","span":{"filename":"src/error/mod.rs","begin":[32,0],"end":[32,48]},"visibility":"public","docs":"Short hand for [`Result`] type\n\n[`Result`]: std::result::Result","links":{"std::result::Result":"2:47718:205"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"StdResult","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}},"0:202:2827":{"id":"0:202:2827","crate_id":0,"name":"update_from_arg_matches","span":{"filename":"src/derive.rs","begin":[357,4],"end":[357,85]},"visibility":"default","docs":"Assign values from `ArgMatches` to `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3310:6658-0:5182:3335":{"id":"a:2:3310:6658-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2380:8245":{"id":"0:2380:8245","crate_id":0,"name":"try_get_arg","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1181,4],"end":[1184,5]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4556:6725":{"id":"b:2:4002-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2065":{"id":"0:2065","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[988,0],"end":[992,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:4080:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2066:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:243:2843":{"id":"0:243:2843","crate_id":0,"name":"augment_args","span":{"filename":"src/derive.rs","begin":[554,4],"end":[556,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1164:6485":{"id":"0:1164:6485","crate_id":0,"name":"get_replacement","span":{"filename":"src/builder/command.rs","begin":[4133,4],"end":[4135,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:5319:1660":{"id":"b:5:787-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2738:8474":{"id":"0:2738:8474","crate_id":0,"name":"parse_opt_value","span":{"filename":"src/parser/parser.rs","begin":[954,4],"end":[1041,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ident",{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["attached_value",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RawOsStr","id":"30:400:7334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["trailing_values",{"kind":"primitive","inner":"bool"}],["has_eq",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4172:1671":{"id":"a:2:3281:220-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2069":{"id":"0:2069","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1000,0],"end":[1005,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","type_id","source","provide","cause"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2070:7463"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2093:660":{"id":"0:2093:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/mod.rs","begin":[1126,4],"end":[1129,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"44:2431:13634":{"id":"44:2431:13634","crate_id":44,"name":"Sym","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:2432:9673","44:2433:13619","44:2434:14617","44:2435:14461","44:2436:74075","44:2437:74076","44:2438:14462","44:2439:74077","44:2440:14620","44:2441:14618","44:2442:14619","44:2443:899","44:2446:74002","44:2447:74003"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:428:2600":{"id":"0:428:2600","crate_id":0,"name":"min_values","span":{"filename":"src/builder/arg.rs","begin":[1367,4],"end":[1370,5]},"visibility":"public","docs":"The *minimum* number of values for this argument.\n\nFor example, if you had a\n`-f <file>` argument where you wanted at least 2 'files' you would set\n`.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more\nvalues.\n\n**NOTE:** This does not implicitly set [`Arg::multiple_occurrences(true)`]. This is because\n`-o val -o val` is multiple occurrences but a single value and `-o val1 val2` is a single\noccurrence with multiple values. For positional arguments this **does** set\n[`Arg::multiple_occurrences(true)`] because there is no way to determine the difference between multiple\noccurrences and multiple values.\n\n**NOTE:** Passing a non-zero value is not the same as specifying [`Arg::required(true)`].\nThis is due to min and max validation only being performed for present arguments,\nmarking them as required will thus perform validation and a min value of 1\nis unnecessary, ignored if not required.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nArg::new(\"file\")\n    .short('f')\n    .min_values(3);\n```\n\nSupplying more than the minimum number of values is allowed\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .min_values(2)\n        .short('F'))\n    .try_get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\", \"file2\", \"file3\"\n    ]);\n\nassert!(res.is_ok());\nlet m = res.unwrap();\nlet files: Vec<_> = m.values_of(\"file\").unwrap().collect();\nassert_eq!(files, [\"file1\", \"file2\", \"file3\"]);\n```\n\nSupplying less than the minimum number of values is an error\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"file\")\n        .takes_value(true)\n        .min_values(2)\n        .short('F'))\n    .try_get_matches_from(vec![\n        \"prog\", \"-F\", \"file1\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::TooFewValues);\n```\n[`Arg::multiple_occurrences(true)`]: Arg::multiple_occurrences()\n[`Arg::required(true)`]: Arg::required()","links":{"Arg::required()":"0:3972:1654","Arg::multiple_occurrences()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["qty",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3972:1654":{"id":"b:5:787-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4341:357":{"id":"0:4341:357","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Toggles the set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3806":{"id":"0:3806","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:3372:9217","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3807:1356"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:4688:2914":{"id":"a:2:3281:220-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4947:3033":{"id":"0:4947:3033","crate_id":0,"name":"AnyValueId","span":{"filename":"src/parser/matches/any_value.rs","begin":[42,0],"end":[46,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4948:1429","0:4949:1432"],"impls":["0:2209","a:2:3310:6658-0:4947:3033","a:2:3269:211-0:4947:3033","a:2:9340:7907-0:4947:3033","a:2:9339:7908-0:4947:3033","a:2:3281:220-0:4947:3033","b:2:3198-0:4947:3033","b:2:2872-0:4947:3033","b:2:2869-0:4947:3033","b:2:4002-0:4947:3033","b:2:3202-0:4947:3033","b:2:3213-0:4947:3033","b:2:3208-0:4947:3033","b:5:787-0:4947:3033","b:31:25-0:4947:3033","0:4950","0:4951","0:2212","0:2214","0:2215","0:2217","0:2219","0:2222","0:2224"]}},"b:2:3208-0:3211:5214":{"id":"b:2:3208-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5198:298":{"id":"0:5198:298","crate_id":0,"name":"args","span":{"filename":"src/mkeymap.rs","begin":[18,4],"end":[18,25]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":"All of the arguments.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}}}},"b:31:25-0:5269:8971":{"id":"b:31:25-0:5269:8971","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:1433:681":{"id":"0:1433:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[414,4],"end":[417,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"resolved_path","inner":{"name":"std::ops::RangeTo","id":"2:46002:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4467:2565":{"id":"0:4467:2565","crate_id":0,"name":"about","span":{"filename":"src/builder/command.rs","begin":[88,4],"end":[88,29]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:439:3378":{"id":"0:439:3378","crate_id":0,"name":"validator_os","span":{"filename":"src/builder/arg.rs","begin":[1542,4],"end":[1551,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::value_parser(...)`]","links":{},"attrs":["#[must_use]","#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::value_parser(...)`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::value_parser(...)`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'help"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1477":{"id":"0:1477","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[678,0],"end":[683,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1478:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3553:3079":{"id":"0:3553:3079","crate_id":0,"name":"AllowMissingPositional","span":{"filename":"src/builder/app_settings.rs","begin":[120,4],"end":[120,26]},"visibility":"default","docs":"Deprecated, replaced with [`Command::allow_missing_positional`] and\n[`Command::is_allow_missing_positional_set`]","links":{"`Command::is_allow_missing_positional_set`":"0:4456:1667","`Command::allow_missing_positional`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::allow_missing_positional` and `Command::is_allow_missing_positional_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::allow_missing_positional` and `Command::is_allow_missing_positional_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:5113:1542":{"id":"0:5113:1542","crate_id":0,"name":"0","span":{"filename":"src/parser/parser.rs","begin":[1691,19],"end":[1691,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4296:5176":{"id":"0:4296:5176","crate_id":0,"name":"REQ_DELIM","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1449:7090":{"id":"0:1449:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[540,4],"end":[545,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2869-0:4972:1709":{"id":"b:2:2869-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:4933:7836":{"id":"a:2:9340:7907-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4241":{"id":"0:4241","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4242:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1552:7090":{"id":"0:1552:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[1183,4],"end":[1232,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["raw_value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5022:779":{"id":"0:5022:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1510,4],"end":[1510,84]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: type_complexity)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Map","id":"2:46798:7923","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}},"0:5253":{"id":"0:5253","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[8,22],"end":[8,27]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5254:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:7463","1:2575:7496","1:2576:11102","1:2577:11103"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:4578:3333":{"id":"b:2:3213-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:907:5483":{"id":"0:907:5483","crate_id":0,"name":"write_long_help","span":{"filename":"src/builder/command.rs","begin":[820,4],"end":[826,5]},"visibility":"public","docs":"Writes the long help message (`--help`) to a [`io::Write`] object.\n\nSee also [`Command::write_help`].\n\n# Examples\n\n```rust\n# use clap::Command;\nuse std::io;\nlet mut cmd = Command::new(\"myprog\");\nlet mut out = io::stdout();\ncmd.write_long_help(&mut out).expect(\"failed to write to stdout\");\n```\n[`io::Write`]: std::io::Write\n[`-h` (short)]: Arg::help()\n[`--help` (long)]: Arg::long_help()","links":{"`Command::write_help`":"0:4456:1667","std::io::Write":"1:4723:2682"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3642":{"id":"0:3642","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[32,16],"end":[32,25]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3643:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3761:3265":{"id":"0:3761:3265","crate_id":0,"name":"HELP_REQUIRED","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:3994:3369":{"id":"0:3994:3369","crate_id":0,"name":"disp_ord","span":{"filename":"src/builder/arg.rs","begin":[82,4],"end":[82,37]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2078:7570":{"id":"0:2078:7570","crate_id":0,"name":"try_help","span":{"filename":"src/error/mod.rs","begin":[1040,0],"end":[1048,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["c",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["help",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2853:8601":{"id":"0:2853:8601","crate_id":0,"name":"build_conflict_err_usage","span":{"filename":"src/parser/validator.rs","begin":[266,4],"end":[288,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["conflicting_keys",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3389:9220":{"id":"2:3389:9220","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:5048:1675":{"id":"b:2:3213-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6104:7137":{"id":"5:6104:7137","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:2889","`String`":"5:8368:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:3636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5176":{"id":"0:5176","crate_id":0,"name":null,"span":{"filename":"src/parser/validator.rs","begin":[605,9],"end":[605,16]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5177:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2765:8522":{"id":"0:2765:8522","crate_id":0,"name":"version_err","span":{"filename":"src/parser/parser.rs","begin":[1663,4],"end":[1670,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["use_long",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapError","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:5298:5217":{"id":"b:2:3208-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4310:5191":{"id":"0:4310:5191","crate_id":0,"name":"UTF8_NONE","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1823:7348":{"id":"0:1823:7348","crate_id":0,"name":"assert_arg","span":{"filename":"src/builder/debug_asserts.rs","begin":[633,0],"end":[718,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3976:899":{"id":"0:3976:899","crate_id":0,"name":"name","span":{"filename":"src/builder/arg.rs","begin":[64,4],"end":[64,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"2:13519:31602":{"id":"2:13519:31602","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3581:9229","`str`":"1:16010:9064","str::slice_unchecked":"1:16010:9064"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:4063:3357":{"id":"b:5:787-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4236:604":{"id":"0:4236:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:1397:7028":{"id":"a:2:9339:7908-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:5038:1676":{"id":"0:5038:1676","crate_id":0,"name":"OsValues","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1593,0],"end":[1597,1]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_many()`]","links":{"`ArgMatches::get_many()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgMatches::get_many()`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5040:779","0:5041:793"],"impls":["a:2:3310:6658-0:5038:1676","a:2:3269:211-0:5038:1676","a:2:9340:7907-0:5038:1676","a:2:9339:7908-0:5038:1676","a:2:3281:220-0:5038:1676","b:2:8483-0:5038:1676","b:2:3198-0:5038:1676","b:2:2872-0:5038:1676","b:2:2869-0:5038:1676","b:2:4002-0:5038:1676","b:2:3202-0:5038:1676","b:2:3213-0:5038:1676","b:2:3208-0:5038:1676","b:5:787-0:5038:1676","0:5042","0:5045","0:2471","0:2476","0:2479","0:2481"]}},"a:2:9339:7908-0:5261:2691":{"id":"a:2:9339:7908-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4469:5250":{"id":"0:4469:5250","crate_id":0,"name":"before_help","span":{"filename":"src/builder/command.rs","begin":[90,4],"end":[90,35]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"b:2:3208-0:4953:1658":{"id":"b:2:3208-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:4886:127":{"id":"b:2:3198-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:4578:3333":{"id":"a:2:3269:211-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2177:7893":{"id":"0:2177:7893","crate_id":0,"name":"pending_arg_id","span":{"filename":"src/parser/arg_matcher.rs","begin":[248,4],"end":[250,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4620":{"id":"0:4620","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[27,27],"end":[27,29]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4051:9308":{"id":"2:4051:9308","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:11103"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:6658-0:4910:7462":{"id":"a:2:3310:6658-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:5174:8567":{"id":"a:2:9339:7908-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:6658-0:4833:1674":{"id":"a:2:3310:6658-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1643:2910":{"id":"0:1643:2910","crate_id":0,"name":"ValueParserFactory","span":{"filename":"src/builder/value_parser.rs","begin":[1814,0],"end":[1823,1]},"visibility":"public","docs":"Register a type with [value_parser!][crate::value_parser!]\n\n# Example\n\n```rust\n#[derive(Copy, Clone, Debug)]\npub struct Custom(u32);\n\nimpl clap::builder::ValueParserFactory for Custom {\n    type Parser = CustomValueParser;\n    fn value_parser() -> Self::Parser {\n        CustomValueParser\n    }\n}\n\n#[derive(Clone, Debug)]\npub struct CustomValueParser;\nimpl clap::builder::TypedValueParser for CustomValueParser {\n    type Value = Custom;\n\n    fn parse_ref(\n        &self,\n        cmd: &clap::Command,\n        arg: Option<&clap::Arg>,\n        value: &std::ffi::OsStr,\n    ) -> Result<Self::Value, clap::Error> {\n        let inner = clap::value_parser!(u32);\n        let val = inner.parse_ref(cmd, arg, value)?;\n        Ok(Custom(val))\n    }\n}\n\nlet parser: CustomValueParser = clap::value_parser!(Custom);\n```","links":{"crate::value_parser!":"0:1706:2901"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1644:1664","0:1645:2901"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1646","0:1649","0:1652","0:1655","0:1658","0:1661","0:1664","0:1667","0:1670","0:1673","0:1676","0:1679"]}},"b:2:2869-0:5010:7834":{"id":"b:2:2869-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4664:2905":{"id":"b:2:4002-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:5058:7830":{"id":"b:2:3213-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3982:2668":{"id":"0:3982:2668","crate_id":0,"name":"settings","span":{"filename":"src/builder/arg.rs","begin":[70,4],"end":[70,33]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ArgFlags","id":"0:4157:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3607:3181":{"id":"0:3607:3181","crate_id":0,"name":"NoAutoHelp","span":{"filename":"src/builder/app_settings.rs","begin":[394,4],"end":[394,14]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::action`][super::Arg::action]","links":{"super::Arg::action":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `Arg::action`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::action`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:4133:3605":{"id":"0:4133:3605","crate_id":0,"name":"IsPresent","span":{"filename":"src/builder/arg_predicate.rs","begin":[3,4],"end":[3,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:474:4147":{"id":"0:474:4147","crate_id":0,"name":"default_missing_values","span":{"filename":"src/builder/arg.rs","begin":[2324,4],"end":[2327,5]},"visibility":"public","docs":"Value for the argument when the flag is present but no value is specified.\n\nSee [`Arg::default_missing_value`].\n\n[`Arg::default_missing_value`]: Arg::default_missing_value()","links":{"Arg::default_missing_value()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["vals",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31953:74203":{"id":"2:31953:74203","crate_id":2,"name":"checked_add","span":null,"visibility":"public","docs":"Checked integer addition. Computes `self + rhs`, returning `None`\nif overflow occurred.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!((u64::MAX - 2).checked_add(1), Some(u64::MAX - 1));\nassert_eq!((u64::MAX - 2).checked_add(3), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_checked_int_methods\", since = \"1.47.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3663":{"id":"0:3663","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3664:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4002:3378":{"id":"0:4002:3378","crate_id":0,"name":"validator_os","span":{"filename":"src/builder/arg.rs","begin":[90,4],"end":[90,67]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'help"}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2352":{"id":"0:2352","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[870,0],"end":[1072,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"# Subcommands","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2353:2659","0:2355:8213","0:2357:8227","0:2360:7857"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5232":{"id":"0:5232","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[25,16],"end":[25,25]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:31944:74196":{"id":"2:31944:74196","crate_id":2,"name":"trailing_ones","span":null,"visibility":"public","docs":"Returns the number of trailing ones in the binary representation\nof `self`.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = 0b1010111u64;\n\nassert_eq!(n.trailing_ones(), 3);\n```","links":{},"attrs":["#[stable(feature = \"leading_trailing_ones\", since = \"1.46.0\")]","#[rustc_const_stable(feature = \"leading_trailing_ones\", since = \"1.46.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3758:3259":{"id":"0:3758:3259","crate_id":0,"name":"INFER_SUBCOMMANDS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:510:4434":{"id":"0:510:4434","crate_id":0,"name":"required_unless_present","span":{"filename":"src/builder/arg.rs","begin":[3424,4],"end":[3427,5]},"visibility":"public","docs":"Set this arg as [required] as long as the specified argument is not present at runtime.\n\n**Pro Tip:** Using `Arg::required_unless_present` implies [`Arg::required`] and is therefore not\nmandatory to also set.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .required_unless_present(\"debug\")\n# ;\n```\n\nIn the following example, the required argument is *not* provided,\nbut it's not an error because the `unless` arg has been supplied.\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_unless_present(\"dbg\")\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"dbg\")\n        .long(\"debug\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--debug\"\n    ]);\n\nassert!(res.is_ok());\n```\n\nSetting `Arg::required_unless_present(name)` and *not* supplying `name` or this arg is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .required_unless_present(\"dbg\")\n        .takes_value(true)\n        .long(\"config\"))\n    .arg(Arg::new(\"dbg\")\n        .long(\"debug\"))\n    .try_get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[required]: Arg::required()","links":{"`Arg::required`":"0:3972:1654","Arg::required()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:211:1666":{"id":"0:211:1666","crate_id":0,"name":"ValueEnum","span":{"filename":"src/derive.rs","begin":[479,0],"end":[500,1]},"visibility":"public","docs":"Parse arguments into enums.\n\nWhen deriving [`Parser`], a field whose type implements `ValueEnum` can have the attribute\n`#[clap(value_enum)]` which will\n- Call [`Arg::possible_values`][crate::Arg::possible_values]\n- Allowing using the `#[clap(default_value_t)]` attribute without implementing `Display`.\n\nSee the [derive reference](crate::_derive) for attributes and best practices.\n\n**NOTE:** Deriving requires the [`derive` feature flag][crate::_features]\n\n# Example\n\n ```\n#[derive(clap::Parser)]\nstruct Args {\n    #[clap(value_enum)]\n    level: Level,\n}\n\n#[derive(clap::ValueEnum, Clone)]\nenum Level {\n    Debug,\n    Info,\n    Warning,\n    Error,\n}\n```","links":{"crate::Arg::possible_values":"0:3972:1654","crate::_derive":"0:115:1694","`Parser`":"0:164:1664","crate::_features":"0:121:1696"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:212:2876","0:214:2510","0:217:2882"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3724:3204":{"id":"0:3724:3204","crate_id":0,"name":"SC_NEGATE_REQS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:569:4712":{"id":"0:569:4712","crate_id":0,"name":"get_global","span":{"filename":"src/builder/arg.rs","begin":[4468,4],"end":[4470,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::is_global_set`]","links":{"`Arg::is_global_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note = \"Replaced with `Arg::is_global_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::is_global_set`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:256:1699":{"id":"0:256:1699","crate_id":0,"name":"macros","span":{"filename":"src/builder/macros.rs","begin":[1,0],"end":[180,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:257:2924","0:258:2932","0:259:2934","0:260:2938","0:261:2933","0:262:2944","0:263:2930","0:264:2946","0:265:2947","0:266:2948","0:267:2950","0:268:2952"],"is_stripped":false}},"b:2:3202-0:4942:7020":{"id":"b:2:3202-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1032:4687":{"id":"0:1032:4687","crate_id":0,"name":"get_visible_aliases","span":{"filename":"src/builder/command.rs","begin":[3358,4],"end":[3360,5]},"visibility":"public","docs":"Iterate through the *visible* aliases for this subcommand.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3760:3263":{"id":"0:3760:3263","crate_id":0,"name":"ARGS_OVERRIDE_SELF","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4073:408":{"id":"0:4073:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/arg.rs","begin":[5190,16],"end":[5190,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4724:1700":{"id":"a:2:3269:211-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"37:29:8979":{"id":"37:29:8979","crate_id":37,"name":"WriteColor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["37:30:11580","37:31:7501","37:32:8991","37:33:11581"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:4723:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:4833:1674":{"id":"a:2:3269:211-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:4688:2914":{"id":"b:2:3198-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4333:181":{"id":"0:4333:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1066:6340":{"id":"0:1066:6340","crate_id":0,"name":"get_after_long_help","span":{"filename":"src/builder/command.rs","begin":[3494,4],"end":[3496,5]},"visibility":"public","docs":"Returns the help heading for listing subcommands.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4320:10052":{"id":"0:4320:10052","crate_id":0,"name":"is_all","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3808":{"id":"0:3808","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3389:9220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3809:181","0:3810:952"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:701:298":{"id":"0:701:298","crate_id":0,"name":"args","span":{"filename":"src/builder/arg_group.rs","begin":[188,4],"end":[193,5]},"visibility":"public","docs":"Adds multiple [arguments] to this group by name\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgGroup};\nlet m = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"]))\n    .get_matches_from(vec![\"myprog\", \"-f\"]);\n// maybe we don't know which of the two flags was used...\nassert!(m.contains_id(\"req_flags\"));\n// but we can also check individually if needed\nassert!(m.contains_id(\"flag\"));\n```\n[arguments]: crate::Arg","links":{"crate::Arg":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ns",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:272:3029":{"id":"0:272:3029","crate_id":0,"name":"default_value","span":{"filename":"src/builder/action.rs","begin":[273,4],"end":[287,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5156:7831":{"id":"a:2:3269:211-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:5070:1677":{"id":"b:2:3202-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4538:660":{"id":"0:4538:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/possible_value.rs","begin":[29,9],"end":[29,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4987:8033":{"id":"b:2:3198-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:5319:1660":{"id":"b:2:3198-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4881":{"id":"0:4881","crate_id":0,"name":null,"span":{"filename":"src/error/kind.rs","begin":[2,22],"end":[2,27]},"visibility":{"restricted":{"parent":"0:1991:782","path":"::error::kind"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4882:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:5298:5217":{"id":"b:2:2872-0:5298:5217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChildGraph","id":"0:5298:5217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:5319:1660":{"id":"a:2:3281:220-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1707:7282":{"id":"0:1707:7282","crate_id":0,"name":"private","span":{"filename":"src/builder/value_parser.rs","begin":[2051,0],"end":[2051,11]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1709:7320","0:1712:7283","0:1715:7285","0:1718:7287"],"is_stripped":false}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,71],"end":[113,84]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::PossibleValue","name":"PossibleValue","id":"0:4530:1672","glob":false}},"0:4828:604":{"id":"0:4828:604","crate_id":0,"name":"eq","span":{"filename":"src/error/context.rs","begin":[42,23],"end":[42,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1250:6344":{"id":"0:1250:6344","crate_id":0,"name":"aliases_to","span":{"filename":"src/builder/command.rs","begin":[4884,4],"end":[4889,5]},"visibility":"crate","docs":"Check if this subcommand can be referred to as `name`. In other words,\ncheck if `name` is the name of this subcommand or is one of its aliases.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1324:4668":{"id":"0:1324:4668","crate_id":0,"name":"get_help","span":{"filename":"src/builder/possible_value.rs","begin":[149,4],"end":[151,5]},"visibility":"public","docs":"Get the help specified for this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1412:360":{"id":"0:1412:360","crate_id":0,"name":"bool","span":{"filename":"src/builder/value_parser.rs","begin":[139,4],"end":[141,5]},"visibility":"public","docs":"[`bool`] parser for argument values\n\nSee also:\n- [`BoolishValueParser`] for different human readable bool representations\n- [`FalseyValueParser`] for assuming non-false is true\n\n# Example\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"download\")\n            .value_parser(clap::value_parser!(bool))\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"true\"]).unwrap();\nlet port: bool = *m.get_one(\"download\")\n    .expect(\"required\");\nassert_eq!(port, true);\n\nassert!(cmd.try_get_matches_from_mut([\"cmd\", \"forever\"]).is_err());\n```","links":{"`FalseyValueParser`":"0:4694:2917","`BoolishValueParser`":"0:4700:2915","`bool`":"1:16002:9057"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4556:6725":{"id":"b:2:3202-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4008:3384":{"id":"0:4008:3384","crate_id":0,"name":"terminator","span":{"filename":"src/builder/arg.rs","begin":[97,4],"end":[97,45]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:1275:6365":{"id":"0:1275:6365","crate_id":0,"name":"unroll_args_in_group","span":{"filename":"src/builder/command.rs","begin":[4960,4],"end":[4988,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["group",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5261:2691":{"id":"a:2:3269:211-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4980":{"id":"0:4980","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,23],"end":[1314,32]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:3503:1652":{"id":"b:2:2872-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3490:7446":{"id":"0:3490:7446","crate_id":0,"name":"safe_exit","span":{"filename":"src/util/mod.rs","begin":[25,0],"end":[32,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["code",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"never"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5316:7875":{"id":"0:5316:7875","crate_id":0,"name":"empty_hash","span":{"filename":"src/util/id.rs","begin":[34,0],"end":[38,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4556:6725":{"id":"a:2:3269:211-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3719":{"id":"0:3719","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10385:9318","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3720:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4637":{"id":"0:4637","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[722,15],"end":[722,20]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4638:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5319:1660":{"id":"b:2:2869-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4997:7835":{"id":"b:2:3213-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1055:6324":{"id":"0:1055:6324","crate_id":0,"name":"get_subcommands","span":{"filename":"src/builder/command.rs","begin":[3433,4],"end":[3435,5]},"visibility":"public","docs":"Iterate through the set of subcommands, getting a reference to each.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4732":{"id":"0:4732","crate_id":0,"name":null,"span":{"filename":"src/builder/regex.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:1721:1558","path":"::builder::regex"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:4734:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5034:793":{"id":"0:5034:793","crate_id":0,"name":"len","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1553,4],"end":[1553,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:13862:150":{"id":"2:13862:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13863:181","2:13864:150","2:13865:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1843":{"id":"0:1843","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[30,0],"end":[30,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg_group::ArgGroup","name":"ArgGroup","id":"0:4105:1655","glob":false}},"0:4876:7629":{"id":"0:4876:7629","crate_id":0,"name":"Format","span":{"filename":"src/error/kind.rs","begin":[395,4],"end":[395,10]},"visibility":"default","docs":"Represents a [Format error] (which is a part of [`Display`]).\nTypically caused by writing to `stderr` or `stdout`.\n\n[`Display`]: std::fmt::Display\n[Format error]: std::fmt::Error","links":{"std::fmt::Display":"2:10379:119","std::fmt::Error":"2:48657:127"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:8483-0:4997:7835":{"id":"b:2:8483-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8485:2763","2:8486:8270","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:9340:7907-0:4724:1700":{"id":"a:2:9340:7907-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:5245:2692":{"id":"b:2:3198-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5259":{"id":"0:5259","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[8,40],"end":[8,42]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:5196:5213":{"id":"a:2:3281:220-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4231:2672":{"id":"0:4231:2672","crate_id":0,"name":"Flags","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4232:5189"],"impls":["0:4287","a:2:3310:6658-0:4231:2672","a:2:3269:211-0:4231:2672","a:2:9340:7907-0:4231:2672","a:2:9339:7908-0:4231:2672","a:2:3281:220-0:4231:2672","b:2:3198-0:4231:2672","b:2:2872-0:4231:2672","b:2:2869-0:4231:2672","b:2:4002-0:4231:2672","b:2:3202-0:4231:2672","b:2:3213-0:4231:2672","b:2:3208-0:4231:2672","b:5:787-0:4231:2672","b:31:25-0:4231:2672","0:4233","0:4234","0:4235","0:4238","0:4239","0:4241","0:4243","0:4245","0:4247","0:4250","0:4279","0:4281","0:4283","0:4285","0:4332","0:4335","0:4337","0:4340","0:4342","0:4345","0:4347","0:4350","0:4352","0:4355","0:4358"]}},"b:2:3213-0:4635:2919":{"id":"b:2:3213-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:4972:1709":{"id":"b:5:787-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:982":{"id":"0:982","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[2250,0],"end":[3260,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":"# Subcommand-specific Settings","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:984:5245","0:985:5244","0:986:272","0:988:5990","0:989:5995","0:990:3367","0:992:5254","0:993:5255","0:994:3478","0:996:6033","0:997:6038","0:998:3490","0:1000:6050","0:1001:6055","0:1002:4269","0:1003:4299","0:1004:6086","0:1005:6108","0:1006:6120","0:1007:6131","0:1008:6155","0:1009:6173","0:1010:6258","0:1011:5267","0:1013:6278"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5151:604":{"id":"0:5151:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/parser.rs","begin":[1717,23],"end":[1717,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4983:907":{"id":"0:4983:907","crate_id":0,"name":"ne","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,23],"end":[1314,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5070:1677":{"id":"b:2:4002-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:464:4018":{"id":"0:464:4018","crate_id":0,"name":"require_delimiter","span":{"filename":"src/builder/arg.rs","begin":[2017,4],"end":[2019,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::require_value_delimiter`]","links":{"`Arg::require_value_delimiter`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::require_value_delimiter`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::require_value_delimiter`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4530:1672":{"id":"b:2:2869-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3138:1498":{"id":"0:3138:1498","crate_id":0,"name":"val","span":{"filename":"src/output/help.rs","begin":[311,4],"end":[343,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes argument's possible values to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2324:2490":{"id":"0:2324:2490","crate_id":0,"name":"value_of_t","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[484,4],"end":[501,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_one()`]","links":{"`ArgMatches::get_one()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `ArgMatches::get_one()`\")]","#[track_caller]","#![allow(deprecated)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_one()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5224:6729":{"id":"0:5224:6729","crate_id":0,"name":"Long","span":{"filename":"src/mkeymap.rs","begin":[28,4],"end":[28,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"a:2:3281:220-0:5182:3335":{"id":"a:2:3281:220-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4464:2563":{"id":"0:4464:2563","crate_id":0,"name":"author","span":{"filename":"src/builder/command.rs","begin":[85,4],"end":[85,30]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"b:2:3202-0:2688:1664":{"id":"b:2:3202-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:4641:2920":{"id":"b:2:2869-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13562:31614":{"id":"2:13562:31614","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:16010:9064","self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49662:9281","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1023:6288":{"id":"0:1023:6288","crate_id":0,"name":"get_version","span":{"filename":"src/builder/command.rs","begin":[3294,4],"end":[3296,5]},"visibility":"public","docs":"Get the version of the cmd.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2758:8398":{"id":"0:2758:8398","crate_id":0,"name":"did_you_mean_error","span":{"filename":"src/parser/parser.rs","begin":[1603,4],"end":[1654,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":"Is only used for the long flag(which is the only one needs fuzzy searching)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["remaining_args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapError","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4545":{"id":"0:4545","crate_id":0,"name":null,"span":{"filename":"src/builder/possible_value.rs","begin":[29,32],"end":[29,41]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:5182:3335":{"id":"b:2:3198-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1651:2901":{"id":"0:1651:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1832,4],"end":[1834,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3173:8826":{"id":"0:3173:8826","crate_id":0,"name":"write_subcommand","span":{"filename":"src/output/help.rs","begin":[738,4],"end":[756,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sc_str",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}],["next_line_help",{"kind":"primitive","inner":"bool"}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1450:2747":{"id":"0:1450:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/value_parser.rs","begin":[547,4],"end":[552,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2375:8034":{"id":"0:2375:8034","crate_id":0,"name":"try_remove_many","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1148,4],"end":[1165,5]},"visibility":"public","docs":"Non-panicking version of [`ArgMatches::remove_many`]","links":{"`ArgMatches::remove_many`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4675:660":{"id":"0:4675:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[1090,22],"end":[1090,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3649":{"id":"0:3649","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4676:2906":{"id":"b:2:4002-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2558:6653":{"id":"0:2558:6653","crate_id":0,"name":"first","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[114,4],"end":[116,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6103:31634":{"id":"5:6103:31634","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5174:8567":{"id":"b:2:3213-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:204:1661":{"id":"0:204:1661","crate_id":0,"name":"Args","span":{"filename":"src/derive.rs","begin":[393,0],"end":[404,1]},"visibility":"public","docs":"Parse a set of arguments into a user-defined container.\n\nImplementing this trait lets a parent container delegate argument parsing behavior to `Self`.\nwith:\n- `#[clap(flatten)] args: ChildArgs`: Attribute can only be used with struct fields that impl\n  `Args`.\n- `Variant(ChildArgs)`: No attribute is used with enum variants that impl `Args`.\n\nSee the [derive reference](crate::_derive) for attributes and best practices.\n\n**NOTE:** Deriving requires the [`derive` feature flag][crate::_features]\n\n# Example\n\n ```\n#[derive(clap::Parser)]\nstruct Args {\n    #[clap(flatten)]\n    logging: LogArgs,\n}\n\n#[derive(clap::Args)]\nstruct LogArgs {\n    #[clap(long, short = 'v', parse(from_occurrences))]\n    verbose: i8,\n}\n```","links":{"crate::_features":"0:121:1696","crate::_derive":"0:115:1694"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:205:2843","0:206:2846"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromArgMatches","id":"0:199:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:241"]}},"0:1522":{"id":"0:1522","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[940,0],"end":[944,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"crate::ValueEnum","id":"0:211:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:1524:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1112:6413":{"id":"0:1112:6413","crate_id":0,"name":"is_allow_invalid_utf8_for_external_subcommands_set","span":{"filename":"src/builder/command.rs","begin":[3738,4],"end":[3740,5]},"visibility":"public","docs":"Report whether [`Command::allow_invalid_utf8_for_external_subcommands`] is set","links":{"`Command::allow_invalid_utf8_for_external_subcommands`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5116:1542":{"id":"0:5116:1542","crate_id":0,"name":"0","span":{"filename":"src/parser/parser.rs","begin":[1692,8],"end":[1692,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4337":{"id":"0:4337","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:3406:9219","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4338:181","0:4339:356"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:4700:2915":{"id":"b:2:3208-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1117:6421":{"id":"0:1117:6421","crate_id":0,"name":"is_subcommand_precedence_over_arg_set","span":{"filename":"src/builder/command.rs","begin":[3771,4],"end":[3773,5]},"visibility":"public","docs":"Report whether [`Command::subcommand_precedence_over_arg`] is set","links":{"`Command::subcommand_precedence_over_arg`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3573:3113":{"id":"0:3573:3113","crate_id":0,"name":"UseLongFormatForHelpSubcommand","span":{"filename":"src/builder/app_settings.rs","begin":[215,4],"end":[215,34]},"visibility":"default","docs":"Deprecated, this is now the default","links":{},"attrs":["#[deprecated(since = \"3.1.0\", note = \"This is now the default\")]"],"deprecation":{"since":"3.1.0","note":"This is now the default"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:170:2766":{"id":"0:170:2766","crate_id":0,"name":"try_parse_from","span":{"filename":"src/derive.rs","begin":[120,4],"end":[127,5]},"visibility":"default","docs":"Parse from iterator, return Err on error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5088":{"id":"0:5088","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,44],"end":[2,54]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5089:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:4063:3357":{"id":"b:2:2872-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1009:6173":{"id":"0:1009:6173","crate_id":0,"name":"subcommand_negates_reqs","span":{"filename":"src/builder/command.rs","begin":[2991,4],"end":[2997,5]},"visibility":"public","docs":"Allows [`subcommands`] to override all requirements of the parent command.\n\nFor example, if you had a subcommand or top level application with a required argument\nthat is only required as long as there is no subcommand present,\nusing this setting would allow you to set those arguments to [`Arg::required(true)`]\nand yet receive no error so long as the user uses a valid subcommand instead.\n\n**NOTE:** This defaults to false (using subcommand does *not* negate requirements)\n\n# Examples\n\nThis first example shows that it is an error to not use a required argument\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet err = Command::new(\"myprog\")\n    .subcommand_negates_reqs(true)\n    .arg(Arg::new(\"opt\").required(true))\n    .subcommand(Command::new(\"test\"))\n    .try_get_matches_from(vec![\n        \"myprog\"\n    ]);\nassert!(err.is_err());\nassert_eq!(err.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n# ;\n```\n\nThis next example shows that it is no longer error to not use a required argument if a\nvalid subcommand is used.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet noerr = Command::new(\"myprog\")\n    .subcommand_negates_reqs(true)\n    .arg(Arg::new(\"opt\").required(true))\n    .subcommand(Command::new(\"test\"))\n    .try_get_matches_from(vec![\n        \"myprog\", \"test\"\n    ]);\nassert!(noerr.is_ok());\n# ;\n```\n\n[`Arg::required(true)`]: crate::Arg::required()\n[`subcommands`]: crate::Command::subcommand()","links":{"crate::Arg::required()":"0:3972:1654","crate::Command::subcommand()":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2068:681":{"id":"0:2068:681","crate_id":0,"name":"from","span":{"filename":"src/error/mod.rs","begin":[995,4],"end":[997,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"fmt::Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:647:997":{"id":"0:647:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/builder/arg.rs","begin":[5081,4],"end":[5083,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:392:2581":{"id":"0:392:2581","crate_id":0,"name":"long","span":{"filename":"src/builder/arg.rs","begin":[210,4],"end":[220,5]},"visibility":"public","docs":"Sets the long version of the argument without the preceding `--`.\n\nBy default `version` and `help` are used by the auto-generated `version` and `help`\narguments, respectively. You may use the word `version` or `help` for the long form of your\nown arguments, in which case `clap` simply will not assign those to the auto-generated\n`version` or `help` arguments.\n\n**NOTE:** Any leading `-` characters will be stripped\n\n# Examples\n\nTo set `long` use a word containing valid UTF-8. If you supply a double leading\n`--` such as `--config` they will be stripped. Hyphens in the middle of the word, however,\nwill *not* be stripped (i.e. `config-file` is allowed).\n\nSetting `long` allows using the argument via a double hyphen (`--`) such as `--config`\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .takes_value(true))\n    .get_matches_from(vec![\n        \"prog\", \"--config\", \"file.toml\"\n    ]);\n\nassert_eq!(m.get_one::<String>(\"cfg\").map(String::as_str), Some(\"file.toml\"));\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["l",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[104,0],"end":[104,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"color\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::util::color::ColorChoice","name":"ColorChoice","id":"0:5319:1660","glob":false}},"0:5214":{"id":"0:5214","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[15,33],"end":[15,38]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:5216:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:5058:7830":{"id":"b:2:2869-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:4933:7836":{"id":"a:2:3310:6658-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:7907-0:5058:7830":{"id":"a:2:9340:7907-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38888:8449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3208-0:4886:127":{"id":"b:2:3208-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4342":{"id":"0:4342","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:3396:9218","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4343:181","0:4344:351"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:31:25-0:4947:3033":{"id":"b:31:25-0:4947:3033","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:3653:907":{"id":"0:3653:907","crate_id":0,"name":"ne","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1620:920":{"id":"0:1620:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[1653,4],"end":[1655,5]},"visibility":"public","docs":"Parse bool-like string values, everything else is `true`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5070:1677":{"id":"b:2:2872-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4886:127":{"id":"0:4886:127","crate_id":0,"name":"Error","span":{"filename":"src/error/mod.rs","begin":[40,0],"end":[54,1]},"visibility":"public","docs":"Command Line Argument Parser Error\n\nSee [`Command::error`] to create an error.\n\n[`Command::error`]: crate::Command::error","links":{"crate::Command::error":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:4887:2669","0:4888:782","0:4889:7461"],"impls":["0:2008","a:2:3310:6658-0:4886:127","a:2:3269:211-0:4886:127","a:2:9340:7907-0:4886:127","a:2:9339:7908-0:4886:127","a:2:3281:220-0:4886:127","b:2:3198-0:4886:127","b:2:2872-0:4886:127","b:2:2869-0:4886:127","b:2:4002-0:4886:127","b:2:3202-0:4886:127","b:2:3213-0:4886:127","b:2:3208-0:4886:127","b:5:6413-0:4886:127","0:4890","0:2065","0:2067","0:2069","0:2072"]}},"0:2085:7492":{"id":"0:2085:7492","crate_id":0,"name":"formatted","span":{"filename":"src/error/mod.rs","begin":[1088,4],"end":[1098,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5287:604":{"id":"0:5287:604","crate_id":0,"name":"eq","span":{"filename":"src/output/fmt.rs","begin":[135,29],"end":[135,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4892:7456":{"id":"a:2:3281:220-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"31:28:9622":{"id":"31:28:9622","crate_id":31,"name":"equivalent","span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[24,4],"end":[24,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[4254,0],"end":[4672,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":"# Reflection","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:543:2588","0:544:4666","0:545:4668","0:546:4672","0:547:4674","0:548:2599","0:549:4678","0:551:4681","0:553:4683","0:554:2591","0:555:4687","0:557:4689","0:559:4691","0:560:4695","0:561:4696","0:563:2583","0:564:4702","0:565:4704","0:566:4706","0:567:4708","0:569:4712","0:570:4718","0:572:4722","0:573:4728","0:574:4730","0:575:4732","0:576:2586","0:577:4697","0:578:4737","0:579:4740","0:580:4742","0:581:4744","0:583:4699","0:586:4713","0:587:4756","0:588:4758","0:589:4760","0:590:4762","0:591:4764","0:592:4766","0:593:4768","0:594:4770","0:595:4772","0:596:4774","0:597:4776","0:598:4778","0:599:4780","0:600:4782"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5719:12299":{"id":"1:5719:12299","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720:31033","1:5721:31034","1:5722:31035","1:5723:31036"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2017:6646":{"id":"0:2017:6646","crate_id":0,"name":"stream","span":{"filename":"src/error/mod.rs","begin":[108,4],"end":[113,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:678:59":{"id":"0:678:59","crate_id":0,"name":"default","span":{"filename":"src/builder/arg.rs","begin":[5305,4],"end":[5307,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4230:408":{"id":"0:4230:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/arg_settings.rs","begin":[32,33],"end":[32,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:650:415":{"id":"0:650:415","crate_id":0,"name":"cmp","span":{"filename":"src/builder/arg.rs","begin":[5087,4],"end":[5089,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1245:6608":{"id":"0:1245:6608","crate_id":0,"name":"has_args","span":{"filename":"src/builder/command.rs","begin":[4867,4],"end":[4869,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2055:7548":{"id":"0:2055:7548","crate_id":0,"name":"too_few_values","span":{"filename":"src/error/mod.rs","begin":[464,4],"end":[487,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["min_vals",{"kind":"primitive","inner":"usize"}],["curr_vals",{"kind":"primitive","inner":"usize"}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4688:2914":{"id":"b:2:4002-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4571:115":{"id":"0:4571:115","crate_id":0,"name":"Default","span":{"filename":"src/builder/usage_parser.rs","begin":[17,4],"end":[17,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9340:7907-0:4641:2920":{"id":"a:2:9340:7907-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:909:5494":{"id":"0:909:5494","crate_id":0,"name":"render_version","span":{"filename":"src/builder/command.rs","begin":[848,4],"end":[850,5]},"visibility":"public","docs":"Version message rendered as if the user ran `-V`.\n\nSee also [`Command::render_long_version`].\n\n### Coloring\n\nThis function does not try to color the message nor it inserts any [ANSI escape codes].\n\n### Examples\n\n```rust\n# use clap::Command;\nuse std::io;\nlet cmd = Command::new(\"myprog\");\nprintln!(\"{}\", cmd.render_version());\n```\n[`io::Write`]: std::io::Write\n[`-V` (short)]: Command::version()\n[`--version` (long)]: Command::long_version()\n[ANSI escape codes]: https://en.wikipedia.org/wiki/ANSI_escape_code","links":{"`Command::render_long_version`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:557:4689":{"id":"0:557:4689","crate_id":0,"name":"get_all_aliases","span":{"filename":"src/builder/arg.rs","begin":[4366,4],"end":[4372,5]},"visibility":"public","docs":"Get *all* aliases for this argument, if any, both visible and hidden.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5174:8567":{"id":"b:2:4002-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:193:2797":{"id":"0:193:2797","crate_id":0,"name":"into_app","span":{"filename":"src/derive.rs","begin":[263,4],"end":[263,43]},"visibility":"default","docs":"Deprecated, replaced with `CommandFactory::command`","links":{},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `CommandFactory::command\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `CommandFactory::command"},"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:31:25-0:5058:7830":{"id":"b:31:25-0:5058:7830","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:5207:604":{"id":"0:5207:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[15,18],"end":[15,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4091:408":{"id":"0:4091:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/arg.rs","begin":[5273,15],"end":[5273,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3364:9210":{"id":"2:3364:9210","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:998:3490":{"id":"0:998:3490","crate_id":0,"name":"visible_aliases","span":{"filename":"src/builder/command.rs","begin":[2604,4],"end":[2607,5]},"visibility":"public","docs":"Sets multiple visible aliases to this subcommand.\n\nThis allows the subcommand to be accessed via *either* the\noriginal name or any of the given aliases. This is more efficient and easier\nthan creating multiple hidden subcommands as one only needs to check for\nthe existence of this command and not all aliased variants.\n\n**NOTE:** The alias defined with this method is *visible* from the help\nmessage and displayed as if it were just another regular subcommand. If\nlooking for an alias that will not be displayed in the help message, see\n[`Command::alias`].\n\n**NOTE:** When using aliases, and checking for the existence of a\nparticular subcommand within an [`ArgMatches`] struct, one only needs to\nsearch for the original name and not all aliases.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n    .subcommand(Command::new(\"test\")\n        .visible_aliases(&[\"do-stuff\", \"tests\"]))\n    .get_matches_from(vec![\"myprog\", \"do-stuff\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```\n[`App::alias`]: Command::alias()","links":{"`ArgMatches`":"0:4953:1658","`Command::alias`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1501":{"id":"0:1501","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[805,0],"end":[809,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1502:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3485:1556":{"id":"0:3485:1556","crate_id":0,"name":"color","span":{"filename":"src/util/color.rs","begin":[1,0],"end":[62,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5319:1660"],"is_stripped":false}},"0:2059:7558":{"id":"0:2059:7558","crate_id":0,"name":"unknown_argument","span":{"filename":"src/error/mod.rs","begin":[540,4],"end":[567,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["did_you_mean",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]}}],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1859":{"id":"0:1859","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[34,0],"end":[34,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_hint::ValueHint","name":"ValueHint","id":"0:4588:1673","glob":false}},"0:2544":{"id":"0:2544","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/matched_arg.rs","begin":[26,0],"end":[194,1]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2545:7864","0:2546:7867","0:2547:7877","0:2548:7871","0:2549:8317","0:2550:8097","0:2551:8172","0:2552:4706","0:2553:7882","0:2554:4095","0:2555:8061","0:2556:8250","0:2557:8246","0:2558:6653","0:2559:7865","0:2560:7880","0:2561:3373","0:2563:8321","0:2565:8322","0:2566:7859","0:2568:7463","0:2569:7504","0:2570:1429","0:2571:8257"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1096:4756":{"id":"0:1096:4756","crate_id":0,"name":"is_next_line_help_set","span":{"filename":"src/builder/command.rs","begin":[3657,4],"end":[3659,5]},"visibility":"public","docs":"Report whether [`Command::next_line_help`] is set","links":{"`Command::next_line_help`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6959:12295":{"id":"1:6959:12295","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6960:31073"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1316:2603":{"id":"0:1316:2603","crate_id":0,"name":"help","span":{"filename":"src/builder/possible_value.rs","begin":[77,4],"end":[80,5]},"visibility":"public","docs":"Sets the help description of the value.\n\nThis is typically displayed in completions (where supported) and should be a short, one-line\ndescription.\n\n# Examples\n\n```rust\n# use clap::PossibleValue;\nPossibleValue::new(\"slow\")\n    .help(\"not fast\")\n# ;\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["help",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4953:1658":{"id":"b:2:3202-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:5269:8971":{"id":"a:2:3281:220-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:4676:2906":{"id":"b:2:3208-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:4761:7449":{"id":"a:2:3281:220-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:5220:7335":{"id":"b:2:4002-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4701":{"id":"0:4701","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1647,9],"end":[1647,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3654":{"id":"0:3654","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:5319:1660":{"id":"a:2:3269:211-0:5319:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:404:3495":{"id":"0:404:3495","crate_id":0,"name":"visible_short_aliases","span":{"filename":"src/builder/arg.rs","begin":[430,4],"end":[436,5]},"visibility":"public","docs":"Add aliases, which function as visible short flags.\n\nLike [`Arg::short_aliases`], except that they are visible inside the help message.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n                .long(\"test\")\n                .action(ArgAction::SetTrue)\n                .visible_short_aliases(&['t', 'e']))\n       .get_matches_from(vec![\n            \"prog\", \"-t\"\n        ]);\nassert_eq!(*m.get_one::<bool>(\"test\").expect(\"defaulted by clap\"), true);\n```","links":{"`Arg::short_aliases`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"char"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3643:604":{"id":"0:3643:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/app_settings.rs","begin":[32,16],"end":[32,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5114:8373":{"id":"0:5114:8373","crate_id":0,"name":"Opt","span":{"filename":"src/parser/parser.rs","begin":[1692,4],"end":[1692,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"b:2:3202-0:4724:1700":{"id":"b:2:3202-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4143":{"id":"0:4143","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[1,22],"end":[1,27]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4145:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1498:7090":{"id":"0:1498:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[778,4],"end":[785,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1990:481":{"id":"0:1990:481","crate_id":0,"name":"context","span":{"filename":"src/error/context.rs","begin":[1,0],"end":[55,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4761:7449","0:4807:7450"],"is_stripped":false}},"27:1184:13845":{"id":"27:1184:13845","crate_id":27,"name":"StateID","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["27:1185:689","27:1186:73263","27:1187:73264"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"27:1178:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4352":{"id":"0:4352","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3389:9220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4353:181","0:4354:952"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5040:779":{"id":"0:5040:779","crate_id":0,"name":"iter","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1595,4],"end":[1595,72]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(clippy :: type_complexity)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Map","id":"2:46798:7923","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}],"bindings":[]}}}}},"b:2:2872-0:3542:1669":{"id":"b:2:2872-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4997:7835":{"id":"b:2:4002-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4599:6984":{"id":"0:4599:6984","crate_id":0,"name":"ExecutablePath","span":{"filename":"src/builder/value_hint.rs","begin":[42,4],"end":[42,18]},"visibility":"default","docs":"Path to an executable file.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3451":{"id":"0:3451","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[69,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3453:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1323:4666":{"id":"0:1323:4666","crate_id":0,"name":"get_name","span":{"filename":"src/builder/possible_value.rs","begin":[143,4],"end":[145,5]},"visibility":"public","docs":"Get the name of the argument value","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13527:6462":{"id":"2:13527:6462","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49812:9272","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4578:3333":{"id":"b:2:3208-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2301:8014":{"id":"0:2301:8014","crate_id":0,"name":"get_raw","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[206,4],"end":[209,5]},"visibility":"public","docs":"Iterate over the original argument values.\n\nAn `OsStr` on Unix-like systems is any series of bytes, regardless of whether or not they\ncontain valid UTF-8. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid\nfilename on a Unix system as an argument value may contain invalid UTF-8.\n\nReturns `None` if the option wasn't present.\n\n# Panic\n\nIf the argument definition and access mismatch.  To handle this case programmatically, see\n[`ArgMatches::try_get_raw`].\n\n# Examples\n\n ```\n# use clap::{Command, arg, value_parser};\n# use std::ffi::{OsStr,OsString};\n# use std::os::unix::ffi::{OsStrExt,OsStringExt};\nuse std::path::PathBuf;\n\nlet m = Command::new(\"utf8\")\n    .arg(arg!(<arg> ... \"some arg\").value_parser(value_parser!(PathBuf)))\n    .get_matches_from(vec![OsString::from(\"myprog\"),\n                                // \"Hi\"\n                                OsString::from_vec(vec![b'H', b'i']),\n                                // \"{0xe9}!\"\n                                OsString::from_vec(vec![0xe9, b'!'])]);\n\nlet mut itr = m.get_raw(\"arg\")\n    .expect(\"`port`is required\")\n    .into_iter();\nassert_eq!(itr.next(), Some(OsStr::new(\"Hi\")));\nassert_eq!(itr.next(), Some(OsStr::from_bytes(&[0xe9, b'!'])));\nassert_eq!(itr.next(), None);\n```\n[`Iterator`]: std::iter::Iterator\n[`OsSt`]: std::ffi::OsStr\n[values]: OsValues\n[`String`]: std::string::String","links":{"std::string::String":"5:8368:216","`ArgMatches::try_get_raw`":"0:4953:1658"},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3443":{"id":"0:3443","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[40,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3444:4503"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5280":{"id":"0:5280","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[135,9],"end":[135,13]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13571:31617":{"id":"2:13571:31617","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2702:6496":{"id":"0:2702:6496","crate_id":0,"name":"get_matches_with","span":{"filename":"src/parser/parser.rs","begin":[51,4],"end":[477,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(clippy :: cognitive_complexity)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["raw_args",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"clap_lex::RawArgs","id":"29:75:5440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["args_cursor",{"kind":"resolved_path","inner":{"name":"clap_lex::ArgCursor","id":"29:90:6493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3487:59":{"id":"0:3487:59","crate_id":0,"name":"default","span":{"filename":"src/util/color.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3393:9003":{"id":"b:2:3198-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:5110:8389":{"id":"b:2:3208-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3752:3248":{"id":"0:3752:3248","crate_id":0,"name":"PROPAGATE_VALS_DOWN","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"b:2:2869-0:3972:1654":{"id":"b:2:2869-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:5092:7833":{"id":"b:2:3208-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4619:604":{"id":"0:4619:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/value_hint.rs","begin":[27,16],"end":[27,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2505:8057":{"id":"0:2505:8057","crate_id":0,"name":"unwrap_os_string_arg","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1728,0],"end":[1738,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[track_caller]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":"'v","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'v","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'v","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5276:8974":{"id":"0:5276:8974","crate_id":0,"name":"Hint","span":{"filename":"src/output/fmt.rs","begin":[140,4],"end":[140,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:4910:7462":{"id":"b:2:2869-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:4724:1700":{"id":"a:2:3281:220-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:5020:1678":{"id":"b:2:4002-0:5020:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3514:3005":{"id":"0:3514:3005","crate_id":0,"name":"SetFalse","span":{"filename":"src/builder/action.rs","begin":[162,4],"end":[162,12]},"visibility":"default","docs":"When encountered, act as if `\"false\"` was encountered on the command-line\n\nIf no [`default_value`][super::Arg::default_value] is set, it will be `true`.\n\nNo value is allowed. To optionally accept a value, see\n[`Arg::default_missing_value`][super::Arg::default_missing_value]\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"flag\")\n            .long(\"flag\")\n            .action(clap::ArgAction::SetFalse)\n    );\n\nlet matches = cmd.clone().try_get_matches_from([\"mycmd\", \"--flag\", \"--flag\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_one::<bool>(\"flag\").copied(),\n    Some(false)\n);\n\nlet matches = cmd.try_get_matches_from([\"mycmd\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_one::<bool>(\"flag\").copied(),\n    Some(true)\n);\n```","links":{"super::Arg::default_value":"0:3972:1654","super::Arg::default_missing_value":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3388:3335":{"id":"0:3388:3335","crate_id":0,"name":"Key","span":{"filename":"src/util/fnv.rs","begin":[9,0],"end":[11,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:3389:6486"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:3390"]}},"0:4472:5253":{"id":"0:4472:5253","crate_id":0,"name":"after_long_help","span":{"filename":"src/builder/command.rs","begin":[93,4],"end":[93,39]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:2595":{"id":"0:2595","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[10,0],"end":[10,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_source::ValueSource","name":"ValueSource","id":"0:5070:1677","glob":false}},"0:3641":{"id":"0:3641","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[32,16],"end":[32,25]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4933:7836":{"id":"0:4933:7836","crate_id":0,"name":"MatchesError","span":{"filename":"src/parser/error.rs","begin":[7,0],"end":[21,1]},"visibility":"public","docs":"Violation of [`ArgMatches`][crate::ArgMatches] assumptions","links":{"crate::ArgMatches":"0:4953:1658"},"attrs":["#[allow(missing_copy_implementations)]","#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:4934:7899","0:4937:7559"],"impls":["0:2189","a:2:3310:6658-0:4933:7836","a:2:3269:211-0:4933:7836","a:2:9340:7907-0:4933:7836","a:2:9339:7908-0:4933:7836","a:2:3281:220-0:4933:7836","b:2:3198-0:4933:7836","b:2:2872-0:4933:7836","b:2:2869-0:4933:7836","b:2:4002-0:4933:7836","b:2:3202-0:4933:7836","b:2:3213-0:4933:7836","b:2:3208-0:4933:7836","b:5:6413-0:4933:7836","b:5:787-0:4933:7836","0:4938","0:4940","0:2192","0:2193"]}},"0:5239":{"id":"0:5239","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[25,31],"end":[25,35]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5240:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5008:12316":{"id":"1:5008:12316","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:7858","1:5010:23702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1479":{"id":"0:1479","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[685,0],"end":[711,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1480:7050","0:1481:7090","0:1482:2747"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3114:5463":{"id":"0:3114:5463","crate_id":0,"name":"write_help","span":{"filename":"src/output/help.rs","begin":[93,4],"end":[121,5]},"visibility":"crate","docs":"Writes the parser help to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4818:1542":{"id":"0:4818:1542","crate_id":0,"name":"0","span":{"filename":"src/error/context.rs","begin":[52,12],"end":[52,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:704:2596":{"id":"0:704:2596","crate_id":0,"name":"required","span":{"filename":"src/builder/arg_group.rs","begin":[280,4],"end":[283,5]},"visibility":"public","docs":"Require an argument from the group to be present when parsing.\n\nThis is unless conflicting with another argument.  A required group will be displayed in\nthe usage string of the application in the format `<arg|arg2|arg3>`.\n\n**NOTE:** This setting only applies to the current [`Command`] / [`Subcommand`]s, and not\nglobally.\n\n**NOTE:** By default, [`ArgGroup::multiple`] is set to `false` which when combined with\n`ArgGroup::required(true)` states, \"One and *only one* arg must be used from this group.\nUse of more than one arg is an error.\" Vice setting `ArgGroup::multiple(true)` which\nstates, '*At least* one arg from this group must be used. Using multiple is OK.\"\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgGroup, ErrorKind};\nlet result = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"])\n        .required(true))\n    .try_get_matches_from(vec![\"myprog\"]);\n// Because we didn't use any of the args in the group, it's an error\nassert!(result.is_err());\nlet err = result.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::MissingRequiredArgument);\n```\n\n[`Subcommand`]: crate::Subcommand\n[`ArgGroup::multiple`]: ArgGroup::multiple()\n[`Command`]: crate::Command","links":{"crate::Subcommand":"0:207:1665","ArgGroup::multiple()":"0:4105:1655","crate::Command":"0:853:1653"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4976":{"id":"0:4976","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,9],"end":[1314,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4977:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13588:31621":{"id":"2:13588:31621","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3402":{"id":"0:3402","crate_id":0,"name":null,"span":{"filename":"src/util/graph.rs","begin":[7,0],"end":[14,1]},"visibility":{"restricted":{"parent":"0:3401:8995","path":"::util::graph"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3404:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1718:7287":{"id":"0:1718:7287","crate_id":0,"name":"_ValueParserViaFromStrSealed","span":{"filename":"src/builder/value_parser.rs","begin":[2063,4],"end":[2063,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:4833:1674":{"id":"a:2:3281:220-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:263:2930":{"id":"0:263:2930","crate_id":0,"name":"yaml_str","span":{"filename":"src/builder/macros.rs","begin":[115,0],"end":[120,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_str {\n    ($v:expr) => { ... };\n}"},"0:2695":{"id":"0:2695","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[36,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["0:2698:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4231:2672":{"id":"b:2:4002-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:5261:2691":{"id":"a:2:9340:7907-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3753:3250":{"id":"0:3753:3250","crate_id":0,"name":"ALLOW_MISSING_POS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4103":{"id":"0:4103","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,56],"end":[5273,59]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4104:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10379:119":{"id":"2:10379:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10380:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1289:6649":{"id":"0:1289:6649","crate_id":0,"name":"color_help","span":{"filename":"src/builder/command.rs","begin":[5082,4],"end":[5089,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3512:3001":{"id":"0:3512:3001","crate_id":0,"name":"SetTrue","span":{"filename":"src/builder/action.rs","begin":[126,4],"end":[126,11]},"visibility":"default","docs":"When encountered, act as if `\"true\"` was encountered on the command-line\n\nIf no [`default_value`][super::Arg::default_value] is set, it will be `false`.\n\nNo value is allowed. To optionally accept a value, see\n[`Arg::default_missing_value`][super::Arg::default_missing_value]\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"flag\")\n            .long(\"flag\")\n            .action(clap::ArgAction::SetTrue)\n    );\n\nlet matches = cmd.clone().try_get_matches_from([\"mycmd\", \"--flag\", \"--flag\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_one::<bool>(\"flag\").copied(),\n    Some(true)\n);\n\nlet matches = cmd.try_get_matches_from([\"mycmd\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_one::<bool>(\"flag\").copied(),\n    Some(false)\n);\n```","links":{"super::Arg::default_value":"0:3972:1654","super::Arg::default_missing_value":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1091:6374":{"id":"0:1091:6374","crate_id":0,"name":"is_no_binary_name_set","span":{"filename":"src/builder/command.rs","begin":[3632,4],"end":[3634,5]},"visibility":"public","docs":"Report whether [`Command::no_binary_name`] is set","links":{"`Command::no_binary_name`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2022:7497":{"id":"0:2022:7497","crate_id":0,"name":"for_app","span":{"filename":"src/error/mod.rs","begin":[189,4],"end":[194,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["colorizer",{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["info",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3757:3257":{"id":"0:3757:3257","crate_id":0,"name":"VALID_ARG_FOUND","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"b:5:787-0:4807:7450":{"id":"b:5:787-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:531:4558":{"id":"0:531:4558","crate_id":0,"name":"requires_all","span":{"filename":"src/builder/arg.rs","begin":[3998,4],"end":[4002,5]},"visibility":"public","docs":"Require these arguments names when this one is presen\n\ni.e. when using this argument, the following arguments *must* be present.\n\n**NOTE:** [Conflicting] rules and [override] rules take precedence over being required\nby default.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .requires_all(&[\"input\", \"output\"])\n# ;\n```\n\nSetting `Arg::requires_all(&[arg, arg2])` requires that all the arguments be used at\nruntime if the defining argument is used. If the defining argument isn't used, the other\nargument isn't required\n\n```rust\n# use clap::{Command, Arg};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .requires(\"input\")\n        .long(\"config\"))\n    .arg(Arg::new(\"input\"))\n    .arg(Arg::new(\"output\"))\n    .try_get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert!(res.is_ok()); // We didn't use cfg, so input and output weren't required\n```\n\nSetting `Arg::requires_all(&[arg, arg2])` and *not* supplying all the arguments is an\nerror.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .requires_all(&[\"input\", \"output\"])\n        .long(\"config\"))\n    .arg(Arg::new(\"input\"))\n    .arg(Arg::new(\"output\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--config\", \"file.conf\", \"in.txt\"\n    ]);\n\nassert!(res.is_err());\n// We didn't use output\nassert_eq!(res.unwrap_err().kind(), ErrorKind::MissingRequiredArgument);\n```\n[Conflicting]: Arg::conflicts_with()\n[override]: Arg::overrides_with()","links":{"Arg::conflicts_with()":"0:3972:1654","Arg::overrides_with()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3406:9219":{"id":"2:3406:9219","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2554:4095":{"id":"0:2554:4095","crate_id":0,"name":"vals","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[98,4],"end":[100,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"unstable-grouped\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11194:7858","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:387:2589":{"id":"0:387:2589","crate_id":0,"name":"id","span":{"filename":"src/builder/arg.rs","begin":[130,4],"end":[135,5]},"visibility":"public","docs":"Set the identifier used for referencing this argument in the clap API.\n\nSee [`Arg::new`] for more details.","links":{"`Arg::new`":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3651":{"id":"0:3651","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3652:604","0:3653:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2166:7861":{"id":"0:2166:7861","crate_id":0,"name":"start_custom_arg","span":{"filename":"src/parser/arg_matcher.rs","begin":[143,4],"end":[153,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["source",{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5245:2692":{"id":"b:2:3202-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4336:354":{"id":"0:4336:354","crate_id":0,"name":"bitor_assign","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Adds the set of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2390":{"id":"0:2390","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1348,0],"end":[1357,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["sum","enumerate","array_chunks","reduce","try_collect","skip_while","next_chunk","advance_by","cmp","eq","peekable","max_by","cloned","collect","product","is_sorted_by_key","try_reduce","ge","collect_into","count","map_while","last","nth","any","copied","max","all","max_by_key","__iterator_get_unchecked","cmp_by","try_find","position","partition","scan","step_by","take","flatten","partial_cmp_by","rposition","lt","size_hint","partition_in_place","fuse","intersperse","partial_cmp","chain","skip","filter_map","find","eq_by","unzip","is_partitioned","rev","inspect","intersperse_with","filter","take_while","find_map","try_for_each","min","ne","is_sorted","fold","cycle","try_fold","by_ref","for_each","flat_map","min_by_key","le","zip","min_by","map","gt","is_sorted_by"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2392:2763","0:2393:922","0:2394:5300"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4565:3014":{"id":"0:4565:3014","crate_id":0,"name":"Help","span":{"filename":"src/builder/usage_parser.rs","begin":[14,4],"end":[14,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:3031"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4635:2919":{"id":"0:4635:2919","crate_id":0,"name":"OsStringValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[724,0],"end":[724,33]},"visibility":"public","docs":"Implementation for [`ValueParser::os_string`]\n\nUseful for composing new [`TypedValueParser`]s","links":{"`TypedValueParser`":"0:1462:2908","`ValueParser::os_string`":"0:1394:2909"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:1486","a:2:3310:6658-0:4635:2919","a:2:3269:211-0:4635:2919","a:2:9340:7907-0:4635:2919","a:2:9339:7908-0:4635:2919","a:2:3281:220-0:4635:2919","b:2:3198-0:4635:2919","b:2:2872-0:4635:2919","b:2:2869-0:4635:2919","b:2:4002-0:4635:2919","b:2:3202-0:4635:2919","b:2:3213-0:4635:2919","b:2:3208-0:4635:2919","b:5:787-0:4635:2919","0:4636","0:4637","0:4639","0:1488","0:1492"]}},"0:4003:3380":{"id":"0:4003:3380","crate_id":0,"name":"val_delim","span":{"filename":"src/builder/arg.rs","begin":[91,4],"end":[91,38]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}},"0:3812:3464":{"id":"0:3812:3464","crate_id":0,"name":"extend","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iterator",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::_core::iter::IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1880":{"id":"0:1880","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[41,0],"end":[41,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::ValueParserFactory","name":"ValueParserFactory","id":"0:1643:2910","glob":false}},"0:3801":{"id":"0:3801","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:3423:9223","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3802:352"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:2688:1664":{"id":"b:2:3198-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:7908-0:4947:3033":{"id":"a:2:9339:7908-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4280:660":{"id":"0:4280:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5105:604":{"id":"0:5105:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/parser.rs","begin":[1680,16],"end":[1680,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:534:4573":{"id":"0:534:4573","crate_id":0,"name":"conflicts_with","span":{"filename":"src/builder/arg.rs","begin":[4048,4],"end":[4051,5]},"visibility":"public","docs":"This argument is mutually exclusive with the specified argument.\n\n**NOTE:** Conflicting rules take precedence over being required by default. Conflict rules\nonly need to be set for one of the two arguments, they do not need to be set for each.\n\n**NOTE:** Defining a conflict is two-way, but does *not* need to defined for both arguments\n(i.e. if A conflicts with B, defining A.conflicts_with(B) is sufficient. You do not\nneed to also do B.conflicts_with(A))\n\n**NOTE:** [`Arg::conflicts_with_all(names)`] allows specifying an argument which conflicts with more than one argument.\n\n**NOTE** [`Arg::exclusive(true)`] allows specifying an argument which conflicts with every other argument.\n\n# Examples\n\n```rust\n# use clap::Arg;\nArg::new(\"config\")\n    .conflicts_with(\"debug\")\n# ;\n```\n\nSetting conflicting argument, and having both arguments present at runtime is an error.\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .takes_value(true)\n        .conflicts_with(\"debug\")\n        .long(\"config\"))\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\"))\n    .try_get_matches_from(vec![\n        \"prog\", \"--debug\", \"--config\", \"file.conf\"\n    ]);\n\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::ArgumentConflict);\n```\n\n[`Arg::conflicts_with_all(names)`]: Arg::conflicts_with_all()\n[`Arg::exclusive(true)`]: Arg::exclusive()","links":{"Arg::exclusive()":"0:3972:1654","Arg::conflicts_with_all()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,33],"end":[116,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::parser::OsValues","name":"OsValues","id":"0:5038:1676","glob":false}},"b:2:2872-0:3252:5215":{"id":"b:2:2872-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3274:2745":{"id":"2:3274:2745","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:4997:7835":{"id":"b:5:787-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3376:9215":{"id":"2:3376:9215","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1837":{"id":"0:1837","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[28,33],"end":[28,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"app_settings::AppSettings","name":"AppSettings","id":"0:3542:1669","glob":false}},"0:4242:408":{"id":"0:4242:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5307:2589":{"id":"0:5307:2589","crate_id":0,"name":"id","span":{"filename":"src/util/id.rs","begin":[14,4],"end":[14,11]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:3016:604":{"id":"0:3016:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[66,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3542:1669":{"id":"b:5:787-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1080:6355":{"id":"0:1080:6355","crate_id":0,"name":"get_opts","span":{"filename":"src/builder/command.rs","begin":[3540,4],"end":[3543,5]},"visibility":"public","docs":"Iterate through the *options*.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:396:3367":{"id":"0:396:3367","crate_id":0,"name":"aliases","span":{"filename":"src/builder/arg.rs","begin":[298,4],"end":[301,5]},"visibility":"public","docs":"Add aliases, which function as hidden long flags.\n\nThis is more efficient, and easier than creating multiple hidden subcommands as one only\nneeds to check for the existence of this command, and not all variants.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"prog\")\n            .arg(Arg::new(\"test\")\n                    .long(\"test\")\n                    .aliases(&[\"do-stuff\", \"do-tests\", \"tests\"])\n                    .action(ArgAction::SetTrue)\n                    .help(\"the file to add\")\n                    .required(false))\n            .get_matches_from(vec![\n                \"prog\", \"--do-tests\"\n            ]);\nassert_eq!(*m.get_one::<bool>(\"test\").expect(\"defaulted by clap\"), true);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["names",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:417:3570":{"id":"0:417:3570","crate_id":0,"name":"unset_setting","span":{"filename":"src/builder/arg.rs","begin":[882,4],"end":[888,5]},"visibility":"public","docs":"Remove a setting from the argument.\n\nSee [`ArgSettings`] for a full list of possibilities and examples.\n\n# Examples\n\n```no_run\n# use clap::{Arg, ArgSettings};\nArg::new(\"config\")\n    .unset_setting(ArgSettings::Required)\n    .unset_setting(ArgSettings::TakesValue)\n# ;\n```\n\n```no_run\n# use clap::{Arg, ArgSettings};\nArg::new(\"config\")\n    .unset_setting(ArgSettings::Required | ArgSettings::TakesValue)\n# ;\n```","links":{"`ArgSettings`":"0:4172:1671"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["setting",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgFlags","id":"0:4157:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4580:5461":{"id":"0:4580:5461","crate_id":0,"name":"usage","span":{"filename":"src/builder/usage_parser.rs","begin":[22,4],"end":[22,21]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:2462:8271":{"id":"0:2462:8271","crate_id":0,"name":"next_back","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1568,4],"end":[1570,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:962:5768":{"id":"0:962:5768","crate_id":0,"name":"help_template","span":{"filename":"src/builder/command.rs","begin":[1748,4],"end":[1751,5]},"visibility":"public","docs":"Sets the help template to be used, overriding the default format.\n\n**NOTE:** The template system is by design very simple. Therefore, the\ntags have to be written in the lowercase and without spacing.\n\nTags are given inside curly brackets.\n\nValid tags are:\n\n  * `{name}`                - Display name for the (sub-)command.\n  * `{bin}`                 - Binary name.\n  * `{version}`             - Version number.\n  * `{author}`              - Author information.\n  * `{author-with-newline}` - Author followed by `\\n`.\n  * `{author-section}`      - Author preceded and followed by `\\n`.\n  * `{about}`               - General description (from [`Command::about`] or\n                              [`Command::long_about`]).\n  * `{about-with-newline}`  - About followed by `\\n`.\n  * `{about-section}`       - About preceded and followed by '\\n'.\n  * `{usage-heading}`       - Automatically generated usage heading.\n  * `{usage}`               - Automatically generated or given usage string.\n  * `{all-args}`            - Help for all arguments (options, flags, positional\n                              arguments, and subcommands) including titles.\n  * `{options}`             - Help for options.\n  * `{positionals}`         - Help for positional arguments.\n  * `{subcommands}`         - Help for subcommands.\n  * `{after-help}`          - Help from [`App::after_help`] or [`Command::after_long_help`].\n  * `{before-help}`         - Help from [`App::before_help`] or [`Command::before_long_help`].\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .version(\"1.0\")\n    .help_template(\"{bin} ({version}) - {usage}\")\n# ;\n```\n[`App::about`]: Command::about()\n[`App::long_about`]: Command::long_about()\n[`App::after_help`]: Command::after_help()\n[`App::after_long_help`]: Command::after_long_help()\n[`App::before_help`]: Command::before_help()\n[`App::before_long_help`]: Command::before_long_help()","links":{"`Command::long_about`":"0:4456:1667","`Command::about`":"0:4456:1667","Command::after_help()":"0:4456:1667","`Command::before_long_help`":"0:4456:1667","`Command::after_long_help`":"0:4456:1667","Command::before_help()":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["s",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3765:3273":{"id":"0:3765:3273","crate_id":0,"name":"INFER_LONG_ARGS","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"a:2:3281:220-0:3252:5215":{"id":"a:2:3281:220-0:3252:5215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Usage","id":"0:3252:5215","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:651":{"id":"0:651","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5092,0],"end":[5092,32]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3780:2674":{"id":"0:3780:2674","crate_id":0,"name":"remove","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Removes the specified flags in-place.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3770:276":{"id":"0:3770:276","crate_id":0,"name":"all","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns the set containing all flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:5156:7831":{"id":"b:2:3208-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:32009:49062":{"id":"2:32009:49062","crate_id":2,"name":"pow","span":null,"visibility":"public","docs":"Raises self to the power of `exp`, using exponentiation by squaring.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(2u64.pow(5), 32);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_int_pow\", since = \"1.50.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["exp",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:969:5518":{"id":"0:969:5518","crate_id":0,"name":"unset_global_setting","span":{"filename":"src/builder/command.rs","begin":[1852,4],"end":[1856,5]},"visibility":"public","docs":"Remove a setting and stop propagating down to subcommands.\n\nSee [`AppSettings`] for a full list of possibilities and examples.\n\n# Examples\n\n```no_run\n# use clap::{Command, AppSettings};\nCommand::new(\"myprog\")\n    .unset_global_setting(AppSettings::AllowNegativeNumbers)\n# ;\n```\n[global]: Command::global_setting()","links":{"`AppSettings`":"0:3542:1669"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["setting",{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:889:5407":{"id":"0:889:5407","crate_id":0,"name":"get_matches_mut","span":{"filename":"src/builder/command.rs","begin":[534,4],"end":[537,5]},"visibility":"public","docs":"Parse [`env::args_os`], exiting on failure.\n\nLike [`App::get_matches`] but doesn't consume the `Command`.\n\n# Panics\n\nIf contradictory arguments or settings exist.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet mut cmd = Command::new(\"myprog\")\n    // Args and options go here...\n    ;\nlet matches = cmd.get_matches_mut();\n```\n[`env::args_os`]: std::env::args_os()\n[`App::get_matches`]: Command::get_matches()","links":{"Command::get_matches()":"0:4456:1667","std::env::args_os()":"1:2461:5402"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4914:7639":{"id":"0:4914:7639","crate_id":0,"name":"Formatted","span":{"filename":"src/error/mod.rs","begin":[1067,4],"end":[1067,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:5297:660":{"id":"0:5297:660","crate_id":0,"name":"fmt","span":{"filename":"src/util/graph.rs","begin":[1,9],"end":[1,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4892:7456":{"id":"b:2:3208-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:4080:3370":{"id":"b:2:2872-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4676:2906":{"id":"b:2:3213-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1769:2902":{"id":"0:1769:2902","crate_id":0,"name":"debug_asserts","span":{"filename":"src/builder/debug_asserts.rs","begin":[1,0],"end":[851,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1795:5218","0:4742:7344","0:1808:7373","0:1810:7385","0:1814:7380","0:1816:7374","0:1823:7348","0:1825:7424","0:1827:7425"],"is_stripped":false}},"2:8523:120":{"id":"2:8523:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8524:8271","2:8525:10910","2:8526:10911","2:8527:10912","2:8531:10913","2:8534:10914"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2868:8613":{"id":"0:2868:8613","crate_id":0,"name":"validate_arg_num_occurs","span":{"filename":"src/parser/validator.rs","begin":[332,4],"end":[371,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["ma",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1438":{"id":"0:1438","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[504,0],"end":[512,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Create a [`ValueParser`] with [`PossibleValuesParser`]\n\nSee [`PossibleValuesParser`] for more flexibility in creating the\n[`PossibleValue`][crate::PossibleValue]s.\n\n# Examples\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"color\")\n            .long(\"color\")\n            .value_parser([\"always\", \"auto\", \"never\"])\n            .default_value(\"auto\")\n    );\n\nlet m = cmd.try_get_matches_from_mut(\n    [\"cmd\", \"--color\", \"never\"]\n).unwrap();\n\nlet color: &String = m.get_one(\"color\")\n    .expect(\"default\");\nassert_eq!(color, \"never\");\n```","links":{"`PossibleValuesParser`":"0:4657:2904","crate::PossibleValue":"0:4530:1672","`ValueParser`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"super::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"generic","inner":"P"},"len":"C"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1442:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3571:3110":{"id":"0:3571:3110","crate_id":0,"name":"AllowInvalidUtf8ForExternalSubcommands","span":{"filename":"src/builder/app_settings.rs","begin":[208,4],"end":[208,42]},"visibility":"default","docs":"Deprecated, replaced with [`Command::allow_invalid_utf8_for_external_subcommands`] and [`Command::is_allow_invalid_utf8_for_external_subcommands_set`]","links":{"`Command::allow_invalid_utf8_for_external_subcommands`":"0:4456:1667","`Command::is_allow_invalid_utf8_for_external_subcommands_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::allow_invalid_utf8_for_external_subcommands` and `Command::is_allow_invalid_utf8_for_external_subcommands_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::allow_invalid_utf8_for_external_subcommands` and `Command::is_allow_invalid_utf8_for_external_subcommands_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:2095:7828":{"id":"0:2095:7828","crate_id":0,"name":"arg_matcher","span":{"filename":"src/parser/arg_matcher.rs","begin":[2,0],"end":[280,1]},"visibility":{"restricted":{"parent":"0:2094:1657","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4926:5216"],"is_stripped":false}},"0:1865":{"id":"0:1865","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[36,0],"end":[36,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::RangedI64ValueParser","name":"RangedI64ValueParser","id":"0:4664:2905","glob":false}},"0:4940":{"id":"0:4940","crate_id":0,"name":null,"span":{"filename":"src/parser/error.rs","begin":[4,16],"end":[4,21]},"visibility":{"restricted":{"parent":"0:2185:1656","path":"::parser::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_copy_implementations)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4941:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:1394:2909":{"id":"a:2:9339:7908-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:648":{"id":"0:648","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5086,0],"end":[5090,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:650:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1089:6368":{"id":"0:1089:6368","crate_id":0,"name":"get_subcommands_containing","span":{"filename":"src/builder/command.rs","begin":[3620,4],"end":[3629,5]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:560:4695":{"id":"0:560:4695","crate_id":0,"name":"get_possible_values","span":{"filename":"src/builder/arg.rs","begin":[4395,4],"end":[4401,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::get_value_parser().possible_values()`]","links":{},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `Arg::get_value_parser().possible_values()`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::get_value_parser().possible_values()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:5110:8389":{"id":"a:2:9339:7908-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2353:2659":{"id":"0:2353:2659","crate_id":0,"name":"subcommand","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[922,4],"end":[924,5]},"visibility":"public","docs":"The name and `ArgMatches` of the current [subcommand].\n\nSubcommand values are put in a child [`ArgMatches`]\n\nReturns `None` if the subcommand wasn't present at runtime,\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\n let app_m = Command::new(\"git\")\n     .subcommand(Command::new(\"clone\"))\n     .subcommand(Command::new(\"push\"))\n     .subcommand(Command::new(\"commit\"))\n     .get_matches();\n\nmatch app_m.subcommand() {\n    Some((\"clone\",  sub_m)) => {}, // clone was used\n    Some((\"push\",   sub_m)) => {}, // push was used\n    Some((\"commit\", sub_m)) => {}, // commit was used\n    _                       => {}, // Either no subcommand or one not tested for...\n}\n```\n\nAnother useful scenario is when you want to support third party, or external, subcommands.\nIn these cases you can't know the subcommand name ahead of time, so use a variable instead\nwith pattern matching!\n\n```rust\n# use clap::Command;\n// Assume there is an external subcommand named \"subcmd\"\nlet app_m = Command::new(\"myprog\")\n    .allow_external_subcommands(true)\n    .get_matches_from(vec![\n        \"myprog\", \"subcmd\", \"--option\", \"value\", \"-fff\", \"--flag\"\n    ]);\n\n// All trailing arguments will be stored under the subcommand's sub-matches using an empty\n// string argument name\nmatch app_m.subcommand() {\n    Some((external, sub_m)) => {\n         let ext_args: Vec<&str> = sub_m.get_many::<String>(\"\")\n            .unwrap().map(|s| s.as_str()).collect();\n         assert_eq!(external, \"subcmd\");\n         assert_eq!(ext_args, [\"--option\", \"value\", \"-fff\", \"--flag\"]);\n    },\n    _ => {},\n}\n```\n[subcommand]: crate::Command::subcommand","links":{"crate::Command::subcommand":"0:4456:1667","`ArgMatches`":"0:4953:1658"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8483-0:5048:1675":{"id":"b:2:8483-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8485:2763","2:8486:8270","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4685":{"id":"0:4685","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1288,22],"end":[1288,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4687:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4575:604":{"id":"0:4575:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/usage_parser.rs","begin":[8,9],"end":[8,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:5031:8079":{"id":"a:2:9340:7907-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1003:4299":{"id":"0:1003:4299","crate_id":0,"name":"hide","span":{"filename":"src/builder/command.rs","begin":[2726,4],"end":[2732,5]},"visibility":"public","docs":"Specifies that this [`subcommand`] should be hidden from help messages\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nCommand::new(\"myprog\")\n    .subcommand(\n        Command::new(\"test\").hide(true)\n    )\n# ;\n```\n\n[`subcommand`]: crate::Command::subcommand()","links":{"crate::Command::subcommand()":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3195:8847":{"id":"0:3195:8847","crate_id":0,"name":"write_subcommands","span":{"filename":"src/output/help.rs","begin":[924,4],"end":[960,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Writes help for subcommands of a Parser Object to the wrapped stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,35],"end":[113,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::AppSettings","name":"AppSettings","id":"0:3542:1669","glob":false}},"b:2:3198-0:5141:7832":{"id":"b:2:3198-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"43:1197:13261":{"id":"43:1197:13261","crate_id":43,"name":"ReaderOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:1198:73742","43:1199:73743","43:1200:73744","43:1201:11343","43:1202:73745","43:1203:73746","43:1204:1527","43:1205:73747"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Add","id":"2:3337:9207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AddAssign","id":"2:3368:9213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:3342:9212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:5037:408":{"id":"0:5037:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1548,9],"end":[1548,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4987:8033":{"id":"b:2:2872-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:4688:2914":{"id":"b:2:2869-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1482:2747":{"id":"0:1482:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/value_parser.rs","begin":[697,4],"end":[710,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["_arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3220:8850":{"id":"0:3220:8850","crate_id":0,"name":"should_show_subcommand","span":{"filename":"src/output/help.rs","begin":[1132,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["subcommand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2869-0:5269:8971":{"id":"b:2:2869-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4888:782":{"id":"0:4888:782","crate_id":0,"name":"kind","span":{"filename":"src/error/mod.rs","begin":[47,4],"end":[47,23]},"visibility":"public","docs":"Deprecated, replaced with [`Error::kind()`]","links":{"`Error::kind()`":"0:4886:127"},"attrs":["#[deprecated(since = \"3.1.0\", note = \"Replaced with `Error::kind()`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Error::kind()`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:3281:220-0:4641:2920":{"id":"a:2:3281:220-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1333:2748":{"id":"0:1333:2748","crate_id":0,"name":"matches","span":{"filename":"src/builder/possible_value.rs","begin":[239,4],"end":[246,5]},"visibility":"public","docs":"Tests if the value is valid for this argument value\n\nThe value is valid if it is either the name or one of the aliases.\n\n# Examples\n\n```rust\n# use clap::PossibleValue;\nlet arg_value = PossibleValue::new(\"fast\").alias(\"not-slow\");\n\nassert!(arg_value.matches(\"fast\", false));\nassert!(arg_value.matches(\"not-slow\", false));\n\nassert!(arg_value.matches(\"FAST\", true));\nassert!(!arg_value.matches(\"FAST\", false));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["ignore_case",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4761:7449":{"id":"b:2:2872-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13565:31615":{"id":"2:13565:31615","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13134:9255","str::splitn":"1:16010:9064","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49680:9280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5141:7832":{"id":"b:2:3202-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5059:8316":{"id":"0:5059:8316","crate_id":0,"name":"occurs","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[17,4],"end":[17,15]},"visibility":{"restricted":{"parent":"0:2507:7849","path":"::parser::matches::matched_arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:4707":{"id":"0:4707","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1736,9],"end":[1736,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:3503:1652":{"id":"a:2:9339:7908-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4936:616":{"id":"0:4936:616","crate_id":0,"name":"expected","span":{"filename":"src/parser/error.rs","begin":[14,8],"end":[14,35]},"visibility":"default","docs":"The target type to downcast to","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"super::AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4493":{"id":"0:4493","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[77,9],"end":[77,14]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4495:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:176:2773":{"id":"0:176:2773","crate_id":0,"name":"try_update_from","span":{"filename":"src/derive.rs","begin":[146,4],"end":[155,5]},"visibility":"default","docs":"Update from iterator, return Err on error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["itr",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:726:2897":{"id":"0:726:2897","crate_id":0,"name":"arg_settings","span":{"filename":"src/builder/arg_settings.rs","begin":[1,0],"end":[456,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4172:1671","0:4231:2672"],"is_stripped":false}},"0:4344:351":{"id":"0:4344:351","crate_id":0,"name":"bitand","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":"Returns the intersection between the two sets of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5180":{"id":"0:5180","crate_id":0,"name":null,"span":{"filename":"src/parser/validator.rs","begin":[605,25],"end":[605,30]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5181:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1050:6316":{"id":"0:1050:6316","crate_id":0,"name":"get_all_long_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[3394,4],"end":[3396,5]},"visibility":"public","docs":"Iterate through the set of *all* the long aliases for this subcommand, both visible and hidden.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1672:2901":{"id":"0:1672:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1882,4],"end":[1886,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/derive.rs","begin":[538,0],"end":[551,1]},"visibility":{"restricted":{"parent":"0:147:547","path":"::derive"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FromArgMatches","id":"0:199:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["update_from_arg_matches_mut","from_arg_matches_mut"],"trait":{"name":"FromArgMatches","id":"0:199:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:237:2780","0:238:2751","0:239:2827","0:240:2771"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4474:5254":{"id":"0:4474:5254","crate_id":0,"name":"short_flag_aliases","span":{"filename":"src/builder/command.rs","begin":[95,4],"end":[95,41]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"char"},{"kind":"primitive","inner":"bool"}]}}],"bindings":[]}}}}},"b:2:3213-0:4724:1700":{"id":"b:2:3213-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1026:6294":{"id":"0:1026:6294","crate_id":0,"name":"get_short_flag","span":{"filename":"src/builder/command.rs","begin":[3312,4],"end":[3314,5]},"visibility":"public","docs":"Get the short flag of the subcommand.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4629:2907":{"id":"0:4629:2907","crate_id":0,"name":"StringValueParser","span":{"filename":"src/builder/value_parser.rs","begin":[676,0],"end":[676,31]},"visibility":"public","docs":"Implementation for [`ValueParser::string`]\n\nUseful for composing new [`TypedValueParser`]s","links":{"`ValueParser::string`":"0:1394:2909","`TypedValueParser`":"0:1462:2908"},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:1477","a:2:3310:6658-0:4629:2907","a:2:3269:211-0:4629:2907","a:2:9340:7907-0:4629:2907","a:2:9339:7908-0:4629:2907","a:2:3281:220-0:4629:2907","b:2:3198-0:4629:2907","b:2:2872-0:4629:2907","b:2:2869-0:4629:2907","b:2:4002-0:4629:2907","b:2:3202-0:4629:2907","b:2:3213-0:4629:2907","b:2:3208-0:4629:2907","b:5:787-0:4629:2907","0:4630","0:4631","0:4633","0:1479","0:1484"]}},"0:2089:681":{"id":"0:2089:681","crate_id":0,"name":"from","span":{"filename":"src/error/mod.rs","begin":[1108,4],"end":[1110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["inner",{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4588:1673":{"id":"b:2:2869-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:4933:7836":{"id":"a:2:3269:211-0:4933:7836","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6106:23434":{"id":"5:6106:23434","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16010:9064"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4561:6728":{"id":"0:4561:6728","crate_id":0,"name":"Short","span":{"filename":"src/builder/usage_parser.rs","begin":[12,4],"end":[12,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1368:6737":{"id":"0:1368:6737","crate_id":0,"name":"token","span":{"filename":"src/builder/usage_parser.rs","begin":[224,0],"end":[226,1]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["b",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13606:31627":{"id":"2:13606:31627","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1526:920":{"id":"0:1526:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[986,4],"end":[988,5]},"visibility":"public","docs":"Verify the value is from an enumerated set pf [`PossibleValue`][crate::PossibleValue].","links":{"crate::PossibleValue":"0:4530:1672"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["values",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<PossibleValuesParser>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1571:920":{"id":"0:1571:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[1296,4],"end":[1298,5]},"visibility":"public","docs":"Select full range of `u64`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:553:4683":{"id":"0:553:4683","crate_id":0,"name":"get_short_and_visible_aliases","span":{"filename":"src/builder/arg.rs","begin":[4331,4],"end":[4340,5]},"visibility":"public","docs":"Get the short option name and its visible aliases, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1572:7104":{"id":"0:1572:7104","crate_id":0,"name":"range","span":{"filename":"src/builder/value_parser.rs","begin":[1301,4],"end":[1349,5]},"visibility":"public","docs":"Narrow the supported range","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["range",{"kind":"generic","inner":"B"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:7019","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:5038:1676":{"id":"a:2:3269:211-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:4892:7456":{"id":"b:2:4002-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:3542:1669":{"id":"b:2:3198-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:695:2589":{"id":"0:695:2589","crate_id":0,"name":"id","span":{"filename":"src/builder/arg_group.rs","begin":[125,4],"end":[129,5]},"visibility":"public","docs":"Sets the group name.\n\n# Examples\n\n```rust\n# use clap::{Command, ArgGroup};\nArgGroup::default().name(\"config\")\n# ;\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3219:8723":{"id":"0:3219:8723","crate_id":0,"name":"should_show_arg","span":{"filename":"src/output/help.rs","begin":[1122,0],"end":[1130,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["use_long",{"kind":"primitive","inner":"bool"}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4831":{"id":"0:4831","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[42,34],"end":[42,36]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4633":{"id":"0:4633","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[674,22],"end":[674,27]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4634:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:1394:2909":{"id":"a:2:3310:6658-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3794:181":{"id":"0:3794:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:627":{"id":"0:627","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[4940,0],"end":[5066,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":"# Internally used only","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:629:4839","0:632:4843","0:633:4845","0:634:4847","0:635:4850","0:637:4861","0:638:4862"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4752":{"id":"0:4752","crate_id":0,"name":null,"span":{"filename":"src/builder/debug_asserts.rs","begin":[351,9],"end":[351,11]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:4694:2917":{"id":"b:2:2869-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4535:4299":{"id":"0:4535:4299","crate_id":0,"name":"hide","span":{"filename":"src/builder/possible_value.rs","begin":[34,4],"end":[34,14]},"visibility":{"restricted":{"parent":"0:1302:2898","path":"::builder::possible_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:5085":{"id":"0:5085","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,40],"end":[2,42]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3609:3182":{"id":"0:3609:3182","crate_id":0,"name":"NoAutoVersion","span":{"filename":"src/builder/app_settings.rs","begin":[401,4],"end":[401,17]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::action`][super::Arg::action]","links":{"super::Arg::action":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.2.0\", note = \"Replaced with `Arg::action`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `Arg::action`"},"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:8483-0:5031:8079":{"id":"b:2:8483-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8485:2763","2:8486:8270","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"44:1878:13631":{"id":"44:1878:13631","crate_id":44,"name":"ProgramHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:1879:14383","44:1880:9673","44:1881:13619","44:1882:14634","44:1883:14457","44:1884:14635","44:1885:14636","44:1886:14637","44:1887:14638","44:1888:14639","44:1889:14640","44:1890:73845","44:1891:9353","44:1894:73887","44:1898:56595","44:1901:13636","44:1904:73888"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Pod","id":"44:160:13572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2424":{"id":"0:2424","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1467,0],"end":[1476,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["sum","enumerate","array_chunks","reduce","try_collect","skip_while","next_chunk","advance_by","cmp","eq","peekable","max_by","cloned","collect","product","is_sorted_by_key","try_reduce","ge","collect_into","count","map_while","last","nth","any","copied","max","all","max_by_key","__iterator_get_unchecked","cmp_by","try_find","position","partition","scan","step_by","take","flatten","partial_cmp_by","rposition","lt","size_hint","partition_in_place","fuse","intersperse","partial_cmp","chain","skip","filter_map","find","eq_by","unzip","is_partitioned","rev","inspect","intersperse_with","filter","take_while","find_map","try_for_each","min","ne","is_sorted","fold","cycle","try_fold","by_ref","for_each","flat_map","min_by_key","le","zip","min_by","map","gt","is_sorted_by"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2426:2763","0:2427:922","0:2428:5300"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4695":{"id":"0:4695","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1550,9],"end":[1550,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:4807:7450":{"id":"b:2:2872-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4902:660":{"id":"0:4902:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/mod.rs","begin":[56,9],"end":[56,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:946:5252":{"id":"0:946:5252","crate_id":0,"name":"after_help","span":{"filename":"src/builder/command.rs","begin":[1527,4],"end":[1530,5]},"visibility":"public","docs":"Free-form help text for after auto-generated short help (`-h`).\n\nThis is often used to describe how to use the arguments, caveats to be noted, or license\nand contact information.\n\nIf [`Command::after_long_help`] is not specified, this message will be displayed for `--help`.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .after_help(\"Does really amazing things for great people... but be careful with -R!\")\n# ;\n```\n","links":{"`Command::after_long_help`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["help",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4530:1672":{"id":"a:2:3310:6658-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:4761:7449":{"id":"b:2:3208-0:4761:7449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3128:8729":{"id":"0:3128:8729","crate_id":0,"name":"spaces","span":{"filename":"src/output/help.rs","begin":[154,4],"end":[163,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4981":{"id":"0:4981","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,23],"end":[1314,32]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4982:604","0:4983:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2151:6499":{"id":"0:2151:6499","crate_id":0,"name":"into_inner","span":{"filename":"src/parser/arg_matcher.rs","begin":[50,4],"end":[52,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1608:920":{"id":"0:1608:920","crate_id":0,"name":"new","span":{"filename":"src/builder/value_parser.rs","begin":[1556,4],"end":[1558,5]},"visibility":"public","docs":"Parse false-like string values, everything else is `true`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:4647:2916":{"id":"b:2:3208-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4768:7521":{"id":"0:4768:7521","crate_id":0,"name":"ValidValue","span":{"filename":"src/error/context.rs","begin":[12,4],"end":[12,14]},"visibility":"default","docs":"Accepted values","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4611:7004":{"id":"0:4611:7004","crate_id":0,"name":"Url","span":{"filename":"src/builder/value_hint.rs","begin":[64,4],"end":[64,7]},"visibility":"default","docs":"Complete web address.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1503":{"id":"0:1503","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[873,0],"end":[879,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"crate::ValueEnum","id":"0:211:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:1505:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3110:8707":{"id":"0:3110:8707","crate_id":0,"name":"DEFAULT_TEMPLATE","span":{"filename":"src/output/help.rs","begin":[32,4],"end":[38,6]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"unstable-v4\")]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"default":"\"\\\n        {before-help}{name} {version}\\n\\\n        {author-with-newline}{about-with-newline}\\n\\\n        {usage-heading}\\n    {usage}\\n\\\n        \\n\\\n        {all-args}{after-help}\\\n    \""}},"0:572:4722":{"id":"0:572:4722","crate_id":0,"name":"get_default_values","span":{"filename":"src/builder/arg.rs","begin":[4496,4],"end":[4498,5]},"visibility":"public","docs":"Get the default values specified for this argument, if any\n\n# Examples\n\n```rust\n# use clap::Arg;\nlet arg = Arg::new(\"foo\").default_value(\"default value\");\nassert_eq!(&[\"default value\"], arg.get_default_values());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4638:408":{"id":"0:4638:408","crate_id":0,"name":"clone","span":{"filename":"src/builder/value_parser.rs","begin":[722,15],"end":[722,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2181:7896":{"id":"0:2181:7896","crate_id":0,"name":"take_pending","span":{"filename":"src/parser/arg_matcher.rs","begin":[269,4],"end":[271,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:5196:5213":{"id":"b:2:3213-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4921:7467":{"id":"b:2:3213-0:4921:7467","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:4921:7467","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2888":{"id":"0:2888","crate_id":0,"name":null,"span":{"filename":"src/parser/validator.rs","begin":[610,0],"end":[676,1]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2889:920","0:2890:8588","0:2892:8650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:934:899":{"id":"0:934:899","crate_id":0,"name":"name","span":{"filename":"src/builder/command.rs","begin":[1394,4],"end":[1397,5]},"visibility":"public","docs":"(Re)Sets the program's name.\n\nSee [`Command::new`] for more details.\n\n# Examples\n\n```ignore\n# use clap::{Command, load_yaml};\nlet yaml = load_yaml!(\"cmd.yaml\");\nlet cmd = Command::from(yaml)\n    .name(crate_name!());\n\n// continued logic goes here, such as `cmd.get_matches()` etc.\n```","links":{"`Command::new`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3969":{"id":"0:3969","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[575,0],"end":[671,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:3401:2679","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3970:181","0:3971:353"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4801":{"id":"0:4801","crate_id":0,"name":null,"span":{"filename":"src/error/context.rs","begin":[2,29],"end":[2,38]},"visibility":{"restricted":{"parent":"0:1990:481","path":"::error::context"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:238:2751":{"id":"0:238:2751","crate_id":0,"name":"from_arg_matches_mut","span":{"filename":"src/derive.rs","begin":[542,4],"end":[544,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3779:2673":{"id":"0:3779:2673","crate_id":0,"name":"insert","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Inserts the specified flags in-place.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5211":{"id":"0:5211","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[15,29],"end":[15,31]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1421":{"id":"0:1421","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[284,0],"end":[292,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Convert a [`TypedValueParser`] to [`ValueParser`]\n\n# Example\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"hostname\")\n            .long(\"hostname\")\n            .value_parser(clap::builder::NonEmptyStringValueParser::new())\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut(\n    [\"cmd\", \"--hostname\", \"rust-lang.org\"]\n).unwrap();\n\nlet hostname: &String = m.get_one(\"hostname\")\n    .expect(\"required\");\nassert_eq!(hostname, \"rust-lang.org\");\n```","links":{"`TypedValueParser`":"0:1462:2908","`ValueParser`":"0:1394:2909"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"","id":"0:1462:2908","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1423:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1595":{"id":"0:1595","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1455,0],"end":[1467,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1596:920","0:1597:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5149":{"id":"0:5149","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1717,23],"end":[1717,32]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3205-0:5305:3334":{"id":"b:2:3205-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"never"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3207:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4916:1542":{"id":"0:4916:1542","crate_id":0,"name":"0","span":{"filename":"src/error/mod.rs","begin":[1067,14],"end":[1067,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:5195:408":{"id":"0:5195:408","crate_id":0,"name":"clone","span":{"filename":"src/mkeymap.rs","begin":[9,31],"end":[9,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:103:1693":{"id":"0:103:1693","crate_id":0,"name":"_cookbook","span":{"filename":"src/_cookbook/mod.rs","begin":[8,0],"end":[55,21]},"visibility":"public","docs":"# Documentation: Cookbook\n\nTyped arguments: [derive][typed_derive]\n- Topics:\n  - Custom `parse()`\n\nCustom cargo command: [builder][cargo_example], [derive][cargo_example_derive]\n- Topics:\n  - Subcommands\n  - Cargo plugins\n\ngit-like interface: [builder][git], [derive][git_derive]\n- Topics:\n  - Subcommands\n  - External subcommands\n  - Optional subcommands\n  - Default subcommands\n\npacman-like interface: [builder][pacman]\n- Topics:\n  - Flag subcommands\n  - Conflicting arguments\n\nEscaped positionals with `--`: [builder][escaped_positional], [derive][escaped_positional_derive]\n\nMulti-call\n- busybox: [builder][multicall_busybox]\n  - Topics:\n    - Subcommands\n- hostname: [builder][multicall_hostname]\n  - Topics:\n    - Subcommands\n\nrepl: [builder][repl]\n- Topics:\n  - Read-Eval-Print Loops / Custom command lines","links":{"typed_derive":"0:114:1850","repl":"0:113:1849","cargo_example_derive":"0:105:1841","escaped_positional":"0:106:1842","multicall_hostname":"0:111:1847","escaped_positional_derive":"0:107:1843","cargo_example":"0:104:1840","git_derive":"0:109:1845","pacman":"0:112:1848","git":"0:108:1844","multicall_busybox":"0:110:1846"},"attrs":["#[cfg(feature = \"unstable-doc\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:104:1840","0:105:1841","0:106:1842","0:107:1843","0:108:1844","0:109:1845","0:110:1846","0:111:1847","0:112:1848","0:113:1849","0:114:1850"],"is_stripped":false}},"2:32013:74249":{"id":"2:32013:74249","crate_id":2,"name":"div_ceil","span":null,"visibility":"public","docs":"Calculates the quotient of `self` and `rhs`, rounding the result towards positive infinity.\n\n# Panics\n\nThis function will panic if `rhs` is zero.\n\n## Overflow behavior\n\nOn overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(int_roundings)]\nassert_eq!(7_u64.div_ceil(4), 2);\n```","links":{},"attrs":["#[unstable(feature = \"int_roundings\", issue = \"88581\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:645":{"id":"0:645","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5080,0],"end":[5084,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:647:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5035":{"id":"0:5035","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1548,9],"end":[1548,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5037:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3979:2893":{"id":"0:3979:2893","crate_id":0,"name":"action","span":{"filename":"src/builder/arg.rs","begin":[67,4],"end":[67,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"5:6415:1397":{"id":"5:6415:1397","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5164":{"id":"0:5164","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1724,15],"end":[1724,20]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5165:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:5269:8971":{"id":"b:2:3208-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4070":{"id":"0:4070","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5190,9],"end":[5190,14]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4071:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3043:2674":{"id":"0:3043:2674","crate_id":0,"name":"remove","span":{"filename":"src/mkeymap.rs","begin":[156,4],"end":[158,5]},"visibility":"crate","docs":"Remove an arg based on index","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4635:2919":{"id":"b:2:2872-0:4635:2919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4488:3361":{"id":"0:4488:3361","crate_id":0,"name":"groups","span":{"filename":"src/builder/command.rs","begin":[109,4],"end":[109,32]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:3411:6628":{"id":"0:3411:6628","crate_id":0,"name":"insert_child","span":{"filename":"src/util/graph.rs","begin":[35,4],"end":[40,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["parent",{"kind":"primitive","inner":"usize"}],["child",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13620:23436":{"id":"2:13620:23436","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4007:600":{"id":"0:4007:600","crate_id":0,"name":"env","span":{"filename":"src/builder/arg.rs","begin":[96,4],"end":[96,60]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"env\")]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]}}],"bindings":[]}}}}},"0:5079":{"id":"0:5079","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,16],"end":[2,21]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5080:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5133":{"id":"0:5133","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1688,9],"end":[1688,14]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5134:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4122":{"id":"0:4122","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[80,25],"end":[80,34]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4124:604","0:4125:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:7908-0:3211:5214":{"id":"a:2:9339:7908-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:583:4699":{"id":"0:583:4699","crate_id":0,"name":"get_value_parser","span":{"filename":"src/builder/arg.rs","begin":[4584,4],"end":[4594,5]},"visibility":"public","docs":"Configured parser for argument values\n\n# Example\n\n```rust\nlet cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .value_parser(clap::value_parser!(usize))\n    );\nlet value_parser = cmd.get_arguments()\n    .find(|a| a.get_id() == \"port\").unwrap()\n    .get_value_parser();\nprintln!(\"{:?}\", value_parser);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"super::ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5174:8567":{"id":"0:5174:8567","crate_id":0,"name":"Conflicts","span":{"filename":"src/parser/validator.rs","begin":[606,0],"end":[608,1]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:5175:8647"],"impls":["0:2888","a:2:3310:6658-0:5174:8567","a:2:3269:211-0:5174:8567","a:2:9340:7907-0:5174:8567","a:2:9339:7908-0:5174:8567","a:2:3281:220-0:5174:8567","b:2:3198-0:5174:8567","b:2:2872-0:5174:8567","b:2:2869-0:5174:8567","b:2:4002-0:5174:8567","b:2:3202-0:5174:8567","b:2:3213-0:5174:8567","b:2:3208-0:5174:8567","b:5:787-0:5174:8567","0:5176","0:5178","0:5180"]}},"0:4821:1542":{"id":"0:4821:1542","crate_id":0,"name":"0","span":{"filename":"src/error/context.rs","begin":[54,11],"end":[54,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"isize"}},"0:690":{"id":"0:690","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[91,0],"end":[461,1]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:692:4993","0:693:920","0:695:2589","0:697:899","0:699:2580","0:701:298","0:703:2661","0:704:2596","0:705:3362","0:707:4558","0:708:4573","0:710:4584"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:4886:127":{"id":"b:2:2872-0:4886:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4454:181":{"id":"0:4454:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/arg_settings.rs","begin":[302,0],"end":[330,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ArgFlags","id":"0:4157:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:912":{"id":"0:912","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[899,0],"end":[1373,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":"# Application-wide Settings\n\nThese settings will apply to the top-level command and all subcommands, by default.  Some\nsettings can be overridden in subcommands.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:914:5516","0:915:5534","0:916:5537","0:917:5545","0:918:1556","0:919:5559","0:920:5564","0:921:5569","0:922:5576","0:923:4294","0:924:5582","0:925:5589","0:926:5592","0:927:5608","0:928:5611","0:929:4309","0:930:5623","0:931:5639"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5263:7465":{"id":"0:5263:7465","crate_id":0,"name":"color_when","span":{"filename":"src/output/fmt.rs","begin":[18,4],"end":[18,27]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[allow(unused)]"],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:9339:7908-0:4641:2920":{"id":"a:2:9339:7908-0:4641:2920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:600:4782":{"id":"0:600:4782","crate_id":0,"name":"is_ignore_case_set","span":{"filename":"src/builder/arg.rs","begin":[4669,4],"end":[4671,5]},"visibility":"public","docs":"Reports whether [`Arg::ignore_case`] is set","links":{"`Arg::ignore_case`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2385:8255":{"id":"0:2385:8255","crate_id":0,"name":"verify_arg_t","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1224,4],"end":[1235,5]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5001:793":{"id":"0:5001:793","crate_id":0,"name":"len","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1403,4],"end":[1403,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:31971:74217":{"id":"2:31971:74217","crate_id":2,"name":"checked_shl","span":null,"visibility":"public","docs":"Checked shift left. Computes `self << rhs`, returning `None`\nif `rhs` is larger than or equal to the number of bits in `self`.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(0x1u64.checked_shl(4), Some(0x10));\nassert_eq!(0x10u64.checked_shl(129), None);\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_checked_int_methods\", since = \"1.47.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4567:5130":{"id":"0:4567:5130","crate_id":0,"name":"Multiple","span":{"filename":"src/builder/usage_parser.rs","begin":[15,4],"end":[15,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1166:6488":{"id":"0:1166:6488","crate_id":0,"name":"get_used_global_args","span":{"filename":"src/builder/command.rs","begin":[4141,4],"end":[4153,5]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["global_arg_vec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5220:7335":{"id":"b:2:3202-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2341:7911":{"id":"0:2341:7911","crate_id":0,"name":"value_source","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[599,4],"end":[605,5]},"visibility":"public","docs":"Report where argument value came from\n\n# Panics\n\nIf `id` is is not a valid argument or group id.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ValueSource};\nlet m = Command::new(\"myprog\")\n    .arg(Arg::new(\"debug\")\n        .short('d'))\n    .get_matches_from(vec![\n        \"myprog\", \"-d\"\n    ]);\n\nassert_eq!(m.value_source(\"debug\"), Some(ValueSource::CommandLine));\n```\n\n[`default_value`]: crate::Arg::default_value()","links":{},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31990:70847":{"id":"2:31990:70847","crate_id":2,"name":"wrapping_neg","span":null,"visibility":"public","docs":"Wrapping (modular) negation. Computes `-self`,\nwrapping around at the boundary of the type.\n\nSince unsigned types do not have negative equivalents\nall applications of this function will wrap (except for `-0`).\nFor values smaller than the corresponding signed type's maximum\nthe result is the same as casting the corresponding signed value.\nAny larger values are equivalent to `MAX + 1 - (val - MAX - 1)` where\n`MAX` is the corresponding signed type's maximum.\n\n# Examples\n\nBasic usage:\n\nPlease note that this example is shared between integer types.\nWhich explains why `i8` is used here.\n\n```\nassert_eq!(100i8.wrapping_neg(), -100);\nassert_eq!((-128i8).wrapping_neg(), -128);\n```","links":{},"attrs":["#[stable(feature = \"num_wrapping\", since = \"1.2.0\")]","#[rustc_const_stable(feature = \"const_wrapping_math\", since = \"1.32.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5145":{"id":"0:5145","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1717,9],"end":[1717,14]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5146:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:502:4400":{"id":"0:502:4400","crate_id":0,"name":"default_value_if","span":{"filename":"src/builder/arg.rs","begin":[3241,4],"end":[3248,5]},"visibility":"public","docs":"Specifies the value of the argument if `arg` has been used at runtime.\n\nIf `val` is set to `None`, `arg` only needs to be present. If `val` is set to `\"some-val\"`\nthen `arg` must be present at runtime **and** have the value `val`.\n\nIf `default` is set to `None`, `default_value` will be removed.\n\n**NOTE:** This setting is perfectly compatible with [`Arg::default_value`] but slightly\ndifferent. `Arg::default_value` *only* takes effect when the user has not provided this arg\nat runtime. This setting however only takes effect when the user has not provided a value at\nruntime **and** these other conditions are met as well. If you have set `Arg::default_value`\nand `Arg::default_value_if`, and the user **did not** provide this arg at runtime, nor were\nthe conditions met for `Arg::default_value_if`, the `Arg::default_value` will be applied.\n\n**NOTE:** This implicitly sets [`Arg::takes_value(true)`].\n\n# Examples\n\nFirst we use the default value only if another arg is present at runtime.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value_if(\"flag\", None, Some(\"default\")))\n    .get_matches_from(vec![\n        \"prog\", \"--flag\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), Some(\"default\"));\n```\n\nNext we run the same test, but without providing `--flag`.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value_if(\"flag\", None, Some(\"default\")))\n    .get_matches_from(vec![\n        \"prog\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), None);\n```\n\nNow lets only use the default value if `--opt` contains the value `special`.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .takes_value(true)\n        .long(\"opt\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value_if(\"opt\", Some(\"special\"), Some(\"default\")))\n    .get_matches_from(vec![\n        \"prog\", \"--opt\", \"special\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), Some(\"default\"));\n```\n\nWe can run the same test and provide any value *other than* `special` and we won't get a\ndefault value.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"opt\")\n        .takes_value(true)\n        .long(\"opt\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value_if(\"opt\", Some(\"special\"), Some(\"default\")))\n    .get_matches_from(vec![\n        \"prog\", \"--opt\", \"hahaha\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), None);\n```\n\nIf we want to unset the default value for an Arg based on the presence or\nvalue of some other Arg.\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"flag\")\n        .long(\"flag\"))\n    .arg(Arg::new(\"other\")\n        .long(\"other\")\n        .default_value(\"default\")\n        .default_value_if(\"flag\", None, None))\n    .get_matches_from(vec![\n        \"prog\", \"--flag\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), None);\n```\n[`Arg::takes_value(true)`]: Arg::takes_value()\n[`Arg::default_value`]: Arg::default_value()","links":{"Arg::takes_value()":"0:3972:1654","Arg::default_value()":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}],["val",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}],["default",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5315":{"id":"0:5315","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[34,0],"end":[38,1]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5316:7875","0:5317:6571","0:5318:6578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3587:3147":{"id":"0:3587:3147","crate_id":0,"name":"NextLineHelp","span":{"filename":"src/builder/app_settings.rs","begin":[299,4],"end":[299,16]},"visibility":"default","docs":"Deprecated, replaced with [`Command::next_line_help`] and [`Command::is_next_line_help_set`]","links":{"`Command::is_next_line_help_set`":"0:4456:1667","`Command::next_line_help`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::next_line_help` and `Command::is_next_line_help_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::next_line_help` and `Command::is_next_line_help_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9339:7908-0:4664:2905":{"id":"a:2:9339:7908-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13580:31619":{"id":"2:13580:31619","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:16004:9059","self::pattern":"2:13134:9255","`DoubleEndedIterator`":"2:8523:120","str::rmatch_indices":"1:16010:9064"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49708:9274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4961":{"id":"0:4961","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,16],"end":[67,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4962:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13524:6751":{"id":"2:13524:6751","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49544:9262","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2688:1664":{"id":"b:2:3213-0:2688:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parser","id":"0:2688:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2016:7477":{"id":"0:2016:7477","crate_id":0,"name":"use_stderr","span":{"filename":"src/error/mod.rs","begin":[104,4],"end":[106,5]},"visibility":"public","docs":"Should the message be written to `stdout` or not?","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:699:2580":{"id":"0:699:2580","crate_id":0,"name":"arg","span":{"filename":"src/builder/arg_group.rs","begin":[162,4],"end":[165,5]},"visibility":"public","docs":"Adds an [argument] to this group by name\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgGroup};\nlet m = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .group(ArgGroup::new(\"req_flags\")\n        .arg(\"flag\")\n        .arg(\"color\"))\n    .get_matches_from(vec![\"myprog\", \"-f\"]);\n// maybe we don't know which of the two flags was used...\nassert!(m.contains_id(\"req_flags\"));\n// but we can also check individually if needed\nassert!(m.contains_id(\"flag\"));\n```\n[argument]: crate::Arg","links":{"crate::Arg":"0:3972:1654"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["arg_id",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:3542:1669":{"id":"a:2:3310:6658-0:3542:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4950":{"id":"0:4950","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[41,9],"end":[41,13]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5258":{"id":"0:5258","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[8,40],"end":[8,42]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3989:3366":{"id":"0:3989:3366","crate_id":0,"name":"r_unless_all","span":{"filename":"src/builder/arg.rs","begin":[77,4],"end":[77,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4872:7564":{"id":"0:4872:7564","crate_id":0,"name":"ArgumentNotFound","span":{"filename":"src/error/kind.rs","begin":[382,4],"end":[382,20]},"visibility":"default","docs":"Occurs when using the [`ArgMatches::value_of_t`] and friends to convert an argument value\ninto type `T`, but the argument you requested wasn't used. I.e. you asked for an argument\nwith name `config` to be converted, but `config` wasn't used by the user.\n\n[`ArgMatches::value_of_t`]: crate::ArgMatches::value_of_t()","links":{"crate::ArgMatches::value_of_t()":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:31:25-0:4953:1658":{"id":"b:31:25-0:4953:1658","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"2:13159:9250":{"id":"2:13159:9250","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13161:8271","2:13162:31017","2:13163:31018"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13153:9251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1759:681":{"id":"0:1759:681","crate_id":0,"name":"from","span":{"filename":"src/builder/regex.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["r",{"kind":"resolved_path","inner":{"name":"RegexSet","id":"25:2788:7323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:5048:1675":{"id":"a:2:3281:220-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3025:3445":{"id":"0:3025:3445","crate_id":0,"name":"push","span":{"filename":"src/mkeymap.rs","begin":[100,4],"end":[102,5]},"visibility":"crate","docs":"Push an argument in the map.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_arg",{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:3647:2672":{"id":"a:2:3310:6658-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1658":{"id":"0:1658","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1848,0],"end":[1855,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ValueParserFactory","id":"0:1643:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":["0:1659:1664","0:1660:2901"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:591:4764":{"id":"0:591:4764","crate_id":0,"name":"is_hide_env_set","span":{"filename":"src/builder/arg.rs","begin":[4623,4],"end":[4625,5]},"visibility":"public","docs":"Report whether [`Arg::hide_env`] is set","links":{"`Arg::hide_env`":"0:3972:1654"},"attrs":["#[cfg(feature = \"env\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5269:8971":{"id":"b:2:4002-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3506:2984":{"id":"0:3506:2984","crate_id":0,"name":"Append","span":{"filename":"src/builder/action.rs","begin":[72,4],"end":[72,10]},"visibility":"default","docs":"When encountered, store the associated value(s) in [`ArgMatches`][crate::ArgMatches]\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"flag\")\n            .long(\"flag\")\n            .action(clap::ArgAction::Append)\n    );\n\nlet matches = cmd.try_get_matches_from([\"mycmd\", \"--flag\", \"value1\", \"--flag\", \"value2\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_many::<String>(\"flag\").unwrap_or_default().map(|v| v.as_str()).collect::<Vec<_>>(),\n    vec![\"value1\", \"value2\"]\n);\n```","links":{"crate::ArgMatches":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1378":{"id":"0:1378","crate_id":0,"name":null,"span":{"filename":"src/builder/value_hint.rs","begin":[75,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:1372:2900","path":"::builder::value_hint"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13073:2509","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1379:126","0:1380:2510"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3122:7584":{"id":"0:3122:7584","crate_id":0,"name":"good","span":{"filename":"src/output/help.rs","begin":[139,4],"end":[141,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4953:1658":{"id":"a:2:3281:220-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4705:660":{"id":"0:4705:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/value_parser.rs","begin":[1647,22],"end":[1647,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2556:8250":{"id":"0:2556:8250","crate_id":0,"name":"into_vals_flatten","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[106,4],"end":[108,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6583:7922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"std::vec::IntoIter","id":"5:7379:8270","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1102:6395":{"id":"0:1102:6395","crate_id":0,"name":"is_infer_long_args_set","span":{"filename":"src/builder/command.rs","begin":[3688,4],"end":[3690,5]},"visibility":"crate","docs":"Report whether [`Command::infer_long_args`] is set","links":{"`Command::infer_long_args`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1625:7050":{"id":"0:1625:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[1667,4],"end":[1667,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"bool"}}},"0:5329":{"id":"0:5329","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[2,22],"end":[2,27]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5330:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"43:3000:13262":{"id":"43:3000:13262","crate_id":43,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:3002:2589","43:3003:73648","43:3004:73649","43:3005:814","43:3008:13310","43:3009:73650","43:3010:73651"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4842:6950":{"id":"0:4842:6950","crate_id":0,"name":"EmptyValue","span":{"filename":"src/error/kind.rs","begin":[102,4],"end":[102,14]},"visibility":"default","docs":"Occurs when the user provides an empty value for an option that does not allow empty\nvalues.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet res = Command::new(\"prog\")\n    .arg(Arg::new(\"color\")\n         .takes_value(true)\n         .forbid_empty_values(true)\n         .long(\"color\"))\n    .try_get_matches_from(vec![\"prog\", \"--color=\"]);\nassert!(res.is_err());\nassert_eq!(res.unwrap_err().kind(), ErrorKind::EmptyValue);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:481:2603":{"id":"0:481:2603","crate_id":0,"name":"help","span":{"filename":"src/builder/arg.rs","begin":[2543,4],"end":[2546,5]},"visibility":"public","docs":"Sets the description of the argument for short help (`-h`).\n\nTypically, this is a short (one line) description of the arg.\n\nIf [`Arg::long_help`] is not specified, this message will be displayed for `--help`.\n\n**NOTE:** Only `Arg::help` is used in completion script generation in order to be concise\n\n# Examples\n\nAny valid UTF-8 is allowed in the help text. The one exception is when one wishes to\ninclude a newline in the help text and have the following text be properly aligned with all\nthe other help text.\n\nSetting `help` displays a short message to the side of the argument when the user passes\n`-h` or `--help` (by default).\n\n```rust\n# use clap::{Command, Arg};\nlet m = Command::new(\"prog\")\n    .arg(Arg::new(\"cfg\")\n        .long(\"config\")\n        .help(\"Some help text describing the --config arg\"))\n    .get_matches_from(vec![\n        \"prog\", \"--help\"\n    ]);\n```\n\nThe above example displays\n\n```notrust\nhelptest\n\nUSAGE:\n   helptest [OPTIONS]\n\nOPTIONS:\n    --config     Some help text describing the --config arg\n-h, --help       Print help information\n-V, --version    Print version information\n```\n[`Arg::long_help`]: Arg::long_help()","links":{"Arg::long_help()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["h",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<Option<&'help str>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:870:5322":{"id":"0:870:5322","crate_id":0,"name":"mut_subcommand","span":{"filename":"src/builder/command.rs","begin":[301,4],"end":[319,5]},"visibility":"public","docs":"Allows one to mutate a [`Command`] after it's been added as a subcommand.\n\nThis can be useful for modifying auto-generated arguments of nested subcommands with\n[`Command::mut_arg`].\n\n# Examples\n\n```rust\n# use clap::Command;\n\nlet mut cmd = Command::new(\"foo\")\n        .subcommand(Command::new(\"bar\"))\n        .mut_subcommand(\"bar\", |subcmd| subcmd.disable_help_flag(true));\n\nlet res = cmd.try_get_matches_from_mut(vec![\"foo\", \"bar\", \"--help\"]);\n\n// Since we disabled the help flag on the \"bar\" subcommand, this should err.\n\nassert!(res.is_err());\n\nlet res = cmd.try_get_matches_from_mut(vec![\"foo\", \"bar\"]);\nassert!(res.is_ok());\n```","links":{"`Command`":"0:853:1653","`Command::mut_arg`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["subcmd_id",{"kind":"generic","inner":"T"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3639":{"id":"0:3639","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[32,9],"end":[32,14]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3640:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3338:1656":{"id":"0:3338:1656","crate_id":0,"name":"error","span":{"filename":"src/output/fmt.rs","begin":[43,4],"end":[45,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["msg",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl Into<String>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4812:1542":{"id":"0:4812:1542","crate_id":0,"name":"0","span":{"filename":"src/error/context.rs","begin":[48,9],"end":[48,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:3198-0:4997:7835":{"id":"b:2:3198-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:5182:3335":{"id":"b:2:4002-0:5182:3335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2053:7540":{"id":"0:2053:7540","crate_id":0,"name":"too_many_occurrences","span":{"filename":"src/error/mod.rs","begin":[427,4],"end":[450,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["max_occurs",{"kind":"primitive","inner":"usize"}],["curr_occurs",{"kind":"primitive","inner":"usize"}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1370:6766":{"id":"0:1370:6766","crate_id":0,"name":"help_start","span":{"filename":"src/builder/usage_parser.rs","begin":[234,0],"end":[236,1]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["b",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1641":{"id":"0:1641","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1774,0],"end":[1778,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1642:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3802:352":{"id":"0:3802:352","crate_id":0,"name":"bitand_assign","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Disables all flags disabled in the set.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1005:6108":{"id":"0:1005:6108","crate_id":0,"name":"allow_external_subcommands","span":{"filename":"src/builder/command.rs","begin":[2798,4],"end":[2804,5]},"visibility":"public","docs":"Assume unexpected positional arguments are a [`subcommand`].\n\nArguments will be stored in the `\"\"` argument in the [`ArgMatches`]\n\n**NOTE:** Use this setting with caution,\nas a truly unexpected argument (i.e. one that is *NOT* an external subcommand)\nwill **not** cause an error and instead be treated as a potential subcommand.\nOne should check for such cases manually and inform the user appropriately.\n\n**NOTE:** A built-in subcommand will be parsed as an external subcommand when escaped with\n`--`.\n\n# Examples\n\n```rust\n# use clap::Command;\n// Assume there is an external subcommand named \"subcmd\"\nlet m = Command::new(\"myprog\")\n    .allow_external_subcommands(true)\n    .get_matches_from(vec![\n        \"myprog\", \"subcmd\", \"--option\", \"value\", \"-fff\", \"--flag\"\n    ]);\n\n// All trailing arguments will be stored under the subcommand's sub-matches using an empty\n// string argument name\nmatch m.subcommand() {\n    Some((external, ext_m)) => {\n         let ext_args: Vec<&str> = ext_m.values_of(\"\").unwrap().collect();\n         assert_eq!(external, \"subcmd\");\n         assert_eq!(ext_args, [\"--option\", \"value\", \"-fff\", \"--flag\"]);\n    },\n    _ => {},\n}\n```\n\n[`subcommand`]: crate::Command::subcommand()\n[`ArgMatches`]: crate::ArgMatches\n[`ErrorKind::UnknownArgument`]: crate::ErrorKind::UnknownArgument","links":{"crate::Command::subcommand()":"0:4456:1667","crate::ArgMatches":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13583:31620":{"id":"2:13583:31620","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:16010:9064","`DoubleEndedIterator`":"2:8523:120","self::pattern":"2:13134:9255","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49726:9275","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4664:2905":{"id":"b:2:2872-0:4664:2905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedI64ValueParser","id":"0:4664:2905","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:4910:7462":{"id":"b:2:4002-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:6658-0:5305:3334":{"id":"a:2:3310:6658-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3811":{"id":"0:3811","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"2:8488:9169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3812:3464"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1436":{"id":"0:1436","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[473,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":"Create an `i64` [`ValueParser`] from a `..` range\n\nSee [`RangedI64ValueParser`] for more control over the output type.\n\nSee also [`RangedU64ValueParser`]\n\n# Examples\n\n```rust\nlet mut cmd = clap::Command::new(\"raw\")\n    .arg(\n        clap::Arg::new(\"port\")\n            .long(\"port\")\n            .value_parser(..)\n            .takes_value(true)\n            .required(true)\n    );\n\nlet m = cmd.try_get_matches_from_mut([\"cmd\", \"--port\", \"3001\"]).unwrap();\nlet port: i64 = *m.get_one(\"port\")\n    .expect(\"required\");\nassert_eq!(port, 3001);\n```","links":{"`ValueParser`":"0:1394:2909","`RangedI64ValueParser`":"0:4664:2905","`RangedU64ValueParser`":"0:4676:2906"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFull","id":"2:45940:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1437:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4285":{"id":"0:4285","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10387:9319","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4286:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4647:2916":{"id":"b:2:4002-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3460:7234":{"id":"0:3460:7234","crate_id":0,"name":"TRUE_LITERALS","span":{"filename":"src/util/str_to_bool.rs","begin":[2,0],"end":[2,81]},"visibility":"crate","docs":"True values are `y`, `yes`, `t`, `true`, `on`, and `1`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"array","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"len":"6"}},"expr":"_","value":null,"is_literal":false}},"0:4286:660":{"id":"0:4286:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::_core::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:4172:1671":{"id":"b:2:2872-0:4172:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1458:2747":{"id":"0:1458:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/value_parser.rs","begin":[579,4],"end":[587,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"resolved_path","inner":{"name":"std::ffi::OsString","id":"1:2934:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:5092:7833":{"id":"b:2:3198-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5245:2692":{"id":"0:5245:2692","crate_id":0,"name":"Stream","span":{"filename":"src/output/fmt.rs","begin":[9,0],"end":[12,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:5246:5460","0:5248:2693"],"impls":["a:2:3310:6658-0:5245:2692","a:2:3269:211-0:5245:2692","a:2:9340:7907-0:5245:2692","a:2:9339:7908-0:5245:2692","a:2:3281:220-0:5245:2692","b:2:3198-0:5245:2692","b:2:2872-0:5245:2692","b:2:2869-0:5245:2692","b:2:4002-0:5245:2692","b:2:3202-0:5245:2692","b:2:3213-0:5245:2692","b:2:3208-0:5245:2692","b:5:787-0:5245:2692","b:31:25-0:5245:2692","0:5250","0:5251","0:5253","0:5255","0:5256","0:5258","0:5259"]}},"0:566:4706":{"id":"0:566:4706","crate_id":0,"name":"get_index","span":{"filename":"src/builder/arg.rs","begin":[4443,4],"end":[4445,5]},"visibility":"public","docs":"Get the index of this argument, if any","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266:2948":{"id":"0:266:2948","crate_id":0,"name":"yaml_to_bool","span":{"filename":"src/builder/macros.rs","begin":[137,0],"end":[143,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_to_bool {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"b:2:2872-0:4657:2904":{"id":"b:2:2872-0:4657:2904","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValuesParser","id":"0:4657:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:4742:7344":{"id":"b:2:3198-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:3393:9003":{"id":"b:2:2872-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2481":{"id":"0:2481","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1623,0],"end":[1631,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":"Creates an empty iterator.","links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:2482:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4131:2923":{"id":"a:2:3269:211-0:4131:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:4942:7020":{"id":"b:2:2869-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:3503:1652":{"id":"b:2:4002-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:31:25-0:5092:7833":{"id":"b:31:25-0:5092:7833","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:4762:7530":{"id":"0:4762:7530","crate_id":0,"name":"InvalidSubcommand","span":{"filename":"src/error/context.rs","begin":[6,4],"end":[6,21]},"visibility":"default","docs":"The cause of the error","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3520:3024":{"id":"0:3520:3024","crate_id":0,"name":"Version","span":{"filename":"src/builder/action.rs","begin":[249,4],"end":[249,11]},"visibility":"default","docs":"When encountered, display [`Command::version`][super::App::version]\n\nDepending on the flag, [`Command::long_version`][super::App::long_version] may be shown\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .version(\"1.0.0\")\n    .arg(\n        Arg::new(\"special-version\")\n            .long(\"special-version\")\n            .action(clap::ArgAction::Version)\n    );\n\n// Existing help still exists\nlet err = cmd.clone().try_get_matches_from([\"mycmd\", \"--version\"]).unwrap_err();\nassert_eq!(err.kind(), clap::error::ErrorKind::DisplayVersion);\n\n// New help available\nlet err = cmd.try_get_matches_from([\"mycmd\", \"--special-version\"]).unwrap_err();\nassert_eq!(err.kind(), clap::error::ErrorKind::DisplayVersion);\n```","links":{"super::App::long_version":"0:4456:1667","super::App::version":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4901":{"id":"0:4901","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[56,9],"end":[56,14]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4902:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2035:709":{"id":"0:2035:709","crate_id":0,"name":"get_context","span":{"filename":"src/error/mod.rs","begin":[254,4],"end":[259,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["kind",{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1624":{"id":"0:1624","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1666,0],"end":[1696,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1625:7050","0:1626:7090","0:1631:3893"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2008":{"id":"0:2008","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[68,0],"end":[986,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2009:61","0:2011:671","0:2012:782","0:2013:481","0:2016:7477","0:2017:6646","0:2018:2754","0:2019:2698","0:2021:920","0:2022:7497","0:2023:7133","0:2024:7472","0:2026:7499","0:2027:7504","0:2028:7501","0:2029:7502","0:2030:7500","0:2031:7506","0:2032:7507","0:2035:709","0:2038:7510","0:2039:7511","0:2040:7513","0:2041:7514","0:2042:7141","0:2044:7522","0:2045:7177","0:2048:7528","0:2049:7533","0:2050:7535","0:2051:7537","0:2052:7131","0:2053:7540","0:2054:7546","0:2055:7548","0:2056:7132","0:2057:7553","0:2058:7556","0:2059:7558","0:2060:7561","0:2061:7563","0:2062:7492","0:2063:7566","0:2064:7601"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2379":{"id":"0:2379","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1179,0],"end":[1312,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2380:8245","0:2381:8242","0:2383:8249","0:2385:8255","0:2387:8253","0:2388:8054","0:2389:8228"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4742:7344":{"id":"a:2:3310:6658-0:4742:7344","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4751:1543":{"id":"0:4751:1543","crate_id":0,"name":"1","span":{"filename":"src/builder/debug_asserts.rs","begin":[354,16],"end":[354,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:1255:6617":{"id":"0:1255:6617","crate_id":0,"name":"long_flag_aliases_to","span":{"filename":"src/builder/command.rs","begin":[4902,4],"end":[4912,5]},"visibility":"crate","docs":"Check if this subcommand can be referred to as `name`. In other words,\ncheck if `name` is the name of this long flag subcommand or is one of its long flag aliases.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["flag",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5175:8647":{"id":"0:5175:8647","crate_id":0,"name":"potential","span":{"filename":"src/parser/validator.rs","begin":[607,4],"end":[607,53]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"std::collections::HashMap","id":"1:1302:143","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4098":{"id":"0:4098","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5273,40],"end":[5273,42]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2392:2763":{"id":"0:2392:2763","crate_id":0,"name":"Item","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1349,4],"end":[1349,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:2443:5300":{"id":"0:2443:5300","crate_id":0,"name":"size_hint","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1521,4],"end":[1523,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:944:5249":{"id":"0:944:5249","crate_id":0,"name":"long_about","span":{"filename":"src/builder/command.rs","begin":[1505,4],"end":[1508,5]},"visibility":"public","docs":"Sets the program's description for the long help (`--help`).\n\nIf [`Command::about`] is not specified, this message will be displayed for `-h`.\n\n**NOTE:** Only [`Command::about`] (short format) is used in completion\nscript generation in order to be concise.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .long_about(\n\"Does really amazing things to great people. Now let's talk a little\n more in depth about how this subcommand really works. It may take about\n a few lines of text, but that's ok!\")\n# ;\n```\n[`App::about`]: Command::about()","links":{"`Command::about`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["long_about",{"kind":"generic","inner":"O"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:6658-0:4947:3033":{"id":"a:2:3310:6658-0:4947:3033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5285":{"id":"0:5285","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[135,29],"end":[135,38]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5009:660":{"id":"0:5009:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1399,16],"end":[1399,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4191:3147":{"id":"0:4191:3147","crate_id":0,"name":"NextLineHelp","span":{"filename":"src/builder/arg_settings.rs","begin":[124,4],"end":[124,16]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::next_line_help`] and [`Arg::is_next_line_help_set`]","links":{"`Arg::is_next_line_help_set`":"0:3972:1654","`Arg::next_line_help`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::next_line_help` and `Arg::is_next_line_help_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::next_line_help` and `Arg::is_next_line_help_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3166:8824":{"id":"0:3166:8824","crate_id":0,"name":"write_author","span":{"filename":"src/output/help.rs","begin":[711,4],"end":[722,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["before_new_line",{"kind":"primitive","inner":"bool"}],["after_new_line",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3190:8849":{"id":"0:3190:8849","crate_id":0,"name":"will_subcommands_wrap","span":{"filename":"src/output/help.rs","begin":[906,4],"end":[921,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":"Will use next line help on writing subcommands.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["subcommands",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]}],["longest",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"impl IntoIterator<Item = &'a Command<'help>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[{"region_predicate":{"lifetime":"'help","bounds":[{"outlives":"'a"}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3591:3154":{"id":"0:3591:3154","crate_id":0,"name":"DisableHelpFlag","span":{"filename":"src/builder/app_settings.rs","begin":[320,4],"end":[320,19]},"visibility":"default","docs":"Deprecated, replaced with [`Command::disable_help_flag`] and [`Command::is_disable_help_flag_set`]","links":{"`Command::is_disable_help_flag_set`":"0:4456:1667","`Command::disable_help_flag`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::disable_help_flag` and `Command::is_disable_help_flag_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::disable_help_flag` and `Command::is_disable_help_flag_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:5137:604":{"id":"0:5137:604","crate_id":0,"name":"eq","span":{"filename":"src/parser/parser.rs","begin":[1688,16],"end":[1688,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4942:7020":{"id":"b:2:4002-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1156":{"id":"0:1156","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[4108,0],"end":[4821,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1158:2588","0:1159:6480","0:1160:6481","0:1161:6482","0:1162:6483","0:1163:6484","0:1164:6485","0:1165:6487","0:1166:6488","0:1169:5451","0:1173:6502","0:1174:6509","0:1175:5458","0:1177:6524","0:1183:6505","0:1187:6548","0:1190:6553","0:1193:6556","0:1196:6513","0:1199:6511","0:1200:6568","0:1201:6512","0:1218:6514","0:1221:5495","0:1222:6594"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5025":{"id":"0:5025","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1507,9],"end":[1507,14]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5027:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:885:2585":{"id":"0:885:2585","crate_id":0,"name":"debug_assert","span":{"filename":"src/builder/command.rs","begin":[477,4],"end":[479,5]},"visibility":"public","docs":"Catch problems earlier in the development cycle.\n\nMost error states are handled as asserts under the assumption they are programming mistake\nand not something to handle at runtime.  Rather than relying on tests (manual or automated)\nthat exhaustively test your CLI to ensure the asserts are evaluated, this will run those\nasserts in a way convenient for running as a test.\n\n**Note::** This will not help with asserts in [`ArgMatches`], those will need exhaustive\ntesting of your CLI.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nfn cmd() -> Command<'static> {\n    Command::new(\"foo\")\n        .arg(\n            Arg::new(\"bar\").short('b').action(ArgAction::SetTrue)\n        )\n}\n\n#[test]\nfn verify_app() {\n    cmd().debug_assert();\n}\n\nfn main() {\n    let m = cmd().get_matches_from(vec![\"foo\", \"-b\"]);\n    println!(\"{}\", *m.get_one::<bool>(\"bar\").expect(\"defaulted by clap\"));\n}\n```","links":{"`ArgMatches`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:195:2770":{"id":"0:195:2770","crate_id":0,"name":"command_for_update","span":{"filename":"src/derive.rs","begin":[267,4],"end":[270,5]},"visibility":"default","docs":"Build a [`Command`] that can update `self`.\n\nSee [`FromArgMatches::update_from_arg_matches_mut`] for updating `self`.","links":{"`FromArgMatches::update_from_arg_matches_mut`":"0:199:1663","`Command`":"0:853:1653"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2314:2497":{"id":"0:2314:2497","crate_id":0,"name":"values_of","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[389,4],"end":[398,5]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_many()`]","links":{"`ArgMatches::get_many()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgMatches::get_many()`\")]","#[track_caller]","#![allow(deprecated)]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Key","id":"0:3388:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5017":{"id":"0:5017","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1460,16],"end":[1460,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:5019:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4137:1542":{"id":"0:4137:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/arg_predicate.rs","begin":[4,11],"end":[4,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:5027:408":{"id":"0:5027:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1507,9],"end":[1507,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Values","id":"0:5020:1678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2084:671":{"id":"0:2084:671","crate_id":0,"name":"format","span":{"filename":"src/error/mod.rs","begin":[1071,4],"end":[1086,5]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5152:907":{"id":"0:5152:907","crate_id":0,"name":"ne","span":{"filename":"src/parser/parser.rs","begin":[1717,23],"end":[1717,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1481:7090":{"id":"0:1481:7090","crate_id":0,"name":"parse_ref","span":{"filename":"src/builder/value_parser.rs","begin":[688,4],"end":[695,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["arg",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"crate::Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],"bindings":[]}}}}],["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"std::ffi::OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1462:2908","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:720":{"id":"0:720","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[621,0],"end":[633,1]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:721:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2715:8376":{"id":"0:2715:8376","crate_id":0,"name":"possible_subcommand","span":{"filename":"src/parser/parser.rs","begin":[538,4],"end":[568,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}},{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RawOsStr","id":"30:400:7334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["valid_arg_found",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4647:2916":{"id":"a:2:9340:7907-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:4456:1667":{"id":"a:2:3269:211-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:7908-0:5305:3334":{"id":"a:2:9339:7908-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:7907-0:4892:7456":{"id":"a:2:9340:7907-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:4231:2672":{"id":"b:2:3202-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13574:2748":{"id":"2:13574:2748","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:16004:9059","self::pattern":"2:13134:9255","str::matches":"1:16010:9064","`DoubleEndedIterator`":"2:8523:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49762:9276","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:4892:7456":{"id":"a:2:3269:211-0:4892:7456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorInner","id":"0:4892:7456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1292:59":{"id":"0:1292:59","crate_id":0,"name":"default","span":{"filename":"src/builder/command.rs","begin":[5093,4],"end":[5131,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4530:1672":{"id":"0:4530:1672","crate_id":0,"name":"PossibleValue","span":{"filename":"src/builder/possible_value.rs","begin":[30,0],"end":[35,1]},"visibility":"public","docs":"A possible value of an argument.\n\nThis is used for specifying [possible values] of [Args].\n\n**NOTE:** This struct is likely not needed for most usecases as it is only required to\n[hide] single values from help messages and shell completions or to attach [help] to possible values.\n\n# Examples\n\n```rust\n# use clap::{Arg, PossibleValue};\nlet cfg = Arg::new(\"config\")\n    .takes_value(true)\n    .value_name(\"FILE\")\n    .value_parser([\n        PossibleValue::new(\"fast\"),\n        PossibleValue::new(\"slow\").help(\"slower than fast\"),\n        PossibleValue::new(\"secret speed\").hide(true)\n    ]);\n```\n[Args]: crate::Arg\n[possible values]: crate::builder::ValueParser::possible_values\n[hide]: PossibleValue::hide()\n[help]: PossibleValue::help()","links":{"PossibleValue::help()":"0:4530:1672","crate::builder::ValueParser::possible_values":"0:1394:2909","crate::Arg":"0:3972:1654","PossibleValue::hide()":"0:4530:1672"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4532:899","0:4533:2603","0:4534:3367","0:4535:4299"],"impls":["0:1313","0:1321","a:2:3310:6658-0:4530:1672","a:2:3269:211-0:4530:1672","a:2:9340:7907-0:4530:1672","a:2:9339:7908-0:4530:1672","a:2:3281:220-0:4530:1672","b:2:3198-0:4530:1672","b:2:2872-0:4530:1672","b:2:2869-0:4530:1672","b:2:4002-0:4530:1672","b:2:3202-0:4530:1672","b:2:3213-0:4530:1672","b:2:3208-0:4530:1672","b:5:787-0:4530:1672","b:31:25-0:4530:1672","0:4536","0:4539","0:4542","0:4545","0:4547","0:4551","0:4553","0:1336","0:1339"]}},"0:4294:5175":{"id":"0:4294:5175","crate_id":0,"name":"USE_DELIM","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:4651":{"id":"0:4651","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[868,9],"end":[868,14]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::ValueEnum","id":"0:211:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:4653:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3398":{"id":"0:3398","crate_id":0,"name":null,"span":{"filename":"src/util/fnv.rs","begin":[32,0],"end":[46,1]},"visibility":{"restricted":{"parent":"0:3375:8994","path":"::util::fnv"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_i8","write_u64","write_u8","write_str","write_i128","write_i16","write_u128","write_u16","write_isize","write_i32","write_usize","write_u32","write_length_prefix","write_i64"],"trait":{"name":"Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3399:652","0:3400:2517"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:3211:5214":{"id":"b:2:3213-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3738:3223":{"id":"0:3738:3223","crate_id":0,"name":"SC_UTF8_NONE","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1537:3893":{"id":"0:1537:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[1037,4],"end":[1041,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:5446":{"id":"5:790:5446","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:5038:1676":{"id":"b:2:2872-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5653:12313":{"id":"1:5653:12313","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5654:13651","1:5655:6738"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3981:3359":{"id":"0:3981:3359","crate_id":0,"name":"blacklist","span":{"filename":"src/builder/arg.rs","begin":[69,4],"end":[69,33]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:4846:7552":{"id":"0:4846:7552","crate_id":0,"name":"ValueValidation","span":{"filename":"src/error/kind.rs","begin":[141,4],"end":[141,19]},"visibility":"default","docs":"Occurs when the user provides a value for an argument with a custom validation and the\nvalue fails that validation.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nfn is_numeric(val: &str) -> Result<(), String> {\n    match val.parse::<i64>() {\n        Ok(..) => Ok(()),\n        Err(..) => Err(String::from(\"Value wasn't a number!\")),\n    }\n}\n\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"num\")\n         .validator(is_numeric))\n    .try_get_matches_from(vec![\"prog\", \"NotANumber\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::ValueValidation);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:264:2946":{"id":"0:264:2946","crate_id":0,"name":"yaml_to_char","span":{"filename":"src/builder/macros.rs","begin":[123,0],"end":[127,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_to_char {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"a:2:9340:7907-0:4700:2915":{"id":"a:2:9340:7907-0:4700:2915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolishValueParser","id":"0:4700:2915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2823:3377":{"id":"b:2:2869-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:5261:2691":{"id":"b:2:3198-0:5261:2691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4105:1655":{"id":"0:4105:1655","crate_id":0,"name":"ArgGroup","span":{"filename":"src/builder/arg_group.rs","begin":[81,0],"end":[89,1]},"visibility":"public","docs":"Family of related [arguments].\n\nBy placing arguments in a logical group, you can create easier requirement and\nexclusion rules instead of having to list each argument individually, or when you want a rule\nto apply \"any but not all\" arguments.\n\nFor instance, you can make an entire `ArgGroup` required. If [`ArgGroup::multiple(true)`] is\nset, this means that at least one argument from that group must be present. If\n[`ArgGroup::multiple(false)`] is set (the default), one and *only* one must be present.\n\nYou can also do things such as name an entire `ArgGroup` as a [conflict] or [requirement] for\nanother argument, meaning any of the arguments that belong to that group will cause a failure\nif present, or must be present respectively.\n\nPerhaps the most common use of `ArgGroup`s is to require one and *only* one argument to be\npresent out of a given set. Imagine that you had multiple arguments, and you want one of them\nto be required, but making all of them required isn't feasible because perhaps they conflict\nwith each other. For example, lets say that you were building an application where one could\nset a given version number by supplying a string with an option argument, i.e.\n`--set-ver v1.2.3`, you also wanted to support automatically using a previous version number\nand simply incrementing one of the three numbers. So you create three flags `--major`,\n`--minor`, and `--patch`. All of these arguments shouldn't be used at one time but you want to\nspecify that *at least one* of them is used. For this, you can create a group.\n\nFinally, you may use `ArgGroup`s to pull a value from a group of arguments when you don't care\nexactly which argument was actually used at runtime.\n\n# Examples\n\nThe following example demonstrates using an `ArgGroup` to ensure that one, and only one, of\nthe arguments from the specified group is present at runtime.\n\n```rust\n# use clap::{Command, arg, ArgGroup, ErrorKind};\nlet result = Command::new(\"cmd\")\n    .arg(arg!(--\"set-ver\" <ver> \"set the version manually\").required(false))\n    .arg(arg!(--major           \"auto increase major\"))\n    .arg(arg!(--minor           \"auto increase minor\"))\n    .arg(arg!(--patch           \"auto increase patch\"))\n    .group(ArgGroup::new(\"vers\")\n         .args(&[\"set-ver\", \"major\", \"minor\", \"patch\"])\n         .required(true))\n    .try_get_matches_from(vec![\"cmd\", \"--major\", \"--patch\"]);\n// Because we used two args in the group it's an error\nassert!(result.is_err());\nlet err = result.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::ArgumentConflict);\n```\nThis next example shows a passing parse of the same scenario\n\n```rust\n# use clap::{Command, arg, ArgGroup};\nlet result = Command::new(\"cmd\")\n    .arg(arg!(--\"set-ver\" <ver> \"set the version manually\").required(false))\n    .arg(arg!(--major           \"auto increase major\"))\n    .arg(arg!(--minor           \"auto increase minor\"))\n    .arg(arg!(--patch           \"auto increase patch\"))\n    .group(ArgGroup::new(\"vers\")\n         .args(&[\"set-ver\", \"major\", \"minor\",\"patch\"])\n         .required(true))\n    .try_get_matches_from(vec![\"cmd\", \"--major\"]);\nassert!(result.is_ok());\nlet matches = result.unwrap();\n// We may not know which of the args was used, so we can test for the group...\nassert!(matches.contains_id(\"vers\"));\n// we could also alternatively check each arg individually (not shown here)\n```\n[`ArgGroup::multiple(true)`]: ArgGroup::multiple()\n\n[`ArgGroup::multiple(false)`]: ArgGroup::multiple()\n[arguments]: crate::Arg\n[conflict]: crate::Arg::conflicts_with()\n[requirement]: crate::Arg::requires()","links":{"crate::Arg":"0:3972:1654","crate::Arg::conflicts_with()":"0:3972:1654","crate::Arg::requires()":"0:3972:1654","ArgGroup::multiple()":"0:4105:1655"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4107:2589","0:4108:899","0:4109:298","0:4110:2596","0:4111:3362","0:4112:4992","0:4113:2661"],"impls":["0:690","a:2:3310:6658-0:4105:1655","a:2:3269:211-0:4105:1655","a:2:9340:7907-0:4105:1655","a:2:9339:7908-0:4105:1655","a:2:3281:220-0:4105:1655","b:2:3198-0:4105:1655","b:2:2872-0:4105:1655","b:2:2869-0:4105:1655","b:2:4002-0:4105:1655","b:2:3202-0:4105:1655","b:2:3213-0:4105:1655","b:2:3208-0:4105:1655","b:5:787-0:4105:1655","b:31:25-0:4105:1655","0:4114","0:4117","0:4120","0:4122","0:4126","0:4128","0:714","0:717","0:720"]}},"0:707:4558":{"id":"0:707:4558","crate_id":0,"name":"requires_all","span":{"filename":"src/builder/arg_group.rs","begin":[356,4],"end":[361,5]},"visibility":"public","docs":"Specify arguments or groups that must be present when this group is.\n\nThis is not to be confused with a [required group]. Requirement rules function just like\n[argument requirement rules], you can name other arguments or groups that must be present\nwhen one of the arguments from this group is used.\n\n**NOTE:** The names provided may be an argument or group name\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgGroup, ErrorKind};\nlet result = Command::new(\"myprog\")\n    .arg(Arg::new(\"flag\")\n        .short('f'))\n    .arg(Arg::new(\"color\")\n        .short('c'))\n    .arg(Arg::new(\"debug\")\n        .short('d'))\n    .arg(Arg::new(\"verb\")\n        .short('v'))\n    .group(ArgGroup::new(\"req_flags\")\n        .args(&[\"flag\", \"color\"])\n        .requires_all(&[\"debug\", \"verb\"]))\n    .try_get_matches_from(vec![\"myprog\", \"-c\", \"-d\"]);\n// because we used an arg from the group, and the group requires \"-d\" and \"-v\" to be used,\n// yet we only used \"-d\" it's an error\nassert!(result.is_err());\nlet err = result.unwrap_err();\nassert_eq!(err.kind(), ErrorKind::MissingRequiredArgument);\n```\n[required group]: ArgGroup::required()\n[argument requirement rules]: crate::Arg::requires_all()","links":{"crate::Arg::requires_all()":"0:3972:1654","ArgGroup::required()":"0:4105:1655"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ns",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:5038:1676":{"id":"b:2:3202-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:165:2747":{"id":"0:165:2747","crate_id":0,"name":"parse","span":{"filename":"src/derive.rs","begin":[80,4],"end":[92,5]},"visibility":"default","docs":"Parse from `std::env::args_os()`, exit on error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4110:2596":{"id":"0:4110:2596","crate_id":0,"name":"required","span":{"filename":"src/builder/arg_group.rs","begin":[85,4],"end":[85,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"a:2:9340:7907-0:5010:7834":{"id":"a:2:9340:7907-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:22957:12686":{"id":"2:22957:12686","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22958:12678","2:22959:1247","2:22960:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3397:920":{"id":"0:3397:920","crate_id":0,"name":"new","span":{"filename":"src/util/fnv.rs","begin":[27,4],"end":[29,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2463":{"id":"0:2463","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1573,0],"end":[1573,51]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8548:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:5220:7335":{"id":"a:2:3281:220-0:5220:7335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:7907-0:5269:8971":{"id":"a:2:9340:7907-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1092:6376":{"id":"0:1092:6376","crate_id":0,"name":"is_ignore_errors_set","span":{"filename":"src/builder/command.rs","begin":[3637,4],"end":[3639,5]},"visibility":"crate","docs":"Report whether [`Command::ignore_errors`] is set","links":{"`Command::ignore_errors`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:598:4778":{"id":"0:598:4778","crate_id":0,"name":"is_exclusive_set","span":{"filename":"src/builder/arg.rs","begin":[4659,4],"end":[4661,5]},"visibility":"public","docs":"Reports whether [`Arg::exclusive`] is set","links":{"`Arg::exclusive`":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4173:3588":{"id":"0:4173:3588","crate_id":0,"name":"Required","span":{"filename":"src/builder/arg_settings.rs","begin":[43,4],"end":[43,12]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::required`] and [`Arg::is_required_set`]","links":{"`Arg::required`":"0:3972:1654","`Arg::is_required_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::required` and `Arg::is_required_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::required` and `Arg::is_required_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:110:1846":{"id":"0:110:1846","crate_id":0,"name":"multicall_busybox","span":{"filename":"src/_cookbook/multicall_busybox.rs","begin":[1,0],"end":[7,61]},"visibility":"public","docs":"# Example: busybox-like CLI (Builder API)\n\n```rust\nuse std::path::PathBuf;\nuse std::process::exit;\n\nuse clap::{value_parser, Arg, Command};\n\nfn applet_commands() -> [Command<'static>; 2] {\n    [\n        Command::new(\"true\").about(\"does nothing successfully\"),\n        Command::new(\"false\").about(\"does nothing unsuccessfully\"),\n    ]\n}\n\nfn main() {\n    let cmd = Command::new(env!(\"CARGO_CRATE_NAME\"))\n        .multicall(true)\n        .subcommand(\n            Command::new(\"busybox\")\n                .arg_required_else_help(true)\n                .subcommand_value_name(\"APPLET\")\n                .subcommand_help_heading(\"APPLETS\")\n                .arg(\n                    Arg::new(\"install\")\n                        .long(\"install\")\n                        .help(\"Install hardlinks for all subcommands in path\")\n                        .exclusive(true)\n                        .takes_value(true)\n                        .default_missing_value(\"/usr/local/bin\")\n                        .value_parser(value_parser!(PathBuf))\n                        .use_value_delimiter(false),\n                )\n                .subcommands(applet_commands()),\n        )\n        .subcommands(applet_commands());\n\n    let matches = cmd.get_matches();\n    let mut subcommand = matches.subcommand();\n    if let Some((\"busybox\", cmd)) = subcommand {\n        if cmd.contains_id(\"install\") {\n            unimplemented!(\"Make hardlinks to the executable here\");\n        }\n        subcommand = cmd.subcommand();\n    }\n    match subcommand {\n        Some((\"false\", _)) => exit(1),\n        Some((\"true\", _)) => exit(0),\n        _ => unreachable!(\"parser should ensure only valid subcommand names are used\"),\n    }\n}\n```\n\nSee the documentation for [`Command::multicall`][crate::App::multicall] for rationale.\n\nThis example omits every command except true and false,\nwhich are the most trivial to implement,\n```console\n$ busybox true\n? 0\n\n$ busybox false\n? 1\n\n```\n*Note: without the links setup, we can't demonstrate the multicall behavior*\n\nBut includes the `--install` option as an example of why it can be useful\nfor the main program to take arguments that aren't applet subcommands.\n```console\n$ busybox --install\n? failed\n...\n\n```\n\nThough users must pass something:\n```console\n$ busybox\n? failed\nbusybox \n\nUSAGE:\n    busybox [OPTIONS] [APPLET]\n\nOPTIONS:\n    -h, --help                 Print help information\n        --install <install>    Install hardlinks for all subcommands in path\n\nAPPLETS:\n    false    does nothing unsuccessfully\n    help     Print this message or the help of the given subcommand(s)\n    true     does nothing successfully\n\n```","links":{"crate::App::multicall":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:972:5788":{"id":"0:972:5788","crate_id":0,"name":"next_help_heading","span":{"filename":"src/builder/command.rs","begin":[1885,4],"end":[1891,5]},"visibility":"public","docs":"Set the default section heading for future args.\n\nThis will be used for any arg that hasn't had [`Arg::help_heading`] called.\n\nThis is useful if the default `OPTIONS` or `ARGS` headings are\nnot specific enough for one's use case.\n\nFor subcommands, see [`Command::subcommand_help_heading`]\n\n[`App::arg`]: Command::arg()\n[`Arg::help_heading`]: crate::Arg::help_heading()","links":{"`Command::subcommand_help_heading`":"0:4456:1667","crate::Arg::help_heading()":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["heading",{"kind":"generic","inner":"O"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"O"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3157:8752":{"id":"0:3157:8752","crate_id":0,"name":"spec_vals","span":{"filename":"src/output/help.rs","begin":[582,4],"end":[691,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:976:2545":{"id":"0:976:2545","crate_id":0,"name":"replace","span":{"filename":"src/builder/command.rs","begin":[2013,4],"end":[2016,5]},"visibility":"public","docs":"Replaces an argument or subcommand used on the CLI at runtime with other arguments or subcommands.\n\n**Note:** This is gated behind [`unstable-replace`](https://github.com/clap-rs/clap/issues/2836)\n\nWhen this method is used, `name` is removed from the CLI, and `target`\nis inserted in its place. Parsing continues as if the user typed\n`target` instead of `name`.\n\nThis can be used to create \"shortcuts\" for subcommands, or if a\nparticular argument has the semantic meaning of several other specific\narguments and values.\n\n# Examples\n\nWe'll start with the \"subcommand short\" example. In this example, let's\nassume we have a program with a subcommand `module` which can be invoked\nvia `cmd module`. Now let's also assume `module` also has a subcommand\ncalled `install` which can be invoked `cmd module install`. If for some\nreason users needed to be able to reach `cmd module install` via the\nshort-hand `cmd install`, we'd have several options.\n\nWe *could* create another sibling subcommand to `module` called\n`install`, but then we would need to manage another subcommand and manually\ndispatch to `cmd module install` handling code. This is error prone and\ntedious.\n\nWe could instead use [`Command::replace`] so that, when the user types `cmd\ninstall`, `clap` will replace `install` with `module install` which will\nend up getting parsed as if the user typed the entire incantation.\n\n```rust\n# use clap::Command;\nlet m = Command::new(\"cmd\")\n    .subcommand(Command::new(\"module\")\n        .subcommand(Command::new(\"install\")))\n    .replace(\"install\", &[\"module\", \"install\"])\n    .get_matches_from(vec![\"cmd\", \"install\"]);\n\nassert!(m.subcommand_matches(\"module\").is_some());\nassert!(m.subcommand_matches(\"module\").unwrap().subcommand_matches(\"install\").is_some());\n```\n\nNow let's show an argument example!\n\nLet's assume we have an application with two flags `--save-context` and\n`--save-runtime`. But often users end up needing to do *both* at the\nsame time. We can add a third flag `--save-all` which semantically means\nthe same thing as `cmd --save-context --save-runtime`. To implement that,\nwe have several options.\n\nWe could create this third argument and manually check if that argument\nand in our own consumer code handle the fact that both `--save-context`\nand `--save-runtime` *should* have been used. But again this is error\nprone and tedious. If we had code relying on checking `--save-context`\nand we forgot to update that code to *also* check `--save-all` it'd mean\nan error!\n\nLuckily we can use [`Command::replace`] so that when the user types\n`--save-all`, `clap` will replace that argument with `--save-context\n--save-runtime`, and parsing will continue like normal. Now all our code\nthat was originally checking for things like `--save-context` doesn't\nneed to change!\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"cmd\")\n    .arg(Arg::new(\"save-context\")\n        .long(\"save-context\")\n        .action(ArgAction::SetTrue))\n    .arg(Arg::new(\"save-runtime\")\n        .long(\"save-runtime\")\n        .action(ArgAction::SetTrue))\n    .replace(\"--save-all\", &[\"--save-context\", \"--save-runtime\"])\n    .get_matches_from(vec![\"cmd\", \"--save-all\"]);\n\nassert!(*m.get_one::<bool>(\"save-context\").expect(\"defaulted by clap\"));\nassert!(*m.get_one::<bool>(\"save-runtime\").expect(\"defaulted by clap\"));\n```\n\nThis can also be used with options, for example if our application with\n`--save-*` above also had a `--format=TYPE` option. Let's say it\naccepted `txt` or `json` values. However, when `--save-all` is used,\nonly `--format=json` is allowed, or valid. We could change the example\nabove to enforce this:\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"cmd\")\n    .arg(Arg::new(\"save-context\")\n        .long(\"save-context\")\n        .action(ArgAction::SetTrue))\n    .arg(Arg::new(\"save-runtime\")\n        .long(\"save-runtime\")\n        .action(ArgAction::SetTrue))\n    .arg(Arg::new(\"format\")\n        .long(\"format\")\n        .takes_value(true)\n        .value_parser([\"txt\", \"json\"]))\n    .replace(\"--save-all\", &[\"--save-context\", \"--save-runtime\", \"--format=json\"])\n    .get_matches_from(vec![\"cmd\", \"--save-all\"]);\n\nassert!(*m.get_one::<bool>(\"save-context\").expect(\"defaulted by clap\"));\nassert!(*m.get_one::<bool>(\"save-runtime\").expect(\"defaulted by clap\"));\nassert_eq!(m.value_of(\"format\"), Some(\"json\"));\n```\n\n[`App::replace`]: Command::replace()","links":{"`Command::replace`":"0:4456:1667"},"attrs":["#[inline]","#[cfg(feature = \"unstable-replace\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"slice","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31966:74212":{"id":"2:31966:74212","crate_id":2,"name":"ilog10","span":null,"visibility":"public","docs":"Returns the base 10 logarithm of the number, rounded down.\n\n# Panics\n\nWhen the number is zero it panics in debug mode and the\nreturn value is 0 in release mode.\n\n# Example\n\n```\n#![feature(int_log)]\nassert_eq!(10u64.ilog10(), 1);\n```","links":{},"attrs":["#[unstable(feature = \"int_log\", issue = \"70887\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[track_caller]","#[allow(arithmetic_overflow)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:634:4847":{"id":"0:634:4847","crate_id":0,"name":"multiple_str","span":{"filename":"src/builder/arg.rs","begin":[5020,4],"end":[5027,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:7908-0:4556:6725":{"id":"a:2:9339:7908-0:4556:6725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:7908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageToken","id":"0:4556:6725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:5245:2692":{"id":"a:2:3269:211-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:3503:1652":{"id":"a:2:3281:220-0:3503:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgAction","id":"0:3503:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3804:181":{"id":"0:3804:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:3281:220-0:5038:1676":{"id":"a:2:3281:220-0:5038:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:4953:1658":{"id":"b:5:787-0:4953:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:5110:8389":{"id":"a:2:3281:220-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1419:3893":{"id":"0:1419:3893","crate_id":0,"name":"possible_values","span":{"filename":"src/builder/value_parser.rs","begin":[245,4],"end":[249,5]},"visibility":"public","docs":"Reflect on enumerated value properties\n\nError checking should not be done with this; it is mostly targeted at user-facing\napplications like errors and completion.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"crate::PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4815:1542":{"id":"0:4815:1542","crate_id":0,"name":"0","span":{"filename":"src/error/context.rs","begin":[50,11],"end":[50,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"1:6863:12278":{"id":"1:6863:12278","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:31089"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,0],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Error","name":"Error","id":"0:4886:127","glob":false}},"0:2546:7867":{"id":"0:2546:7867","crate_id":0,"name":"new_group","span":{"filename":"src/parser/matches/matched_arg.rs","begin":[40,4],"end":[51,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2843:8586":{"id":"0:2843:8586","crate_id":0,"name":"validate_exclusive","span":{"filename":"src/parser/validator.rs","begin":[189,4],"end":[225,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3024:5301":{"id":"0:3024:5301","crate_id":0,"name":"reserve","span":{"filename":"src/mkeymap.rs","begin":[95,4],"end":[97,5]},"visibility":"crate","docs":"Reserves capacity for at least additional more elements to be inserted","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3486":{"id":"0:3486","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[58,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3487:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4935:7901":{"id":"0:4935:7901","crate_id":0,"name":"actual","span":{"filename":"src/parser/error.rs","begin":[12,8],"end":[12,33]},"visibility":"default","docs":"Type for value stored in [`ArgMatches`][crate::ArgMatches]","links":{"crate::ArgMatches":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"super::AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3208-0:2823:3377":{"id":"b:2:3208-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3583:3140":{"id":"0:3583:3140","crate_id":0,"name":"DeriveDisplayOrder","span":{"filename":"src/builder/app_settings.rs","begin":[278,4],"end":[278,22]},"visibility":"default","docs":"Displays the arguments and [`subcommands`] in the help message in the order that they were\ndeclared in, and not alphabetically which is the default.\n\nTo override the declaration order, see [`Arg::display_order`] and [`Command::display_order`].\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, AppSettings};\nCommand::new(\"myprog\")\n    .global_setting(AppSettings::DeriveDisplayOrder)\n    .get_matches();\n```\n\n[`subcommands`]: crate::Command::subcommand()\n[`Arg::display_order`]: crate::Arg::display_order\n[`Command::display_order`]: crate::Command::display_order","links":{"crate::Arg::display_order":"0:3972:1654","crate::Command::display_order":"0:4456:1667","crate::Command::subcommand()":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1763:1416":{"id":"0:1763:1416","crate_id":0,"name":"try_from","span":{"filename":"src/builder/regex.rs","begin":[53,4],"end":[55,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["r",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3182:227","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3549:3072":{"id":"0:3549:3072","crate_id":0,"name":"AllowNegativeNumbers","span":{"filename":"src/builder/app_settings.rs","begin":[102,4],"end":[102,24]},"visibility":"default","docs":"Deprecated, replaced with [`Command::allow_negative_numbers`] and\n[`Command::is_allow_negative_numbers_set`]","links":{"`Command::is_allow_negative_numbers_set`":"0:4456:1667","`Command::allow_negative_numbers`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::allow_negative_numbers` and `Command::is_allow_negative_numbers_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::allow_negative_numbers` and `Command::is_allow_negative_numbers_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3269:211-0:5305:3334":{"id":"a:2:3269:211-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1653:1664":{"id":"0:1653:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1837,4],"end":[1837,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:31967:74213":{"id":"2:31967:74213","crate_id":2,"name":"checked_ilog","span":null,"visibility":"public","docs":"Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.\n\nReturns `None` if the number is zero, or if the base is not at least 2.\n\nThis method might not be optimized owing to implementation details;\n`checked_ilog2` can produce results more efficiently for base 2, and\n`checked_ilog10` can produce results more efficiently for base 10.\n\n# Examples\n\n```\n#![feature(int_log)]\nassert_eq!(5u64.checked_ilog(5), Some(1));\n```","links":{},"attrs":["#[unstable(feature = \"int_log\", issue = \"70887\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["base",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:855":{"id":"0:855","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[117,0],"end":[893,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":"# Basic API","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:857:920","0:861:2580","0:863:298","0:866:5312","0:870:5322","0:875:2658","0:877:3361","0:880:2659","0:882:5263","0:885:2585","0:886:1656","0:888:2749","0:889:5407","0:891:2757","0:892:2764","0:896:2767","0:899:5408","0:903:5457","0:904:5470","0:905:5463","0:907:5483","0:909:5494","0:910:5499","0:911:5502"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:214:2510":{"id":"0:214:2510","crate_id":0,"name":"from_str","span":{"filename":"src/derive.rs","begin":[484,4],"end":[494,5]},"visibility":"default","docs":"Parse an argument into `Self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["ignore_case",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3337:9207":{"id":"2:3337:9207","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13592:31623":{"id":"2:13592:31623","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,30],"end":[100,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::ArgGroup","name":"ArgGroup","id":"0:4105:1655","glob":false}},"0:544:4666":{"id":"0:544:4666","crate_id":0,"name":"get_name","span":{"filename":"src/builder/arg.rs","begin":[4266,4],"end":[4268,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::get_id`]","links":{"`Arg::get_id`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note = \"Replaced with `Arg::get_id`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::get_id`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1110:6409":{"id":"0:1110:6409","crate_id":0,"name":"is_subcommand_required_set","span":{"filename":"src/builder/command.rs","begin":[3728,4],"end":[3730,5]},"visibility":"public","docs":"Report whether [`Command::subcommand_required`] is set","links":{"`Command::subcommand_required`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3987:3364":{"id":"0:3987:3364","crate_id":0,"name":"r_ifs_all","span":{"filename":"src/builder/arg.rs","begin":[75,4],"end":[75,47]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}}},"2:31943:74195":{"id":"2:31943:74195","crate_id":2,"name":"leading_ones","span":null,"visibility":"public","docs":"Returns the number of leading ones in the binary representation of `self`.\n\n# Examples\n\nBasic usage:\n\n```\nlet n = !(u64::MAX >> 2);\n\nassert_eq!(n.leading_ones(), 2);\n```","links":{},"attrs":["#[stable(feature = \"leading_trailing_ones\", since = \"1.46.0\")]","#[rustc_const_stable(feature = \"leading_trailing_ones\", since = \"1.46.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1429:681":{"id":"0:1429:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[354,4],"end":[357,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"resolved_path","inner":{"name":"std::ops::RangeInclusive","id":"2:46025:197","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4231:2672":{"id":"b:2:3213-0:4231:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:5291:9008":{"id":"a:2:9340:7907-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1101:6393":{"id":"0:1101:6393","crate_id":0,"name":"is_dont_collapse_args_in_usage_set","span":{"filename":"src/builder/command.rs","begin":[3683,4],"end":[3685,5]},"visibility":"public","docs":"Report whether [`Command::dont_collapse_args_in_usage`] is set","links":{"`Command::dont_collapse_args_in_usage`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:4456:1667":{"id":"b:2:4002-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:3096:3014":{"id":"a:2:9340:7907-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:486:3385":{"id":"0:486:3385","crate_id":0,"name":"help_heading","span":{"filename":"src/builder/arg.rs","begin":[2675,4],"end":[2681,5]},"visibility":"public","docs":"Override the [current] help section.\n\n[current]: crate::Command::help_heading","links":{"crate::Command::help_heading":"0:4456:1667"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["heading",{"kind":"generic","inner":"O"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"O"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4300:5180":{"id":"0:4300:5180","crate_id":0,"name":"REQUIRE_EQUALS","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:853:1653":{"id":"0:853:1653","crate_id":0,"name":"Command","span":{"filename":"src/builder/command.rs","begin":[70,0],"end":[70,37]},"visibility":"public","docs":"Build a command-line interface.\n\nThis includes defining arguments, subcommands, parser behavior, and help output.\nOnce all configuration is complete,\nthe [`Command::get_matches`] family of methods starts the runtime-parsing\nprocess. These methods then return information about the user supplied\narguments (or lack thereof).\n\nWhen deriving a [`Parser`][crate::Parser], you can use\n[`CommandFactory::command`][crate::CommandFactory::command] to access the\n`Command`.\n\n- [Basic API][crate::App#basic-api]\n- [Application-wide Settings][crate::App#application-wide-settings]\n- [Command-specific Settings][crate::App#command-specific-settings]\n- [Subcommand-specific Settings][crate::App#subcommand-specific-settings]\n- [Reflection][crate::App#reflection]\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nlet m = Command::new(\"My Program\")\n    .author(\"Me, me@mail.com\")\n    .version(\"1.0.2\")\n    .about(\"Explains in brief what the program does\")\n    .arg(\n        Arg::new(\"in_file\")\n    )\n    .after_help(\"Longer explanation to appear after the options when \\\n                 displaying the help information from --help or -h\")\n    .get_matches();\n\n// Your program logic starts here...\n```\n[`App::get_matches`]: Command::get_matches()","links":{"`Command::get_matches`":"0:4456:1667","crate::App#reflection":"0:4456:1667","crate::App#basic-api":"0:4456:1667","crate::App#command-specific-settings":"0:4456:1667","crate::Parser":"0:164:1664","crate::CommandFactory::command":"0:190:1662","crate::App#application-wide-settings":"0:4456:1667","crate::App#subcommand-specific-settings":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}},"0:3401:8995":{"id":"0:3401:8995","crate_id":0,"name":"graph","span":{"filename":"src/util/graph.rs","begin":[1,0],"end":[49,1]},"visibility":{"restricted":{"parent":"0:3374:1659","path":"::util"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5291:9008","0:5298:5217"],"is_stripped":false}},"0:2198:920":{"id":"0:2198:920","crate_id":0,"name":"new","span":{"filename":"src/parser/matches/any_value.rs","begin":[10,4],"end":[14,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["inner",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::any::Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2185:1656":{"id":"0:2185:1656","crate_id":0,"name":"error","span":{"filename":"src/parser/error.rs","begin":[1,0],"end":[67,1]},"visibility":{"restricted":{"parent":"0:2094:1657","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4933:7836"],"is_stripped":false}},"0:5166":{"id":"0:5166","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1724,22],"end":[1724,27]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5167:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:5031:8079":{"id":"a:2:3310:6658-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:3096:3014":{"id":"b:2:2869-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1027:6296":{"id":"0:1027:6296","crate_id":0,"name":"get_long_flag","span":{"filename":"src/builder/command.rs","begin":[3318,4],"end":[3320,5]},"visibility":"public","docs":"Get the long flag of the subcommand.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4348:181":{"id":"0:4348:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1111:6411":{"id":"0:1111:6411","crate_id":0,"name":"is_allow_external_subcommands_set","span":{"filename":"src/builder/command.rs","begin":[3733,4],"end":[3735,5]},"visibility":"public","docs":"Report whether [`Command::allow_external_subcommands`] is set","links":{"`Command::allow_external_subcommands`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5136":{"id":"0:5136","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1688,16],"end":[1688,25]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5137:604","0:5138:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4746:1542":{"id":"0:4746:1542","crate_id":0,"name":"0","span":{"filename":"src/builder/debug_asserts.rs","begin":[353,12],"end":[353,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2869-0:4807:7450":{"id":"b:2:2869-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:257:2924":{"id":"0:257:2924","crate_id":0,"name":"yaml_tuple2","span":{"filename":"src/builder/macros.rs","begin":[2,0],"end":[18,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"yaml\")]"],"deprecation":null,"kind":"macro","inner":"macro_rules! yaml_tuple2 {\n    ($a:ident, $v:ident, $c:ident) => { ... };\n}"},"2:9340:7907":{"id":"2:9340:7907","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:714":{"id":"0:714","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_group.rs","begin":[463,0],"end":[475,1]},"visibility":{"restricted":{"parent":"0:679:2895","path":"::builder::arg_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:716:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:3211:5214":{"id":"b:2:2869-0:3211:5214","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4825:660":{"id":"0:4825:660","crate_id":0,"name":"fmt","span":{"filename":"src/error/context.rs","begin":[42,16],"end":[42,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4647:2916":{"id":"a:2:3281:220-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4140":{"id":"0:4140","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_predicate.rs","begin":[1,15],"end":[1,20]},"visibility":{"restricted":{"parent":"0:722:2896","path":"::builder::arg_predicate"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgPredicate","id":"0:4131:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:4142:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3645":{"id":"0:3645","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[32,33],"end":[32,38]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AppSettings","id":"0:3542:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3646:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3018:604":{"id":"0:3018:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[75,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"char"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3516:107":{"id":"0:3516:107","crate_id":0,"name":"Count","span":{"filename":"src/builder/action.rs","begin":[198,4],"end":[198,9]},"visibility":"default","docs":"When encountered, increment a `u8` counter\n\nIf no [`default_value`][super::Arg::default_value] is set, it will be `0`.\n\nNo value is allowed. To optionally accept a value, see\n[`Arg::default_missing_value`][super::Arg::default_missing_value]\n\n# Examples\n\n```rust\n# use clap::Command;\n# use clap::Arg;\nlet cmd = Command::new(\"mycmd\")\n    .arg(\n        Arg::new(\"flag\")\n            .long(\"flag\")\n            .action(clap::ArgAction::Count)\n    );\n\nlet matches = cmd.clone().try_get_matches_from([\"mycmd\", \"--flag\", \"--flag\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_one::<u8>(\"flag\").copied(),\n    Some(2)\n);\n\nlet matches = cmd.try_get_matches_from([\"mycmd\"]).unwrap();\nassert!(matches.contains_id(\"flag\"));\nassert_eq!(matches.occurrences_of(\"flag\"), 0);\nassert_eq!(\n    matches.get_one::<u8>(\"flag\").copied(),\n    Some(0)\n);\n```","links":{"super::Arg::default_missing_value":"0:3972:1654","super::Arg::default_value":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3202-0:4807:7450":{"id":"b:2:3202-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:5269:8971":{"id":"b:5:787-0:5269:8971","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:5269:8971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:3096:3014":{"id":"b:2:3202-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2407:2763":{"id":"0:2407:2763","crate_id":0,"name":"Item","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1407,4],"end":[1407,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"0:2365:7974":{"id":"0:2365:7974","crate_id":0,"name":"try_get_one","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1077,4],"end":[1093,5]},"visibility":"public","docs":"Non-panicking version of [`ArgMatches::get_one`]","links":{"`ArgMatches::get_one`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:461:3979":{"id":"0:461:3979","crate_id":0,"name":"use_delimiter","span":{"filename":"src/builder/arg.rs","begin":[1890,4],"end":[1892,5]},"visibility":"public","docs":"Deprecated, replaced with [`Arg::use_value_delimiter`]","links":{"`Arg::use_value_delimiter`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::use_value_delimiter`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::use_value_delimiter`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5103":{"id":"0:5103","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1680,16],"end":[1680,25]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5134:660":{"id":"0:5134:660","crate_id":0,"name":"fmt","span":{"filename":"src/parser/parser.rs","begin":[1688,9],"end":[1688,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2723:8422":{"id":"0:2723:8422","crate_id":0,"name":"is_new_arg","span":{"filename":"src/parser/parser.rs","begin":[632,4],"end":[662,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#![allow(clippy :: needless_bool)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["next",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"clap_lex::ParsedArg","id":"29:107:8439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["current_positional",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:5305:3334":{"id":"b:31:25-0:5305:3334","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"2:3310:6658":{"id":"2:3310:6658","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5073:8344":{"id":"0:5073:8344","crate_id":0,"name":"EnvVariable","span":{"filename":"src/parser/matches/value_source.rs","begin":[8,4],"end":[8,15]},"visibility":"default","docs":"Value came [`Arg::env`][crate::Arg::env]","links":{"crate::Arg::env":"0:3972:1654"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3213-0:4910:7462":{"id":"b:2:3213-0:4910:7462","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Message","id":"0:4910:7462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5305:3334":{"id":"0:5305:3334","crate_id":0,"name":"Id","span":{"filename":"src/util/id.rs","begin":[11,0],"end":[15,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:5306:899","0:5307:2589"],"impls":["0:5315","0:3443","a:2:3310:6658-0:5305:3334","a:2:3269:211-0:5305:3334","a:2:9340:7907-0:5305:3334","a:2:9339:7908-0:5305:3334","a:2:3281:220-0:5305:3334","b:2:3198-0:5305:3334","b:2:2872-0:5305:3334","b:2:2869-0:5305:3334","b:2:4002-0:5305:3334","b:2:3205-0:5305:3334","b:2:3202-0:5305:3334","b:2:3213-0:5305:3334","b:2:3208-0:5305:3334","b:5:787-0:5305:3334","b:31:25-0:5305:3334","0:1293","0:5308","0:5310","0:5311","0:5313","0:3446","0:3448","0:3451","0:3454","0:3457"]}},"0:4279":{"id":"0:4279","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10383:9311","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4280:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:974:5798":{"id":"0:974:5798","crate_id":0,"name":"next_display_order","span":{"filename":"src/builder/command.rs","begin":[1898,4],"end":[1901,5]},"visibility":"public","docs":"Change the starting value for assigning future display orders for ags.\n\nThis will be used for any arg that hasn't had [`Arg::display_order`] called.","links":{"`Arg::display_order`":"0:3972:1654"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["disp_ord",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<Option<usize>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2378:8042":{"id":"0:2378:8042","crate_id":0,"name":"try_contains_id","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1168,4],"end":[1175,5]},"visibility":"public","docs":"Non-panicking version of [`ArgMatches::contains_id`]","links":{"`ArgMatches::contains_id`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"bool"}},{"type":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4113:2661":{"id":"0:4113:2661","crate_id":0,"name":"multiple","span":{"filename":"src/builder/arg_group.rs","begin":[88,4],"end":[88,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:3715":{"id":"0:3715","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10383:9311","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3716:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4807:7450":{"id":"a:2:3269:211-0:4807:7450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:5245:2692":{"id":"b:2:3213-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13506:6738":{"id":"2:13506:6738","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12605:9260"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1008:6155":{"id":"0:1008:6155","crate_id":0,"name":"subcommand_precedence_over_arg","span":{"filename":"src/builder/command.rs","begin":[2938,4],"end":[2944,5]},"visibility":"public","docs":"Prevent subcommands from being consumed as an arguments value.\n\nBy default, if an option taking multiple values is followed by a subcommand, the\nsubcommand will be parsed as another value.\n\n```text\ncmd --foo val1 val2 subcommand\n          --------- ----------\n            values   another value\n```\n\nThis setting instructs the parser to stop when encountering a subcommand instead of\ngreedily consuming arguments.\n\n```text\ncmd --foo val1 val2 subcommand\n          --------- ----------\n            values   subcommand\n```\n\n**Note:** Make sure you apply it as `global_setting` if you want this setting\nto be propagated to subcommands and sub-subcommands!\n\n# Examples\n\n```rust\n# use clap::{Command, Arg};\nlet cmd = Command::new(\"cmd\").subcommand(Command::new(\"sub\")).arg(\n    Arg::new(\"arg\")\n        .long(\"arg\")\n        .multiple_values(true)\n        .takes_value(true),\n);\n\nlet matches = cmd\n    .clone()\n    .try_get_matches_from(&[\"cmd\", \"--arg\", \"1\", \"2\", \"3\", \"sub\"])\n    .unwrap();\nassert_eq!(\n    matches.values_of(\"arg\").unwrap().collect::<Vec<_>>(),\n    &[\"1\", \"2\", \"3\", \"sub\"]\n);\nassert!(matches.subcommand_matches(\"sub\").is_none());\n\nlet matches = cmd\n    .subcommand_precedence_over_arg(true)\n    .try_get_matches_from(&[\"cmd\", \"--arg\", \"1\", \"2\", \"3\", \"sub\"])\n    .unwrap();\nassert_eq!(\n    matches.values_of(\"arg\").unwrap().collect::<Vec<_>>(),\n    &[\"1\", \"2\", \"3\"]\n);\nassert!(matches.subcommand_matches(\"sub\").is_some());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1471:7050":{"id":"0:1471:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[647,4],"end":[647,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:3555:3082":{"id":"0:3555:3082","crate_id":0,"name":"TrailingVarArg","span":{"filename":"src/builder/app_settings.rs","begin":[130,4],"end":[130,18]},"visibility":"default","docs":"Deprecated, replaced with [`Command::trailing_var_arg`] and [`Command::is_trailing_var_arg_set`]","links":{"`Command::trailing_var_arg`":"0:4456:1667","`Command::is_trailing_var_arg_set`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::trailing_var_arg` and `Command::is_trailing_var_arg_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::trailing_var_arg` and `Command::is_trailing_var_arg_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"2:13624:31631":{"id":"2:13624:31631","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16004:9059"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49875:9270","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1259:6618":{"id":"0:1259:6618","crate_id":0,"name":"id_exists","span":{"filename":"src/builder/command.rs","begin":[4915,4],"end":[4917,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(debug_assertions)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1352":{"id":"0:1352","crate_id":0,"name":null,"span":{"filename":"src/builder/usage_parser.rs","begin":[29,0],"end":[216,1]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1354:920","0:1355:4806","0:1356:2747","0:1357:899","0:1358:6736","0:1361:6739","0:1362:2581","0:1363:2590","0:1364:2661","0:1365:2603","0:1366:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4965":{"id":"0:4965","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[67,32],"end":[67,41]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatches","id":"0:4953:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:144:2667":{"id":"0:144:2667","crate_id":0,"name":"impl_settings","span":{"filename":"src/macros.rs","begin":[938,0],"end":[1032,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"macro","inner":"macro_rules! impl_settings {\n    ($settings:ident, $flags:ident,\n        $(\n            $(#[$inner:ident $($args:tt)*])*\n            $setting:ident => $flag:path\n        ),+\n    ) => { ... };\n}"},"0:1825:7424":{"id":"0:1825:7424","crate_id":0,"name":"assert_arg_flags","span":{"filename":"src/builder/debug_asserts.rs","begin":[720,0],"end":[753,1]},"visibility":{"restricted":{"parent":"0:1769:2902","path":"::builder::debug_asserts"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5186":{"id":"0:5186","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[9,9],"end":[9,18]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5187:604","0:5188:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:4987:8033":{"id":"a:2:3269:211-0:4987:8033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Values2","id":"0:4987:8033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4997:7835":{"id":"0:4997:7835","crate_id":0,"name":"ValuesRef","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1400,0],"end":[1404,1]},"visibility":"public","docs":"Iterate over multiple values for an argument via [`ArgMatches::get_many`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet m = Command::new(\"myapp\")\n    .arg(Arg::new(\"output\")\n        .short('o')\n        .action(ArgAction::Append)\n        .takes_value(true))\n    .get_matches_from(vec![\"myapp\", \"-o\", \"val1\", \"-o\", \"val2\"]);\n\nlet mut values = m.get_many::<String>(\"output\")\n    .unwrap()\n    .map(|s| s.as_str());\n\nassert_eq!(values.next(), Some(\"val1\"));\nassert_eq!(values.next(), Some(\"val2\"));\nassert_eq!(values.next(), None);\n```","links":{"`ArgMatches::get_many`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5000:779","0:5001:793"],"impls":["a:2:3310:6658-0:4997:7835","a:2:3269:211-0:4997:7835","a:2:9340:7907-0:4997:7835","a:2:9339:7908-0:4997:7835","a:2:3281:220-0:4997:7835","b:2:8483-0:4997:7835","b:2:3198-0:4997:7835","b:2:2872-0:4997:7835","b:2:2869-0:4997:7835","b:2:4002-0:4997:7835","b:2:3202-0:4997:7835","b:2:3213-0:4997:7835","b:2:3208-0:4997:7835","b:5:787-0:4997:7835","0:5002","0:5006","0:2404","0:2410","0:2414","0:2417"]}},"2:32011:74247":{"id":"2:32011:74247","crate_id":2,"name":"rem_euclid","span":null,"visibility":"public","docs":"Calculates the least remainder of `self (mod rhs)`.\n\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to `self % rhs`.\n\n# Panics\n\nThis function will panic if `rhs` is 0.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(7u64.rem_euclid(4), 3); // or any other integer type\n```","links":{},"attrs":["#[stable(feature = \"euclidean_division\", since = \"1.38.0\")]","#[rustc_const_stable(feature = \"const_euclidean_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4642":{"id":"0:4642","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[764,9],"end":[764,13]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:4588:1673":{"id":"a:2:3310:6658-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:5048:1675":{"id":"b:2:3198-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3603:3175":{"id":"0:3603:3175","crate_id":0,"name":"HelpExpected","span":{"filename":"src/builder/app_settings.rs","begin":[380,4],"end":[380,16]},"visibility":"default","docs":"Deprecated, replaced with [`Command::help_expected`]","links":{"`Command::help_expected`":"0:4456:1667"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Command::help_expected`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Command::help_expected`"},"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:4676:2906":{"id":"b:2:2872-0:4676:2906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22884:12675":{"id":"2:22884:12675","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22885:12678","2:22886:15935","2:22887:1227","2:22888:1228","2:22889:24100","2:22890:24121","2:22891:24122","2:22892:24123","2:22893:24124","2:22894:24111","2:22895:24116","2:22896:24117","2:22897:24118","2:22898:24119","2:22899:24125","2:22900:24126","2:22901:24127"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:989:5995":{"id":"0:989:5995","crate_id":0,"name":"long_flag_alias","span":{"filename":"src/builder/command.rs","begin":[2398,4],"end":[2401,5]},"visibility":"public","docs":"Add an alias, which functions as a \"hidden\" long flag subcommand.\n\nThis will automatically dispatch as if this subcommand was used. This is more efficient,\nand easier than creating multiple hidden subcommands as one only needs to check for the\nexistence of this command, and not all variants.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg, };\nlet m = Command::new(\"myprog\")\n            .subcommand(Command::new(\"test\").long_flag(\"test\")\n                .long_flag_alias(\"testing\"))\n            .get_matches_from(vec![\"myprog\", \"--testing\"]);\nassert_eq!(m.subcommand_name(), Some(\"test\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13501:31598":{"id":"2:13501:31598","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:3972:1654":{"id":"b:2:3208-0:3972:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:3096:3014":{"id":"b:2:2872-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4096:604":{"id":"0:4096:604","crate_id":0,"name":"eq","span":{"filename":"src/builder/arg.rs","begin":[5273,29],"end":[5273,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:300:2580":{"id":"0:300:2580","crate_id":0,"name":"arg","span":{"filename":"src/builder/arg.rs","begin":[1,0],"end":[5494,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3972:1654","0:662:3377","0:664:3379","0:4063:3357","0:668:2922","0:4080:3370"],"is_stripped":false}},"0:4654":{"id":"0:4654","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[868,16],"end":[868,21]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::ValueEnum","id":"0:211:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:4656:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1109:4758":{"id":"0:1109:4758","crate_id":0,"name":"is_hide_set","span":{"filename":"src/builder/command.rs","begin":[3723,4],"end":[3725,5]},"visibility":"public","docs":"Report whether [`Command::hide`] is set","links":{"`Command::hide`":"0:4456:1667"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4080:3370":{"id":"a:2:3281:220-0:4080:3370","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4688:2914":{"id":"b:2:3213-0:4688:2914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BoolValueParser","id":"0:4688:2914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:5048:1675":{"id":"b:5:787-0:5048:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Indices","id":"0:5048:1675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3393:9003":{"id":"b:2:3213-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1654:2901":{"id":"0:1654:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1838,4],"end":[1840,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4456:1667":{"id":"b:2:3198-0:4456:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3167:6466":{"id":"0:3167:6466","crate_id":0,"name":"write_version","span":{"filename":"src/output/help.rs","begin":[724,4],"end":[733,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:4063:3357":{"id":"b:2:3202-0:4063:3357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgProvider","id":"0:4063:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2754:7868":{"id":"0:2754:7868","crate_id":0,"name":"start_occurrence_of_arg","span":{"filename":"src/parser/parser.rs","begin":[1588,4],"end":[1597,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":"Increase occurrence of specific argument and the grouped arg it's in.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4942:7020":{"id":"a:2:9340:7907-0:4942:7020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValue","id":"0:4942:7020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:32023:74258":{"id":"2:32023:74258","crate_id":2,"name":"to_le_bytes","span":null,"visibility":"public","docs":"Return the memory representation of this integer as a byte array in\nlittle-endian byte order.\n\n\n\n# Examples\n\n```\nlet bytes = 0x1234567890123456u64.to_le_bytes();\nassert_eq!(bytes, [0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]);\n```","links":{},"attrs":["#[stable(feature = \"int_to_from_bytes\", since = \"1.32.0\")]","#[rustc_const_stable(feature = \"const_int_conversion\", since = \"1.44.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5031:8079":{"id":"b:2:4002-0:5031:8079","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupedValues","id":"0:5031:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4350":{"id":"0:4350","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:3372:9217","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4351:1356"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11014:214":{"id":"2:11014:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11016:181","2:11017:4858","2:11018:7850","2:11019:29565","2:11020:29566","2:11021:753","2:11022:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11005:12284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:2872-0:5245:2692":{"id":"b:2:2872-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:9246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:29480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4131:2923":{"id":"0:4131:2923","crate_id":0,"name":"ArgPredicate","span":{"filename":"src/builder/arg_predicate.rs","begin":[2,0],"end":[5,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:4133:3605","0:4135:4530"],"impls":["a:2:3310:6658-0:4131:2923","a:2:3269:211-0:4131:2923","a:2:9340:7907-0:4131:2923","a:2:9339:7908-0:4131:2923","a:2:3281:220-0:4131:2923","b:2:3198-0:4131:2923","b:2:2872-0:4131:2923","b:2:2869-0:4131:2923","b:2:4002-0:4131:2923","b:2:3202-0:4131:2923","b:2:3213-0:4131:2923","b:2:3208-0:4131:2923","b:5:787-0:4131:2923","b:31:25-0:4131:2923","0:4138","0:4140","0:4143","0:4146","0:4148","0:4152","0:4154","0:723"]}},"2:8487:768":{"id":"2:8487:768","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10393:9317":{"id":"2:10393:9317","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10394:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:914:5516":{"id":"0:914:5516","crate_id":0,"name":"no_binary_name","span":{"filename":"src/builder/command.rs","begin":[919,4],"end":[925,5]},"visibility":"public","docs":"Specifies that the parser should not assume the first argument passed is the binary name.\n\nThis is normally the case when using a \"daemon\" style mode.  For shells / REPLs, see\n[`Command::multicall`][App::multicall].\n\n# Examples\n\n```rust\n# use clap::{Command, arg};\nlet m = Command::new(\"myprog\")\n    .no_binary_name(true)\n    .arg(arg!(<cmd> ... \"commands to run\"))\n    .get_matches_from(vec![\"command\", \"set\"]);\n\nlet cmds: Vec<&str> = m.values_of(\"cmd\").unwrap().collect();\nassert_eq!(cmds, [\"command\", \"set\"]);\n```\n[`try_get_matches_from_mut`]: crate::Command::try_get_matches_from_mut()","links":{"App::multicall":"0:4456:1667"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4898:7465":{"id":"0:4898:7465","crate_id":0,"name":"color_when","span":{"filename":"src/error/mod.rs","begin":[63,4],"end":[63,27]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4483:2668":{"id":"0:4483:2668","crate_id":0,"name":"settings","span":{"filename":"src/builder/command.rs","begin":[104,4],"end":[104,22]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AppFlags","id":"0:3527:1668","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3208-0:4694:2917":{"id":"b:2:3208-0:4694:2917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FalseyValueParser","id":"0:4694:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13553:31611":{"id":"2:13553:31611","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13134:9255","str::split":"1:16010:9064","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:9059"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49576:9278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:9250","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4987:8033":{"id":"0:4987:8033","crate_id":0,"name":"Values2","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1342,0],"end":[1346,1]},"visibility":"public","docs":"Iterate over multiple values for an argument via [`ArgMatches::remove_many`].\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ArgAction};\nlet mut m = Command::new(\"myapp\")\n    .arg(Arg::new(\"output\")\n        .short('o')\n        .action(ArgAction::Append)\n        .takes_value(true))\n    .get_matches_from(vec![\"myapp\", \"-o\", \"val1\", \"-o\", \"val2\"]);\n\nlet mut values = m.remove_many::<String>(\"output\")\n    .unwrap();\n\nassert_eq!(values.next(), Some(String::from(\"val1\")));\nassert_eq!(values.next(), Some(String::from(\"val2\")));\nassert_eq!(values.next(), None);\n```","links":{"`ArgMatches::remove_many`":"0:4953:1658"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:4989:779","0:4990:793"],"impls":["a:2:3310:6658-0:4987:8033","a:2:3269:211-0:4987:8033","a:2:9340:7907-0:4987:8033","a:2:9339:7908-0:4987:8033","a:2:3281:220-0:4987:8033","b:2:8483-0:4987:8033","b:2:3198-0:4987:8033","b:2:2872-0:4987:8033","b:2:2869-0:4987:8033","b:2:4002-0:4987:8033","b:2:3202-0:4987:8033","b:2:3213-0:4987:8033","b:2:3208-0:4987:8033","b:5:787-0:4987:8033","0:4991","0:4994","0:2390","0:2395","0:2398","0:2400"]}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/derive.rs","begin":[529,0],"end":[536,1]},"visibility":{"restricted":{"parent":"0:147:547","path":"::derive"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CommandFactory","id":"0:190:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["command","command_for_update"],"trait":{"name":"CommandFactory","id":"0:190:1662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2889","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:231:2797","0:233:2802"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:5292"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1650:1664":{"id":"0:1650:1664","crate_id":0,"name":"Parser","span":{"filename":"src/builder/value_parser.rs","begin":[1831,4],"end":[1831,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,86],"end":[113,95]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::builder::ValueHint","name":"ValueHint","id":"0:4588:1673","glob":false}},"0:3640:660":{"id":"0:3640:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/app_settings.rs","begin":[32,9],"end":[32,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2732:8406":{"id":"0:2732:8406","crate_id":0,"name":"parse_short_arg","span":{"filename":"src/parser/parser.rs","begin":[817,4],"end":[952,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["short_arg",{"kind":"resolved_path","inner":{"name":"clap_lex::ShortFlags","id":"29:138:8478","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}],["parse_state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["pos_counter",{"kind":"primitive","inner":"usize"}],["valid_arg_found",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"bool"}}}],["trailing_values",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3262:5503":{"id":"0:3262:5503","crate_id":0,"name":"create_usage_with_title","span":{"filename":"src/output/usage.rs","begin":[31,4],"end":[37,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["used",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4972:1709":{"id":"b:2:3213-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:964:2657":{"id":"0:964:2657","crate_id":0,"name":"setting","span":{"filename":"src/builder/command.rs","begin":[1777,4],"end":[1783,5]},"visibility":"public","docs":"Apply a setting for the current command or subcommand.\n\nSee [`Command::global_setting`] to apply a setting to this command and all subcommands.\n\nSee [`AppSettings`] for a full list of possibilities and examples.\n\n# Examples\n\n```no_run\n# use clap::{Command, AppSettings};\nCommand::new(\"myprog\")\n    .setting(AppSettings::SubcommandRequired)\n    .setting(AppSettings::AllowLeadingHyphen)\n# ;\n```\nor\n```no_run\n# use clap::{Command, AppSettings};\nCommand::new(\"myprog\")\n    .setting(AppSettings::SubcommandRequired | AppSettings::AllowLeadingHyphen)\n# ;\n```","links":{"`Command::global_setting`":"0:4456:1667","`AppSettings`":"0:3542:1669"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["setting",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AppFlags","id":"0:3527:1668","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4215:4347":{"id":"0:4215:4347","crate_id":0,"name":"HiddenShortHelp","span":{"filename":"src/builder/arg_settings.rs","begin":[240,4],"end":[240,19]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::hide_short_help`] and [`Arg::is_hide_short_help_set`]","links":{"`Arg::hide_short_help`":"0:3972:1654","`Arg::is_hide_short_help_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::hide_short_help` and `Arg::is_hide_short_help_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::hide_short_help` and `Arg::is_hide_short_help_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:1488":{"id":"0:1488","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[733,0],"end":[753,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1489:7050","0:1490:7090","0:1491:2747"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2212":{"id":"0:2212","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/any_value.rs","begin":[58,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2213:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1492":{"id":"0:1492","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[755,0],"end":[759,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsStringValueParser","id":"0:4635:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1493:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5252:408":{"id":"0:5252:408","crate_id":0,"name":"clone","span":{"filename":"src/output/fmt.rs","begin":[8,15],"end":[8,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5313":{"id":"0:5313","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[9,20],"end":[9,27]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5314:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:5141:7832":{"id":"a:2:3310:6658-0:5141:7832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PendingArg","id":"0:5141:7832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2087:681":{"id":"0:2087:681","crate_id":0,"name":"from","span":{"filename":"src/error/mod.rs","begin":[1102,4],"end":[1104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["inner",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:7907-0:4997:7835":{"id":"a:2:9340:7907-0:4997:7835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValuesRef","id":"0:4997:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:919:5559":{"id":"0:919:5559","crate_id":0,"name":"term_width","span":{"filename":"src/builder/command.rs","begin":[1052,4],"end":[1055,5]},"visibility":"public","docs":"Sets the terminal width at which to wrap help messages.\n\nUsing `0` will ignore terminal widths and use source formatting.\n\nDefaults to current terminal width when `wrap_help` feature flag is enabled.  If the flag\nis disabled or it cannot be determined, the default is 100.\n\n**NOTE:** This setting applies globally and *not* on a per-command basis.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .term_width(80)\n# ;\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["width",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2441:2763":{"id":"0:2441:2763","crate_id":0,"name":"Item","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1516,4],"end":[1516,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"0:1496":{"id":"0:1496","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[775,0],"end":[803,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["possible_values","parse"],"trait":{"name":"TypedValueParser","id":"0:1462:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PathBufValueParser","id":"0:4641:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1497:7050","0:1498:7090","0:1499:2747"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1497:7050":{"id":"0:1497:7050","crate_id":0,"name":"Value","span":{"filename":"src/builder/value_parser.rs","begin":[776,4],"end":[776,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"PathBuf","id":"1:7332:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:4102:997":{"id":"0:4102:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/builder/arg.rs","begin":[5273,44],"end":[5273,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37707:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1295:181":{"id":"0:1295:181","crate_id":0,"name":"Output","span":{"filename":"src/builder/command.rs","begin":[5135,4],"end":[5135,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}},"b:2:2869-0:3647:2672":{"id":"b:2:2869-0:3647:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:659:660":{"id":"0:659:660","crate_id":0,"name":"fmt","span":{"filename":"src/builder/arg.rs","begin":[5132,4],"end":[5184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"fmt::Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3164:8821":{"id":"0:3164:8821","crate_id":0,"name":"write_about","span":{"filename":"src/output/help.rs","begin":[693,4],"end":[709,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["before_new_line",{"kind":"primitive","inner":"bool"}],["after_new_line",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:1397:7028":{"id":"b:2:4002-0:1397:7028","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParserInner","id":"0:1397:7028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:3393:9003":{"id":"a:2:3281:220-0:3393:9003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FnvHasher","id":"0:3393:9003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4978":{"id":"0:4978","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1314,16],"end":[1314,21]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4979:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4177:3639":{"id":"0:4177:3639","crate_id":0,"name":"MultipleOccurrences","span":{"filename":"src/builder/arg_settings.rs","begin":[58,4],"end":[58,23]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::action`] ([Issue #3772](https://github.com/clap-rs/clap/issues/3772))","links":{"`Arg::action`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::action` (Issue #3772)\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::action` (Issue #3772)"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:3790:353":{"id":"0:3790:353","crate_id":0,"name":"bitor","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"default","docs":"Returns the union of the two sets of flags.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:4926:5216":{"id":"b:2:3198-0:4926:5216","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3106":{"id":"0:3106","crate_id":0,"name":null,"span":{"filename":"src/output/help.rs","begin":[30,0],"end":[122,1]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}},{"name":"'writer","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["0:3110:8707","0:3111:8710","0:3112:920","0:3114:5463"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:2823:3377":{"id":"b:2:3198-0:2823:3377","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Validator","id":"0:2823:3377","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:5110:8389":{"id":"b:2:3202-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:5010:7834":{"id":"b:2:3198-0:5010:7834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawValues","id":"0:5010:7834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4838:7530":{"id":"0:4838:7530","crate_id":0,"name":"InvalidSubcommand","span":{"filename":"src/error/kind.rs","begin":[57,4],"end":[57,21]},"visibility":"default","docs":"Occurs when the user provides an unrecognized [`Subcommand`] which meets the threshold for\nbeing similar enough to an existing subcommand.\nIf it doesn't meet the threshold, or the 'suggestions' feature is disabled,\nthe more general [`UnknownArgument`] error is returned.\n\n# Examples\n\n ```\n# use clap::{Command, Arg, ErrorKind, };\nlet result = Command::new(\"prog\")\n    .subcommand(Command::new(\"config\")\n        .about(\"Used for configuration\")\n        .arg(Arg::new(\"config_file\")\n            .help(\"The configuration file to use\")))\n    .try_get_matches_from(vec![\"prog\", \"confi\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::InvalidSubcommand);\n```\n\n[`Subcommand`]: crate::Subcommand\n[`UnknownArgument`]: ErrorKind::UnknownArgument","links":{"crate::Subcommand":"0:207:1665","ErrorKind::UnknownArgument":"0:4833:1674"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4557:6726":{"id":"0:4557:6726","crate_id":0,"name":"Name","span":{"filename":"src/builder/usage_parser.rs","begin":[10,4],"end":[10,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:5020:1678":{"id":"0:5020:1678","crate_id":0,"name":"Values","span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1508,0],"end":[1512,1]},"visibility":"public","docs":"Deprecated, replaced with [`ArgMatches::get_many()`]","links":{"`ArgMatches::get_many()`":"0:4953:1658"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"Replaced with `ArgMatches::get_many()`\")]"],"deprecation":{"since":"3.2.0","note":"Replaced with `ArgMatches::get_many()`"},"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:5022:779","0:5024:793"],"impls":["a:2:3310:6658-0:5020:1678","a:2:3269:211-0:5020:1678","a:2:9340:7907-0:5020:1678","a:2:9339:7908-0:5020:1678","a:2:3281:220-0:5020:1678","b:2:8483-0:5020:1678","b:2:3198-0:5020:1678","b:2:2872-0:5020:1678","b:2:2869-0:5020:1678","b:2:4002-0:5020:1678","b:2:3202-0:5020:1678","b:2:3213-0:5020:1678","b:2:3208-0:5020:1678","b:5:787-0:5020:1678","0:5025","0:5028","0:2439","0:2444","0:2447","0:2449"]}},"0:1750:681":{"id":"0:1750:681","crate_id":0,"name":"from","span":{"filename":"src/builder/regex.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["r",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"25:2978:7322","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10372:109":{"id":"2:10372:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10373:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:5196:5213":{"id":"b:5:787-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2981":{"id":"0:2981","crate_id":0,"name":null,"span":{"filename":"src/parser/mod.rs","begin":[27,34],"end":[27,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::matches::Values","name":"Values","id":"0:5020:1678","glob":false}},"a:2:3310:6658-0:4647:2916":{"id":"a:2:3310:6658-0:4647:2916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EnumValueParser","id":"0:4647:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:5058:7830":{"id":"b:2:3208-0:5058:7830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:911:5502":{"id":"0:911:5502","crate_id":0,"name":"render_usage","span":{"filename":"src/builder/command.rs","begin":[886,4],"end":[892,5]},"visibility":"public","docs":"Usage statement\n\n### Examples\n\n```rust\n# use clap::Command;\nuse std::io;\nlet mut cmd = Command::new(\"myprog\");\nprintln!(\"{}\", cmd.render_usage());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1270:6624":{"id":"0:1270:6624","crate_id":0,"name":"all_subcommand_names","span":{"filename":"src/builder/command.rs","begin":[4935,4],"end":[4941,5]},"visibility":"crate","docs":"Iterate through all the names of all subcommands (not recursively), including aliases.\nUsed for suggestions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Captures","id":"0:1225:6599","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:217:2882":{"id":"0:217:2882","crate_id":0,"name":"to_possible_value","span":{"filename":"src/derive.rs","begin":[499,4],"end":[499,65]},"visibility":"default","docs":"The canonical argument value.\n\nThe value is `None` for skipped variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:208:2858":{"id":"0:208:2858","crate_id":0,"name":"augment_subcommands","span":{"filename":"src/derive.rs","begin":[439,4],"end":[439,60]},"visibility":"default","docs":"Append to [`Command`] so it can instantiate `Self`.\n\nSee also [`CommandFactory`].","links":{"`CommandFactory`":"0:190:1662","`Command`":"0:853:1653"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3198-0:5110:8389":{"id":"b:2:3198-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1161:6482":{"id":"0:1161:6482","crate_id":0,"name":"get_help_template","span":{"filename":"src/builder/command.rs","begin":[4121,4],"end":[4123,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:677":{"id":"0:677","crate_id":0,"name":null,"span":{"filename":"src/builder/arg.rs","begin":[5304,0],"end":[5308,1]},"visibility":{"restricted":{"parent":"0:300:2580","path":"::builder::arg"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DisplayOrder","id":"0:4080:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:678:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4934:7899":{"id":"0:4934:7899","crate_id":0,"name":"Downcast","span":{"filename":"src/parser/error.rs","begin":[10,4],"end":[15,5]},"visibility":"default","docs":"Failed to downcast `AnyValue` to the specified type","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"struct","variant_inner":["0:4935:7901","0:4936:616"]}},"b:2:3208-0:4724:1700":{"id":"b:2:3208-0:4724:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexRef","id":"0:4724:1700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31964:74210":{"id":"2:31964:74210","crate_id":2,"name":"ilog","span":null,"visibility":"public","docs":"Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.\n\nThis method might not be optimized owing to implementation details;\n`log2` can produce results more efficiently for base 2, and `log10`\ncan produce results more efficiently for base 10.\n\n# Panics\n\nWhen the number is zero, or if the base is not at least 2;\nit panics in debug mode and the return value is 0 in release mode.\n\n# Examples\n\n```\n#![feature(int_log)]\nassert_eq!(5u64.ilog(5), 1);\n```","links":{},"attrs":["#[unstable(feature = \"int_log\", issue = \"70887\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[track_caller]","#[allow(arithmetic_overflow)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["base",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4000:3376":{"id":"0:4000:3376","crate_id":0,"name":"min_vals","span":{"filename":"src/builder/arg.rs","begin":[88,4],"end":[88,38]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:5185":{"id":"0:5185","crate_id":0,"name":null,"span":{"filename":"src/mkeymap.rs","begin":[9,9],"end":[9,18]},"visibility":{"restricted":{"parent":"0:2984:1701","path":"::mkeymap"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:4588:1673":{"id":"b:2:4002-0:4588:1673","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueHint","id":"0:4588:1673","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5251":{"id":"0:5251","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[8,15],"end":[8,20]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5252:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1592":{"id":"0:1592","crate_id":0,"name":null,"span":{"filename":"src/builder/value_parser.rs","begin":[1442,0],"end":[1446,1]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::convert::TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RangedU64ValueParser","id":"0:4676:2906","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1594:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1282:6644":{"id":"0:1282:6644","crate_id":0,"name":"find_long_subcmd","span":{"filename":"src/builder/command.rs","begin":[5028,4],"end":[5032,5]},"visibility":"crate","docs":"Find a flag subcommand name by long flag or an alias","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["long",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4125:907":{"id":"0:4125:907","crate_id":0,"name":"ne","span":{"filename":"src/builder/arg_group.rs","begin":[80,25],"end":[80,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgGroup","id":"0:4105:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2220:715":{"id":"0:2220:715","crate_id":0,"name":"hash","span":{"filename":"src/parser/matches/any_value.rs","begin":[79,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::hash::Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3100:8706":{"id":"0:3100:8706","crate_id":0,"name":"writer","span":{"filename":"src/output/help.rs","begin":[21,4],"end":[21,31]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"HelpWriter","id":"0:3211:5214","args":{"angle_bracketed":{"args":[{"lifetime":"'writer"}],"bindings":[]}}}}},"0:5328":{"id":"0:5328","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[2,16],"end":[2,20]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:570:4718":{"id":"0:570:4718","crate_id":0,"name":"get_env","span":{"filename":"src/builder/arg.rs","begin":[4483,4],"end":[4485,5]},"visibility":"public","docs":"Get the environment variable name specified for this argument, if any\n\n# Examples\n\n```rust\n# use std::ffi::OsStr;\n# use clap::Arg;\nlet arg = Arg::new(\"foo\").env(\"ENVIRONMENT\");\nassert_eq!(Some(OsStr::new(\"ENVIRONMENT\")), arg.get_env());\n```","links":{},"attrs":["#[cfg(feature = \"env\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2937:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1594:59":{"id":"0:1594:59","crate_id":0,"name":"default","span":{"filename":"src/builder/value_parser.rs","begin":[1443,4],"end":[1445,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2189":{"id":"0:2189","crate_id":0,"name":null,"span":{"filename":"src/parser/error.rs","begin":[23,0],"end":[37,1]},"visibility":{"restricted":{"parent":"0:2185:1656","path":"::parser::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2190:1484"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4107:2589":{"id":"0:4107:2589","crate_id":0,"name":"id","span":{"filename":"src/builder/arg_group.rs","begin":[82,4],"end":[82,21]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:4939:408":{"id":"0:4939:408","crate_id":0,"name":"clone","span":{"filename":"src/parser/error.rs","begin":[4,9],"end":[4,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"MatchesError","id":"0:4933:7836","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6107:3280":{"id":"5:6107:3280","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16010:9064"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5310":{"id":"0:5310","crate_id":0,"name":null,"span":{"filename":"src/util/id.rs","begin":[9,16],"end":[9,18]},"visibility":{"restricted":{"parent":"0:3417:2589","path":"::util::id"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:5291:9008":{"id":"b:2:3213-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:31959:1443":{"id":"2:31959:1443","crate_id":2,"name":"unchecked_mul","span":null,"visibility":"public","docs":"Unchecked integer multiplication. Computes `self * rhs`, assuming overflow\ncannot occur.\n\n# Safety\n\nThis results in undefined behavior when\n`self * rhs > u64::MAX` or `self * rhs < u64::MIN`,\ni.e. when [`checked_mul`] would return `None`.\n\n[`checked_mul`]: u64::checked_mul","links":{"u64::checked_mul":"1:16024:9076"},"attrs":["#[unstable(feature = \"unchecked_math\", reason = \"niche optimization path\",\nissue = \"85122\",)]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue =\n\"85122\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:4972:1709":{"id":"a:2:3281:220-0:4972:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCommand","id":"0:4972:1709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:5070:1677":{"id":"a:2:3281:220-0:5070:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4217:4353":{"id":"0:4217:4353","crate_id":0,"name":"HiddenLongHelp","span":{"filename":"src/builder/arg_settings.rs","begin":[249,4],"end":[249,18]},"visibility":"default","docs":"Deprecated, replaced with [`Arg::hide_long_help`] and [`Arg::is_hide_long_help_set`]","links":{"`Arg::hide_long_help`":"0:3972:1654","`Arg::is_hide_long_help_set`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.1.0\", note =\n\"Replaced with `Arg::hide_long_help` and `Arg::is_hide_long_help_set`\")]"],"deprecation":{"since":"3.1.0","note":"Replaced with `Arg::hide_long_help` and `Arg::is_hide_long_help_set`"},"kind":"variant","inner":{"variant_kind":"plain"}},"0:5159:6729":{"id":"0:5159:6729","crate_id":0,"name":"Long","span":{"filename":"src/parser/parser.rs","begin":[1727,4],"end":[1727,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2746:8433":{"id":"0:2746:8433","crate_id":0,"name":"add_env","span":{"filename":"src/parser/parser.rs","begin":[1346,4],"end":[1428,5]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"env\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1712:7283":{"id":"0:1712:7283","crate_id":0,"name":"_ValueParserViaFactorySealed","span":{"filename":"src/builder/value_parser.rs","begin":[2057,4],"end":[2057,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4862:7557":{"id":"0:4862:7557","crate_id":0,"name":"UnexpectedMultipleUsage","span":{"filename":"src/error/kind.rs","begin":[287,4],"end":[287,27]},"visibility":"default","docs":"Occurs when the user provides multiple values to an argument which doesn't allow that.\n\n# Examples\n\n```rust\n# use clap::{Command, Arg, ErrorKind};\nlet result = Command::new(\"prog\")\n    .arg(Arg::new(\"debug\")\n        .long(\"debug\")\n        .multiple_occurrences(false))\n    .try_get_matches_from(vec![\"prog\", \"--debug\", \"--debug\"]);\nassert!(result.is_err());\nassert_eq!(result.unwrap_err().kind(), ErrorKind::UnexpectedMultipleUsage);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:3096:3014":{"id":"b:2:3208-0:3096:3014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Help","id":"0:3096:3014","args":{"angle_bracketed":{"args":[{"lifetime":"'help"},{"lifetime":"'cmd"},{"lifetime":"'writer"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3030:2564":{"id":"0:3030:2564","crate_id":0,"name":"is_empty","span":{"filename":"src/mkeymap.rs","begin":[118,4],"end":[120,5]},"visibility":"crate","docs":"Find out if the map have no arg.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1427:681":{"id":"0:1427:681","crate_id":0,"name":"from","span":{"filename":"src/builder/value_parser.rs","begin":[324,4],"end":[327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"resolved_path","inner":{"name":"std::ops::Range","id":"2:45956:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:693:920":{"id":"0:693:920","crate_id":0,"name":"new","span":{"filename":"src/builder/arg_group.rs","begin":[111,4],"end":[113,5]},"visibility":"public","docs":"Create a `ArgGroup` using a unique name.\n\nThe name will be used to get values from the group or refer to the group inside of conflict\nand requirement rules.\n\n# Examples\n\n```rust\n# use clap::{Command, ArgGroup};\nArgGroup::new(\"config\")\n# ;\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:5305:3334":{"id":"b:2:3208-0:5305:3334","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:561:4696":{"id":"0:561:4696","crate_id":0,"name":"get_possible_values2","span":{"filename":"src/builder/arg.rs","begin":[4403,4],"end":[4417,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4112:4992":{"id":"0:4112:4992","crate_id":0,"name":"conflicts","span":{"filename":"src/builder/arg_group.rs","begin":[87,4],"end":[87,33]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:3659":{"id":"0:3659","crate_id":0,"name":null,"span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":{"restricted":{"parent":"0:279:2894","path":"::builder::app_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:3647:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3660:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3047:753":{"id":"0:3047:753","crate_id":0,"name":"index","span":{"filename":"src/mkeymap.rs","begin":[164,4],"end":[166,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3577:5211","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3344":{"id":"0:3344","crate_id":0,"name":null,"span":{"filename":"src/output/fmt.rs","begin":[60,0],"end":[122,1]},"visibility":{"restricted":{"parent":"0:3310:660","path":"::output::fmt"}},"docs":"Printing methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3345:2698"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3026:4858":{"id":"0:3026:4858","crate_id":0,"name":"get","span":{"filename":"src/mkeymap.rs","begin":[107,4],"end":[115,5]},"visibility":"crate","docs":"Find the arg have corresponding key in this map, we can search the key\nwith u64(for positional argument), char(for short flag), &str and\nOsString (for long flag)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"KeyType","id":"0:5220:7335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2077:7503":{"id":"0:2077:7503","crate_id":0,"name":"get_help_flag","span":{"filename":"src/error/mod.rs","begin":[1030,0],"end":[1038,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3269:211-0:4706:2918":{"id":"a:2:3269:211-0:4706:2918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NonEmptyStringValueParser","id":"0:4706:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1025:6292":{"id":"0:1025:6292","crate_id":0,"name":"get_author","span":{"filename":"src/builder/command.rs","begin":[3306,4],"end":[3308,5]},"visibility":"public","docs":"Get the authors of the cmd.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4461:5245":{"id":"0:4461:5245","crate_id":0,"name":"short_flag","span":{"filename":"src/builder/command.rs","begin":[82,4],"end":[82,28]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":{"since":"3.1.0","note":"Replaced with `Command`"},"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}},"2:32001:74238":{"id":"2:32001:74238","crate_id":2,"name":"overflowing_div","span":null,"visibility":"public","docs":"Calculates the divisor when `self` is divided by `rhs`.\n\nReturns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n`false`.\n\n# Panics\n\nThis function will panic if `rhs` is 0.\n\n# Examples\n\nBasic usage\n\n```\nassert_eq!(5u64.overflowing_div(2), (2, false));\n```","links":{},"attrs":["#[stable(feature = \"wrapping\", since = \"1.7.0\")]","#[rustc_const_stable(feature = \"const_overflowing_int_methods\", since =\n\"1.52.0\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"u64"},{"kind":"primitive","inner":"bool"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1669:2901":{"id":"0:1669:2901","crate_id":0,"name":"value_parser","span":{"filename":"src/builder/value_parser.rs","begin":[1874,4],"end":[1878,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Parser","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1643:2910","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1877":{"id":"0:1877","crate_id":0,"name":null,"span":{"filename":"src/builder/mod.rs","begin":[40,0],"end":[40,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"value_parser::ValueParser","name":"ValueParser","id":"0:1394:2909","glob":false}},"b:2:2869-0:1394:2909":{"id":"b:2:2869-0:1394:2909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueParser","id":"0:1394:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4355":{"id":"0:4355","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"2:8488:9169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:4356:3464"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3505:9228":{"id":"2:3505:9228","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:576:2586":{"id":"0:576:2586","crate_id":0,"name":"is_multiple_occurrences_set","span":{"filename":"src/builder/arg.rs","begin":[4531,4],"end":[4533,5]},"visibility":"public","docs":"[`Arg::multiple_occurrences`] is going away  ([Issue #3772](https://github.com/clap-rs/clap/issues/3772))","links":{"`Arg::multiple_occurrences`":"0:3972:1654"},"attrs":["#[deprecated(since = \"3.2.0\", note =\n\"`multiple_occurrences` away (Issue #3772)\")]"],"deprecation":{"since":"3.2.0","note":"`multiple_occurrences` away (Issue #3772)"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:210:2861":{"id":"0:210:2861","crate_id":0,"name":"has_subcommand","span":{"filename":"src/derive.rs","begin":[447,4],"end":[447,42]},"visibility":"default","docs":"Test whether `Self` can parse a specific subcommand","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3202-0:4530:1672":{"id":"b:2:3202-0:4530:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PossibleValue","id":"0:4530:1672","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:117":{"id":"0:117","crate_id":0,"name":null,"span":{"filename":"src/_derive/mod.rs","begin":[510,0],"end":[510,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::_cookbook","name":"_cookbook","id":"0:103:1693","glob":false}},"0:2879:8635":{"id":"0:2879:8635","crate_id":0,"name":"validate_required_unless","span":{"filename":"src/parser/validator.rs","begin":[538,4],"end":[555,5]},"visibility":{"restricted":{"parent":"0:2770:2664","path":"::parser::validator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matcher",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArgMatcher","id":"0:4926:5216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ClapResult","id":"0:2005:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:31:25-0:5182:3335":{"id":"b:31:25-0:5182:3335","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:1302:2898":{"id":"0:1302:2898","crate_id":0,"name":"possible_value","span":{"filename":"src/builder/possible_value.rs","begin":[1,0],"end":[259,1]},"visibility":{"restricted":{"parent":"0:255:1651","path":"::builder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4530:1672"],"is_stripped":false}},"0:107:1843":{"id":"0:107:1843","crate_id":0,"name":"escaped_positional_derive","span":{"filename":"src/_cookbook/escaped_positional_derive.rs","begin":[1,0],"end":[7,69]},"visibility":"public","docs":"# Example (Derive API)\n\n```rust\nuse clap::Parser;\n\n#[derive(Parser)] // requires `derive` feature\n#[clap(author, version, about, long_about = None)]\nstruct Cli {\n    #[clap(short = 'f', action)]\n    eff: bool,\n\n    #[clap(short = 'p', value_name = \"PEAR\", value_parser)]\n    pea: Option<String>,\n\n    #[clap(last = true, value_parser)]\n    slop: Vec<String>,\n}\n\nfn main() {\n    let args = Cli::parse();\n\n    // This is what will happen with `myprog -f -p=bob -- sloppy slop slop`...\n    println!(\"-f used: {:?}\", args.eff); // -f used: true\n    println!(\"-p's value: {:?}\", args.pea); // -p's value: Some(\"bob\")\n    println!(\"'slops' values: {:?}\", args.slop); // 'slops' values: Some([\"sloppy\", \"slop\", \"slop\"])\n\n    // Continued program logic goes here...\n}\n```\n\n**This requires enabling the [`derive` feature flag][crate::_features].**\n\nYou can use `--` to escape further arguments.\n\nLet's see what this looks like in the help:\n```console\n$ escaped-positional-derive --help\nclap [..]\nA simple to use, efficient, and full-featured Command Line Argument Parser\n\nUSAGE:\n    escaped-positional-derive[EXE] [OPTIONS] [-- <SLOP>...]\n\nARGS:\n    <SLOP>...    \n\nOPTIONS:\n    -f               \n    -h, --help       Print help information\n    -p <PEAR>        \n    -V, --version    Print version information\n\n```\n\nHere is a baseline without any arguments:\n```console\n$ escaped-positional-derive\n-f used: false\n-p's value: None\n'slops' values: []\n\n```\n\nNotice that we can't pass positional arguments before `--`:\n```console\n$ escaped-positional-derive foo bar\n? failed\nerror: Found argument 'foo' which wasn't expected, or isn't valid in this context\n\nUSAGE:\n    escaped-positional-derive[EXE] [OPTIONS] [-- <SLOP>...]\n\nFor more information try --help\n\n```\n\nBut you can after:\n```console\n$ escaped-positional-derive -f -p=bob -- sloppy slop slop\n-f used: true\n-p's value: Some(\"bob\")\n'slops' values: [\"sloppy\", \"slop\", \"slop\"]\n\n```\n\nAs mentioned, the parser will directly pass everything through:\n```console\n$ escaped-positional-derive -- -f -p=bob sloppy slop slop\n-f used: false\n-p's value: None\n'slops' values: [\"-f\", \"-p=bob\", \"sloppy\", \"slop\", \"slop\"]\n\n```","links":{"crate::_features":"0:121:1696"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:2:3202-0:4629:2907":{"id":"b:2:3202-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2173:7883":{"id":"0:2173:7883","crate_id":0,"name":"needs_more_vals","span":{"filename":"src/parser/arg_matcher.rs","begin":[215,4],"end":[246,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["o",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4944:2589":{"id":"0:4944:2589","crate_id":0,"name":"id","span":{"filename":"src/parser/matches/any_value.rs","begin":[6,4],"end":[6,18]},"visibility":{"restricted":{"parent":"0:2196:7909","path":"::parser::matches::any_value"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AnyValueId","id":"0:4947:3033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:5187:604":{"id":"0:5187:604","crate_id":0,"name":"eq","span":{"filename":"src/mkeymap.rs","begin":[9,9],"end":[9,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Key","id":"0:5182:3335","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2589":{"id":"0:2589","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[9,22],"end":[9,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"arg_matches::ArgMatches","name":"ArgMatches","id":"0:4953:1658","glob":false}},"0:1243:6606":{"id":"0:1243:6606","crate_id":0,"name":"contains_short","span":{"filename":"src/builder/command.rs","begin":[4852,4],"end":[4859,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"primitive","inner":"char"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1293":{"id":"0:1293","crate_id":0,"name":null,"span":{"filename":"src/builder/command.rs","begin":[5134,0],"end":[5140,1]},"visibility":{"restricted":{"parent":"0:744:2561","path":"::builder::command"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:3577:5211","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"App","id":"0:4456:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["0:1295:181","0:1296:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:952:5251":{"id":"0:952:5251","crate_id":0,"name":"before_long_help","span":{"filename":"src/builder/command.rs","begin":[1589,4],"end":[1592,5]},"visibility":"public","docs":"Free-form help text for before auto-generated long help (`--help`).\n\nThis is often used for header, copyright, or license information.\n\nIf [`Command::before_help`] is not specified, this message will be displayed for `-h`.\n\n# Examples\n\n```no_run\n# use clap::Command;\nCommand::new(\"myprog\")\n    .before_long_help(\"Some verbose and long info I'd like to appear before the help info\")\n# ;\n```","links":{"`Command::before_help`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["help",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2153:7843":{"id":"0:2153:7843","crate_id":0,"name":"fill_in_global_values","span":{"filename":"src/parser/arg_matcher.rs","begin":[63,4],"end":[101,5]},"visibility":{"restricted":{"parent":"0:2095:7828","path":"::parser::arg_matcher"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["global_arg_vec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],["vals_map",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1302:143","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Id","id":"0:5305:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"MatchedArg","id":"0:5058:7830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2013:481":{"id":"0:2013:481","crate_id":0,"name":"context","span":{"filename":"src/error/mod.rs","begin":[98,4],"end":[100,5]},"visibility":"public","docs":"Additional information to further qualify the error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ContextValue","id":"0:4807:7450","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3175:8829":{"id":"0:3175:8829","crate_id":0,"name":"sc_spec_vals","span":{"filename":"src/output/help.rs","begin":[758,4],"end":[787,5]},"visibility":{"restricted":{"parent":"0:3050:2603","path":"::output::help"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5104":{"id":"0:5104","crate_id":0,"name":null,"span":{"filename":"src/parser/parser.rs","begin":[1680,16],"end":[1680,25]},"visibility":{"restricted":{"parent":"0:2614:1657","path":"::parser::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:5105:604","0:5106:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:5092:7833":{"id":"a:2:3281:220-0:5092:7833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseState","id":"0:5092:7833","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:7907-0:5110:8389":{"id":"a:2:9340:7907-0:5110:8389","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:5110:8389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4798:408":{"id":"0:4798:408","crate_id":0,"name":"clone","span":{"filename":"src/error/context.rs","begin":[2,15],"end":[2,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ContextKind","id":"0:4761:7449","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6088:31633":{"id":"5:6088:31633","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4228":{"id":"0:4228","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[32,27],"end":[32,31]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArgSettings","id":"0:4172:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2054:7546":{"id":"0:2054:7546","crate_id":0,"name":"too_many_values","span":{"filename":"src/error/mod.rs","begin":[452,4],"end":[462,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["val",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["arg",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["usage",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1364:2661":{"id":"0:1364:2661","crate_id":0,"name":"multiple","span":{"filename":"src/builder/usage_parser.rs","begin":[164,4],"end":[185,5]},"visibility":{"restricted":{"parent":"0:1342:2899","path":"::builder::usage_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:5245:2692":{"id":"b:5:787-0:5245:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Stream","id":"0:5245:2692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:4855","5:790:5446","5:791:10950"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:5291:9008":{"id":"b:2:3208-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:5196:5213":{"id":"b:2:4002-0:5196:5213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MKeyMap","id":"0:5196:5213","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3034:298":{"id":"0:3034:298","crate_id":0,"name":"args","span":{"filename":"src/mkeymap.rs","begin":[128,4],"end":[130,5]},"visibility":"crate","docs":"Return iterators of all args.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4239":{"id":"0:4239","crate_id":0,"name":null,"span":{"filename":"src/builder/arg_settings.rs","begin":[270,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:726:2897","path":"::builder::arg_settings"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flags","id":"0:4231:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1054:5459":{"id":"0:1054:5459","crate_id":0,"name":"get_color","span":{"filename":"src/builder/command.rs","begin":[3411,4],"end":[3429,5]},"visibility":"public","docs":"Should we color the output?","links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1356:2747":{"id":"0:1356:2747","crate_id":0,"name":"parse","span":{"filename":"src/builder/usage_parser.rs","begin":[46,4],"end":[67,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"43:2133:13924":{"id":"43:2133:13924","crate_id":43,"name":"EvaluationStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["43:2135:73612","43:2136:73613","43:2137:205"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Reader","id":"43:1233:13260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:4601:6986":{"id":"0:4601:6986","crate_id":0,"name":"CommandName","span":{"filename":"src/builder/value_hint.rs","begin":[44,4],"end":[44,15]},"visibility":"default","docs":"Name of a command, without arguments. May be relative to PATH, or full path to executable.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3198-0:4629:2907":{"id":"b:2:3198-0:4629:2907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringValueParser","id":"0:4629:2907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3771:5189":{"id":"0:3771:5189","crate_id":0,"name":"bits","span":{"filename":"src/builder/app_settings.rs","begin":[525,0],"end":[573,1]},"visibility":"public","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:4578:3333":{"id":"b:2:2869-0:4578:3333","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UsageParser","id":"0:4578:3333","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}},"items":["2:2871:3332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:7907-0:5156:7831":{"id":"a:2:9340:7907-0:5156:7831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Identifier","id":"0:5156:7831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5334":{"id":"0:5334","crate_id":0,"name":null,"span":{"filename":"src/util/color.rs","begin":[2,33],"end":[2,42]},"visibility":{"restricted":{"parent":"0:3485:1556","path":"::util::color"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:5319:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:31:25-0:4742:7344":{"id":"b:31:25-0:4742:7344","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","begin":[18,0],"end":[18,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Equivalent","id":"31:22:9628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Flag","id":"0:4742:7344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["31:28:9622"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"0:4766:7519":{"id":"0:4766:7519","crate_id":0,"name":"PriorArg","span":{"filename":"src/error/context.rs","begin":[10,4],"end":[10,12]},"visibility":"default","docs":"Existing arguments","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2072":{"id":"0:2072","crate_id":0,"name":null,"span":{"filename":"src/error/mod.rs","begin":[1007,0],"end":[1018,1]},"visibility":{"restricted":{"parent":"0:1928:1656","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4886:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2073:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5082":{"id":"0:5082","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/value_source.rs","begin":[2,29],"end":[2,38]},"visibility":{"restricted":{"parent":"0:2578:7911","path":"::parser::matches::value_source"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ValueSource","id":"0:5070:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3812:9238":{"id":"2:3812:9238","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2040:7513":{"id":"0:2040:7513","crate_id":0,"name":"display_version","span":{"filename":"src/error/mod.rs","begin":[274,4],"end":[276,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"0:853:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["colorizer",{"kind":"resolved_path","inner":{"name":"Colorizer","id":"0:5261:2691","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2611":{"id":"0:2611","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/mod.rs","begin":[17,32],"end":[17,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"arg_matches::Values","name":"Values","id":"0:5020:1678","glob":false}},"0:2688:1664":{"id":"0:2688:1664","crate_id":0,"name":"Parser","span":{"filename":"src/parser/parser.rs","begin":[25,0],"end":[33,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'help","kind":{"lifetime":{"outlives":[]}}},{"name":"'cmd","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:2691:2562","0:2692:8351","0:2693:8353","0:2694:8356"],"impls":["0:2695","0:2699","0:2755","0:2766","a:2:3310:6658-0:2688:1664","a:2:3269:211-0:2688:1664","a:2:9340:7907-0:2688:1664","a:2:9339:7908-0:2688:1664","a:2:3281:220-0:2688:1664","b:2:3198-0:2688:1664","b:2:2872-0:2688:1664","b:2:2869-0:2688:1664","b:2:4002-0:2688:1664","b:2:3202-0:2688:1664","b:2:3213-0:2688:1664","b:2:3208-0:2688:1664"]}},"0:2476":{"id":"0:2476","crate_id":0,"name":null,"span":{"filename":"src/parser/matches/arg_matches.rs","begin":[1612,0],"end":[1616,1]},"visibility":{"restricted":{"parent":"0:2228:7910","path":"::parser::matches::arg_matches"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OsValues","id":"0:5038:1676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2478:8271"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:6658-0:5174:8567":{"id":"a:2:3310:6658-0:5174:8567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:6658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Conflicts","id":"0:5174:8567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:960:5736":{"id":"0:960:5736","crate_id":0,"name":"override_help","span":{"filename":"src/builder/command.rs","begin":[1698,4],"end":[1701,5]},"visibility":"public","docs":"Overrides the `clap` generated help message (both `-h` and `--help`).\n\nThis should only be used when the auto-generated message does not suffice.\n\n**NOTE:** This **only** replaces the help message for the current\ncommand, meaning if you are using subcommands, those help messages will\nstill be auto-generated unless you specify a [`Command::override_help`] for\nthem as well.\n\n# Examples\n\n```no_run\n# use clap::{Command, Arg};\nCommand::new(\"myapp\")\n    .override_help(\"myapp v1.0\\n\\\n           Does awesome things\\n\\\n           (C) me@mail.com\\n\\n\\\n\n           USAGE: myapp <opts> <command>\\n\\n\\\n\n           Options:\\n\\\n           -h, --help       Display this message\\n\\\n           -V, --version    Display version info\\n\\\n           -s <stuff>       Do something with stuff\\n\\\n           -v               Be verbose\\n\\n\\\n\n           Commands:\\n\\\n           help             Print this message\\n\\\n           work             Do some work\")\n# ;\n```","links":{"`Command::override_help`":"0:4456:1667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["help",{"kind":"generic","inner":"S"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'help","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:31965:74211":{"id":"2:31965:74211","crate_id":2,"name":"ilog2","span":null,"visibility":"public","docs":"Returns the base 2 logarithm of the number, rounded down.\n\n# Panics\n\nWhen the number is zero it panics in debug mode and\nthe return value is 0 in release mode.\n\n# Examples\n\n```\n#![feature(int_log)]\nassert_eq!(2u64.ilog2(), 1);\n```","links":{},"attrs":["#[unstable(feature = \"int_log\", issue = \"70887\")]","#[must_use =\n\"this returns the result of the operation, \\\n                      without modifying the original\"]","#[track_caller]","#[allow(arithmetic_overflow)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[102,0],"end":[102,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::parser::ArgMatches","name":"ArgMatches","id":"0:4953:1658","glob":false}},"b:2:3213-0:4833:1674":{"id":"b:2:3213-0:4833:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:4833:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3464:7236":{"id":"0:3464:7236","crate_id":0,"name":"str_to_bool","span":{"filename":"src/util/str_to_bool.rs","begin":[12,0],"end":[21,1]},"visibility":"crate","docs":"Converts a string literal representation of truth to true or false.\n\n`false` values are `n`, `no`, `f`, `false`, `off`, and `0` (case insensitive).\n\nAny other value will be considered as `true`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["val",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"bool"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl AsRef<str>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13530:2678":{"id":"2:13530:2678","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:16004:9059","self::pattern":"2:13134:9255"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:9249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:190:1662":{"id":"0:190:1662","crate_id":0,"name":"CommandFactory","span":{"filename":"src/derive.rs","begin":[250,0],"end":[280,1]},"visibility":"public","docs":"Create a [`Command`] relevant for a user-defined container.\n\nDerived as part of [`Parser`].","links":{"`Command`":"0:853:1653","`Parser`":"0:164:1664"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:191:2561","0:193:2797","0:195:2770","0:197:2802"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:229"]}},"0:3488:7447":{"id":"0:3488:7447","crate_id":0,"name":"SUCCESS_CODE","span":{"filename":"src/util/mod.rs","begin":[17,0],"end":[17,39]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"i32"},"expr":"0","value":"0i32","is_literal":true}},"0:641:681":{"id":"0:641:681","crate_id":0,"name":"from","span":{"filename":"src/builder/arg.rs","begin":[5069,4],"end":[5071,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arg","id":"0:3972:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'help"}],"bindings":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:5291:9008":{"id":"b:2:4002-0:5291:9008","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Child","id":"0:5291:9008","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4678:7199":{"id":"0:4678:7199","crate_id":0,"name":"bounds","span":{"filename":"src/builder/value_parser.rs","begin":[1290,4],"end":[1290,56]},"visibility":{"restricted":{"parent":"0:1381:2901","path":"::builder::value_parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"std::ops::Bound","id":"2:46071:7200","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"std::ops::Bound","id":"2:46071:7200","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}}]}}},"paths":{"0:3647:2672":{"crate_id":0,"path":["clap","builder","app_settings","Flags"],"kind":"struct"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"36:4417:16750":{"crate_id":36,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:5375:16924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"43:6955:13324":{"crate_id":43,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:8130:11186":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:11199:14578":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"36:5304:16899":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"37:97:9683":{"crate_id":37,"path":["termcolor","WriterInner"],"kind":"enum"},"20:421:1664":{"crate_id":20,"path":["yaml_rust","parser","Parser"],"kind":"struct"},"2:11436:9615":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"0:3374:1659":{"crate_id":0,"path":["clap","util"],"kind":"module"},"25:2331:14121":{"crate_id":25,"path":["regex","pool","PoolGuard"],"kind":"struct"},"43:8182:13400":{"crate_id":43,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:11822:14674":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"43:7751:13389":{"crate_id":43,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:10673:56781":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"0:3599:3168":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","Hidden"],"kind":"variant"},"43:3250:13499":{"crate_id":43,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:12168:14514":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"26:2777:2672":{"crate_id":26,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"0:4657:2904":{"crate_id":0,"path":["clap","builder","value_parser","PossibleValuesParser"],"kind":"struct"},"44:12955:14705":{"crate_id":44,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:7786:13337":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:4440:16750":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:24851:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"26:2791:13803":{"crate_id":26,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"6:6150:17080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"0:679:2895":{"crate_id":0,"path":["clap","builder","arg_group"],"kind":"module"},"17:294:14377":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:13772:15194":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"44:10775:13666":{"crate_id":44,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"27:1714:13728":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"2:48022:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:4723:2682":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"27:1635:13684":{"crate_id":27,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"43:8172:13399":{"crate_id":43,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:513:2658":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"44:15042:15245":{"crate_id":44,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"0:3209:8756":{"crate_id":0,"path":["clap","output","help","TAB"],"kind":"constant"},"1:16028:9080":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:5423:16945":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"44:13298:14761":{"crate_id":44,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"0:3603:3175":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","HelpExpected"],"kind":"variant"},"2:49534:9263":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:2200:14124":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:10667:11450":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"32:77:9594":{"crate_id":32,"path":["hashbrown","raw","inner","alloc","inner","Allocator"],"kind":"trait"},"16:5433:13220":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:12234:14756":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:22661:70613":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:6082:12497":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:10106:13667":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:7441:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:2968:13499":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"0:261:2933":{"crate_id":0,"path":["clap","builder","macros","yaml_opt_str"],"kind":"macro"},"36:1709:16490":{"crate_id":36,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"0:3219:8723":{"crate_id":0,"path":["clap","output","help","should_show_arg"],"kind":"function"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:4921:9647":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:10962:1674":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:10179:14494":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:22616:9294":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:3516:9168":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:13898:15226":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"44:12785:14664":{"crate_id":44,"path":["object","elf","Vernaux"],"kind":"struct"},"1:6790:12290":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:6954:12930":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"25:2983:9423":{"crate_id":25,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"36:3854:16511":{"crate_id":36,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:53576:16099":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"0:4762:7530":{"crate_id":0,"path":["clap","error","context","ContextKind","InvalidSubcommand"],"kind":"variant"},"1:12203:12359":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"44:13516:14810":{"crate_id":44,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:8146:71271":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"36:3884:16529":{"crate_id":36,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:14317:12417":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"43:3036:9710":{"crate_id":43,"path":["gimli","common","Encoding"],"kind":"struct"},"27:1764:15635":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"2:24201:16018":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:3172:13502":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"0:2688:1664":{"crate_id":0,"path":["clap","parser","parser","Parser"],"kind":"struct"},"1:14588:16201":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:593:16341":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:6021:13495":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"43:6526:13233":{"crate_id":43,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"0:5020:1678":{"crate_id":0,"path":["clap","parser","matches","arg_matches","Values"],"kind":"struct"},"2:48657:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"44:14238:15028":{"crate_id":44,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"0:127:1699":{"crate_id":0,"path":["clap","macros"],"kind":"module"},"0:106:1842":{"crate_id":0,"path":["clap","_cookbook","escaped_positional"],"kind":"module"},"36:4515:16791":{"crate_id":36,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"12:880:11184":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"0:3567:3104":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","AllowExternalSubcommands"],"kind":"variant"},"44:11640:14545":{"crate_id":44,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"44:14344:15050":{"crate_id":44,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:57795:16112":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:3392:13513":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"32:1125:7856":{"crate_id":32,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:10938:14552":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"44:14529:15095":{"crate_id":44,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:51330:12725":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"0:5098:8374":{"crate_id":0,"path":["clap","parser","parser","ParseState","Pos"],"kind":"variant"},"12:2032:7858":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"44:10820:13591":{"crate_id":44,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"43:6032:14469":{"crate_id":43,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:11218:9528":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:1651:12393":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"27:1838:15647":{"crate_id":27,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"0:4790:7562":{"crate_id":0,"path":["clap","error","context","ContextKind","TrailingArg"],"kind":"variant"},"17:11254:13614":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"26:1970:13755":{"crate_id":26,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"26:2977:15768":{"crate_id":26,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"12:1183:13150":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:9961:14482":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"36:4119:16655":{"crate_id":36,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:4671:15291":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"43:7034:13372":{"crate_id":43,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"43:6275:13219":{"crate_id":43,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:50324:12404":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"0:135:2530":{"crate_id":0,"path":["clap","crate_version"],"kind":"macro"},"2:24265:30745":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:49866:9269":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"32:2104:7856":{"crate_id":32,"path":["hashbrown","set","Entry"],"kind":"enum"},"44:10904:14497":{"crate_id":44,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:23756:70521":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"36:4509:16788":{"crate_id":36,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"21:552:13716":{"crate_id":21,"path":["linked_hash_map","Qey"],"kind":"struct"},"16:7205:13397":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"44:11149:13588":{"crate_id":44,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:11354:12489":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"46:0:9040":{"crate_id":46,"path":["adler"],"kind":"module"},"5:4699:14127":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:4081:16625":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:2912:13498":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:9440:14374":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"44:11843:13943":{"crate_id":44,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:5213:16838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"44:12741:14647":{"crate_id":44,"path":["object","elf","Verdef"],"kind":"struct"},"0:5322:5551":{"crate_id":0,"path":["clap","util","color","ColorChoice","Always"],"kind":"variant"},"0:108:1844":{"crate_id":0,"path":["clap","_cookbook","git"],"kind":"module"},"5:7212:11186":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:4639:9486":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"25:2528:9431":{"crate_id":25,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"1:14821:11619":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:12742:12442":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:8182:9516":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"0:3587:3147":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","NextLineHelp"],"kind":"variant"},"6:3883:16512":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"0:4187:3673":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","TakesValue"],"kind":"variant"},"36:4393:16740":{"crate_id":36,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"9:722:13022":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"25:1789:72620":{"crate_id":25,"path":["regex","backtrack","Job"],"kind":"enum"},"0:207:1665":{"crate_id":0,"path":["clap","derive","Subcommand"],"kind":"trait"},"27:1239:13684":{"crate_id":27,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"0:4761:7449":{"crate_id":0,"path":["clap","error","context","ContextKind"],"kind":"enum"},"2:47938:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"25:2182:15882":{"crate_id":25,"path":["regex","input","CharInput"],"kind":"struct"},"2:47718:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"43:3400:13512":{"crate_id":43,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"31:724:8270":{"crate_id":31,"path":["indexmap","map","IntoIter"],"kind":"struct"},"2:22831:12685":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:14246:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:13386:15072":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"21:264:11186":{"crate_id":21,"path":["linked_hash_map","Drain"],"kind":"struct"},"1:8839:16118":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"0:3553:3079":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","AllowMissingPositional"],"kind":"variant"},"17:11147:13962":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"36:1594:16410":{"crate_id":36,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"26:2211:9253":{"crate_id":26,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"6:5257:16858":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"26:3376:13819":{"crate_id":26,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"2:46798:7923":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"26:2846:13759":{"crate_id":26,"path":["regex_syntax","either","Either"],"kind":"enum"},"2:9461:9249":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12275:14762":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"48:8:2692":{"crate_id":48,"path":["atty","Stream"],"kind":"enum"},"16:5707:13234":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"31:116:15573":{"crate_id":31,"path":["indexmap","map","core","raw","DebugIndices"],"kind":"struct"},"1:4741:9498":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:22957:12686":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"31:312:11454":{"crate_id":31,"path":["indexmap","map","core","VacantEntry"],"kind":"struct"},"2:47591:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"9:0:9038":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:3274:2745":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:6269:13377":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:1446:7854":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"0:1371:6769":{"crate_id":0,"path":["clap","builder","usage_parser","default_value_end"],"kind":"function"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:13746:15185":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"40:194:54950":{"crate_id":40,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"44:5518:56594":{"crate_id":44,"path":["object","read","SymbolMapEntry"],"kind":"trait"},"17:13842:15218":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:5039:9632":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"12:856:1678":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:48645:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"44:11196:13937":{"crate_id":44,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"36:4052:16623":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:47649:8270":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"44:14929:15219":{"crate_id":44,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"44:11665:14547":{"crate_id":44,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"36:5540:16987":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"25:2628:9276":{"crate_id":25,"path":["regex","re_bytes","Matches"],"kind":"struct"},"2:49822:9273":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:11180:12318":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"14:11:15557":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:13465:15095":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"25:3002:9281":{"crate_id":25,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"0:4926:5216":{"crate_id":0,"path":["clap","parser","arg_matcher","ArgMatcher"],"kind":"struct"},"43:5208:15287":{"crate_id":43,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:15216:12374":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"36:577:16338":{"crate_id":36,"path":["libc","unix","pollfd"],"kind":"struct"},"25:2206:15802":{"crate_id":25,"path":["regex","input","Char"],"kind":"struct"},"36:1519:16369":{"crate_id":36,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:16003:9058":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"28:930:72603":{"crate_id":28,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"32:1891:11186":{"crate_id":32,"path":["hashbrown","set","Drain"],"kind":"struct"},"0:112:1848":{"crate_id":0,"path":["clap","_cookbook","pacman"],"kind":"module"},"1:10677:12394":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"0:3117:8725":{"crate_id":0,"path":["clap","output","help","write_method"],"kind":"macro"},"44:4250:56760":{"crate_id":44,"path":["object","read","macho","symbol","Nlist"],"kind":"trait"},"1:10858:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:6685:12286":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:9634:14160":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"43:6376:13227":{"crate_id":43,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:24579:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:46686:9302":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:48891:9706":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:50294:9462":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:4464:16764":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"43:3076:13253":{"crate_id":43,"path":["gimli","common","Register"],"kind":"struct"},"36:4363:16730":{"crate_id":36,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:4135:16653":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"25:2993:9279":{"crate_id":25,"path":["regex","re_unicode","Split"],"kind":"struct"},"44:11691:14552":{"crate_id":44,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"20:472:15948":{"crate_id":20,"path":["yaml_rust","scanner","Marker"],"kind":"struct"},"0:4213:4335":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","HideEnvValues"],"kind":"variant"},"17:10962:14554":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"44:13046:14726":{"crate_id":44,"path":["object","macho","MachHeader64"],"kind":"struct"},"14:47:15557":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:1544:16375":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:6094:17059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"43:7535:13385":{"crate_id":43,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:4088:16628":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"26:2023:1674":{"crate_id":26,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"0:3589:3151":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","DisableColoredHelp"],"kind":"variant"},"5:7257:14123":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:1606:16410":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"36:3958:16580":{"crate_id":36,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"44:4337:13649":{"crate_id":44,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:5522:13227":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:11077:9518":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"44:14836:15194":{"crate_id":44,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"32:478:31563":{"crate_id":32,"path":["hashbrown","raw","inner","RawIterHash"],"kind":"struct"},"44:12171:13957":{"crate_id":44,"path":["object","read","ObjectMap"],"kind":"struct"},"2:5101:9637":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"28:1072:13693":{"crate_id":28,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"44:13311:14762":{"crate_id":44,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:7255:16116":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:7823:13338":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:8646:9335":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"44:9785:56599":{"crate_id":44,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:6859:12274":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"44:14366:15054":{"crate_id":44,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"43:8399:13327":{"crate_id":43,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"12:2036:8270":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"44:14611:15118":{"crate_id":44,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:12158:12356":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"44:11089:13623":{"crate_id":44,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"0:4193:4015":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","RequireDelimiter"],"kind":"variant"},"0:668:2922":{"crate_id":0,"path":["clap","builder","arg","display_arg_val"],"kind":"function"},"37:310:9690":{"crate_id":37,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:32776:11266":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:10140:13591":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"0:662:3377":{"crate_id":0,"path":["clap","builder","arg","Validator"],"kind":"typedef"},"26:3427:127":{"crate_id":26,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"32:772:7858":{"crate_id":32,"path":["hashbrown","map","Iter"],"kind":"struct"},"0:3460:7234":{"crate_id":0,"path":["clap","util","str_to_bool","TRUE_LITERALS"],"kind":"constant"},"36:4038:16616":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:4473:9514":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:11794:14664":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:15353:12487":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:6111:17064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:6459:12293":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"25:2954:9425":{"crate_id":25,"path":["regex","re_unicode","Match"],"kind":"struct"},"43:7020:13326":{"crate_id":43,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"36:1555:16385":{"crate_id":36,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"44:11405:56781":{"crate_id":44,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:32414:11183":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"27:1527:12415":{"crate_id":27,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"44:9740:56598":{"crate_id":44,"path":["object","common","RelocationKind"],"kind":"enum"},"27:1383:15603":{"crate_id":27,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"36:4431:16758":{"crate_id":36,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:3048:71301":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"43:3602:13560":{"crate_id":43,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"0:3542:1669":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings"],"kind":"enum"},"17:12040:14729":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:2314:13628":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:51195:12720":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"43:8090:13392":{"crate_id":43,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:51172:12732":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"0:3585:3144":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","DontCollapseArgsInUsage"],"kind":"variant"},"2:53351:12693":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"43:8120:13394":{"crate_id":43,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"44:2631:13632":{"crate_id":44,"path":["object","read","elf","relocation","Rel"],"kind":"trait"},"48:0:1552":{"crate_id":48,"path":["atty"],"kind":"module"},"2:23169:20421":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:11932:14705":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:1588:16400":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:16025:9077":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"31:626:11445":{"crate_id":31,"path":["indexmap","map","ValuesMut"],"kind":"struct"},"6:6240:17137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"20:434:23248":{"crate_id":20,"path":["yaml_rust","scanner","TEncoding"],"kind":"enum"},"2:10383:9311":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"26:3053:1674":{"crate_id":26,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:49467:9612":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"0:4854:7554":{"crate_id":0,"path":["clap","error","kind","ErrorKind","WrongNumberOfValues"],"kind":"variant"},"0:256:1699":{"crate_id":0,"path":["clap","builder","macros"],"kind":"module"},"20:380:9158":{"crate_id":20,"path":["yaml_rust","parser","Event"],"kind":"enum"},"17:13477:15096":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:45981:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"0:4565:3014":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","Help"],"kind":"variant"},"37:217:9686":{"crate_id":37,"path":["termcolor","NoColor"],"kind":"struct"},"20:448:23249":{"crate_id":20,"path":["yaml_rust","scanner","TScalarStyle"],"kind":"enum"},"43:194:13912":{"crate_id":43,"path":["gimli","read","util","ArrayLike"],"kind":"trait"},"0:5093:8361":{"crate_id":0,"path":["clap","parser","parser","ParseState","ValuesDone"],"kind":"variant"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"0:4856:7517":{"crate_id":0,"path":["clap","error","kind","ErrorKind","ArgumentConflict"],"kind":"variant"},"43:3227:13521":{"crate_id":43,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"36:6862:17157":{"crate_id":36,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"45:920:16293":{"crate_id":45,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"25:2172:15881":{"crate_id":25,"path":["regex","input","InputAt"],"kind":"struct"},"1:9594:14159":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:1017:12432":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"44:12262:13954":{"crate_id":44,"path":["object","read","CodeView"],"kind":"struct"},"1:4510:2693":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:46857:9571":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"43:3015:7629":{"crate_id":43,"path":["gimli","common","Format"],"kind":"enum"},"32:786:9528":{"crate_id":32,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:4955:15300":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:7620:11190":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:9174:16118":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:11304:56601":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:9689:72601":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:4446:16753":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"0:4207:3913":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","IgnoreCase"],"kind":"variant"},"1:5775:12302":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"27:1645:13875":{"crate_id":27,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"44:12524:14610":{"crate_id":44,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"44:14570:15104":{"crate_id":44,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:3368:9213":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:2594:16113":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"36:5159:16821":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"25:1301:9427":{"crate_id":25,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"0:5174:8567":{"crate_id":0,"path":["clap","parser","validator","Conflicts"],"kind":"struct"},"26:3354:13798":{"crate_id":26,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"43:7335:13379":{"crate_id":43,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:14242:2693":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:2991:13510":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"0:1712:7283":{"crate_id":0,"path":["clap","builder","value_parser","private","_ValueParserViaFactorySealed"],"kind":"trait"},"17:11328:13958":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"36:3897:16539":{"crate_id":36,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:9528:9262":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:46477:11347":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"37:29:8979":{"crate_id":37,"path":["termcolor","WriteColor"],"kind":"trait"},"16:3064:13558":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:10527:16007":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:5298:16876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:9210:13960":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"0:3497:1703":{"crate_id":0,"path":["clap","INTERNAL_ERROR_MSG"],"kind":"constant"},"44:12042:13956":{"crate_id":44,"path":["object","read","ObjectKind"],"kind":"enum"},"44:11779:13984":{"crate_id":44,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"43:3792:13508":{"crate_id":43,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:13598:15129":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:4477:15286":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"44:13244:14753":{"crate_id":44,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:48928:9383":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"0:4571:115":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","Default"],"kind":"variant"},"17:13163:15021":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"18:838:9251":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:12282:12401":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"44:14701:15141":{"crate_id":44,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:50298:9463":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:12051:14730":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:48148:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"32:1169:11454":{"crate_id":32,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"0:3579:3125":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","SubcommandPrecedenceOverArg"],"kind":"variant"},"36:5406:16946":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"36:4379:16736":{"crate_id":36,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:53550:16097":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"44:11520:14541":{"crate_id":44,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:51738:12702":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"25:1782:15823":{"crate_id":25,"path":["regex","backtrack","Cache"],"kind":"struct"},"2:46755:16047":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:46746:9563":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"36:3949:16575":{"crate_id":36,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:12262:12364":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"44:14883:15205":{"crate_id":44,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"26:2002:15683":{"crate_id":26,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"1:4732:69295":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:6695:17049":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"36:4317:16706":{"crate_id":36,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:11482:14596":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:3972:16575":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:11524:9373":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:10926:14551":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:13780:15197":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"18:858:13690":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"44:12443:14595":{"crate_id":44,"path":["object","elf","FileHeader64"],"kind":"struct"},"44:4187:14385":{"crate_id":44,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"44:14628:15122":{"crate_id":44,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:8973:9350":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:15986:11424":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"0:5196:5213":{"crate_id":0,"path":["clap","mkeymap","MKeyMap"],"kind":"struct"},"36:4441:16764":{"crate_id":36,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"35:0:1562":{"crate_id":35,"path":["terminal_size"],"kind":"module"},"43:5492:15295":{"crate_id":43,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:12598:14828":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:8803:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"0:5278:115":{"crate_id":0,"path":["clap","output","fmt","Style","Default"],"kind":"variant"},"10:0:9039":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:12010:14726":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"0:3575:3117":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","SubcommandsNegateReqs"],"kind":"variant"},"1:9467:31420":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"0:5121:8399":{"crate_id":0,"path":["clap","parser","parser","ParseResult","UnneededAttachedValue"],"kind":"variant"},"45:41:13071":{"crate_id":45,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"9:1056:13081":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:13359:16008":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"1:6959:12295":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:1567:16385":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:14643:69564":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"0:5119:8403":{"crate_id":0,"path":["clap","parser","parser","ParseResult","AttachedValueNotConsumed"],"kind":"variant"},"0:190:1662":{"crate_id":0,"path":["clap","derive","CommandFactory"],"kind":"trait"},"17:12685:14845":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"43:4416:15276":{"crate_id":43,"path":["gimli","constants","DwUt"],"kind":"struct"},"0:2912:8556":{"crate_id":0,"path":["clap","parser","features","suggestions","did_you_mean_flag"],"kind":"function"},"0:5182:3335":{"crate_id":0,"path":["clap","mkeymap","Key"],"kind":"struct"},"17:10117:13668":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"36:6927:17170":{"crate_id":36,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"44:2135:13561":{"crate_id":44,"path":["object","read","elf","section","SectionHeader"],"kind":"trait"},"16:7024:13544":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:13488:15100":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:6861:12277":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:7295:13344":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"26:2127:13771":{"crate_id":26,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"27:1746:15632":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"1:7649:11613":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:9332:13571":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"36:4125:16657":{"crate_id":36,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:8138:12998":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"26:2309:13778":{"crate_id":26,"path":["regex_syntax","ast","Class"],"kind":"enum"},"18:850:13689":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:2751:9303":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"27:1363:13842":{"crate_id":27,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"44:2577:13624":{"crate_id":44,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"12:2045:11184":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"29:107:8439":{"crate_id":29,"path":["clap_lex","ParsedArg"],"kind":"struct"},"17:11993:14723":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"0:110:1846":{"crate_id":0,"path":["clap","_cookbook","multicall_busybox"],"kind":"module"},"2:51840:12694":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:1195:31575":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"11:0:9040":{"crate_id":11,"path":["adler"],"kind":"module"},"2:5111:9638":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:5785:12303":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:23219:12678":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"0:4807:7450":{"crate_id":0,"path":["clap","error","context","ContextValue"],"kind":"enum"},"43:3300:13500":{"crate_id":43,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"44:10916:13584":{"crate_id":44,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:51817:12691":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:12287:14763":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"0:104:1840":{"crate_id":0,"path":["clap","_cookbook","cargo_example"],"kind":"module"},"16:7119:13259":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4425:16743":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"37:416:9688":{"crate_id":37,"path":["termcolor","ParseColorError"],"kind":"struct"},"2:23545:12679":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"21:52:13714":{"crate_id":21,"path":["linked_hash_map","KeyRef"],"kind":"struct"},"12:2040:11186":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"20:620:1717":{"crate_id":20,"path":["yaml_rust","yaml","Yaml"],"kind":"enum"},"5:3882:9510":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:7975:14146":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:51792:12709":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"26:2225:13774":{"crate_id":26,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"16:6605:13341":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:5175:16819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"44:12103:13965":{"crate_id":44,"path":["object","read","SymbolSection"],"kind":"enum"},"44:14852:15198":{"crate_id":44,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"44:14087:14974":{"crate_id":44,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"0:3506:2984":{"crate_id":0,"path":["clap","builder","action","ArgAction","Append"],"kind":"variant"},"0:3569:3107":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","Multicall"],"kind":"variant"},"36:6231:17143":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:5408:11340":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:7236:13400":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:5237:16847":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"44:11955:64717":{"crate_id":44,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:1721:16490":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:49375:9605":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:6208:13374":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"44:11367:14508":{"crate_id":44,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"12:777:8270":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:47658:10160":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"0:4764:7518":{"crate_id":0,"path":["clap","error","context","ContextKind","InvalidArg"],"kind":"variant"},"36:5247:16869":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:77:1491":{"crate_id":2,"path":["core","usize"],"kind":"module"},"2:47624:2763":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"36:6879:17162":{"crate_id":36,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"0:722:2896":{"crate_id":0,"path":["clap","builder","arg_predicate"],"kind":"module"},"2:49477:9613":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"45:1016:13087":{"crate_id":45,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"9:234:13046":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"36:6116:17080":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:53629:16102":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"43:5933:15303":{"crate_id":43,"path":["gimli","constants","DwOp"],"kind":"struct"},"0:1643:2910":{"crate_id":0,"path":["clap","builder","value_parser","ValueParserFactory"],"kind":"trait"},"40:250:15564":{"crate_id":40,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:3758:12663":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"26:3227:13816":{"crate_id":26,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"2:13862:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4474:16765":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"43:6641:13242":{"crate_id":43,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:47701:10246":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"44:14209:15021":{"crate_id":44,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"44:14100:14981":{"crate_id":44,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"26:3012:15772":{"crate_id":26,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"44:12239:13614":{"crate_id":44,"path":["object","read","Export"],"kind":"struct"},"1:8388:9383":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:11143:9279":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"45:27:13070":{"crate_id":45,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"43:7513:13530":{"crate_id":43,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:48232:3616":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:15975:11420":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:23073:12678":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:5930:12538":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:13627:15136":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"0:1367:6746":{"crate_id":0,"path":["clap","builder","usage_parser","name_end"],"kind":"function"},"26:2602:13793":{"crate_id":26,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"17:11572:14616":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"0:3223:5461":{"crate_id":0,"path":["clap","output","usage"],"kind":"module"},"16:2843:13496":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:5632:13232":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"36:6902:17168":{"crate_id":36,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"0:4105:1655":{"crate_id":0,"path":["clap","builder","arg_group","ArgGroup"],"kind":"struct"},"25:1993:15799":{"crate_id":25,"path":["regex","dfa","StateFlags"],"kind":"struct"},"1:11457:17038":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"43:7213:13377":{"crate_id":43,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:15412:12495":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:2889:13516":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"44:12067:13580":{"crate_id":44,"path":["object","read","SectionIndex"],"kind":"struct"},"6:5544:16973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:49857:9268":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:11286:9258":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:10577:67019":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:46778:9566":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"40:11:15557":{"crate_id":40,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"43:8131:13395":{"crate_id":43,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"12:2269:11453":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"36:1668:16466":{"crate_id":36,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"28:987:13686":{"crate_id":28,"path":["memchr","memmem","Finder"],"kind":"struct"},"0:4185:3168":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","Hidden"],"kind":"variant"},"17:10304:13566":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"0:3363:8980":{"crate_id":0,"path":["clap","output","fmt","is_a_tty"],"kind":"function"},"43:6359:13226":{"crate_id":43,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"44:10012:13571":{"crate_id":44,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:9060:9343":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"44:13792:14856":{"crate_id":44,"path":["object","macho","Nlist64"],"kind":"struct"},"16:7738:13403":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"34:53:13907":{"crate_id":34,"path":["unicode_width","UnicodeWidthStr"],"kind":"trait"},"2:11363:9618":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:10655:9703":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"36:3860:16512":{"crate_id":36,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"36:3910:16549":{"crate_id":36,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"0:3417:2589":{"crate_id":0,"path":["clap","util","id"],"kind":"module"},"18:0:9046":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:6475:11186":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:10866:12466":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"44:12985:14714":{"crate_id":44,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"44:27:13619":{"crate_id":44,"path":["object","endian","Endian"],"kind":"trait"},"0:4205:4319":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","HideDefaultValue"],"kind":"variant"},"0:4892:7456":{"crate_id":0,"path":["clap","error","ErrorInner"],"kind":"struct"},"0:5048:1675":{"crate_id":0,"path":["clap","parser","matches","arg_matches","Indices"],"kind":"struct"},"16:7884:13334":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"27:1336:5462":{"crate_id":27,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"44:11102:13622":{"crate_id":44,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:10882:9510":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:7663:11614":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"21:249:9528":{"crate_id":21,"path":["linked_hash_map","IterMut"],"kind":"struct"},"1:5500:12495":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:50167:16059":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"43:5373:15291":{"crate_id":43,"path":["gimli","constants","DwId"],"kind":"struct"},"1:696:12406":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"36:562:16329":{"crate_id":36,"path":["libc","unix","hostent"],"kind":"struct"},"44:15027:15244":{"crate_id":44,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:15053:12401":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"36:556:16326":{"crate_id":36,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"44:15050:15248":{"crate_id":44,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"45:613:13998":{"crate_id":45,"path":["miniz_oxide","inflate","stream","FullReset"],"kind":"struct"},"2:46370:16041":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:1526:16367":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"9:1020:13088":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:8442:9549":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:11750:14647":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:9809:72598":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:7146:13392":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:12262:14761":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"44:11934:64716":{"crate_id":44,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"27:1752:15633":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"36:617:16359":{"crate_id":36,"path":["libc","unix","servent"],"kind":"struct"},"44:14165:15016":{"crate_id":44,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:2794:13253":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"15:269:13174":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"0:4768:7521":{"crate_id":0,"path":["clap","error","context","ContextKind","ValidValue"],"kind":"variant"},"1:6319:12506":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"0:4066:4875":{"crate_id":0,"path":["clap","builder","arg","ArgProvider","GeneratedMutated"],"kind":"variant"},"43:5150:15285":{"crate_id":43,"path":["gimli","constants","DwEnd"],"kind":"struct"},"25:2793:9432":{"crate_id":25,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"25:2945:9422":{"crate_id":25,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"44:9554:56596":{"crate_id":44,"path":["object","common","AddressSize"],"kind":"enum"},"25:2115:15879":{"crate_id":25,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"36:1546:16380":{"crate_id":36,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"27:1413:15612":{"crate_id":27,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"45:1076:13081":{"crate_id":45,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:10584:13648":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"36:1609:16422":{"crate_id":36,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"45:234:13046":{"crate_id":45,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"36:6636:17152":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:46566:12877":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:4315:16694":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:1712:16484":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:49875:9270":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:13961:11616":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"0:4561:6728":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","Short"],"kind":"variant"},"17:11001:14557":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:14550:12339":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"27:1908:15659":{"crate_id":27,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"17:12982:14919":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"26:2584:13792":{"crate_id":26,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"28:836:13698":{"crate_id":28,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"44:14976:15233":{"crate_id":44,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:7761:13404":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:3337:9207":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"43:5554:15297":{"crate_id":43,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:13963:15244":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"26:1958:13754":{"crate_id":26,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"0:5276:8974":{"crate_id":0,"path":["clap","output","fmt","Style","Hint"],"kind":"variant"},"2:10332:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"43:7196:13376":{"crate_id":43,"path":["gimli","read","line","LineRows"],"kind":"struct"},"36:598:16349":{"crate_id":36,"path":["libc","unix","sigval"],"kind":"struct"},"6:545:16309":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:7073:13391":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"36:4025:16611":{"crate_id":36,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"27:1184:13845":{"crate_id":27,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"44:12717:14645":{"crate_id":44,"path":["object","elf","Dyn64"],"kind":"struct"},"44:12005:56600":{"crate_id":44,"path":["object","read","FileKind"],"kind":"enum"},"5:3488:11184":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"27:1940:15665":{"crate_id":27,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"2:4740:12683":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"0:2077:7503":{"crate_id":0,"path":["clap","error","get_help_flag"],"kind":"function"},"0:145:2680":{"crate_id":0,"path":["clap","macros","wlnerr"],"kind":"macro"},"17:11015:14558":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"44:11617:14544":{"crate_id":44,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"25:1641:9427":{"crate_id":25,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"16:5595:13231":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"0:4191:3147":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","NextLineHelp"],"kind":"variant"},"0:3508:2987":{"crate_id":0,"path":["clap","builder","action","ArgAction","StoreValue"],"kind":"variant"},"43:6706:13244":{"crate_id":43,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"32:891:11186":{"crate_id":32,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:1472:11453":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:4379:16728":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"26:3460:72664":{"crate_id":26,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"0:4836:7559":{"crate_id":0,"path":["clap","error","kind","ErrorKind","UnknownArgument"],"kind":"variant"},"44:4620:13946":{"crate_id":44,"path":["object","read","pe","file","ImageNtHeaders"],"kind":"trait"},"1:1501:12388":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:1733:12501":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"26:1998:15682":{"crate_id":26,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:11337:13575":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:6668:17230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:53561:16098":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"44:11892:14560":{"crate_id":44,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"43:8288:13360":{"crate_id":43,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:4148:16657":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:0:1558":{"crate_id":25,"path":["regex"],"kind":"module"},"1:15229:12379":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"0:4664:2905":{"crate_id":0,"path":["clap","builder","value_parser","RangedI64ValueParser"],"kind":"struct"},"2:22629:70517":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:24022:12853":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"0:263:2930":{"crate_id":0,"path":["clap","builder","macros","yaml_str"],"kind":"macro"},"17:10529:14503":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"43:4502:15278":{"crate_id":43,"path":["gimli","constants","DwChildren"],"kind":"struct"},"36:5420:16951":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:13788:15198":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:6226:17128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:12124:12352":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"36:609:16354":{"crate_id":36,"path":["libc","unix","tms"],"kind":"struct"},"12:2419:9367":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"44:14320:15048":{"crate_id":44,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"44:9840:13959":{"crate_id":44,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:12926:9258":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"22:2543:1664":{"crate_id":22,"path":["clap_derive","Parser"],"kind":"proc_derive"},"25:2398:15902":{"crate_id":25,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"2:51243:12700":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"0:5117:8361":{"crate_id":0,"path":["clap","parser","parser","ParseResult","ValuesDone"],"kind":"variant"},"2:49356:9603":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"0:4933:7836":{"crate_id":0,"path":["clap","parser","error","MatchesError"],"kind":"enum"},"16:3091:13559":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:10887:14545":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"32:1205:13150":{"crate_id":32,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:4066:9307":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"6:4332:16702":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"44:14824:15191":{"crate_id":44,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:49347:9604":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"0:4569:232":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","Unknown"],"kind":"variant"},"27:1825:73278":{"crate_id":27,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"5:8121:12997":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:13041:14974":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"0:1928:1656":{"crate_id":0,"path":["clap","error"],"kind":"module"},"2:51349:16066":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:10952:12384":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"36:5945:17010":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:2397:11114":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:50082:12604":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"20:324:9383":{"crate_id":20,"path":["yaml_rust","parser","State"],"kind":"enum"},"16:5790:13242":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:6569:13530":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"25:1919:15852":{"crate_id":25,"path":["regex","dfa","Fsm"],"kind":"struct"},"32:865:7854":{"crate_id":32,"path":["hashbrown","map","Keys"],"kind":"struct"},"0:3601:3172":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","HidePossibleValues"],"kind":"variant"},"20:288:23265":{"crate_id":20,"path":["yaml_rust","yaml","YamlIter"],"kind":"struct"},"2:11477:9281":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"28:820:13697":{"crate_id":28,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"44:14654:15128":{"crate_id":44,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:49938:12594":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"0:2502:8055":{"crate_id":0,"path":["clap","parser","matches","arg_matches","unwrap_string_arg"],"kind":"function"},"1:5968:12543":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:10620:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"14:231:12256":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"36:4309:16702":{"crate_id":36,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:2153:670":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"6:5995:17022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"21:257:8270":{"crate_id":21,"path":["linked_hash_map","IntoIter"],"kind":"struct"},"1:2171:12340":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:13912:15233":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"25:2122:15880":{"crate_id":25,"path":["regex","expand","CaptureRef"],"kind":"struct"},"17:12195:14751":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"0:853:1653":{"crate_id":0,"path":["clap","builder","command","Command"],"kind":"typedef"},"0:5274:127":{"crate_id":0,"path":["clap","output","fmt","Style","Error"],"kind":"variant"},"2:47641:9528":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:1576:16391":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:10381:9312":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:10477:13587":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"0:4183:3636":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","Global"],"kind":"variant"},"17:10448:13589":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"44:10959:13563":{"crate_id":44,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:1644:1678":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"36:4402:16743":{"crate_id":36,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"44:11158:13587":{"crate_id":44,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"32:878:1678":{"crate_id":32,"path":["hashbrown","map","Values"],"kind":"struct"},"44:15006:15241":{"crate_id":44,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:11414:12542":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:5226:16839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:3427:9224":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:10149:14480":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:2916:415":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"26:3207:13814":{"crate_id":26,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"18:812:13686":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"36:4175:16668":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"44:11861:13616":{"crate_id":44,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:13172:15022":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:8193:14146":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:4885:9646":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:4394:12472":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"27:1444:12415":{"crate_id":27,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"20:0:1681":{"crate_id":20,"path":["yaml_rust"],"kind":"module"},"43:8017:13391":{"crate_id":43,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"0:5010:7834":{"crate_id":0,"path":["clap","parser","matches","arg_matches","RawValues"],"kind":"struct"},"6:6928:17162":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"0:3220:8850":{"crate_id":0,"path":["clap","output","help","should_show_subcommand"],"kind":"function"},"17:10403:13590":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:510:14379":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:1635:7854":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"32:917:13143":{"crate_id":32,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"0:105:1841":{"crate_id":0,"path":["clap","_cookbook","cargo_example_derive"],"kind":"module"},"2:47103:9544":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"36:4247:12507":{"crate_id":36,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:11231:13616":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"43:8517:13323":{"crate_id":43,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"0:2505:8057":{"crate_id":0,"path":["clap","parser","matches","arg_matches","unwrap_os_string_arg"],"kind":"function"},"36:6192:17128":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:13370:15069":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"44:11832:13942":{"crate_id":44,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:56499:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:12302:12402":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:53614:16101":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:607:16349":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"43:8840:13363":{"crate_id":43,"path":["gimli","read","value","ValueType"],"kind":"enum"},"0:4868:7512":{"crate_id":0,"path":["clap","error","kind","ErrorKind","DisplayHelpOnMissingArgumentOrSubcommand"],"kind":"variant"},"13:120:54922":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:2283:12652":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"12:466:31563":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:4346:16708":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"36:504:2658":{"crate_id":36,"path":["libc","unix","group"],"kind":"struct"},"43:8830:13334":{"crate_id":43,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:1041:12336":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"15:0:9043":{"crate_id":15,"path":["addr2line"],"kind":"module"},"0:1370:6766":{"crate_id":0,"path":["clap","builder","usage_parser","help_start"],"kind":"function"},"1:1482:11184":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"44:5374:13617":{"crate_id":44,"path":["object","read","traits","Object"],"kind":"trait"},"44:10479:14479":{"crate_id":44,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"0:4774:7555":{"crate_id":0,"path":["clap","error","context","ContextKind","ExpectedNumValues"],"kind":"variant"},"25:2902:9433":{"crate_id":25,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"44:12484:14599":{"crate_id":44,"path":["object","elf","SectionHeader32"],"kind":"struct"},"12:2398:17172":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:49385:9606":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:5308:16883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"39:175:11423":{"crate_id":39,"path":["backtrace","print","BacktraceFrameFmt"],"kind":"struct"},"0:1814:7380":{"crate_id":0,"path":["clap","builder","debug_asserts","assert_app_flags"],"kind":"function"},"43:7893:13541":{"crate_id":43,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"35:41:11558":{"crate_id":35,"path":["terminal_size","Height"],"kind":"struct"},"12:2066:12342":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"36:4207:16671":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:10618:12417":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:50535:9306":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"44:14330:15049":{"crate_id":44,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:51769:12706":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"0:211:1666":{"crate_id":0,"path":["clap","derive","ValueEnum"],"kind":"trait"},"25:1904:15847":{"crate_id":25,"path":["regex","dfa","CacheInner"],"kind":"struct"},"44:11236:13593":{"crate_id":44,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"45:604:13996":{"crate_id":45,"path":["miniz_oxide","inflate","stream","MinReset"],"kind":"struct"},"44:9944:14468":{"crate_id":44,"path":["object","endian","LittleEndian"],"kind":"struct"},"44:10786:13667":{"crate_id":44,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:7849:14140":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:49544:9262":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"27:1853:12415":{"crate_id":27,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"0:5248:2693":{"crate_id":0,"path":["clap","output","fmt","Stream","Stderr"],"kind":"variant"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"44:14552:15100":{"crate_id":44,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"27:1457:1674":{"crate_id":27,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"2:52468:12707":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"44:12184:14578":{"crate_id":44,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:8115:8270":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:3325:12449":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:1618:8270":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"43:3620:13251":{"crate_id":43,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"0:3972:1654":{"crate_id":0,"path":["clap","builder","arg","Arg"],"kind":"struct"},"17:542:13262":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:4506:15287":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"36:4104:16648":{"crate_id":36,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"43:6978:13365":{"crate_id":43,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"12:1103:7856":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"38:286:9708":{"crate_id":38,"path":["unicase","Ascii"],"kind":"struct"},"2:50503:12841":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"0:4063:3357":{"crate_id":0,"path":["clap","builder","arg","ArgProvider"],"kind":"enum"},"45:602:13995":{"crate_id":45,"path":["miniz_oxide","inflate","stream","ResetPolicy"],"kind":"trait"},"1:5373:12487":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13810:15203":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"28:1033:13690":{"crate_id":28,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:12038:11618":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"36:3970:16584":{"crate_id":36,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"23:115:9647":{"crate_id":23,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"32:1736:145":{"crate_id":32,"path":["hashbrown","set","HashSet"],"kind":"struct"},"18:645:13697":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:5488:13225":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:12023:11617":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:49138:12927":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"26:3318:13795":{"crate_id":26,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"2:50286:9460":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:14601:12444":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:8488:9169":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:5833:9253":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"25:2097:72611":{"crate_id":25,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"36:6168:17118":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:49558:9279":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:2188:12343":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:12946:14888":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:3104:9401":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"25:2307:15894":{"crate_id":25,"path":["regex","pikevm","Threads"],"kind":"struct"},"32:0:9041":{"crate_id":32,"path":["hashbrown"],"kind":"module"},"44:11180:3024":{"crate_id":44,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:4416:16740":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"44:13017:14721":{"crate_id":44,"path":["object","macho","FatArch64"],"kind":"struct"},"0:4456:1667":{"crate_id":0,"path":["clap","builder","command","App"],"kind":"struct"},"2:24209:16019":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:11118:13965":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:900:12411":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:6965:9575":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:3396:12343":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"31:1230:12342":{"crate_id":31,"path":["indexmap","set","SymmetricDifference"],"kind":"struct"},"17:10611:14506":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"44:12687:14641":{"crate_id":44,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"44:14509:15088":{"crate_id":44,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"27:1801:15640":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"12:895:13143":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:22884:12675":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"43:6940:13345":{"crate_id":43,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:2777:12969":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:7824:14136":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:10705:12973":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"27:1178:12284":{"crate_id":27,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"40:244:15562":{"crate_id":40,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:11962:14716":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"27:1656:13891":{"crate_id":27,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"12:2052:12340":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"36:5555:16998":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"0:4597:6982":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","DirPath"],"kind":"variant"},"0:4937:7559":{"crate_id":0,"path":["clap","parser","error","MatchesError","UnknownArgument"],"kind":"variant"},"14:244:15562":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"9:41:13071":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:12083:17316":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:53599:16100":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"37:357:8978":{"crate_id":37,"path":["termcolor","ColorSpec"],"kind":"struct"},"2:46500:11348":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"5:1694:12962":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:22644:70517":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"33:0:1722":{"crate_id":33,"path":["textwrap"],"kind":"module"},"44:11924:14563":{"crate_id":44,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"36:4093:16644":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"0:4609:7002":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","Hostname"],"kind":"variant"},"44:11035:13629":{"crate_id":44,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"4:0:9036":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"43:3427:13511":{"crate_id":43,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"43:3546:13506":{"crate_id":43,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:37731:9294":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:13532:15114":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:7158:13393":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"0:5305:3334":{"crate_id":0,"path":["clap","util","id","Id"],"kind":"struct"},"25:2934:9276":{"crate_id":25,"path":["regex","re_trait","Matches"],"kind":"struct"},"43:3323:13501":{"crate_id":43,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"44:12906:14680":{"crate_id":44,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"0:4189:3976":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","UseValueDelimiter"],"kind":"variant"},"14:216:54956":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"0:137:2549":{"crate_id":0,"path":["clap","crate_description"],"kind":"macro"},"44:11715:14554":{"crate_id":44,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:50450:16063":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:2194:11263":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:50494:12840":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"32:950:11445":{"crate_id":32,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"0:1381:2901":{"crate_id":0,"path":["clap","builder","value_parser"],"kind":"module"},"2:46048:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"28:896:15578":{"crate_id":28,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"0:3545:3064":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","WaitOnError"],"kind":"variant"},"37:329:1660":{"crate_id":37,"path":["termcolor","ColorChoice"],"kind":"enum"},"12:1121:11453":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"36:5284:16883":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:10322:2682":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:49832:9259":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"44:13076:14729":{"crate_id":44,"path":["object","macho","LcStr"],"kind":"struct"},"27:1225:11921":{"crate_id":27,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"36:592:16346":{"crate_id":36,"path":["libc","unix","linger"],"kind":"struct"},"40:0:9042":{"crate_id":40,"path":["rustc_demangle"],"kind":"module"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:12582:14824":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:56421:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:15185:12372":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:47778:8270":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"32:574:143":{"crate_id":32,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:4599:14125":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"0:2078:7570":{"crate_id":0,"path":["clap","error","try_help"],"kind":"function"},"0:139:2561":{"crate_id":0,"path":["clap","command"],"kind":"macro"},"2:24227:30744":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:9139:9346":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:7629:11612":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:5207:16837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:12073:14737":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:6391:13379":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"43:4239:14394":{"crate_id":43,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:4852:15297":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:8738:9349":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"0:4589:232":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","Unknown"],"kind":"variant"},"2:52892:12736":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"38:301:9710":{"crate_id":38,"path":["unicase","Encoding"],"kind":"enum"},"33:89:9672":{"crate_id":33,"path":["textwrap","core","Fragment"],"kind":"trait"},"0:1406:6977":{"crate_id":0,"path":["clap","builder","value_parser","ValueParserInner","Other"],"kind":"variant"},"0:5070:1677":{"crate_id":0,"path":["clap","parser","matches","value_source","ValueSource"],"kind":"enum"},"0:4181:3942":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","ForbidEmptyValues"],"kind":"variant"},"0:199:1663":{"crate_id":0,"path":["clap","derive","FromArgMatches"],"kind":"trait"},"1:1190:19511":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"39:874:11415":{"crate_id":39,"path":["backtrace","capture","Frame"],"kind":"enum"},"0:5270:8972":{"crate_id":0,"path":["clap","output","fmt","Style","Good"],"kind":"variant"},"0:109:1845":{"crate_id":0,"path":["clap","_cookbook","git_derive"],"kind":"module"},"5:3759:7858":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:11555:14614":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"44:12467:14596":{"crate_id":44,"path":["object","elf","Ident"],"kind":"struct"},"26:3132:13774":{"crate_id":26,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"16:7216:13398":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:3877:16511":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"0:114:1850":{"crate_id":0,"path":["clap","_cookbook","typed_derive"],"kind":"module"},"36:4112:16653":{"crate_id":36,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"27:1925:15663":{"crate_id":27,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"6:4142:16655":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:4509:16778":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:53288:12728":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:49608:9283":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"45:829:9383":{"crate_id":45,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:8639:9334":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"33:180:9673":{"crate_id":33,"path":["textwrap","core","Word"],"kind":"struct"},"5:3341:12953":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"36:1715:16493":{"crate_id":36,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"0:4135:4530":{"crate_id":0,"path":["clap","builder","arg_predicate","ArgPredicate","Equals"],"kind":"variant"},"2:3775:9237":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"36:5151:16819":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:7856:13406":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:9368:14372":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"26:3518:13828":{"crate_id":26,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"43:3500:13504":{"crate_id":43,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"25:2044:13733":{"crate_id":25,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"36:1539:16377":{"crate_id":36,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:48354:9311":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"27:1663:9249":{"crate_id":27,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"44:14450:15076":{"crate_id":44,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:994:12996":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"0:2185:1656":{"crate_id":0,"path":["clap","parser","error"],"kind":"module"},"0:5073:8344":{"crate_id":0,"path":["clap","parser","matches","value_source","ValueSource","EnvVariable"],"kind":"variant"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"33:148:9662":{"crate_id":33,"path":["textwrap","word_separators","WordSeparator"],"kind":"enum"},"9:749:13023":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"42:269:13174":{"crate_id":42,"path":["addr2line","RangeAttributes"],"kind":"struct"},"0:2081:7585":{"crate_id":0,"path":["clap","error","escape"],"kind":"function"},"16:4704:15292":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:9133:56599":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:6591:13385":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"0:3581:3129":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","ArgRequiredElseHelp"],"kind":"variant"},"2:11014:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:13986:15248":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"0:3605:3178":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","NoBinaryName"],"kind":"variant"},"0:4588:1673":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint"],"kind":"enum"},"16:7042:13545":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"44:9866:13579":{"crate_id":44,"path":["object","common","SectionFlags"],"kind":"enum"},"44:14286:15037":{"crate_id":44,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"25:1565:6599":{"crate_id":25,"path":["regex","re_unicode","Captures"],"kind":"struct"},"17:10211:14496":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:52228:12727":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"44:5419:13664":{"crate_id":44,"path":["object","read","traits","ObjectSegment"],"kind":"trait"},"2:47896:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:7792:2754":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"15:248:13170":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"9:692:13021":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"16:3506:13508":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"43:6248:13218":{"crate_id":43,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:5030:9630":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:10059:12821":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"36:3937:16572":{"crate_id":36,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:12431:14803":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:7332:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"32:962:12389":{"crate_id":32,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"43:8707:13404":{"crate_id":43,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"0:3388:3335":{"crate_id":0,"path":["clap","util","fnv","Key"],"kind":"trait"},"1:15483:67020":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:46139:12646":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"43:8352:13330":{"crate_id":43,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:1748:16500":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:88:49362":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:24919:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"44:12504:14609":{"crate_id":44,"path":["object","elf","SectionHeader64"],"kind":"struct"},"45:712:13021":{"crate_id":45,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"44:12619:14626":{"crate_id":44,"path":["object","elf","Rel32"],"kind":"struct"},"2:8960:9247":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:16023:9075":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:13933:15239":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"44:14494:15086":{"crate_id":44,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:11714:14642":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"36:5122:16795":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:9639:67060":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"0:3593:3158":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","DisableHelpSubcommand"],"kind":"variant"},"6:6077:17057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"31:269:7856":{"crate_id":31,"path":["indexmap","map","core","Entry"],"kind":"enum"},"30:394:13898":{"crate_id":30,"path":["os_str_bytes","pattern","EncodedChar"],"kind":"struct"},"0:5161:5211":{"crate_id":0,"path":["clap","parser","parser","Identifier","Index"],"kind":"variant"},"2:8523:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"28:0:9046":{"crate_id":28,"path":["memchr"],"kind":"module"},"1:16011:9065":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:13973:16010":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"44:11703:14553":{"crate_id":44,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"0:204:1661":{"crate_id":0,"path":["clap","derive","Args"],"kind":"trait"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:11360:12490":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:12712:14849":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:3145:13511":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"44:11533:14542":{"crate_id":44,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:7928:7050":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:51474:12690":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:10375:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"0:113:1849":{"crate_id":0,"path":["clap","_cookbook","repl"],"kind":"module"},"36:4462:16771":{"crate_id":36,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:3376:9215":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"26:2992:63388":{"crate_id":26,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"17:13590:15128":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:3366:2681":{"crate_id":1,"path":["std","io"],"kind":"module"},"0:4203:3569":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","Last"],"kind":"variant"},"0:5291:9008":{"crate_id":0,"path":["clap","util","graph","Child"],"kind":"struct"},"39:236:11415":{"crate_id":39,"path":["backtrace","backtrace","Frame"],"kind":"struct"},"32:1184:13149":{"crate_id":32,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:53535:16096":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:3648:9507":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:15235:12380":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:5384:13217":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:9245:13570":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:1486:12393":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"0:1299:6555":{"crate_id":0,"path":["clap","builder","command","two_elements_of"],"kind":"function"},"17:9849:72594":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"43:8732:13337":{"crate_id":43,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"27:1403:15611":{"crate_id":27,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"36:150:49428":{"crate_id":36,"path":["libc","unix","FILE"],"kind":"enum"},"0:3498:1705":{"crate_id":0,"path":["clap","INVALID_UTF8"],"kind":"constant"},"5:1091:14123":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"43:5975:13256":{"crate_id":43,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"0:4172:1671":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings"],"kind":"enum"},"25:2405:15838":{"crate_id":25,"path":["regex","prog","EmptyLook"],"kind":"enum"},"6:1912:50733":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:10095:13666":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:12307:14766":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:4300:9519":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"12:1703:13162":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:46423:11354":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"37:0:1561":{"crate_id":37,"path":["termcolor"],"kind":"module"},"16:5996:13369":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"43:8249:13402":{"crate_id":43,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:3287:13507":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"25:1583:13726":{"crate_id":25,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"16:7250:13401":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"30:92:13896":{"crate_id":30,"path":["os_str_bytes","OsStringBytes"],"kind":"trait"},"44:12669:14633":{"crate_id":44,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"43:6016:14468":{"crate_id":43,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"44:10641:14482":{"crate_id":44,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:49976:12598":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"44:15064:15251":{"crate_id":44,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:7185:13395":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"43:7462:13382":{"crate_id":43,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"43:7688:13535":{"crate_id":43,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:1524:12391":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:46408:11352":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"18:767:15588":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"0:2894:4695":{"crate_id":0,"path":["clap","parser","validator","get_possible_values"],"kind":"function"},"5:5536:9333":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"0:3048:8695":{"crate_id":0,"path":["clap","mkeymap","append_keys"],"kind":"function"},"1:6699:17053":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:12087:9601":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"44:11011:13591":{"crate_id":44,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:6013:17029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"44:13984:14888":{"crate_id":44,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"0:4866:7478":{"crate_id":0,"path":["clap","error","kind","ErrorKind","DisplayHelp"],"kind":"variant"},"44:14251:15033":{"crate_id":44,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:5903:1340":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"26:3284:13799":{"crate_id":26,"path":["regex_syntax","hir","Group"],"kind":"struct"},"2:51917:16069":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:1518:12390":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"25:2447:15907":{"crate_id":25,"path":["regex","prog","InstBytes"],"kind":"struct"},"17:10353:13629":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:14609:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"31:1174:12341":{"crate_id":31,"path":["indexmap","set","Difference"],"kind":"struct"},"43:1233:13260":{"crate_id":43,"path":["gimli","read","reader","Reader"],"kind":"trait"},"44:14684:15134":{"crate_id":44,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"44:14477:15079":{"crate_id":44,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"32:1883:7858":{"crate_id":32,"path":["hashbrown","set","Iter"],"kind":"struct"},"36:5220:16849":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"31:1481:9625":{"crate_id":31,"path":["indexmap","Bucket"],"kind":"struct"},"17:13402:15076":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"44:14267:15036":{"crate_id":44,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"26:3482:13827":{"crate_id":26,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"44:14379:15059":{"crate_id":44,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"0:258:2932":{"crate_id":0,"path":["clap","builder","macros","yaml_tuple3"],"kind":"macro"},"2:23217:12689":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:5971:17005":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:4075:16623":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"27:1901:15657":{"crate_id":27,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"2:13364:30773":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"2:24317:12870":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"0:2228:7910":{"crate_id":0,"path":["clap","parser","matches","arg_matches"],"kind":"module"},"16:6219:13375":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"43:7357:13166":{"crate_id":43,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"26:2568:13791":{"crate_id":26,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"44:13343:14766":{"crate_id":44,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"44:13492:14807":{"crate_id":44,"path":["object","macho","TwolevelHint"],"kind":"struct"},"44:10254:13582":{"crate_id":44,"path":["object","read","util","StringTable"],"kind":"struct"},"1:8488:12354":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"26:1929:1664":{"crate_id":26,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"32:411:13154":{"crate_id":32,"path":["hashbrown","raw","inner","RawIntoIter"],"kind":"struct"},"2:13159:9250":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:6583:7922":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"36:5378:16933":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"0:140:2571":{"crate_id":0,"path":["clap","app_from_crate"],"kind":"macro"},"6:6899:17155":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"0:4858:7536":{"crate_id":0,"path":["clap","error","kind","ErrorKind","MissingRequiredArgument"],"kind":"variant"},"26:3333:13797":{"crate_id":26,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"2:56447:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11981:14721":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"44:294:14377":{"crate_id":44,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"18:637:15577":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"43:6342:13225":{"crate_id":43,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"5:5837:9254":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:48899:16051":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"44:560:13262":{"crate_id":44,"path":["object","read","any","Section"],"kind":"struct"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:6211:17121":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"0:5157:6728":{"crate_id":0,"path":["clap","parser","parser","Identifier","Short"],"kind":"variant"},"1:1415:7858":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:3966:16573":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:12671:14844":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"43:5343:15290":{"crate_id":43,"path":["gimli","constants","DwAddr"],"kind":"struct"},"25:1836:72621":{"crate_id":25,"path":["regex","compile","InstHole"],"kind":"enum"},"1:8690:9336":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"9:157:13038":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"0:3401:8995":{"crate_id":0,"path":["clap","util","graph"],"kind":"module"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"44:9606:13581":{"crate_id":44,"path":["object","common","SectionKind"],"kind":"enum"},"43:7004:13366":{"crate_id":43,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"40:56:14596":{"crate_id":40,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"44:11085:13590":{"crate_id":44,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"43:7635:13387":{"crate_id":43,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"0:4221:3616":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","Exclusive"],"kind":"variant"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"0:4788:7527":{"crate_id":0,"path":["clap","error","context","ContextKind","SuggestedValue"],"kind":"variant"},"43:5052:15282":{"crate_id":43,"path":["gimli","constants","DwAte"],"kind":"struct"},"43:7044:13373":{"crate_id":43,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:52534:12692":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"0:5127:8394":{"crate_id":0,"path":["clap","parser","parser","ParseResult","EqualsNotProvided"],"kind":"variant"},"2:49396:9596":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"27:1316:13840":{"crate_id":27,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"6:6911:17157":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"44:10280:72602":{"crate_id":44,"path":["object","read","any","FileInternal"],"kind":"enum"},"28:888:9294":{"crate_id":28,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:23208:12284":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"0:4647:2916":{"crate_id":0,"path":["clap","builder","value_parser","EnumValueParser"],"kind":"struct"},"44:11768:14558":{"crate_id":44,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"28:812:15577":{"crate_id":28,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"0:3597:3165":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","PropagateVersion"],"kind":"variant"},"44:10084:14373":{"crate_id":44,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:4378:8270":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"43:7712:13537":{"crate_id":43,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:7514:13347":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:5328:16899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:45940:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"45:1040:13088":{"crate_id":45,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:12095:14738":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:46191:12753":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:5580:13230":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:6672:9333":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9034:13961":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:5360:13216":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:3195:13503":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"44:11978:14569":{"crate_id":44,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:3384:9216":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"0:2823:3377":{"crate_id":0,"path":["clap","parser","validator","Validator"],"kind":"struct"},"44:10891:14496":{"crate_id":44,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"44:12644:14631":{"crate_id":44,"path":["object","elf","Rel64"],"kind":"struct"},"1:16016:9068":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:3396:9218":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:5330:14469":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"0:4724:1700":{"crate_id":0,"path":["clap","builder","regex","RegexRef"],"kind":"enum"},"1:820:3335":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:10379:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"39:869:11425":{"crate_id":39,"path":["backtrace","capture","BacktraceFrame"],"kind":"struct"},"31:1202:12340":{"crate_id":31,"path":["indexmap","set","Intersection"],"kind":"struct"},"1:8410:12958":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"16:6357:13378":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:46548:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:1215:12964":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:5741:12286":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:10041:14488":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:14804:11126":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"44:11679:14551":{"crate_id":44,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:6744:13535":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6691:13387":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"43:3569:13507":{"crate_id":43,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:16008:9062":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"25:1947:9383":{"crate_id":25,"path":["regex","dfa","State"],"kind":"struct"},"39:884:11426":{"crate_id":39,"path":["backtrace","capture","BacktraceSymbol"],"kind":"struct"},"26:2961:15681":{"crate_id":26,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"2:24783:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:10366:11418":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:10816:12444":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"0:3213:5478":{"crate_id":0,"path":["clap","output","help","HelpWriter","Normal"],"kind":"variant"},"43:6449:13231":{"crate_id":43,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"45:769:13023":{"crate_id":45,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"43:7968:13544":{"crate_id":43,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:1441:7856":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:15391:12488":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"43:8789:13405":{"crate_id":43,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"25:2032:13728":{"crate_id":25,"path":["regex","exec","Exec"],"kind":"struct"},"0:4766:7519":{"crate_id":0,"path":["clap","error","context","ContextKind","PriorArg"],"kind":"variant"},"2:5165:9640":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:4400:12474":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:3970:14123":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:3577:5211":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:11658:9386":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"44:2375:13628":{"crate_id":44,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"44:12132:13962":{"crate_id":44,"path":["object","read","SymbolMap"],"kind":"struct"},"31:1075:7858":{"crate_id":31,"path":["indexmap","set","Iter"],"kind":"struct"},"43:8151:13397":{"crate_id":43,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:4160:16666":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"44:14997:15239":{"crate_id":44,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"0:4840:7534":{"crate_id":0,"path":["clap","error","kind","ErrorKind","UnrecognizedSubcommand"],"kind":"variant"},"44:11808:13614":{"crate_id":44,"path":["object","read","pe","export","Export"],"kind":"struct"},"0:5245:2692":{"crate_id":0,"path":["clap","output","fmt","Stream"],"kind":"enum"},"44:12085:13618":{"crate_id":44,"path":["object","read","SymbolIndex"],"kind":"struct"},"43:7580:13343":{"crate_id":43,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:7870:13333":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"43:8102:13393":{"crate_id":43,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"12:750:7858":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"0:5031:8079":{"crate_id":0,"path":["clap","parser","matches","arg_matches","GroupedValues"],"kind":"struct"},"26:3265:13818":{"crate_id":26,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"44:11754:14557":{"crate_id":44,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:1663:11444":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:12632:14841":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:12171:12357":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"25:2289:15852":{"crate_id":25,"path":["regex","pikevm","Fsm"],"kind":"struct"},"28:1013:9251":{"crate_id":28,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:7742:9551":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:5579:16998":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"0:3210:8787":{"crate_id":0,"path":["clap","output","help","TAB_WIDTH"],"kind":"constant"},"44:13530:14811":{"crate_id":44,"path":["object","macho","RpathCommand"],"kind":"struct"},"44:12705:14642":{"crate_id":44,"path":["object","elf","Dyn32"],"kind":"struct"},"0:4911:7638":{"crate_id":0,"path":["clap","error","Message","Raw"],"kind":"variant"},"16:5472:13224":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"27:1308:13839":{"crate_id":27,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"43:6969:13322":{"crate_id":43,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:14210:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"23:404:11938":{"crate_id":23,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"0:4595:6980":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","FilePath"],"kind":"variant"},"18:897:13693":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"45:618:13999":{"crate_id":45,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"28:977:13685":{"crate_id":28,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"44:14906:15218":{"crate_id":44,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"36:3982:16593":{"crate_id":36,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"0:3211:5214":{"crate_id":0,"path":["clap","output","help","HelpWriter"],"kind":"enum"},"6:6976:17170":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:8954:13581":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:9065:13964":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"36:1752:16505":{"crate_id":36,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"28:958:15577":{"crate_id":28,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"0:4872:7564":{"crate_id":0,"path":["clap","error","kind","ErrorKind","ArgumentNotFound"],"kind":"variant"},"17:9719:14477":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:10377:13627":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"44:10329:14476":{"crate_id":44,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"44:11059:13627":{"crate_id":44,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"0:5058:7830":{"crate_id":0,"path":["clap","parser","matches","matched_arg","MatchedArg"],"kind":"struct"},"36:5339:16919":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:14808:12315":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"44:12419:14581":{"crate_id":44,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:10975:14555":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:16022:9074":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:6247:17140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:5231:15303":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:50133:12606":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:6662:17150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"25:2637:9422":{"crate_id":25,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"16:7467:13328":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:46132:7050":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:56473:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:3050:2603":{"crate_id":0,"path":["clap","output","help"],"kind":"module"},"26:2141:13772":{"crate_id":26,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"17:11378:13573":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:3435:9226":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"44:13618:14824":{"crate_id":44,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:5208:9642":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"43:3055:13522":{"crate_id":43,"path":["gimli","common","LineEncoding"],"kind":"struct"},"44:11139:14425":{"crate_id":44,"path":["object","read","elf","note","Note"],"kind":"struct"},"23:0:1557":{"crate_id":23,"path":["once_cell"],"kind":"module"},"21:415:7854":{"crate_id":21,"path":["linked_hash_map","Keys"],"kind":"struct"},"1:14570:17366":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"36:4493:16781":{"crate_id":36,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"26:2503:13788":{"crate_id":26,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"17:10635:14508":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"12:379:13155":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"25:272:15795":{"crate_id":25,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"43:7076:13374":{"crate_id":43,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"45:796:13068":{"crate_id":45,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"44:10708:14487":{"crate_id":44,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:3039:71299":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"43:8930:127":{"crate_id":43,"path":["gimli","read","Error"],"kind":"enum"},"2:24148:7544":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"44:10156:14375":{"crate_id":44,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:10279:13563":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:14149:11156":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"36:4423:16753":{"crate_id":36,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"36:4087:16641":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"26:2539:13789":{"crate_id":26,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"36:1564:16391":{"crate_id":36,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11678:14633":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:6126:13371":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:5889:14134":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"28:853:142":{"crate_id":28,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:10468:13588":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"0:3583:3140":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","DeriveDisplayOrder"],"kind":"variant"},"2:51691:12714":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:11156:12317":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"43:1676:13351":{"crate_id":43,"path":["gimli","read","line","LineProgram"],"kind":"trait"},"43:7408:13339":{"crate_id":43,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:2553:12970":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"26:3220:13815":{"crate_id":26,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"17:4157:13649":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"44:11209:13592":{"crate_id":44,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"0:4778:7599":{"crate_id":0,"path":["clap","error","context","ContextKind","ActualNumOccurrences"],"kind":"variant"},"25:2194:15883":{"crate_id":25,"path":["regex","input","ByteInput"],"kind":"struct"},"2:47787:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"29:75:5440":{"crate_id":29,"path":["clap_lex","RawArgs"],"kind":"struct"},"16:6424:13380":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"26:2470:13786":{"crate_id":26,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"0:3489:7448":{"crate_id":0,"path":["clap","util","USAGE_CODE"],"kind":"constant"},"44:12540:14614":{"crate_id":44,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"32:2242:13799":{"crate_id":32,"path":["hashbrown","raw","inner","sse2","Group"],"kind":"struct"},"17:13062:14982":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"36:6628:17150":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"44:12576:14621":{"crate_id":44,"path":["object","elf","Sym64"],"kind":"struct"},"27:1778:15637":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"44:11249:14503":{"crate_id":44,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"27:1785:15638":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"43:660:13238":{"crate_id":43,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:3561:9506":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:10331:13591":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"44:13831:14866":{"crate_id":44,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"0:4842:6950":{"crate_id":0,"path":["clap","error","kind","ErrorKind","EmptyValue"],"kind":"variant"},"2:49435:9595":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:9839:13591":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"0:3310:660":{"crate_id":0,"path":["clap","output","fmt"],"kind":"module"},"44:11903:13958":{"crate_id":44,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:50270:9456":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"44:13819:14859":{"crate_id":44,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:4670:9486":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"17:11159:13963":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"0:4676:2906":{"crate_id":0,"path":["clap","builder","value_parser","RangedU64ValueParser"],"kind":"struct"},"43:4348:15274":{"crate_id":43,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:14043:70388":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"16:3320:13560":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"44:14306:15045":{"crate_id":44,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:52421:12703":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"43:5525:15296":{"crate_id":43,"path":["gimli","constants","DwIdx"],"kind":"struct"},"43:3711:13254":{"crate_id":43,"path":["gimli","common","SectionId"],"kind":"enum"},"0:1462:2908":{"crate_id":0,"path":["clap","builder","value_parser","TypedValueParser"],"kind":"trait"},"1:10377:11419":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"27:1493:15622":{"crate_id":27,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"43:6826:13368":{"crate_id":43,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"36:1692:16483":{"crate_id":36,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"44:1652:13586":{"crate_id":44,"path":["object","read","elf","file","FileHeader"],"kind":"trait"},"17:13154:15017":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"18:730:72604":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:12061:17363":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:11616:14625":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"44:10984:13566":{"crate_id":44,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"44:13006:14718":{"crate_id":44,"path":["object","macho","FatArch32"],"kind":"struct"},"6:4055:16614":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:2159:8270":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"0:4726:7323":{"crate_id":0,"path":["clap","builder","regex","RegexRef","RegexSet"],"kind":"variant"},"2:56486:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"32:2274:9367":{"crate_id":32,"path":["hashbrown","TryReserveError"],"kind":"enum"},"21:241:7858":{"crate_id":21,"path":["linked_hash_map","Iter"],"kind":"struct"},"1:11674:9388":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"43:6618:13241":{"crate_id":43,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"43:5624:15299":{"crate_id":43,"path":["gimli","constants","DwLne"],"kind":"struct"},"0:4605:6997":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","CommandWithArguments"],"kind":"variant"},"0:300:2580":{"crate_id":0,"path":["clap","builder","arg"],"kind":"module"},"2:45864:9239":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:1157:19510":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"0:111:1847":{"crate_id":0,"path":["clap","_cookbook","multicall_hostname"],"kind":"module"},"2:57774:16111":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"36:6850:17155":{"crate_id":36,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"36:4219:16672":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"30:400:7334":{"crate_id":30,"path":["os_str_bytes","raw_str","RawOsStr"],"kind":"struct"},"0:4599:6984":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","ExecutablePath"],"kind":"variant"},"0:3442:9013":{"crate_id":0,"path":["clap","util","id","precomputed_hashes"],"kind":"macro"},"2:11505:9617":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"0:2196:7909":{"crate_id":0,"path":["clap","parser","matches","any_value"],"kind":"module"},"28:1042:13691":{"crate_id":28,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"26:332:13745":{"crate_id":26,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"16:7549:13335":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"12:2059:12341":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"36:662:49759":{"crate_id":36,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:7932:67064":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:7117:10210":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"0:116:1697":{"crate_id":0,"path":["clap","_derive","_tutorial"],"kind":"module"},"2:46717:9560":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"0:1402:180":{"crate_id":0,"path":["clap","builder","value_parser","ValueParserInner","OsString"],"kind":"variant"},"43:7120:13920":{"crate_id":43,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:11026:13953":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"44:11818:13985":{"crate_id":44,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:13847:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"43:5179:15286":{"crate_id":43,"path":["gimli","constants","DwAccess"],"kind":"struct"},"44:13478:14805":{"crate_id":44,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"26:2878:127":{"crate_id":26,"path":["regex_syntax","error","Error"],"kind":"enum"},"6:161:49429":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:8438:9550":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:50337:12885":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"37:92:9681":{"crate_id":37,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"0:4173:3588":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","Required"],"kind":"variant"},"17:10571:13977":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:8481:12353":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"0:4770:7526":{"crate_id":0,"path":["clap","error","context","ContextKind","InvalidValue"],"kind":"variant"},"26:2639:13795":{"crate_id":26,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"44:12758:14655":{"crate_id":44,"path":["object","elf","Verdaux"],"kind":"struct"},"44:11990:127":{"crate_id":44,"path":["object","read","Error"],"kind":"struct"},"16:5561:13229":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:47762:7858":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:5436:16949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"32:993:12391":{"crate_id":32,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:6202:17118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"44:2657:13633":{"crate_id":44,"path":["object","read","elf","relocation","Rela"],"kind":"trait"},"44:9976:13945":{"crate_id":44,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:37707:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:3717:9230":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6166:13372":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"36:4015:16608":{"crate_id":36,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"0:1808:7373":{"crate_id":0,"path":["clap","builder","debug_asserts","detect_duplicate_flags"],"kind":"function"},"16:3041:13501":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"44:14596:15114":{"crate_id":44,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:3241:13505":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"27:1297:13838":{"crate_id":27,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"16:7303:13402":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:6110:13365":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:3896:16521":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"44:220:13578":{"crate_id":44,"path":["object","read","read_ref","ReadRef"],"kind":"trait"},"20:313:9156":{"crate_id":20,"path":["yaml_rust","emitter","EmitError"],"kind":"enum"},"21:507:11453":{"crate_id":21,"path":["linked_hash_map","OccupiedEntry"],"kind":"struct"},"28:920:72605":{"crate_id":28,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"32:1225:13151":{"crate_id":32,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"47:93:11462":{"crate_id":47,"path":["strsim","StrSimError"],"kind":"enum"},"30:0:9476":{"crate_id":30,"path":["os_str_bytes"],"kind":"module"},"0:3462:7235":{"crate_id":0,"path":["clap","util","str_to_bool","FALSE_LITERALS"],"kind":"constant"},"6:1634:16429":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:4321:16697":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:2507:7849":{"crate_id":0,"path":["clap","parser","matches","matched_arg"],"kind":"module"},"27:1589:13872":{"crate_id":27,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"6:5444:16951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"26:3150:13778":{"crate_id":26,"path":["regex_syntax","hir","Class"],"kind":"enum"},"6:5538:16972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"43:8413:13328":{"crate_id":43,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:2456:1661":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"44:14604:15117":{"crate_id":44,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"44:10797:13668":{"crate_id":44,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"43:3523:13505":{"crate_id":43,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:1653:11445":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"17:13574:15125":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"23:157:2543":{"crate_id":23,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"1:7286:16116":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:3549:15273":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"0:4784:7531":{"crate_id":0,"path":["clap","error","context","ContextKind","SuggestedSubcommand"],"kind":"variant"},"1:5858:12535":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"26:1992:15681":{"crate_id":26,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"2:51381:12713":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"44:13735:14848":{"crate_id":44,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"26:3298:13800":{"crate_id":26,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"16:4535:15288":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"27:1868:15651":{"crate_id":27,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"44:14962:15226":{"crate_id":44,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:6768:13537":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:49990:12601":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"0:3573:3113":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","UseLongFormatForHelpSubcommand"],"kind":"variant"},"31:672:7858":{"crate_id":31,"path":["indexmap","map","Iter"],"kind":"struct"},"44:13444:14802":{"crate_id":44,"path":["object","macho","DylibModule64"],"kind":"struct"},"0:250:2753":{"crate_id":0,"path":["clap","derive","format_error"],"kind":"function"},"2:24093:16012":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"5:1235:12965":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:2484:56683":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:22663:70616":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"44:9657:13955":{"crate_id":44,"path":["object","common","ComdatKind"],"kind":"enum"},"27:1894:15656":{"crate_id":27,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"6:4362:16717":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"0:5141:7832":{"crate_id":0,"path":["clap","parser","parser","PendingArg"],"kind":"struct"},"16:7279:13546":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"0:4813:216":{"crate_id":0,"path":["clap","error","context","ContextValue","String"],"kind":"variant"},"1:15092:12364":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"36:5213:16847":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:4410:16739":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:16010:9064":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:4392:16733":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:8463:11185":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"30:114:12284":{"crate_id":30,"path":["os_str_bytes","private","Sealed"],"kind":"trait"},"2:50154:12608":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"0:5324:5552":{"crate_id":0,"path":["clap","util","color","ColorChoice","Never"],"kind":"variant"},"0:259:2934":{"crate_id":0,"path":["clap","builder","macros","yaml_vec_or_str"],"kind":"macro"},"43:3774:13509":{"crate_id":43,"path":["gimli","common","DwoId"],"kind":"struct"},"17:9933:14481":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12456:14807":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:3264:13506":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:4526:16786":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:12494:14811":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"0:2079:1066":{"crate_id":0,"path":["clap","error","quote"],"kind":"function"},"36:1650:16454":{"crate_id":36,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"25:2674:9421":{"crate_id":25,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"2:46641:9195":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13282:15049":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"0:3571:3110":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","AllowInvalidUtf8ForExternalSubcommands"],"kind":"variant"},"0:4635:2919":{"crate_id":0,"path":["clap","builder","value_parser","OsStringValueParser"],"kind":"struct"},"2:51619:12726":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"27:1817:15645":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"1:12132:8270":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"25:3011:9421":{"crate_id":25,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"44:2608:13585":{"crate_id":44,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"0:0:1723":{"crate_id":0,"path":["clap"],"kind":"module"},"31:927:8701":{"crate_id":31,"path":["indexmap","set","IndexSet"],"kind":"struct"},"44:10231:13613":{"crate_id":44,"path":["object","read","util","ByteString"],"kind":"struct"},"0:3514:3005":{"crate_id":0,"path":["clap","builder","action","ArgAction","SetFalse"],"kind":"variant"},"17:10788:14541":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"27:0:9403":{"crate_id":27,"path":["aho_corasick"],"kind":"module"},"37:237:9687":{"crate_id":37,"path":["termcolor","Ansi"],"kind":"struct"},"17:11186:13957":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:6780:13388":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"44:11289:13976":{"crate_id":44,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:2262:12967":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:3297:10905":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:50290:9461":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"0:4848:7547":{"crate_id":0,"path":["clap","error","kind","ErrorKind","TooManyValues"],"kind":"variant"},"36:6206:17137":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"36:6043:17057":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"26:3181:13812":{"crate_id":26,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"25:1961:15783":{"crate_id":25,"path":["regex","dfa","Byte"],"kind":"struct"},"16:4350:15282":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"0:1372:2900":{"crate_id":0,"path":["clap","builder","value_hint"],"kind":"module"},"23:396:9647":{"crate_id":23,"path":["once_cell","imp","OnceCell"],"kind":"struct"},"16:6152:13326":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:3894:12959":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"28:950:15577":{"crate_id":28,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"43:7166:13927":{"crate_id":43,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:49626:9282":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"0:4219:3938":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","AllowInvalidUtf8"],"kind":"variant"},"36:3997:16599":{"crate_id":36,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:49708:9274":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:4641:15290":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"36:6020:17056":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"28:1061:13692":{"crate_id":28,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4116:16644":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:5855:13244":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"25:1243:6599":{"crate_id":25,"path":["regex","re_bytes","Captures"],"kind":"struct"},"26:3446:63391":{"crate_id":26,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"6:6922:17161":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"25:2594:9430":{"crate_id":25,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"30:190:13897":{"crate_id":30,"path":["os_str_bytes","pattern","Encoded"],"kind":"trait"},"2:2062:9486":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"0:1721:1558":{"crate_id":0,"path":["clap","builder","regex"],"kind":"module"},"43:7106:13919":{"crate_id":43,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"16:7804:13336":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:6132:17070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"44:9814:13615":{"crate_id":44,"path":["object","common","FileFlags"],"kind":"enum"},"12:432:13153":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:9766:14161":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"25:1969:15858":{"crate_id":25,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"1:5981:12544":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"44:10409:72600":{"crate_id":44,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:7477:13349":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:15045:69566":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:4762:15294":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"0:4530:1672":{"crate_id":0,"path":["clap","builder","possible_value","PossibleValue"],"kind":"struct"},"6:1531:16369":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:1507:12389":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"0:4934:7899":{"crate_id":0,"path":["clap","parser","error","MatchesError","Downcast"],"kind":"variant"},"2:24817:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"16:6731:13534":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:47094:9517":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"44:10751:13672":{"crate_id":44,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"0:3595:3162":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","DisableVersionFlag"],"kind":"variant"},"43:8063:13259":{"crate_id":43,"path":["gimli","read","op","Expression"],"kind":"struct"},"26:2100:13758":{"crate_id":26,"path":["regex_syntax","ast","Span"],"kind":"struct"},"12:1784:14117":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:7927:12431":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"1:5008:12316":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"18:755:72603":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"36:6844:17154":{"crate_id":36,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"36:4254:16674":{"crate_id":36,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"36:4451:16765":{"crate_id":36,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"43:7564:13528":{"crate_id":43,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1939:11184":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"25:3031:9422":{"crate_id":25,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"0:4694:2917":{"crate_id":0,"path":["clap","builder","value_parser","FalseyValueParser"],"kind":"struct"},"2:48368:9318":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"26:3441:15789":{"crate_id":26,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"5:5875:14131":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"16:4995:15301":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"43:6778:13247":{"crate_id":43,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"44:5487:12284":{"crate_id":44,"path":["object","read","private","Sealed"],"kind":"trait"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:9551:13613":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"26:2345:13780":{"crate_id":26,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"32:837:11446":{"crate_id":32,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"9:809:9383":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:10160:14493":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"31:409:7924":{"crate_id":31,"path":["indexmap","map","IndexMap"],"kind":"struct"},"0:4567:5130":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","Multiple"],"kind":"variant"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:7642:11191":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"12:815:11446":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:5285:16870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"43:3970:15271":{"crate_id":43,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:15019:11617":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:47692:10161":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:9162:13615":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"0:4593:4709":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","AnyPath"],"kind":"variant"},"0:278:2921":{"crate_id":0,"path":["clap","builder","action","CountType"],"kind":"typedef"},"43:7152:13922":{"crate_id":43,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:9759:14478":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"43:8279:13346":{"crate_id":43,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:9848:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:6554:13383":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:5717:13236":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"18:169:31572":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11738:14646":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"12:399:13154":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"20:600:15965":{"crate_id":20,"path":["yaml_rust","scanner","Scanner"],"kind":"struct"},"0:4914:7639":{"crate_id":0,"path":["clap","error","Message","Formatted"],"kind":"variant"},"36:4369:16733":{"crate_id":36,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"18:721:15578":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"0:4776:7551":{"crate_id":0,"path":["clap","error","context","ContextKind","MinValues"],"kind":"variant"},"2:49680:9280":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:4306:9528":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:8298:9179":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"36:3989:16597":{"crate_id":36,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:49850:9256":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"25:325:31574":{"crate_id":25,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"36:5428:16953":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"44:11986:13953":{"crate_id":44,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"25:1877:15843":{"crate_id":25,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"2:49365:9607":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:46392:12738":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"44:702:11418":{"crate_id":44,"path":["object","read","any","Symbol"],"kind":"struct"},"44:14108:14982":{"crate_id":44,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:1607:9528":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:24173:12769":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:24749:11941":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"39:711:15823":{"crate_id":39,"path":["backtrace","symbolize","gimli","Cache"],"kind":"struct"},"16:7453:13327":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"44:10880:14495":{"crate_id":44,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:9264:14468":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"18:695:13700":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"44:10272:128":{"crate_id":44,"path":["object","read","any","File"],"kind":"struct"},"18:802:13685":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:8132:12432":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"17:10516:13593":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"9:603:13999":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:12327:14767":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"32:2267:17174":{"crate_id":32,"path":["hashbrown","raw","inner","TableLayout"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:894:12410":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"44:10741:14490":{"crate_id":44,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:1488:11445":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"45:742:13022":{"crate_id":45,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:5485:16961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:51307:12721":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"36:4195:16670":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:49528:9264":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"25:1817:72615":{"crate_id":25,"path":["regex","compile","MaybeInst"],"kind":"enum"},"16:6464:13339":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"0:1400:216":{"crate_id":0,"path":["clap","builder","value_parser","ValueParserInner","String"],"kind":"variant"},"2:53146:12724":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"40:231:12256":{"crate_id":40,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"5:2310:13005":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"26:2155:13747":{"crate_id":26,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"45:706:13019":{"crate_id":45,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"36:6077:17064":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"0:4850:7550":{"crate_id":0,"path":["clap","error","kind","ErrorKind","TooFewValues"],"kind":"variant"},"17:12756:14856":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"44:12838:14678":{"crate_id":44,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"25:2226:15884":{"crate_id":25,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"44:10439:14478":{"crate_id":44,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:9659:72596":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"27:1934:15664":{"crate_id":27,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"12:787:11444":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:12891:9469":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"18:136:31568":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:8474:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"44:14863:15202":{"crate_id":44,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"27:1393:15610":{"crate_id":27,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"2:12137:14143":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"17:13554:15119":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"36:5266:16871":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"0:5320:2694":{"crate_id":0,"path":["clap","util","color","ColorChoice","Auto"],"kind":"variant"},"26:2377:13782":{"crate_id":26,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"1:11232:12322":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:51588:12722":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:4471:5460":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:46699:7921":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"27:1861:15650":{"crate_id":27,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"25:2282:15888":{"crate_id":25,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"0:4080:3370":{"crate_id":0,"path":["clap","builder","arg","DisplayOrder"],"kind":"enum"},"32:388:13155":{"crate_id":32,"path":["hashbrown","raw","inner","RawIter"],"kind":"struct"},"27:1793:15639":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"36:4292:16694":{"crate_id":36,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"0:1769:2902":{"crate_id":0,"path":["clap","builder","debug_asserts"],"kind":"module"},"43:8141:13396":{"crate_id":43,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"26:2008:127":{"crate_id":26,"path":["regex_syntax","ast","Error"],"kind":"struct"},"2:48361:9312":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:3800:15278":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:50274:9457":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"44:9499:13612":{"crate_id":44,"path":["object","common","Architecture"],"kind":"enum"},"44:13029:14723":{"crate_id":44,"path":["object","macho","MachHeader32"],"kind":"struct"},"0:5221:6728":{"crate_id":0,"path":["clap","mkeymap","KeyType","Short"],"kind":"variant"},"32:799:8270":{"crate_id":32,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:13429:15079":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"33:157:8885":{"crate_id":33,"path":["textwrap","word_splitters","WordSplitter"],"kind":"enum"},"1:11434:12508":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"44:10651:72593":{"crate_id":44,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:10801:14542":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"0:3520:3024":{"crate_id":0,"path":["clap","builder","action","ArgAction","Version"],"kind":"variant"},"17:13348:15064":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"0:3096:3014":{"crate_id":0,"path":["clap","output","help","Help"],"kind":"struct"},"17:13356:15067":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:7677:1653":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:49841:9257":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:12155:14746":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"44:14218:15022":{"crate_id":44,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:3740:9232":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"0:138:500":{"crate_id":0,"path":["clap","crate_name"],"kind":"macro"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:15498:11415":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"43:8196:13401":{"crate_id":43,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"9:27:13070":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:12247:14758":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:6024:17034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:5672:13233":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:46433:11355":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:11696:14641":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:11193:12319":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"36:6060:17059":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"36:5177:16834":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"24:0:1719":{"crate_id":24,"path":["bitflags"],"kind":"module"},"6:4208:16669":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"25:1914:15796":{"crate_id":25,"path":["regex","dfa","Transitions"],"kind":"struct"},"1:11668:7858":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:14565:17364":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"0:5038:1676":{"crate_id":0,"path":["clap","parser","matches","arg_matches","OsValues"],"kind":"struct"},"9:927:14006":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"0:5095:8373":{"crate_id":0,"path":["clap","parser","parser","ParseState","Opt"],"kind":"variant"},"31:44:13902":{"crate_id":31,"path":["indexmap","mutable_keys","PrivateMarker"],"kind":"struct"},"2:4051:9308":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"9:963:13086":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"0:2905:7525":{"crate_id":0,"path":["clap","parser","features","suggestions","did_you_mean"],"kind":"function"},"0:3565:3100":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","SubcommandRequiredElseHelp"],"kind":"variant"},"0:4706:2918":{"crate_id":0,"path":["clap","builder","value_parser","NonEmptyStringValueParser"],"kind":"struct"},"44:11315:13648":{"crate_id":44,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"14:0:9042":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:5735:12301":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"12:764:9528":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:11506:10211":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:24715:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"0:3393:9003":{"crate_id":0,"path":["clap","util","fnv","FnvHasher"],"kind":"struct"},"0:4064:4844":{"crate_id":0,"path":["clap","builder","arg","ArgProvider","Generated"],"kind":"variant"},"18:791:13684":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:1740:16496":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:45892:9236":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:2866:13497":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:4666:9494":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:3907:16529":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"36:5371:16932":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:5975:13368":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"28:966:13684":{"crate_id":28,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:6964:10160":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"12:0:9041":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:50144:12607":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:14239:5460":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"36:524:16304":{"crate_id":36,"path":["libc","unix","timespec"],"kind":"struct"},"24:5:1719":{"crate_id":24,"path":["bitflags","bitflags"],"kind":"macro"},"26:346:13746":{"crate_id":26,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"1:12116:7858":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"23:75:9486":{"crate_id":23,"path":["once_cell","imp","Guard"],"kind":"struct"},"2:3287:7174":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"38:277:9707":{"crate_id":38,"path":["unicase","UniCase"],"kind":"struct"},"31:45:11447":{"crate_id":31,"path":["indexmap","mutable_keys","MutableKeys"],"kind":"trait"},"1:5653:12313":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:47854:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:6863:12278":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:46898:9573":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:11005:12284":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"43:3647:13252":{"crate_id":43,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:12741:14852":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:5727:12300":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:13897:70387":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:3411:9221":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"12:1256:12393":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:10489:13592":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:3604:14394":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:14034:11615":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"44:13204:14514":{"crate_id":44,"path":["object","macho","Dylib"],"kind":"struct"},"0:2897:7445":{"crate_id":0,"path":["clap","parser","features"],"kind":"module"},"27:1517:15624":{"crate_id":27,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"2:4783:11154":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:11100:13618":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"28:698:13695":{"crate_id":28,"path":["memchr","cow","CowBytes"],"kind":"struct"},"0:5159:6729":{"crate_id":0,"path":["clap","parser","parser","Identifier","Long"],"kind":"variant"},"44:10840:14493":{"crate_id":44,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:49780:9277":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"0:1342:2899":{"crate_id":0,"path":["clap","builder","usage_parser"],"kind":"module"},"1:1497:11446":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:3951:11184":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:11519:9616":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"32:1278:12393":{"crate_id":32,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:11130:9500":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"44:11852:13944":{"crate_id":44,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"26:2431:13784":{"crate_id":26,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"1:2162:11186":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:14633:9497":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"43:1197:13261":{"crate_id":43,"path":["gimli","read","reader","ReaderOffset"],"kind":"trait"},"16:6491:13381":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"0:1398:7029":{"crate_id":0,"path":["clap","builder","value_parser","ValueParserInner","Bool"],"kind":"variant"},"17:13221:15036":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:6718:13533":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:3440:9227":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"25:1857:15842":{"crate_id":25,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"2:53398:12711":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:56063:12667":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"25:1852:15841":{"crate_id":25,"path":["regex","compile","SuffixCache"],"kind":"struct"},"1:12247:9340":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:50119:12605":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:9627:67053":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"36:4264:16681":{"crate_id":36,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:634:16364":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"47:0:1559":{"crate_id":47,"path":["strsim"],"kind":"module"},"44:13467:14803":{"crate_id":44,"path":["object","macho","DylibReference"],"kind":"struct"},"25:2895:9432":{"crate_id":25,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"2:12581:12925":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:5452:16953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:2218:12956":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"44:13646:14830":{"crate_id":44,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:11208:12321":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"36:4350:16725":{"crate_id":36,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:12257:9348":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"43:5731:15302":{"crate_id":43,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:10684:11119":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"44:12322:13575":{"crate_id":44,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:4607:9517":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:12408:14802":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:1011:7858":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12028:14727":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:49662:9281":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"44:14425:15071":{"crate_id":44,"path":["object","pe","ImageRelocation"],"kind":"struct"},"25:2273:15890":{"crate_id":25,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"44:13748:14849":{"crate_id":44,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"26:3535:13829":{"crate_id":26,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"1:4684:9496":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"43:4474:15277":{"crate_id":43,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12659:14843":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"0:5129:8396":{"crate_id":0,"path":["clap","parser","parser","ParseResult","NoMatchingArg"],"kind":"variant"},"43:62:13257":{"crate_id":43,"path":["gimli","endianity","Endianity"],"kind":"trait"},"25:2299:15823":{"crate_id":25,"path":["regex","pikevm","Cache"],"kind":"struct"},"27:1342:15594":{"crate_id":27,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"2:52342:12715":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"36:584:16341":{"crate_id":36,"path":["libc","unix","winsize"],"kind":"struct"},"44:0:9045":{"crate_id":44,"path":["object"],"kind":"module"},"2:53476:12696":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"43:3171:13516":{"crate_id":43,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"0:1448:7030":{"crate_id":0,"path":["clap","builder","value_parser","AnyValueParser"],"kind":"trait"},"6:1680:16466":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:4432:9512":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:3812:9238":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:11726:14645":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:2166:11184":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"5:3040:17239":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:580:16335":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"0:4603:6988":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","CommandString"],"kind":"variant"},"36:5990:17034":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"5:8263:9368":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:49501:9271":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:46104:9231":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"0:3543:3042":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","IgnoreErrors"],"kind":"variant"},"17:1311:13673":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:6685:17152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"26:2453:13785":{"crate_id":26,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"17:13205:15033":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"31:650:11446":{"crate_id":31,"path":["indexmap","map","IntoValues"],"kind":"struct"},"1:11479:12296":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"39:203:11413":{"crate_id":39,"path":["backtrace","Bomb"],"kind":"struct"},"17:13540:15117":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7195:13396":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:24186:12770":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"44:10761:13563":{"crate_id":44,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"26:2554:13790":{"crate_id":26,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"0:1302:2898":{"crate_id":0,"path":["clap","builder","possible_value"],"kind":"module"},"1:10840:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"26:2763:13802":{"crate_id":26,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"0:4910:7462":{"crate_id":0,"path":["clap","error","Message"],"kind":"enum"},"2:3389:9220":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"42:0:9043":{"crate_id":42,"path":["addr2line"],"kind":"module"},"2:48064:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"36:6177:17121":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"27:1537:15595":{"crate_id":27,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"25:3040:9276":{"crate_id":25,"path":["regex","re_unicode","Matches"],"kind":"struct"},"25:3058:9426":{"crate_id":25,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"17:11970:14718":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12699:14848":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"28:153:31569":{"crate_id":28,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:16009:9063":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"44:14079:14971":{"crate_id":44,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"43:6287:13220":{"crate_id":43,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:13394:15074":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"12:353:17355":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"36:4233:16673":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"27:1451:127":{"crate_id":27,"path":["aho_corasick","error","Error"],"kind":"struct"},"0:3459:7236":{"crate_id":0,"path":["clap","util","str_to_bool"],"kind":"module"},"5:3329:7858":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"44:13604:14822":{"crate_id":44,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:2543:13585":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:6620:13528":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"43:6201:13216":{"crate_id":43,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"0:4810:7029":{"crate_id":0,"path":["clap","error","context","ContextValue","Bool"],"kind":"variant"},"45:0:9038":{"crate_id":45,"path":["miniz_oxide"],"kind":"module"},"2:46364:9269":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"12:2253:7856":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:7264:13342":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:15122:16202":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:3358:9211":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:2962:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"proc_derive"},"25:2315:72617":{"crate_id":25,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"0:3375:8994":{"crate_id":0,"path":["clap","util","fnv"],"kind":"module"},"6:4516:16781":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:11809:14670":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"28:996:13687":{"crate_id":28,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"35:36:11557":{"crate_id":35,"path":["terminal_size","Width"],"kind":"struct"},"5:7379:8270":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:12537:14817":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"43:7301:13378":{"crate_id":43,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"18:611:13695":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"27:1215:13834":{"crate_id":27,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"2:3310:6658":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:10317:13569":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"26:3436:13824":{"crate_id":26,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"17:11640:14629":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:13924:15235":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"12:928:11445":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"22:2539:1666":{"crate_id":22,"path":["clap_derive","ValueEnum"],"kind":"proc_derive"},"17:2512:13624":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"18:713:9294":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:15331:12324":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:571:16329":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"25:2145:9638":{"crate_id":25,"path":["regex","expand","Ref"],"kind":"enum"},"6:5183:16821":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:10565:12284":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:46769:9565":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"26:3420:1664":{"crate_id":26,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"2:49762:9276":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"36:6873:17161":{"crate_id":36,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:830:13688":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:11499:14599":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:5421:13219":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:3365:13252":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"44:11170:14500":{"crate_id":44,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:9404:14373":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:12221:14754":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:11086:9497":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"28:905:72604":{"crate_id":28,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"0:1827:7425":{"crate_id":0,"path":["clap","builder","debug_asserts","assert_defaults"],"kind":"function"},"1:10874:9508":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"44:2549:56683":{"crate_id":44,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"25:2440:15906":{"crate_id":25,"path":["regex","prog","InstRanges"],"kind":"struct"},"39:100:11419":{"crate_id":39,"path":["backtrace","symbolize","SymbolName"],"kind":"struct"},"5:8391:12254":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"27:1947:15666":{"crate_id":27,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"2:5156:9639":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:6117:17066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:10957:7663":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:48106:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:16020:9072":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:11519:14609":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:2793:9304":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"25:1931:205":{"crate_id":25,"path":["regex","dfa","Result"],"kind":"enum"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"42:230:13169":{"crate_id":42,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"44:14844:15197":{"crate_id":44,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:3746:9234":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:11365:12491":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:46826:9568":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:53225:12708":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:4215:11186":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"31:1059:8270":{"crate_id":31,"path":["indexmap","set","IntoIter"],"kind":"struct"},"0:4748:1654":{"crate_id":0,"path":["clap","builder","debug_asserts","Flag","Arg"],"kind":"variant"},"16:7378:13331":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"0:3591:3154":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","DisableHelpFlag"],"kind":"variant"},"17:13799:15202":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"43:604:13910":{"crate_id":43,"path":["gimli","read","cfi","UnwindContextStorage"],"kind":"trait"},"43:7134:13921":{"crate_id":43,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:49448:9611":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:4417:15284":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:5960:13249":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"44:10681:56645":{"crate_id":44,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:12507:14812":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:47980:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:9341:10162":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:48594:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:8160:8270":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"32:902:11184":{"crate_id":32,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:13978:15245":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:6054:17056":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"0:5071:8323":{"crate_id":0,"path":["clap","parser","matches","value_source","ValueSource","DefaultValue"],"kind":"variant"},"9:900:16293":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:9799:14479":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"0:4860:7538":{"crate_id":0,"path":["clap","error","kind","ErrorKind","MissingSubcommand"],"kind":"variant"},"25:1764:15756":{"crate_id":25,"path":["regex","backtrack","Bounded"],"kind":"struct"},"6:5271:16869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:1674:11446":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:53504:16093":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:3118:13512":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:4538:16791":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:8203:8270":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:2458:11131":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"40:216:54956":{"crate_id":40,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"36:3873:16521":{"crate_id":36,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:4277:16674":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"43:6326:13224":{"crate_id":43,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:14000:15251":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"36:4470:16773":{"crate_id":36,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:4198:16668":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"45:608:13997":{"crate_id":45,"path":["miniz_oxide","inflate","stream","ZeroReset"],"kind":"struct"},"31:746:11186":{"crate_id":31,"path":["indexmap","map","Drain"],"kind":"struct"},"44:14020:14919":{"crate_id":44,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"0:1718:7287":{"crate_id":0,"path":["clap","builder","value_parser","private","_ValueParserViaFromStrSealed"],"kind":"trait"},"25:1801:15830":{"crate_id":25,"path":["regex","compile","Patch"],"kind":"struct"},"1:12252:9347":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:50055:12603":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"36:1682:16477":{"crate_id":36,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"43:7908:10160":{"crate_id":43,"path":["gimli","read","op","Location"],"kind":"enum"},"2:51454:16067":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:46847:9570":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"44:14226:15023":{"crate_id":44,"path":["object","pe","Guid"],"kind":"struct"},"0:1225:6599":{"crate_id":0,"path":["clap","builder","command","Captures"],"kind":"trait"},"1:5797:12306":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"36:1736:16500":{"crate_id":36,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"29:138:8478":{"crate_id":29,"path":["clap_lex","ShortFlags"],"kind":"struct"},"5:3044:71298":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"43:6847:13926":{"crate_id":43,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"26:3188:13813":{"crate_id":26,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"2:12815:9468":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:38888:8449":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:6087:13324":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:11045:56600":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:7342:13360":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"28:708:11921":{"crate_id":28,"path":["memchr","cow","Imp"],"kind":"enum"},"44:12216:13616":{"crate_id":44,"path":["object","read","Import"],"kind":"struct"},"17:9296:13945":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:51965:16070":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:48618:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:9005:13955":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:13659:12387":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:49576:9278":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:3372:9217":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:4434:9513":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:22684:70611":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:12568:14822":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"36:4411:16749":{"crate_id":36,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"14:194:54950":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"36:5392:16944":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:13153:9251":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"43:3373:13559":{"crate_id":43,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"0:4081:174":{"crate_id":0,"path":["clap","builder","arg","DisplayOrder","None"],"kind":"variant"},"16:4890:15298":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"31:1269:12343":{"crate_id":31,"path":["indexmap","set","Union"],"kind":"struct"},"44:12970:14709":{"crate_id":44,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"27:1503:15796":{"crate_id":27,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"43:7626:13340":{"crate_id":43,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"16:3939:15279":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"0:1823:7348":{"crate_id":0,"path":["clap","builder","debug_asserts","assert_arg"],"kind":"function"},"39:740:11424":{"crate_id":39,"path":["backtrace","print","PrintFmt"],"kind":"enum"},"1:11453:12337":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:8176:12935":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"0:4068:4876":{"crate_id":0,"path":["clap","builder","arg","ArgProvider","User"],"kind":"variant"},"18:783:15577":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:6577:13384":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"36:1700:16484":{"crate_id":36,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12917:14868":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"25:2924:13722":{"crate_id":25,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:53437:12731":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"0:744:2561":{"crate_id":0,"path":["clap","builder","command"],"kind":"module"},"16:6101:13322":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"43:6889:13495":{"crate_id":43,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:46446:9270":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:12138:12355":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"44:10613:14481":{"crate_id":44,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:47114:9546":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"43:6561:13236":{"crate_id":43,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"36:0:798":{"crate_id":36,"path":["libc"],"kind":"module"},"1:3197:12445":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:56434:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10864:14544":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"26:2712:13799":{"crate_id":26,"path":["regex_syntax","ast","Group"],"kind":"struct"},"44:13064:14727":{"crate_id":44,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:13296:15050":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:8967:9548":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13637:15141":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"36:4156:16667":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:24885:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"44:5142:13941":{"crate_id":44,"path":["object","read","pe","import","ImageThunkData"],"kind":"trait"},"2:24302:12902":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:46471:9269":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"18:775:15577":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"0:3503:1652":{"crate_id":0,"path":["clap","builder","action","ArgAction"],"kind":"enum"},"0:269:2893":{"crate_id":0,"path":["clap","builder","action"],"kind":"module"},"0:4792:5215":{"crate_id":0,"path":["clap","error","context","ContextKind","Usage"],"kind":"variant"},"43:5592:15298":{"crate_id":43,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:11434:14581":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:12004:9609":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:3375:12954":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:5766:13241":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"32:1903:12340":{"crate_id":32,"path":["hashbrown","set","Intersection"],"kind":"struct"},"44:13178:14743":{"crate_id":44,"path":["object","macho","Fvmlib"],"kind":"struct"},"12:933:12388":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"27:1670:13876":{"crate_id":27,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"44:9686:13961":{"crate_id":44,"path":["object","common","SymbolKind"],"kind":"enum"},"43:4382:15275":{"crate_id":43,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"44:5430:13576":{"crate_id":44,"path":["object","read","traits","ObjectSection"],"kind":"trait"},"2:13938:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"0:257:2924":{"crate_id":0,"path":["clap","builder","macros","yaml_tuple2"],"kind":"macro"},"5:6688:12949":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"32:1260:13152":{"crate_id":32,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:12405:1661":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"36:5520:16973":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"0:265:2947":{"crate_id":0,"path":["clap","builder","macros","yaml_to_str"],"kind":"macro"},"17:11588:14621":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:15072:17318":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"44:9890:13960":{"crate_id":44,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:15970:15823":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"44:1351:13673":{"crate_id":44,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:3743:13642":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"45:157:13038":{"crate_id":45,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"16:7392:13332":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"26:2971:15683":{"crate_id":26,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"26:1981:13756":{"crate_id":26,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"1:3339:12453":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"20:62:23245":{"crate_id":20,"path":["yaml_rust","parser","EventReceiver"],"kind":"trait"},"27:1560:15629":{"crate_id":27,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"12:1682:13161":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13547:15118":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:46111:7917":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"0:4947:3033":{"crate_id":0,"path":["clap","parser","matches","any_value","AnyValueId"],"kind":"struct"},"17:12142:14743":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:10804:12442":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:5564:16987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"0:4729:7322":{"crate_id":0,"path":["clap","builder","regex","RegexRef","Regex"],"kind":"variant"},"43:8495:13335":{"crate_id":43,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:4402:16736":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:0:9045":{"crate_id":17,"path":["object"],"kind":"module"},"18:661:13698":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:6032:13258":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:52021:16072":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:53515:16094":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"33:88:8702":{"crate_id":33,"path":["textwrap","core","display_width"],"kind":"function"},"0:4201:3953":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","RequireEquals"],"kind":"variant"},"0:4591:6977":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","Other"],"kind":"variant"},"43:5088:15283":{"crate_id":43,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:6136:13366":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:4922:15299":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"37:430:9689":{"crate_id":37,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"1:2155:7858":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:7420:13348":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"6:601:16346":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:3351:12459":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:3920:16539":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:6437:12290":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"12:940:12389":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"0:142:2580":{"crate_id":0,"path":["clap","arg"],"kind":"macro"},"36:5189:16838":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"43:4641:15279":{"crate_id":43,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:3736:9509":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:5815:13243":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:5314:14468":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"44:11355:14507":{"crate_id":44,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:48627:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"36:5979:17029":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"31:576:11444":{"crate_id":31,"path":["indexmap","map","IntoKeys"],"kind":"struct"},"2:24681:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:16007:9061":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"44:160:13572":{"crate_id":44,"path":["object","pod","Pod"],"kind":"trait"},"17:12480:14810":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:4790:15295":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"36:5399:16945":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:586:16338":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:12076:68971":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"31:548:7854":{"crate_id":31,"path":["indexmap","map","Keys"],"kind":"struct"},"17:10200:14495":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:8902:56596":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"36:4323:16708":{"crate_id":36,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"44:10048:14372":{"crate_id":44,"path":["object","endian","U64Bytes"],"kind":"struct"},"0:726:2897":{"crate_id":0,"path":["clap","builder","arg_settings"],"kind":"module"},"32:1887:8270":{"crate_id":32,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"44:13191:14746":{"crate_id":44,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"47:52:11467":{"crate_id":47,"path":["strsim","StringWrapper"],"kind":"struct"},"0:4794:7663":{"crate_id":0,"path":["clap","error","context","ContextKind","Custom"],"kind":"variant"},"44:13681:14842":{"crate_id":44,"path":["object","macho","SymsegCommand"],"kind":"struct"},"0:121:1696":{"crate_id":0,"path":["clap","_features"],"kind":"module"},"44:11741:14556":{"crate_id":44,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"0:2898:1560":{"crate_id":0,"path":["clap","parser","features","suggestions"],"kind":"module"},"17:12118:14742":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"25:3018:9429":{"crate_id":25,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"1:16019:9071":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"27:1809:15644":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"44:12729:14646":{"crate_id":44,"path":["object","elf","Versym"],"kind":"struct"},"44:12656:14632":{"crate_id":44,"path":["object","elf","Rela64"],"kind":"struct"},"1:11340:16175":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"44:14200:15017":{"crate_id":44,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"27:1571:13840":{"crate_id":27,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"23:265:2543":{"crate_id":23,"path":["once_cell","sync","Lazy"],"kind":"struct"},"44:11129:13589":{"crate_id":44,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:9729:72600":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"0:3512:3001":{"crate_id":0,"path":["clap","builder","action","ArgAction","SetTrue"],"kind":"variant"},"2:46631:9196":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:10266:13625":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:4110:16641":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"27:1887:15600":{"crate_id":27,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"16:4614:15289":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"40:189:15557":{"crate_id":40,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:1537:16372":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:24249:30736":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"25:2254:72614":{"crate_id":25,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"44:2431:13634":{"crate_id":44,"path":["object","read","elf","symbol","Sym"],"kind":"trait"},"44:10933:13626":{"crate_id":44,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:12645:14842":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:46507:11349":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"36:1622:16429":{"crate_id":36,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"36:6856:17156":{"crate_id":36,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"43:3477:13503":{"crate_id":43,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:3429:13254":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"44:11116:14499":{"crate_id":44,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:3993:16584":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"43:5316:15289":{"crate_id":43,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:3714:15276":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:3342:9212":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"43:6864:13369":{"crate_id":43,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"33:205:8882":{"crate_id":33,"path":["textwrap","Options"],"kind":"struct"},"16:7333:13346":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:1459:1678":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:1694:16477":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:32580:70525":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"44:12607:14625":{"crate_id":44,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:10393:9317":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:5927:13247":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:15032:11618":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"44:11597:13591":{"crate_id":44,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:6366:13167":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:1764:16505":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"12:1238:13152":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"0:3551:3075":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","AllArgsOverrideSelf"],"kind":"variant"},"2:10385:9318":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"43:7724:13388":{"crate_id":43,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:3559:9235":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"44:13421:14793":{"crate_id":44,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:10391:9316":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"25:2890:7323":{"crate_id":25,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"2:51642:12729":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"44:12631:14629":{"crate_id":44,"path":["object","elf","Rela32"],"kind":"struct"},"36:530:16306":{"crate_id":36,"path":["libc","unix","rlimit"],"kind":"struct"},"5:8446:11184":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"30:76:13892":{"crate_id":30,"path":["os_str_bytes","OsStrBytes"],"kind":"trait"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"11:46:16292":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"5:8379:12253":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:8255:6625":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"26:2967:15682":{"crate_id":26,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"44:10489:72598":{"crate_id":44,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"26:2727:13800":{"crate_id":26,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"43:8917:13914":{"crate_id":43,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"0:2095:7828":{"crate_id":0,"path":["clap","parser","arg_matcher"],"kind":"module"},"17:13318:15054":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:56460:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:5261:2691":{"crate_id":0,"path":["clap","output","fmt","Colorizer"],"kind":"struct"},"32:974:12390":{"crate_id":32,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:13164:9248":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:2816:13515":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"12:843:7854":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"44:9717:13964":{"crate_id":44,"path":["object","common","SymbolScope"],"kind":"enum"},"25:2455:15908":{"crate_id":25,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"17:299:14378":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"44:10623:72595":{"crate_id":44,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"36:1728:16496":{"crate_id":36,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:52259:12730":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:3417:9222":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:12610:14830":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:12208:14753":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"43:459:13223":{"crate_id":43,"path":["gimli","read","cfi","_UnwindSectionPrivate"],"kind":"trait"},"1:16004:9059":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"0:2094:1657":{"crate_id":0,"path":["clap","parser"],"kind":"module"},"17:13865:15219":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7406:13330":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:13884:15224":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"44:12595:14622":{"crate_id":44,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:46493:9268":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:5244:16849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:6949:13541":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:783:3335":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:10844:13591":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:7795:11620":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:14:2517":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:11150:9272":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:11082:13580":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13942:15241":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"25:2599:9425":{"crate_id":25,"path":["regex","re_bytes","Match"],"kind":"struct"},"2:48907:9705":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"43:189:12284":{"crate_id":43,"path":["gimli","read","util","sealed","Sealed"],"kind":"trait"},"0:3609:3182":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","NoAutoVersion"],"kind":"variant"},"2:7933:12648":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:53652:16103":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:48375:9319":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:13587:31577":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:6014:13370":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"43:6310:13221":{"crate_id":43,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"44:14404:15067":{"crate_id":44,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"0:4846:7552":{"crate_id":0,"path":["clap","error","kind","ErrorKind","ValueValidation"],"kind":"variant"},"17:10827:13646":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"32:1923:12343":{"crate_id":32,"path":["hashbrown","set","Union"],"kind":"struct"},"44:5393:73926":{"crate_id":44,"path":["object","read","traits","Object","section_by_name"],"kind":"foreign_type"},"0:5075:7870":{"crate_id":0,"path":["clap","parser","matches","value_source","ValueSource","CommandLine"],"kind":"variant"},"0:4601:6986":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","CommandName"],"kind":"variant"},"33:167:9663":{"crate_id":33,"path":["textwrap","wrap_algorithms","WrapAlgorithm"],"kind":"enum"},"6:5363:16919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"0:4886:127":{"crate_id":0,"path":["clap","error","Error"],"kind":"struct"},"44:10946:13625":{"crate_id":44,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:13240:15037":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"0:1709:7320":{"crate_id":0,"path":["clap","builder","value_parser","private","_ValueParserViaSelfSealed"],"kind":"trait"},"0:4556:6725":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken"],"kind":"enum"},"1:10826:12312":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:8925:12521":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"17:13192:15028":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:48715:10965":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"18:705:15577":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"36:1576:16400":{"crate_id":36,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:7507:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"43:8750:13336":{"crate_id":43,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"18:867:13691":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:4532:16788":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:10610:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"36:5274:16876":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:5273:13256":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:10660:9704":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"32:809:11444":{"crate_id":32,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"44:13323:14763":{"crate_id":44,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:48731:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"26:3080:13742":{"crate_id":26,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"44:14618:15119":{"crate_id":44,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"43:5237:15288":{"crate_id":43,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:1944:6566":{"crate_id":2,"path":["core","mem"],"kind":"module"},"26:3246:13817":{"crate_id":26,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"1:3194:12443":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:13620:15134":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"0:3559:3089":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","InferLongArgs"],"kind":"variant"},"1:14958:14167":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:16017:9069":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:5960:12541":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"44:10859:14494":{"crate_id":44,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:4032:12386":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:4734:15293":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"44:14810:15185":{"crate_id":44,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:10061:14490":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"0:2074:7565":{"crate_id":0,"path":["clap","error","start_error"],"kind":"function"},"44:11546:14543":{"crate_id":44,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"37:377:8985":{"crate_id":37,"path":["termcolor","Color"],"kind":"enum"},"1:2461:5402":{"crate_id":1,"path":["std","env","args_os"],"kind":"function"},"2:53524:16095":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:22682:70615":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"0:2005:205":{"crate_id":0,"path":["clap","error","Result"],"kind":"typedef"},"2:3275:9644":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"25:2011:15863":{"crate_id":25,"path":["regex","dfa","StateMap"],"kind":"struct"},"5:8250:9367":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:12242:9338":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:15130:11624":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"44:14691:15136":{"crate_id":44,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"43:3454:13502":{"crate_id":43,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:46888:9572":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"28:880:15577":{"crate_id":28,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"43:7087:13375":{"crate_id":43,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"43:7675:13534":{"crate_id":43,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:13786:11622":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"0:1715:7285":{"crate_id":0,"path":["clap","builder","value_parser","private","_ValueParserViaValueEnumSealed"],"kind":"trait"},"12:952:12390":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7226:13399":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"26:2938:15669":{"crate_id":26,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"36:4075:16635":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"7:85:54291":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:4012:16597":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11539:14610":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"36:4137:16666":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"36:518:16301":{"crate_id":36,"path":["libc","unix","timeval"],"kind":"struct"},"1:7732:11616":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"26:2909:13822":{"crate_id":26,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"0:4175:3776":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","MultipleValues"],"kind":"variant"},"17:13119:15016":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13258:15045":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:51147:16065":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:13134:9255":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"25:2037:13729":{"crate_id":25,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"17:9280:14469":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:46835:9569":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"25:2235:72618":{"crate_id":25,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"17:10988:14556":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"36:4044:16618":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:10616:142":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"44:2877:13583":{"crate_id":44,"path":["object","read","elf","compression","CompressionHeader"],"kind":"trait"},"2:6510:9564":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"43:8225:13546":{"crate_id":43,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:6682:13340":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:4397:12473":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:1621:16422":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:32379:11182":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"0:4808:174":{"crate_id":0,"path":["clap","error","context","ContextValue","None"],"kind":"variant"},"2:22933:12284":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"27:1607:12415":{"crate_id":27,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"2:11491:9280":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:3038:4855":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"39:247:11415":{"crate_id":39,"path":["backtrace","backtrace","libunwind","Frame"],"kind":"enum"},"1:11120:9302":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"43:8338:13332":{"crate_id":43,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:8362:17240":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"26:1870:13830":{"crate_id":26,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"2:49142:9597":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:6238:13329":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:2177:12341":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:23020:12283":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:5029:15302":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"43:4932:15280":{"crate_id":43,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:10224:14497":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"26:2267:13776":{"crate_id":26,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"44:14988:15235":{"crate_id":44,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"43:3098:13515":{"crate_id":43,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"36:5937:17005":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:527:16301":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:12467:14808":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"0:103:1693":{"crate_id":0,"path":["clap","_cookbook"],"kind":"module"},"0:3555:3082":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","TrailingVarArg"],"kind":"variant"},"12:183:13156":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"44:14797:15179":{"crate_id":44,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:10661:19509":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"36:4356:16728":{"crate_id":36,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:6636:13343":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:9340:7907":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"0:1825:7424":{"crate_id":0,"path":["clap","builder","debug_asserts","assert_arg_flags"],"kind":"function"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"28:826:13694":{"crate_id":28,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:14159:12842":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:24115:12774":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:5753:13240":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"23:410:11939":{"crate_id":23,"path":["once_cell","race","OnceBool"],"kind":"struct"},"44:14948:15224":{"crate_id":44,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"36:5351:16924":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:1551:16377":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"14:189:15557":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"32:362:17355":{"crate_id":32,"path":["hashbrown","raw","inner","RawIterRange"],"kind":"struct"},"2:50547:9305":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"44:12391:14579":{"crate_id":44,"path":["object","archive","Header"],"kind":"struct"},"31:194:11451":{"crate_id":31,"path":["indexmap","map","core","IndexMapCore"],"kind":"struct"},"26:2240:13775":{"crate_id":26,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"12:114:31562":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:9186:13579":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"0:279:2894":{"crate_id":0,"path":["clap","builder","app_settings"],"kind":"module"},"2:46454:11346":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:6031:17038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"0:4197:3068":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","AllowHyphenValues"],"kind":"variant"},"2:24647:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"0:4987:8033":{"crate_id":0,"path":["clap","parser","matches","arg_matches","Values2"],"kind":"struct"},"0:2195:2748":{"crate_id":0,"path":["clap","parser","matches"],"kind":"module"},"44:10449:72599":{"crate_id":44,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"25:2391:15899":{"crate_id":25,"path":["regex","prog","InstSplit"],"kind":"struct"},"2:3648:7019":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"25:2646:9279":{"crate_id":25,"path":["regex","re_bytes","Split"],"kind":"struct"},"0:5092:7833":{"crate_id":0,"path":["clap","parser","parser","ParseState"],"kind":"enum"},"2:12037:9610":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"26:0:9402":{"crate_id":26,"path":["regex_syntax"],"kind":"module"},"43:6434:13230":{"crate_id":43,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"0:1990:481":{"crate_id":0,"path":["clap","error","context"],"kind":"module"},"26:2690:13798":{"crate_id":26,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"5:2330:12966":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:11398:9278":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"43:7588:13386":{"crate_id":43,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:12385:14793":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:15754:14116":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:3362:12342":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"0:164:1664":{"crate_id":0,"path":["clap","derive","Parser"],"kind":"trait"},"43:3808:14390":{"crate_id":43,"path":["gimli","arch","Arm"],"kind":"struct"},"5:8330:9177":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13331:15059":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:4823:15296":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"12:1666:13160":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:46583:12878":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:2773:13522":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"0:4578:3333":{"crate_id":0,"path":["clap","builder","usage_parser","UsageParser"],"kind":"struct"},"0:4816:7516":{"crate_id":0,"path":["clap","error","context","ContextValue","Strings"],"kind":"variant"},"6:521:16298":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:8929:56597":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:12795:14866":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:7615:9008":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:13497:15103":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:9343:12280":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"0:2614:1657":{"crate_id":0,"path":["clap","parser","parser"],"kind":"module"},"18:621:11921":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:3505:9228":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:3341:12454":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"5:3370:12340":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:5584:9194":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:24:600":{"crate_id":2,"path":["core","env"],"kind":"macro"},"6:4373:16725":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"36:4298:16697":{"crate_id":36,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:53035:12704":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"43:6486:13232":{"crate_id":43,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:5346:13325":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"26:2292:13777":{"crate_id":26,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"1:11402:12317":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:3981:16580":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:10236:13584":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:4477:8981":{"crate_id":1,"path":["std","io","stdio","stdout"],"kind":"function"},"44:14541:15096":{"crate_id":44,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:16015:9067":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"31:1469:9624":{"crate_id":31,"path":["indexmap","HashValue"],"kind":"struct"},"0:1369:6755":{"crate_id":0,"path":["clap","builder","usage_parser","long_end"],"kind":"function"},"2:46677:9553":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:3364:9210":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"44:14517:15089":{"crate_id":44,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:46807:9555":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:11428:12489":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"32:165:9625":{"crate_id":32,"path":["hashbrown","raw","inner","Bucket"],"kind":"struct"},"2:23550:20440":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:533:16304":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"43:6048:15304":{"crate_id":43,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:4270:12507":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"44:14874:15203":{"crate_id":44,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:10435:14499":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:8849:13612":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:69:11159":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"36:4339:16717":{"crate_id":36,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:14236:9512":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"0:115:1694":{"crate_id":0,"path":["clap","_derive"],"kind":"module"},"20:255:1682":{"crate_id":20,"path":["yaml_rust","yaml","YamlLoader"],"kind":"struct"},"2:23854:12671":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"44:12826:14675":{"crate_id":44,"path":["object","elf","HashHeader"],"kind":"struct"},"1:6199:12505":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"43:6900:13258":{"crate_id":43,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"44:10519:13591":{"crate_id":44,"path":["object","read","any","SymbolTable"],"kind":"struct"},"0:5110:8389":{"crate_id":0,"path":["clap","parser","parser","ParseResult"],"kind":"enum"},"1:13422:12502":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:5146:16795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"22:0:1555":{"crate_id":22,"path":["clap_derive"],"kind":"module"},"26:2748:13801":{"crate_id":26,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:8344:9178":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:4434:16749":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"31:134:11453":{"crate_id":31,"path":["indexmap","map","core","raw","OccupiedEntry"],"kind":"struct"},"43:6666:13243":{"crate_id":43,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"36:4185:16669":{"crate_id":36,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"27:1481:9383":{"crate_id":27,"path":["aho_corasick","nfa","State"],"kind":"struct"},"38:0:1563":{"crate_id":38,"path":["unicase"],"kind":"module"},"44:10808:13669":{"crate_id":44,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:10701:11126":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4179:16667":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"44:12557:14616":{"crate_id":44,"path":["object","elf","Sym32"],"kind":"struct"},"0:664:3379":{"crate_id":0,"path":["clap","builder","arg","ValidatorOs"],"kind":"typedef"},"2:28134:12662":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"7:38:54284":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"0:4972:1709":{"crate_id":0,"path":["clap","parser","matches","arg_matches","SubCommand"],"kind":"struct"},"32:2259:72591":{"crate_id":32,"path":["hashbrown","raw","inner","Fallibility"],"kind":"enum"},"26:2197:13773":{"crate_id":26,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"6:5395:16932":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:52181:12723":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:374:11160":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:11268:12368":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"6:539:16306":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"0:4953:1658":{"crate_id":0,"path":["clap","parser","matches","arg_matches","ArgMatches"],"kind":"struct"},"0:120:1695":{"crate_id":0,"path":["clap","_faq"],"kind":"module"},"17:13819:15205":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"0:267:2950":{"crate_id":0,"path":["clap","builder","macros","yaml_to_usize"],"kind":"macro"},"2:3401:2679":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"43:8324:13331":{"crate_id":43,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"44:9581:56597":{"crate_id":44,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:7571:13323":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:51412:12701":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:10071:13672":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"0:3216:5462":{"crate_id":0,"path":["clap","output","help","HelpWriter","Buffer"],"kind":"variant"},"1:5719:12299":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:12875:9467":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"27:1358:15609":{"crate_id":27,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"0:3561:3092":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","InferSubcommands"],"kind":"variant"},"1:8380:12432":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"2:48190:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"0:4559:6727":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","ValName"],"kind":"variant"},"44:5464:13952":{"crate_id":44,"path":["object","read","traits","ObjectSymbol"],"kind":"trait"},"43:7521:13384":{"crate_id":43,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"44:13231:14751":{"crate_id":44,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:4008:14385":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"44:13557:14815":{"crate_id":44,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:13453:15089":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"25:1806:12996":{"crate_id":25,"path":["regex","compile","Hole"],"kind":"enum"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:13098:15011":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:4386:16730":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"36:154:49429":{"crate_id":36,"path":["libc","unix","fpos_t"],"kind":"enum"},"27:1467:13844":{"crate_id":27,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"0:5227:7399":{"crate_id":0,"path":["clap","mkeymap","KeyType","Position"],"kind":"variant"},"43:5406:15292":{"crate_id":43,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:48916:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:3933:16549":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:10912:14547":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:11665:14632":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"26:1921:13752":{"crate_id":26,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"0:2501:8062":{"crate_id":0,"path":["clap","parser","matches","arg_matches","unwrap_string"],"kind":"function"},"0:4786:7560":{"crate_id":0,"path":["clap","error","context","ContextKind","SuggestedArg"],"kind":"variant"},"44:14673:15133":{"crate_id":44,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"26:2330:13779":{"crate_id":26,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"0:4688:2914":{"crate_id":0,"path":["clap","builder","value_parser","BoolValueParser"],"kind":"struct"},"17:9600:72602":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:1530:12392":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:45956:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:6413:13166":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"28:843:13699":{"crate_id":28,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:22920:12687":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:9063:9344":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:10710:9302":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:12053:11619":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:24613:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"0:1991:782":{"crate_id":0,"path":["clap","error","kind"],"kind":"module"},"6:5387:16931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"0:255:1651":{"crate_id":0,"path":["clap","builder"],"kind":"module"},"0:5224:6729":{"crate_id":0,"path":["clap","mkeymap","KeyType","Long"],"kind":"variant"},"2:23162:12284":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"36:5363:16931":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"0:1795:5218":{"crate_id":0,"path":["clap","builder","debug_asserts","assert_app"],"kind":"function"},"2:47770:9528":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:9088:56598":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:5416:16944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"29:0:1720":{"crate_id":29,"path":["clap_lex"],"kind":"module"},"20:502:23250":{"crate_id":20,"path":["yaml_rust","scanner","TokenType"],"kind":"enum"},"44:12289:56601":{"crate_id":44,"path":["object","read","RelocationTarget"],"kind":"enum"},"32:1639:14117":{"crate_id":32,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"0:4838:7530":{"crate_id":0,"path":["clap","error","kind","ErrorKind","InvalidSubcommand"],"kind":"variant"},"1:12227:9337":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:12182:14750":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"25:2664:9423":{"crate_id":25,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"44:11302:13977":{"crate_id":44,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"0:3485:1556":{"crate_id":0,"path":["clap","util","color"],"kind":"module"},"0:136:2540":{"crate_id":0,"path":["clap","crate_authors"],"kind":"macro"},"27:1278:13837":{"crate_id":27,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"0:3221:8771":{"crate_id":0,"path":["clap","output","help","text_wrapper"],"kind":"function"},"43:4045:15272":{"crate_id":43,"path":["gimli","arch","RiscV"],"kind":"struct"},"30:196:9249":{"crate_id":30,"path":["os_str_bytes","pattern","Pattern"],"kind":"trait"},"16:6807:13389":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"18:668:13699":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:46533:11351":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"13:0:9035":{"crate_id":13,"path":["std_detect"],"kind":"module"},"20:569:15962":{"crate_id":20,"path":["yaml_rust","scanner","Token"],"kind":"struct"},"5:7111:14136":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"0:5246:5460":{"crate_id":0,"path":["clap","output","fmt","Stream","Stdout"],"kind":"variant"},"0:4864:7539":{"crate_id":0,"path":["clap","error","kind","ErrorKind","InvalidUtf8"],"kind":"variant"},"1:12010:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:49296:12834":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"43:8460:13347":{"crate_id":43,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:1626:16424":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:607:14381":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:49812:9272":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"43:6811:13249":{"crate_id":43,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"38:244:9713":{"crate_id":38,"path":["unicase","unicode","Unicode"],"kind":"struct"},"36:603:16351":{"crate_id":36,"path":["libc","unix","itimerval"],"kind":"struct"},"43:8162:13398":{"crate_id":43,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"45:467:14004":{"crate_id":45,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"27:1679:12415":{"crate_id":27,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"25:1261:13726":{"crate_id":25,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"36:6804:17153":{"crate_id":36,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"36:4273:16686":{"crate_id":36,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:38951:10906":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:4386:15283":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"44:11728:14555":{"crate_id":44,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"44:11278:13974":{"crate_id":44,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:6706:70700":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"44:13131:14738":{"crate_id":44,"path":["object","macho","Section32"],"kind":"struct"},"16:2733:7629":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"27:1758:15634":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"12:1203:13151":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"27:1694:12678":{"crate_id":27,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"36:6885:17163":{"crate_id":36,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11250:12323":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"44:10529:72594":{"crate_id":44,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"44:13807:13958":{"crate_id":44,"path":["object","macho","Relocation"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"44:12770:14658":{"crate_id":44,"path":["object","elf","Verneed"],"kind":"struct"},"37:95:9682":{"crate_id":37,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"16:3488:13509":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"0:3464:7236":{"crate_id":0,"path":["clap","util","str_to_bool","str_to_bool"],"kind":"function"},"1:10427:11423":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"44:13379:14772":{"crate_id":44,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"0:4195:3172":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","HidePossibleValues"],"kind":"variant"},"17:13733:15179":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:7843:13405":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"36:1614:16424":{"crate_id":36,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"44:2839:13621":{"crate_id":44,"path":["object","read","elf","dynamic","Dyn"],"kind":"trait"},"43:6792:189":{"crate_id":43,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:4287:16681":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:3347:9209":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"37:59:9678":{"crate_id":37,"path":["termcolor","IoStandardStream"],"kind":"enum"},"36:5514:16972":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"26:3038:127":{"crate_id":26,"path":["regex_syntax","hir","Error"],"kind":"struct"},"37:78:9679":{"crate_id":37,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"1:16027:9079":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:12735:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:12373:14791":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"0:4133:3605":{"crate_id":0,"path":["clap","builder","arg_predicate","ArgPredicate","IsPresent"],"kind":"variant"},"36:5970:17028":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"36:5261:16870":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"43:7498:13383":{"crate_id":43,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"26:2898:134":{"crate_id":26,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"43:2133:13924":{"crate_id":43,"path":["gimli","read","op","EvaluationStorage"],"kind":"trait"},"1:6697:17051":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:9886:14480":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:4340:16706":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:1843:14123":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:24953:12856":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"44:5450:13950":{"crate_id":44,"path":["object","read","traits","ObjectComdat"],"kind":"trait"},"2:46071:7200":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"44:14638:15125":{"crate_id":44,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:2703:9426":{"crate_id":25,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"25:2061:72616":{"crate_id":25,"path":["regex","exec","MatchType"],"kind":"enum"},"32:2131:11454":{"crate_id":32,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:923:12995":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"0:5298:5217":{"crate_id":0,"path":["clap","util","graph","ChildGraph"],"kind":"struct"},"2:52685:12716":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:11420:12500":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:6640:17149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:6937:12279":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"34:47:13905":{"crate_id":34,"path":["unicode_width","UnicodeWidthChar"],"kind":"trait"},"0:1404:186":{"crate_id":0,"path":["clap","builder","value_parser","ValueParserInner","PathBuf"],"kind":"variant"},"44:13543:14812":{"crate_id":44,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:11685:9389":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"20:64:23246":{"crate_id":20,"path":["yaml_rust","parser","MarkedEventReceiver"],"kind":"trait"},"5:3336:12341":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:11628:14626":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"43:6586:13237":{"crate_id":43,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"43:5697:15301":{"crate_id":43,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:46661:9552":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:49457:9614":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"25:2694:9428":{"crate_id":25,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"32:1001:12392":{"crate_id":32,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"0:4997:7835":{"crate_id":0,"path":["clap","parser","matches","arg_matches","ValuesRef"],"kind":"struct"},"17:10950:14553":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"44:10120:14374":{"crate_id":44,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:16021:9073":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:48946:16057":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"27:1879:15599":{"crate_id":27,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"16:6072:13345":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"44:13087:14730":{"crate_id":44,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"0:1368:6737":{"crate_id":0,"path":["clap","builder","usage_parser","token"],"kind":"function"},"36:6098:17070":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"0:4611:7004":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","Url"],"kind":"variant"},"6:5475:16959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"44:1878:13631":{"crate_id":44,"path":["object","read","elf","segment","ProgramHeader"],"kind":"trait"},"5:8197:8270":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:11137:9262":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:11406:14579":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"23:223:9647":{"crate_id":23,"path":["once_cell","sync","OnceCell"],"kind":"struct"},"44:11878:13986":{"crate_id":44,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"43:8816:13333":{"crate_id":43,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:47633:7858":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:157:49428":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"0:4833:1674":{"crate_id":0,"path":["clap","error","kind","ErrorKind"],"kind":"enum"},"28:1005:13688":{"crate_id":28,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"44:10997:13569":{"crate_id":44,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:16029:9081":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:32480:70527":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:32239:12897":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:7828:9559":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:13272:15048":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:1669:16458":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:48612:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"16:3522:14390":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:10420:13622":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"43:5997:55027":{"crate_id":43,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"44:14584:15111":{"crate_id":44,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"21:272:9626":{"crate_id":21,"path":["linked_hash_map","Entries"],"kind":"struct"},"17:10407:13623":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:12552:14821":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:9896:72597":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"36:1514:16367":{"crate_id":36,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:51220:12712":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:6893:17154":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"26:2655:13796":{"crate_id":26,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"0:5131:8390":{"crate_id":0,"path":["clap","parser","parser","ParseResult","NoArg"],"kind":"variant"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:2433:11124":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:3380:9214":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"36:4486:16778":{"crate_id":36,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"0:4876:7629":{"crate_id":0,"path":["clap","error","kind","ErrorKind","Format"],"kind":"variant"},"28:870:13700":{"crate_id":28,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:1132:7467":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"37:189:5462":{"crate_id":37,"path":["termcolor","Buffer"],"kind":"struct"},"0:4921:7467":{"crate_id":0,"path":["clap","error","Backtrace"],"kind":"struct"},"2:49961:12595":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"27:1268:13836":{"crate_id":27,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"2:8680:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:4728:12682":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"42:331:10160":{"crate_id":42,"path":["addr2line","Location"],"kind":"struct"},"2:46379:11353":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:6557:12333":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:4296:16686":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"32:2120:11453":{"crate_id":32,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"27:1615:9251":{"crate_id":27,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"1:12187:12358":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"44:13777:14852":{"crate_id":44,"path":["object","macho","Nlist32"],"kind":"struct"},"2:47076:9339":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:11835:14675":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"44:13154:14742":{"crate_id":44,"path":["object","macho","Section64"],"kind":"struct"},"0:5269:8971":{"crate_id":0,"path":["clap","output","fmt","Style"],"kind":"enum"},"25:2561:9430":{"crate_id":25,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"0:1397:7028":{"crate_id":0,"path":["clap","builder","value_parser","ValueParserInner"],"kind":"enum"},"43:5006:15281":{"crate_id":43,"path":["gimli","constants","DwForm"],"kind":"struct"},"12:472:31564":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:11194:7858":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"43:6882:13370":{"crate_id":43,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:14936:14165":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"0:262:2944":{"crate_id":0,"path":["clap","builder","macros","yaml_char"],"kind":"macro"},"0:4215:4347":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","HiddenShortHelp"],"kind":"variant"},"6:4356:16714":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"15:230:13169":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:4218:16670":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"43:8241:13344":{"crate_id":43,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"11:54:13141":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"5:8313:12877":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10128:13669":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:4256:16673":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:46553:9180":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"0:3207:8716":{"crate_id":0,"path":["clap","output","help","dimensions"],"kind":"function"},"2:24330:12869":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"43:5657:15300":{"crate_id":43,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:11277:13954":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"25:2384:15897":{"crate_id":25,"path":["regex","prog","InstSave"],"kind":"struct"},"9:1075:13089":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"0:3577:3121":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","ArgsNegateSubcommands"],"kind":"variant"},"43:209:13913":{"crate_id":43,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"27:1566:15630":{"crate_id":27,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"43:7549:13341":{"crate_id":43,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:6905:17156":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"26:2951:13774":{"crate_id":26,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"2:50440:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"0:4177:3639":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","MultipleOccurrences"],"kind":"variant"},"0:5220:7335":{"crate_id":0,"path":["clap","mkeymap","KeyType"],"kind":"enum"},"0:266:2948":{"crate_id":0,"path":["clap","builder","macros","yaml_to_bool"],"kind":"macro"},"25:419:15798":{"crate_id":25,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"5:7453:14123":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:12343:14772":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:2866:9246":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"21:444:1678":{"crate_id":21,"path":["linked_hash_map","Values"],"kind":"struct"},"17:10623:14507":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"44:11222:14502":{"crate_id":44,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:13054:14981":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"26:3094:13743":{"crate_id":26,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"27:1706:13878":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"44:12800:14670":{"crate_id":44,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:5736:13237":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:46737:9562":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"14:56:14596":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"31:700:9528":{"crate_id":31,"path":["indexmap","map","IterMut"],"kind":"struct"},"16:6999:13390":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"25:2788:7323":{"crate_id":25,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"44:14662:15129":{"crate_id":44,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"31:0:1721":{"crate_id":31,"path":["indexmap"],"kind":"module"},"36:536:16309":{"crate_id":36,"path":["libc","unix","rusage"],"kind":"struct"},"44:14144:15011":{"crate_id":44,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"18:152:31569":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:5376:12488":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:3352:9208":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:6252:13376":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"0:268:2952":{"crate_id":0,"path":["clap","builder","macros","yaml_to_setting"],"kind":"macro"},"1:10809:12311":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"25:2017:127":{"crate_id":25,"path":["regex","error","Error"],"kind":"enum"},"0:4083:4885":{"crate_id":0,"path":["clap","builder","arg","DisplayOrder","Implicit"],"kind":"variant"},"1:13939:67063":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"43:3148:13497":{"crate_id":43,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"0:3557:3086":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","DontDelimitTrailingValues"],"kind":"variant"},"27:1916:15661":{"crate_id":27,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"2:46514:11350":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"44:14501:15087":{"crate_id":44,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"26:2485:13787":{"crate_id":26,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"1:4512:9511":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"0:3510:2990":{"crate_id":0,"path":["clap","builder","action","ArgAction","IncOccurrence"],"kind":"variant"},"1:13923:1653":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:11243:9279":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"39:0:1553":{"crate_id":39,"path":["backtrace"],"kind":"module"},"30:435:9478":{"crate_id":30,"path":["os_str_bytes","raw_str","RawOsString"],"kind":"struct"},"2:50302:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"44:12998:14716":{"crate_id":44,"path":["object","macho","FatHeader"],"kind":"struct"},"43:5119:15284":{"crate_id":43,"path":["gimli","constants","DwDs"],"kind":"struct"},"25:969:15803":{"crate_id":25,"path":["regex","pool","Pool"],"kind":"struct"},"36:1657:16458":{"crate_id":36,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:13564:15122":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:3423:9223":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:1438:8270":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:10566:12407":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"0:3563:3096":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","SubcommandRequired"],"kind":"variant"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"36:1721:12501":{"crate_id":36,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4242:16672":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"44:3920:13642":{"crate_id":44,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"44:11579:13646":{"crate_id":44,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:1727:16493":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:6518:13382":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"25:3049:9428":{"crate_id":25,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"17:10543:13973":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:7894:13363":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"25:2655:9281":{"crate_id":25,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"12:162:9625":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:2397:9645":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:46727:9561":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:4061:16616":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"44:11566:13645":{"crate_id":44,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"32:444:13153":{"crate_id":32,"path":["hashbrown","raw","inner","RawDrain"],"kind":"struct"},"1:3682:9502":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:13760:15191":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:10028:14487":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:2945:13521":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"43:8423:13349":{"crate_id":43,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"0:3252:5215":{"crate_id":0,"path":["clap","output","usage","Usage"],"kind":"struct"},"0:5125:8402":{"crate_id":0,"path":["clap","parser","parser","ParseResult","MaybeHyphenValue"],"kind":"variant"},"2:23850:12284":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:51276:12733":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"43:8366:13348":{"crate_id":43,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:12004:11615":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"25:2340:15342":{"crate_id":25,"path":["regex","prog","Program"],"kind":"struct"},"0:2504:8082":{"crate_id":0,"path":["clap","parser","matches","arg_matches","unwrap_os_string"],"kind":"function"},"2:46878:9500":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"44:13409:14791":{"crate_id":44,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"25:3068:15819":{"crate_id":25,"path":["regex","sparse","SparseSet"],"kind":"struct"},"43:0:9044":{"crate_id":43,"path":["gimli"],"kind":"module"},"5:8106:3636":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:2754:9710":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"12:1147:11454":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"0:4231:2672":{"crate_id":0,"path":["clap","builder","arg_settings","Flags"],"kind":"struct"},"39:224:14115":{"crate_id":39,"path":["backtrace","lock","LockGuard"],"kind":"struct"},"17:10001:56645":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:13306:15051":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:12605:9260":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"36:4333:16714":{"crate_id":36,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10253:13626":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:4643:14127":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:15474:16204":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"9:776:13068":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"0:1706:2901":{"crate_id":0,"path":["clap","value_parser"],"kind":"macro"},"2:23010:12284":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:12852:9470":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"36:5451:16959":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:3431:9225":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:4098:16635":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:50282:9459":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"28:915:15583":{"crate_id":28,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:12783:14859":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:4443:7858":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:1472:11186":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"0:3488:7447":{"crate_id":0,"path":["clap","util","SUCCESS_CODE"],"kind":"constant"},"6:6951:17168":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:32428:70524":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"32:484:31564":{"crate_id":32,"path":["hashbrown","raw","inner","RawIterHashInner"],"kind":"struct"},"26:2805:13804":{"crate_id":26,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"1:3658:14145":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"23:366:11942":{"crate_id":23,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"17:12771:13958":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"18:651:13694":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"43:8769:13338":{"crate_id":43,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"6:618:16354":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"32:2248:3636":{"crate_id":32,"path":["hashbrown","raw","inner","alloc","inner","Global"],"kind":"struct"},"44:13573:14817":{"crate_id":44,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"12:971:12391":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"0:4874:7628":{"crate_id":0,"path":["clap","error","kind","ErrorKind","Io"],"kind":"variant"},"2:23744:12282":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:11458:14595":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:46867:9557":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"26:3168:13783":{"crate_id":26,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"44:12144:13963":{"crate_id":44,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:12773:16191":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"17:12725:14850":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"40:47:15557":{"crate_id":40,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"44:13668:14841":{"crate_id":44,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"43:7310:13167":{"crate_id":43,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:4448:15285":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"36:3943:16573":{"crate_id":36,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:3960:16572":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"44:13588:14821":{"crate_id":44,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"25:2805:9434":{"crate_id":25,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"44:14434:15072":{"crate_id":44,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:4005:16593":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"37:90:9680":{"crate_id":37,"path":["termcolor","StandardStream"],"kind":"struct"},"43:3674:13513":{"crate_id":43,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"36:6083:17066":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:1149:11425":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"0:4844:7523":{"crate_id":0,"path":["clap","error","kind","ErrorKind","NoEquals"],"kind":"variant"},"36:5997:17038":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"18:740:15583":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:6764:9486":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"44:13721:14845":{"crate_id":44,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"0:3516:107":{"crate_id":0,"path":["clap","builder","action","ArgAction","Count"],"kind":"variant"},"44:526:14379":{"crate_id":44,"path":["object","read","any","Segment"],"kind":"struct"},"36:6915:17169":{"crate_id":36,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"37:105:9684":{"crate_id":37,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"44:10369:72601":{"crate_id":44,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"36:1532:16375":{"crate_id":36,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"44:627:14381":{"crate_id":44,"path":["object","read","any","Comdat"],"kind":"struct"},"1:16018:9070":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"27:1252:13835":{"crate_id":27,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"44:13503:14808":{"crate_id":44,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:51865:12695":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:3338:13251":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"18:745:72605":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:13685:15178":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"25:1898:15823":{"crate_id":25,"path":["regex","dfa","Cache"],"kind":"struct"},"12:2404:72591":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:8908:9339":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"43:7435:13381":{"crate_id":43,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"44:10732:14489":{"crate_id":44,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:14322:9594":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:3581:9229":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"0:146:519":{"crate_id":0,"path":["clap","macros","debug"],"kind":"macro"},"1:14103:14164":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:9971:72593":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"27:1843:13698":{"crate_id":27,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"36:5183:16837":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"36:4058:16625":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"12:1162:13149":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"25:2083:72619":{"crate_id":25,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"0:4942:7020":{"crate_id":0,"path":["clap","parser","matches","any_value","AnyValue"],"kind":"struct"},"32:1896:11184":{"crate_id":32,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"36:5233:16858":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:53691:16104":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:9769:72599":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:13506:15104":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:3839:14123":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:3772:9528":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:47812:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:11575:9383":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:46002:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"39:495:14116":{"crate_id":39,"path":["backtrace","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"19:117:17176":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:8027:12432":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"0:4086:4886":{"crate_id":0,"path":["clap","builder","arg","DisplayOrder","Explicit"],"kind":"variant"},"27:1423:12386":{"crate_id":27,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"43:469:13215":{"crate_id":43,"path":["gimli","read","cfi","UnwindSection"],"kind":"trait"},"5:6257:11190":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"0:4629:2907":{"crate_id":0,"path":["clap","builder","value_parser","StringValueParser"],"kind":"struct"},"0:4772:7545":{"crate_id":0,"path":["clap","error","context","ContextKind","ActualNumValues"],"kind":"variant"},"17:9649:14476":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:2269:12649":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13377:15071":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"27:1548:15627":{"crate_id":27,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"32:187:13156":{"crate_id":32,"path":["hashbrown","raw","inner","RawTable"],"kind":"struct"},"1:11098:8410":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"9:686:13019":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"6:6934:17163":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:8289:12432":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"39:88:11418":{"crate_id":39,"path":["backtrace","symbolize","Symbol"],"kind":"struct"},"16:3772:15277":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"0:4641:2920":{"crate_id":0,"path":["clap","builder","value_parser","PathBufValueParser"],"kind":"struct"},"27:1686:15595":{"crate_id":27,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"1:16026:9078":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"43:3273:13510":{"crate_id":43,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:16024:9076":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:11947:14709":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"0:4607:6999":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","Username"],"kind":"variant"},"6:4038:16608":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"30:373:5462":{"crate_id":30,"path":["os_str_bytes","raw_str","Buffer"],"kind":"struct"},"2:5605:12680":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"26:2362:13781":{"crate_id":26,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"1:1152:11426":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"44:12343:13574":{"crate_id":44,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:9843:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:4515:12986":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"44:2946:13630":{"crate_id":44,"path":["object","read","elf","note","NoteHeader"],"kind":"trait"},"31:598:1678":{"crate_id":31,"path":["indexmap","map","Values"],"kind":"struct"},"32:1143:11453":{"crate_id":32,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"32:2253:17172":{"crate_id":32,"path":["hashbrown","raw","inner","bitmask","BitMask"],"kind":"struct"},"41:0:9037":{"crate_id":41,"path":["cfg_if"],"kind":"module"},"44:13955:14868":{"crate_id":44,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"44:11790:13992":{"crate_id":44,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"26:3025:2672":{"crate_id":26,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"32:121:31562":{"crate_id":32,"path":["hashbrown","raw","inner","bitmask","BitMaskIter"],"kind":"struct"},"2:11325:9608":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:4127:16648":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:13144:9249":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"36:1525:16372":{"crate_id":36,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:52499:12710":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"0:4780:7543":{"crate_id":0,"path":["clap","error","context","ContextKind","MaxOccurrences"],"kind":"variant"},"0:3547:3068":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","AllowHyphenValues"],"kind":"variant"},"36:1588:16408":{"crate_id":36,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:5185:9641":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"36:5412:16949":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:672:49759":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:5952:12540":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"45:983:13086":{"crate_id":45,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"0:122:1697":{"crate_id":0,"path":["clap","_tutorial"],"kind":"module"},"36:4387:16739":{"crate_id":36,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"44:14646:15126":{"crate_id":44,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"26:1894:13749":{"crate_id":26,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"38:181:604":{"crate_id":38,"path":["unicase","eq"],"kind":"function"},"2:51541:12734":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"44:11331:14505":{"crate_id":44,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"25:2433:15905":{"crate_id":25,"path":["regex","prog","InstChar"],"kind":"struct"},"43:450:13222":{"crate_id":43,"path":["gimli","read","cfi","UnwindOffset"],"kind":"trait"},"2:51493:16068":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"36:625:16364":{"crate_id":36,"path":["libc","unix","protoent"],"kind":"struct"},"2:9339:7908":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"44:11948:14565":{"crate_id":44,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"43:3125:13496":{"crate_id":43,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:3323:12448":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:13582:15126":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:8475:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:9861:3335":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:46708:9554":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"25:2051:15864":{"crate_id":25,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"16:6176:13373":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:13210:12597":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"25:2800:9433":{"crate_id":25,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"17:13180:15023":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"14:250:15564":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"26:3411:13752":{"crate_id":26,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"46:54:13141":{"crate_id":46,"path":["adler","Adler32"],"kind":"struct"},"44:13363:14767":{"crate_id":44,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6644:13386":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:4308:16693":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"44:9960:14469":{"crate_id":44,"path":["object","endian","BigEndian"],"kind":"struct"},"12:2392:13799":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"0:1816:7374":{"crate_id":0,"path":["clap","builder","debug_asserts","_verify_positionals"],"kind":"function"},"2:52102:12735":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"0:4557:6726":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","Name"],"kind":"variant"},"1:16014:9066":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:50007:12602":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:53495:16092":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:24132:17359":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:612:16351":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:547:13238":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"36:5961:17022":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:13520:15111":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:4067:16618":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"0:4782:7532":{"crate_id":0,"path":["clap","error","context","ContextKind","SuggestedCommand"],"kind":"variant"},"6:1662:16454":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:3103:12284":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"43:5436:15293":{"crate_id":43,"path":["gimli","constants","DwInl"],"kind":"struct"},"30:510:13895":{"crate_id":30,"path":["os_str_bytes","EncodingError"],"kind":"struct"},"16:4304:15281":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:3987:16581":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"0:3504:2980":{"crate_id":0,"path":["clap","builder","action","ArgAction","Set"],"kind":"variant"},"25:2907:9434":{"crate_id":25,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"5:432:2889":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"44:3988:13262":{"crate_id":44,"path":["object","read","macho","section","Section"],"kind":"trait"},"44:13634:14828":{"crate_id":44,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"44:5458:13951":{"crate_id":44,"path":["object","read","traits","ObjectSymbolTable"],"kind":"trait"},"0:3049:1702":{"crate_id":0,"path":["clap","output"],"kind":"module"},"0:4217:4353":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","HiddenLongHelp"],"kind":"variant"},"2:47710:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:11779:14658":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:4020:16599":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"31:1096:11186":{"crate_id":31,"path":["indexmap","set","Drain"],"kind":"struct"},"2:46025:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"9:469:14004":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:1642:11454":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"44:11913:13987":{"crate_id":44,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:13609:15133":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"18:821:13687":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"32:955:12388":{"crate_id":32,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:9574:13582":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:6787:12338":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:12065:67052":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"36:6606:17149":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"32:1910:12341":{"crate_id":32,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:1558:16380":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:11070:9516":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:2502:1656":{"crate_id":1,"path":["std","error"],"kind":"module"},"43:3000:13262":{"crate_id":43,"path":["gimli","read","Section"],"kind":"trait"},"12:979:12392":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"36:571:16335":{"crate_id":36,"path":["libc","unix","iovec"],"kind":"struct"},"44:9925:13570":{"crate_id":44,"path":["object","endian","Endianness"],"kind":"enum"},"20:584:15963":{"crate_id":20,"path":["yaml_rust","scanner","SimpleKey"],"kind":"struct"},"1:9771:14162":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:51126:16064":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:11297:13758":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:50458:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:3200:9495":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:50517:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"36:5461:16961":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:23951:12852":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"43:7368:13380":{"crate_id":43,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:3218:13504":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"45:1097:13089":{"crate_id":45,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"44:10208:9262":{"crate_id":44,"path":["object","read","util","Bytes"],"kind":"struct"},"0:4700:2915":{"crate_id":0,"path":["clap","builder","value_parser","BoolishValueParser"],"kind":"struct"},"36:4285:16693":{"crate_id":36,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"2:47069:9540":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"34:0:9648":{"crate_id":34,"path":["unicode_width"],"kind":"module"},"2:49726:9275":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:2508:11155":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"44:14561:15103":{"crate_id":44,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"0:5319:1660":{"crate_id":0,"path":["clap","util","color","ColorChoice"],"kind":"enum"},"12:2412:17174":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:46816:9567":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"0:4742:7344":{"crate_id":0,"path":["clap","builder","debug_asserts","Flag"],"kind":"enum"},"17:11915:14680":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"0:5111:8392":{"crate_id":0,"path":["clap","parser","parser","ParseResult","FlagSubCommand"],"kind":"variant"},"43:7943:13390":{"crate_id":43,"path":["gimli","read","op","Piece"],"kind":"struct"},"44:14749:15178":{"crate_id":44,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"43:5464:15294":{"crate_id":43,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:10592:12430":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:10799:12287":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"36:6891:17164":{"crate_id":36,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:12744:14163":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"0:3549:3072":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","AllowNegativeNumbers"],"kind":"variant"},"17:11604:14622":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:10387:9319":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:1597:7858":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:5647:12314":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"28:137:31568":{"crate_id":28,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"44:4637:56840":{"crate_id":44,"path":["object","read","pe","file","ImageOptionalHeader"],"kind":"trait"},"36:4005:16602":{"crate_id":36,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"26:2416:13783":{"crate_id":26,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"17:12521:14815":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"25:2917:9424":{"crate_id":25,"path":["regex","re_trait","Locations"],"kind":"struct"},"6:565:16326":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"30:159:9279":{"crate_id":30,"path":["os_str_bytes","iter","Split"],"kind":"struct"},"2:8548:8272":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"43:6262:13911":{"crate_id":43,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:10452:11413":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:11653:14631":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"20:488:9159":{"crate_id":20,"path":["yaml_rust","scanner","ScanError"],"kind":"struct"},"5:4242:14123":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:11598:9384":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:50278:9458":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"0:3607:3181":{"crate_id":0,"path":["clap","builder","app_settings","AppSettings","NoAutoHelp"],"kind":"variant"},"44:3777:14379":{"crate_id":44,"path":["object","read","macho","segment","Segment"],"kind":"trait"},"44:12313:13958":{"crate_id":44,"path":["object","read","Relocation"],"kind":"struct"},"17:10656:14510":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"43:3194:13498":{"crate_id":43,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"43:6415:13229":{"crate_id":43,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"25:2623:7322":{"crate_id":25,"path":["regex","re_bytes","Regex"],"kind":"struct"},"2:8479:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"0:4852:7542":{"crate_id":0,"path":["clap","error","kind","ErrorKind","TooManyOccurrences"],"kind":"variant"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:15201:12373":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:5789:12304":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:10814:13645":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5201:16834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:6964:17169":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"27:1350:15606":{"crate_id":27,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"2:8963:9529":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"12:2280:11454":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:5295:55027":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:1493:11444":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"44:11343:14506":{"crate_id":44,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:13073:2509":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"44:10399:14477":{"crate_id":44,"path":["object","read","any","SectionIterator"],"kind":"struct"},"18:886:13692":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"46:46:16292":{"crate_id":46,"path":["adler","algo","U32X4"],"kind":"struct"},"6:4048:16611":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"0:4870:7479":{"crate_id":0,"path":["clap","error","kind","ErrorKind","DisplayVersion"],"kind":"variant"},"31:22:9628":{"crate_id":31,"path":["indexmap","equivalent","Equivalent"],"kind":"trait"},"2:3406:9219":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"0:260:2938":{"crate_id":0,"path":["clap","builder","macros","yaml_vec"],"kind":"macro"},"26:2669:13797":{"crate_id":26,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"0:264:2946":{"crate_id":0,"path":["clap","builder","macros","yaml_to_char"],"kind":"macro"},"21:0:9153":{"crate_id":21,"path":["linked_hash_map"],"kind":"module"},"44:11263:13973":{"crate_id":44,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"43:8684:13403":{"crate_id":43,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"44:10721:14488":{"crate_id":44,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:11317:67021":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"0:4819:7544":{"crate_id":0,"path":["clap","error","context","ContextValue","Number"],"kind":"variant"},"16:5505:13226":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:11615:9385":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"43:6994:13371":{"crate_id":43,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:4454:16758":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:14626:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"0:4744:1653":{"crate_id":0,"path":["clap","builder","debug_asserts","Flag","Command"],"kind":"variant"},"43:6225:13217":{"crate_id":43,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"0:3387:9000":{"crate_id":0,"path":["clap","util","fnv","MAGIC_INIT"],"kind":"constant"},"26:2929:13823":{"crate_id":26,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"17:681:11418":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:1633:11453":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:8239:31576":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"12:2072:12343":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:1428:9528":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"44:10576:72597":{"crate_id":44,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:2183:12342":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"0:2984:1701":{"crate_id":0,"path":["clap","mkeymap"],"kind":"module"},"2:46146:9638":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"28:1025:13689":{"crate_id":28,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:11358:13574":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"36:81:49362":{"crate_id":36,"path":["libc","unix","DIR"],"kind":"enum"},"0:4131:2923":{"crate_id":0,"path":["clap","builder","arg_predicate","ArgPredicate"],"kind":"enum"},"2:47085:9542":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"42:248:13170":{"crate_id":42,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11767:14655":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:13446:15086":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:5290:16871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"43:6605:13240":{"crate_id":43,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:5407:13218":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"28:170:31572":{"crate_id":28,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"43:4184:15273":{"crate_id":43,"path":["gimli","arch","X86"],"kind":"struct"},"43:7662:13533":{"crate_id":43,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:0:9044":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:6004:17028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"43:6187:13325":{"crate_id":43,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"44:10339:72596":{"crate_id":44,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:6181:17104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:48938:16056":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:14952:14166":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"36:5202:16839":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"44:13109:14737":{"crate_id":44,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:10599:14505":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"25:2681:9429":{"crate_id":25,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"6:6940:17164":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"39:729:11420":{"crate_id":39,"path":["backtrace","types","BytesOrWideString"],"kind":"enum"},"6:6126:17069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:1236:14382":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:50266:9454":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:10587:12415":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"43:7182:13329":{"crate_id":43,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"44:10566:14480":{"crate_id":44,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"38:259:69886":{"crate_id":38,"path":["unicase","unicode","fold","Fold"],"kind":"enum"},"44:13761:14850":{"crate_id":44,"path":["object","macho","NoteCommand"],"kind":"struct"},"26:1945:13753":{"crate_id":26,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"44:11388:14510":{"crate_id":44,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:11409:12539":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:5415:9486":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:10646:19507":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:8003:9538":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"44:3248:56759":{"crate_id":44,"path":["object","read","macho","fat","FatArch"],"kind":"trait"},"6:5979:17010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"44:11964:14566":{"crate_id":44,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"0:4862:7557":{"crate_id":0,"path":["clap","error","kind","ErrorKind","UnexpectedMultipleUsage"],"kind":"variant"},"25:2358:15826":{"crate_id":25,"path":["regex","prog","Inst"],"kind":"enum"},"36:3964:16581":{"crate_id":36,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"9:996:13087":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:9476:14375":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"25:2497:9431":{"crate_id":25,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"2:49516:9267":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"32:1917:12342":{"crate_id":32,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"0:2578:7911":{"crate_id":0,"path":["clap","parser","matches","value_source"],"kind":"module"},"2:2292:12653":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"27:1598:13873":{"crate_id":27,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"43:8210:13342":{"crate_id":43,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:15509:11415":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:4748:7443":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:10081:13563":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"0:4211:4327":{"crate_id":0,"path":["clap","builder","arg_settings","ArgSettings","HideEnv"],"kind":"variant"},"2:51997:16071":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:10458:14425":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"44:299:14378":{"crate_id":44,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:10389:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:4965:8347":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:1600:16408":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"44:13270:14756":{"crate_id":44,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"0:4563:6729":{"crate_id":0,"path":["clap","builder","usage_parser","UsageToken","Long"],"kind":"variant"},"27:1955:9425":{"crate_id":27,"path":["aho_corasick","Match"],"kind":"struct"},"21:62:13715":{"crate_id":21,"path":["linked_hash_map","LinkedHashMap"],"kind":"struct"},"6:4028:16602":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:5788:14123":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"8:0:9037":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:9733:12482":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:16005:9060":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"44:13283:14758":{"crate_id":44,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:1619:7856":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"0:107:1843":{"crate_id":0,"path":["clap","_cookbook","escaped_positional_derive"],"kind":"module"},"1:16002:9057":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:5430:16946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"44:10829:14480":{"crate_id":44,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:4230:15280":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"0:4613:7006":{"crate_id":0,"path":["clap","builder","value_hint","ValueHint","EmailAddress"],"kind":"variant"},"44:12813:14674":{"crate_id":44,"path":["object","elf","NoteHeader64"],"kind":"struct"},"44:13707:14844":{"crate_id":44,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:4493:16773":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"27:1625:13874":{"crate_id":27,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"2:49422:9552":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10502:14502":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"0:5272:8973":{"crate_id":0,"path":["clap","output","fmt","Style","Warning"],"kind":"variant"},"0:2770:2664":{"crate_id":0,"path":["clap","parser","validator"],"kind":"module"},"16:3018:13500":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:25323:12782":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:24295:7639":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"26:2616:13794":{"crate_id":26,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"36:4503:16786":{"crate_id":36,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"26:2822:7344":{"crate_id":26,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"0:3518:3014":{"crate_id":0,"path":["clap","builder","action","ArgAction","Help"],"kind":"variant"},"17:9943:72595":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"13:232:17224":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"0:5114:8373":{"crate_id":0,"path":["clap","parser","parser","ParseResult","Opt"],"kind":"variant"},"0:147:547":{"crate_id":0,"path":["clap","derive"],"kind":"module"},"16:5456:13221":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"26:2984:15769":{"crate_id":26,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"2:10321:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"45:947:14006":{"crate_id":45,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"36:6147:17104":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:13568:11124":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:9718:12481":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"0:144:2667":{"crate_id":0,"path":["clap","macros","impl_settings"],"kind":"macro"},"44:12363:13573":{"crate_id":44,"path":["object","read","CompressedData"],"kind":"struct"},"44:14442:15074":{"crate_id":44,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"43:8874:7050":{"crate_id":43,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4485:16771":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"44:14354:15051":{"crate_id":44,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"0:1810:7385":{"crate_id":0,"path":["clap","builder","debug_asserts","find_duplicates"],"kind":"function"},"44:1275:14382":{"crate_id":44,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"36:1900:50733":{"crate_id":36,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:4230:16671":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"12:869:11186":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:10558:13976":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:46787:9574":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:51435:12705":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"43:3346:13558":{"crate_id":43,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:1075:2512":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:32420:11265":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"36:512:16298":{"crate_id":36,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:2395:11113":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"44:13257:14754":{"crate_id":44,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"29:90:6493":{"crate_id":29,"path":["clap_lex","ArgCursor"],"kind":"struct"},"6:626:16359":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"39:864:7467":{"crate_id":39,"path":["backtrace","capture","Backtrace"],"kind":"struct"},"1:14575:12311":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:10052:14489":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"44:13218:14750":{"crate_id":44,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:5034:9631":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"44:3537:13647":{"crate_id":44,"path":["object","read","macho","file","MachHeader"],"kind":"trait"},"16:7174:13394":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:1704:16483":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"44:13695:14843":{"crate_id":44,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:23014:12281":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"36:6213:17140":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"43:8802:13406":{"crate_id":43,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:5402:16933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"0:1707:7282":{"crate_id":0,"path":["clap","builder","value_parser","private"],"kind":"module"},"43:8306:194":{"crate_id":43,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"0:1394:2909":{"crate_id":0,"path":["clap","builder","value_parser","ValueParser"],"kind":"struct"},"5:1457:11454":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"36:6092:17069":{"crate_id":36,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11847:14678":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"36:4032:16614":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:48679:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"36:4065:16628":{"crate_id":36,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"25:2978:7322":{"crate_id":25,"path":["regex","re_unicode","Regex"],"kind":"struct"},"44:14418:15069":{"crate_id":44,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"0:5156:7831":{"crate_id":0,"path":["clap","parser","parser","Identifier"],"kind":"enum"},"0:2075:7569":{"crate_id":0,"path":["clap","error","put_usage"],"kind":"function"},"27:1771:15636":{"crate_id":27,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"0:4834:7526":{"crate_id":0,"path":["clap","error","kind","ErrorKind","InvalidValue"],"kind":"variant"},"44:14396:15064":{"crate_id":44,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"0:3490:7446":{"crate_id":0,"path":["clap","util","safe_exit"],"kind":"function"},"28:942:15588":{"crate_id":28,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"26:2113:7399":{"crate_id":26,"path":["regex_syntax","ast","Position"],"kind":"struct"},"17:12442:14805":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:6853:17153":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:10372:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:10054:12820":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"43:7986:13545":{"crate_id":43,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:6265:17143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"}},"external_crates":{"39":{"name":"backtrace","html_root_url":"https://docs.rs/backtrace/"},"26":{"name":"regex_syntax","html_root_url":null},"40":{"name":"rustc_demangle","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"37":{"name":"termcolor","html_root_url":null},"35":{"name":"terminal_size","html_root_url":null},"24":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"43":{"name":"gimli","html_root_url":null},"20":{"name":"yaml_rust","html_root_url":"https://docs.rs/yaml-rust/0.4.5/"},"25":{"name":"regex","html_root_url":null},"36":{"name":"libc","html_root_url":null},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"memchr","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"47":{"name":"strsim","html_root_url":null},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"46":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"45":{"name":"miniz_oxide","html_root_url":null},"21":{"name":"linked_hash_map","html_root_url":null},"32":{"name":"hashbrown","html_root_url":null},"22":{"name":"clap_derive","html_root_url":null},"27":{"name":"aho_corasick","html_root_url":null},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"38":{"name":"unicase","html_root_url":"https://docs.rs/unicase/2.6.0/"},"42":{"name":"addr2line","html_root_url":null},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"29":{"name":"clap_lex","html_root_url":null},"23":{"name":"once_cell","html_root_url":null},"48":{"name":"atty","html_root_url":null},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"os_str_bytes","html_root_url":null},"31":{"name":"indexmap","html_root_url":"https://docs.rs/indexmap/1/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"34":{"name":"unicode_width","html_root_url":null},"44":{"name":"object","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"41":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"33":{"name":"textwrap","html_root_url":"https://docs.rs/textwrap/0.15.0/"}},"format_version":18}