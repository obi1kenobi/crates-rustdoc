{"root":"0:0:1649","crate_version":"0.4.7","includes_private":true,"index":{"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6863:3137":{"id":"1:6863:3137","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:59393"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:277:1643":{"id":"a:2:3281:220-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:260:1640":{"id":"b:2:3208-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:181:768":{"id":"0:181:768","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[1222,4],"end":[1224,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2874:54668":{"id":"2:2874:54668","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:276:660":{"id":"0:276:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[171,9],"end":[171,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:112:1659":{"id":"b:2:4002-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1175,0],"end":[1185,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:3577:1964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:160:181","0:161:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13514:1851":{"id":"2:13514:1851","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:94:1652":{"id":"a:2:3269:211-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:150:1914":{"id":"0:150:1914","crate_id":0,"name":"vacant_entry","span":{"filename":"src/lib.rs","begin":[991,4],"end":[996,5]},"visibility":"public","docs":"Return a handle to a vacant entry allowing for further manipulation.\n\nThis function is useful when creating values that must contain their\nslab key. The returned `VacantEntry` reserves a slot in the slab and is\nable to query the associated key.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = {\n    let entry = slab.vacant_entry();\n    let key = entry.key();\n\n    entry.insert((key, \"hello\"));\n    key\n};\n\nassert_eq!(hello, slab[hello].0);\nassert_eq!(\"hello\", slab[hello].1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:282:1662":{"id":"0:282:1662","crate_id":0,"name":"Occupied","span":{"filename":"src/lib.rs","begin":[213,4],"end":[213,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"}]}},"2:4783:3725":{"id":"2:4783:3725","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:1966","2:4785:60479","2:4786:1984"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:98:1655":{"id":"b:5:787-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:2849","5:790:2850","5:791:2851"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5775:3179":{"id":"1:5775:3179","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:56992","1:5777:56993","1:5778:56994","1:5779:56995"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:45:2114":{"id":"a:2:3269:211-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:277:1643":{"id":"b:2:3208-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1560,0],"end":[1578,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","take","filter","nth","cmp","eq","product","is_sorted_by_key","unzip","enumerate","try_find","try_for_each","try_collect","scan","ge","filter_map","count","step_by","any","__iterator_get_unchecked","cmp_by","all","rev","rposition","copied","fold","collect_into","flat_map","peekable","position","chain","zip","partial_cmp_by","cloned","max_by_key","collect","reduce","partition","size_hint","flatten","lt","skip_while","intersperse","partial_cmp","skip","eq_by","cycle","max_by","try_reduce","partition_in_place","fuse","take_while","intersperse_with","next_chunk","max","is_sorted","array_chunks","min_by_key","find","last","is_partitioned","ne","inspect","map_while","for_each","advance_by","min","is_sorted_by","sum","le","min_by","find_map","map","try_fold","gt"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:249:1966","0:250:922","0:251:1984"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:268:1647":{"id":"b:2:3202-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3440:3119":{"id":"2:3440:3119","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3406:3111":{"id":"2:3406:3111","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:112:1659":{"id":"a:2:3281:220-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13592:61206":{"id":"2:13592:61206","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:126:1770":{"id":"0:126:1770","crate_id":0,"name":"compact","span":{"filename":"src/lib.rs","begin":[499,4],"end":[552,5]},"visibility":"public","docs":"Reduce the capacity as much as possible, changing the key for elements when necessary.\n\nTo allow updating references to the elements which must be moved to a new key,\nthis function takes a closure which is called before moving each element.\nThe second and third parameters to the closure are the current key and\nnew key respectively.\nIn case changing the key for one element turns out not to be possible,\nthe move can be cancelled by returning `false` from the closure.\nIn that case no further attempts at relocating elements is made.\nIf the closure unwinds, the slab will be left in a consistent state,\nbut the value that the closure panicked on might be removed.\n\n# Examples\n\n```\n# use slab::*;\n\nlet mut slab = Slab::with_capacity(10);\nlet a = slab.insert('a');\nslab.insert('b');\nslab.insert('c');\nslab.remove(a);\nslab.compact(|&mut value, from, to| {\n    assert_eq!((value, from, to), ('c', 2, 0));\n    true\n});\nassert!(slab.capacity() >= 2 && slab.capacity() < 10);\n```\n\nThe value is not moved when the closure returns `Err`:\n\n```\n# use slab::*;\n\nlet mut slab = Slab::with_capacity(100);\nlet a = slab.insert('a');\nlet b = slab.insert('b');\nslab.remove(a);\nslab.compact(|&mut value, from, to| false);\nassert_eq!(slab.iter().next(), Some((b, &'b')));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rekey",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:1587:2298":{"id":"20:1587:2298","crate_id":20,"name":"DeserializeSeed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1589:2116","20:1590:2123"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:107:1657":{"id":"a:2:3281:220-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1327,0],"end":[1336,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:191:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:1718:2299":{"id":"20:1718:2299","crate_id":20,"name":"SeqAccess","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1720:127","20:1721:62483","20:1723:62484","20:1725:1984"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2866:3696":{"id":"2:2866:3696","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:54668"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:1582:2297":{"id":"20:1582:2297","crate_id":20,"name":"DeserializeOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deserialize","id":"20:1576:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"generic_params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"2:13577:61200":{"id":"2:13577:61200","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13134:3636","str::matches":"1:16010:2164","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49780:3931","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13565:55655":{"id":"2:13565:55655","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:16004:2159","self::pattern":"2:13134:3636","str::splitn":"1:16010:2164"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49680:2909","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4741:3208":{"id":"1:4741:3208","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:59287","1:4743:39815","1:4744:59288","1:4745:59289"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:121:1685":{"id":"0:121:1685","crate_id":0,"name":"capacity","span":{"filename":"src/lib.rs","begin":[297,4],"end":[299,5]},"visibility":"public","docs":"Return the number of values the slab can store without reallocating.\n\n# Examples\n\n```\n# use slab::*;\nlet slab: Slab<i32> = Slab::with_capacity(10);\nassert_eq!(slab.capacity(), 10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3380:3105":{"id":"2:3380:3105","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:174:1652":{"id":"0:174:1652","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[1211,4],"end":[1211,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:267:408":{"id":"0:267:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:98:1655":{"id":"b:2:2869-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:224:1984":{"id":"0:224:1984","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1487,4],"end":[1489,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13574:2241":{"id":"2:13574:2241","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:16004:2159","self::pattern":"2:13134:3636","str::matches":"1:16010:2164","`DoubleEndedIterator`":"2:8523:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49762:3930","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3368:3104":{"id":"2:3368:3104","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6085:1923":{"id":"5:6085:1923","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3427:3116":{"id":"2:3427:3116","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9339:2578-0:268:1647":{"id":"a:2:9339:2578-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"20:9593:127":{"id":"20:9593:127","crate_id":20,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:9594:62464"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:45:2114":{"id":"0:45:2114","crate_id":0,"name":"SlabVisitor","span":{"filename":"src/serde.rs","begin":[26,0],"end":[26,38]},"visibility":{"restricted":{"parent":"0:4:1552","path":"::serde"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:48:1542"],"impls":["a:2:3310:2272-0:45:2114","a:2:3269:211-0:45:2114","a:2:9340:2577-0:45:2114","a:2:9339:2578-0:45:2114","a:2:3281:220-0:45:2114","b:2:3198-0:45:2114","b:2:2872-0:45:2114","b:2:2869-0:45:2114","b:2:4002-0:45:2114","b:2:3202-0:45:2114","b:2:3213-0:45:2114","b:2:3208-0:45:2114","b:20:1566-0:45:2114","0:49"]}},"2:14322:2366":{"id":"2:14322:2366","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14323:56908","2:14324:56909","2:14325:56910","2:14326:56911","2:14327:56912","2:14328:56913","2:14329:2816"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:1576:2099":{"id":"20:1576:2099","crate_id":20,"name":"Deserialize","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1578:2123"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9339:2578-0:277:1643":{"id":"a:2:9339:2578-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8487:768":{"id":"2:8487:768","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10610:142":{"id":"2:10610:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10611:715","2:10613:56964"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46111:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:93:59":{"id":"0:93:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[144,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5008:3252":{"id":"1:5008:3252","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:1655","1:5010:57503"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13525:32219":{"id":"2:13525:32219","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16010:2164"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49832:3933","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13606:61210":{"id":"2:13606:61210","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:117":{"id":"0:117","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[216,0],"end":[1173,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:119:920","0:120:1684","0:121:1685","0:122:1704","0:123:1718","0:124:1734","0:125:1738","0:126:1770","0:136:1784","0:137:793","0:138:1790","0:139:779","0:140:1743","0:141:1779","0:142:1820","0:143:1832","0:144:1851","0:145:1858","0:146:1865","0:147:1888","0:148:1900","0:149:1909","0:150:1914","0:151:1901","0:152:1921","0:153:1928","0:154:1933","0:155:1946","0:157:1962"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:1662:2102":{"id":"20:1662:2102","crate_id":20,"name":"Visitor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1664:2116","20:1665:2117","20:1666:2724","20:1668:2725","20:1670:2726","20:1672:2727","20:1674:2728","20:9052:2729","20:1676:2730","20:1678:2731","20:1680:2732","20:1682:2733","20:9055:2734","20:1684:2735","20:1686:2736","20:1688:2737","20:1690:2738","20:1692:2739","20:1694:2740","20:1696:2741","20:1698:2742","20:1700:2743","20:1702:2744","20:1704:2745","20:1706:2746","20:1708:2747","20:1710:2748","20:1712:2120","20:1714:2749"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23169:16251":{"id":"2:23169:16251","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23170:6307","2:23171:59729","2:23172:59730"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23162:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1462,0],"end":[1466,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8548:2000","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:216:793"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:94:1652":{"id":"b:2:3208-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:204:1900":{"id":"0:204:1900","crate_id":0,"name":"insert","span":{"filename":"src/lib.rs","begin":[1391,4],"end":[1398,5]},"visibility":"public","docs":"Insert a value in the entry, returning a mutable reference to the value.\n\nTo get the key associated with the value, use `key` prior to calling\n`insert`.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = {\n    let entry = slab.vacant_entry();\n    let key = entry.key();\n\n    entry.insert((key, \"hello\"));\n    key\n};\n\nassert_eq!(hello, slab[hello].0);\nassert_eq!(\"hello\", slab[hello].1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:789:2849":{"id":"5:789:2849","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:155:1946":{"id":"0:155:1946","crate_id":0,"name":"retain","span":{"filename":"src/lib.rs","begin":[1121,4],"end":[1135,5]},"visibility":"public","docs":"Retain only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(usize, &mut e)`\nreturns false. This method operates in place and preserves the key\nassociated with the retained values.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet k1 = slab.insert(0);\nlet k2 = slab.insert(1);\nlet k3 = slab.insert(2);\n\nslab.retain(|key, val| key == k1 || *val == 1);\n\nassert!(slab.contains(k1));\nassert!(slab.contains(k2));\nassert!(!slab.contains(k3));\n\nassert_eq!(2, slab.len());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6103:61852":{"id":"5:6103:61852","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:112:1659":{"id":"b:2:2869-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"20:1598:2100":{"id":"20:1598:2100","crate_id":20,"name":"Deserializer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1600:127","20:1601:2687","20:1603:2688","20:1605:2689","20:1607:2690","20:1609:2691","20:1611:2692","20:9048:2693","20:1613:2694","20:1615:2695","20:1617:2696","20:1619:2697","20:9050:2698","20:1621:2699","20:1623:2700","20:1625:2701","20:1627:2702","20:1629:2703","20:1631:2704","20:1633:2705","20:1635:2706","20:1637:2707","20:1639:2708","20:1641:2709","20:1643:2710","20:1645:2711","20:1647:2712","20:1649:2126","20:1651:2713","20:1653:2714","20:1655:2715","20:1657:2716","20:1659:2717"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:260:1640":{"id":"b:2:3202-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:98:1655":{"id":"b:2:4002-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2229"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:210:1984":{"id":"0:210:1984","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1443,4],"end":[1445,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1187,0],"end":[1195,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"2:3581:1965","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:164:754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13571:61199":{"id":"2:13571:61199","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6787:3276":{"id":"1:6787:3276","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6788:7270","1:6789:57013"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:3121","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:277:1643":{"id":"b:2:3213-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:790:2850":{"id":"5:790:2850","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:13501:61191":{"id":"2:13501:61191","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3358:3102":{"id":"2:3358:3102","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3435:3118":{"id":"2:3435:3118","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23545:3740":{"id":"2:23545:3740","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23546:1270","2:23547:1269","2:23548:1267","2:23549:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:22957:3749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:94:1652":{"id":"0:94:1652","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[178,0],"end":[181,1]},"visibility":"public","docs":"A consuming iterator over the values stored in a `Slab`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:96:1642","0:97:793"],"impls":["a:2:3310:2272-0:94:1652","a:2:3269:211-0:94:1652","a:2:9340:2577-0:94:1652","a:2:9339:2578-0:94:1652","a:2:3281:220-0:94:1652","b:2:8483-0:94:1652","b:2:3198-0:94:1652","b:2:2872-0:94:1652","b:2:2869-0:94:1652","b:2:4002-0:94:1652","b:2:3202-0:94:1652","b:2:3213-0:94:1652","b:2:3208-0:94:1652","0:189","0:206","0:211","0:214","0:217"]}},"a:2:3269:211-0:260:1640":{"id":"a:2:3269:211-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:154:1933":{"id":"0:154:1933","crate_id":0,"name":"contains","span":{"filename":"src/lib.rs","begin":[1090,4],"end":[1095,5]},"visibility":"public","docs":"Return `true` if a value is associated with the given key.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = slab.insert(\"hello\");\nassert!(slab.contains(hello));\n\nslab.remove(hello);\n\nassert!(!slab.contains(hello));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3775:3126":{"id":"2:3775:3126","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5727:3177":{"id":"1:5727:3177","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728:5320","1:5729:57191","1:5730:57192"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:263:793":{"id":"0:263:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[136,4],"end":[136,14]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:3342:3103":{"id":"2:3342:3103","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:124:1734":{"id":"0:124:1734","crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/lib.rs","begin":[410,4],"end":[435,5]},"visibility":"public","docs":"Shrink the capacity of the slab as much as possible without invalidating keys.\n\nBecause values cannot be moved to a different index, the slab cannot\nshrink past any stored values.\nIt will drop down as close as possible to the length but the allocator may\nstill inform the underlying vector that there is space for a few more elements.\n\nThis function can take O(n) time even when the capacity cannot be reduced\nor the allocation is shrunk in place. Repeated calls run in O(1) though.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::with_capacity(10);\n\nfor i in 0..3 {\n    slab.insert(i);\n}\n\nslab.shrink_to_fit();\nassert!(slab.capacity() >= 3 && slab.capacity() < 10);\n```\n\nThe slab cannot shrink past the last present value even if previous\nvalues are removed:\n\n```\n# use slab::*;\nlet mut slab = Slab::with_capacity(10);\n\nfor i in 0..4 {\n    slab.insert(i);\n}\n\nslab.remove(0);\nslab.remove(3);\n\nslab.shrink_to_fit();\nassert!(slab.capacity() >= 3 && slab.capacity() < 10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:112:1659":{"id":"b:2:3213-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13516:1858":{"id":"2:13516:1858","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13503:61192":{"id":"2:13503:61192","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16010:2164"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[171,9],"end":[171,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:276:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3274:2267":{"id":"2:3274:2267","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3717:2904":{"id":"2:3717:2904","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:2364","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:112:1659":{"id":"b:2:3208-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3577:1964":{"id":"2:3577:1964","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:262:1642":{"id":"0:262:1642","crate_id":0,"name":"entries","span":{"filename":"src/lib.rs","begin":[133,4],"end":[133,26]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:122:1704":{"id":"0:122:1704","crate_id":0,"name":"reserve","span":{"filename":"src/lib.rs","begin":[327,4],"end":[333,5]},"visibility":"public","docs":"Reserve capacity for at least `additional` more values to be stored\nwithout allocating.\n\n`reserve` does nothing if the slab already has sufficient capacity for\n`additional` more values. If more capacity is required, a new segment of\nmemory will be allocated and all existing values will be copied into it.\nAs such, if the slab is already very large, a call to `reserve` can end\nup being expensive.\n\nThe slab may reserve more than `additional` extra space in order to\navoid frequent reallocations. Use `reserve_exact` instead to guarantee\nthat only the requested space is allocated.\n\n# Panics\n\nPanics if the new capacity overflows `usize`.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nslab.insert(\"hello\");\nslab.reserve(10);\nassert!(slab.capacity() >= 11);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13528:61195":{"id":"2:13528:61195","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49822:3932","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13529:32204":{"id":"2:13529:32204","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49850:3935","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6088:61850":{"id":"5:6088:61850","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:260:1640":{"id":"b:2:2869-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13615:3838":{"id":"2:13615:3838","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:13073:3336","FromStr::Err":"2:13073:3336"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13073:3336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:3336","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13624:61214":{"id":"2:13624:61214","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16004:2159"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49875:3937","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1349,0],"end":[1358,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:197:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:257:793":{"id":"0:257:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1595,4],"end":[1597,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/serde.rs","begin":[91,0],"end":[101,1]},"visibility":{"restricted":{"parent":"0:4:1552","path":"::serde"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Deserialize","id":"20:1576:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["deserialize_in_place"],"trait":{"name":"Deserialize","id":"20:1576:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:59:2123"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:175:768":{"id":"0:175:768","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[1213,4],"end":[1215,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6861:3136":{"id":"1:6861:3136","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6862:57482"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:148:1900":{"id":"0:148:1900","crate_id":0,"name":"insert","span":{"filename":"src/lib.rs","begin":[936,4],"end":[942,5]},"visibility":"public","docs":"Insert a value in the slab, returning key assigned to the value.\n\nThe returned key can later be used to retrieve or remove the value using indexed\nlookup and `remove`. Additional capacity is allocated if needed. See\n[Capacity and reallocation](index.html#capacity-and-reallocation).\n\n# Panics\n\nPanics if the number of elements in the vector overflows a `usize`.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nlet key = slab.insert(\"hello\");\nassert_eq!(slab[key], \"hello\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8523:120":{"id":"2:8523:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8524:1999","2:8525:2788","2:8526:2789","2:8527:2790","2:8531:2791","2:8534:2792"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8486:1652":{"id":"2:8486:1652","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"0:216:793":{"id":"0:216:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1463,4],"end":[1465,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8003:2395":{"id":"2:8003:2395","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8004:60866","2:8005:60867","2:8006:60871","2:8007:60869","2:8008:60868","2:8009:60872","2:8010:60870"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:157:1962":{"id":"0:157:1962","crate_id":0,"name":"drain","span":{"filename":"src/lib.rs","begin":[1164,4],"end":[1172,5]},"visibility":"public","docs":"Return a draining iterator that removes all elements from the slab and\nyields the removed items.\n\nNote: Elements are removed even if the iterator is only partially\nconsumed or not consumed at all.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet _ = slab.insert(0);\nlet _ = slab.insert(1);\nlet _ = slab.insert(2);\n\n{\n    let mut drain = slab.drain();\n\n    assert_eq!(Some(0), drain.next());\n    assert_eq!(Some(1), drain.next());\n    assert_eq!(Some(2), drain.next());\n    assert_eq!(None, drain.next());\n}\n\nassert!(slab.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10620:146":{"id":"2:10620:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10621:652","2:10622:2118","2:10623:54997","2:10624:54998","2:10625:54999","2:10626:55000","2:10627:55001","2:10628:55002","2:10629:55003","2:10630:55004","2:10631:55005","2:10632:55006","2:10633:55007","2:10634:55008","2:10635:55009","2:10636:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:152:1921":{"id":"0:152:1921","crate_id":0,"name":"try_remove","span":{"filename":"src/lib.rs","begin":[1030,4],"end":[1048,5]},"visibility":"public","docs":"Tries to remove the value associated with the given key,\nreturning the value if the key existed.\n\nThe key is then released and may be associated with future stored\nvalues.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = slab.insert(\"hello\");\n\nassert_eq!(slab.try_remove(hello), Some(\"hello\"));\nassert!(!slab.contains(hello));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5833:4092":{"id":"5:5833:4092","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:2872-0:45:2114":{"id":"b:2:2872-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:230:793":{"id":"0:230:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1507,4],"end":[1509,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13522:3954":{"id":"2:13522:3954","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49528:3918","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3104:3676":{"id":"2:3104:3676","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13144:3637":{"id":"2:13144:3637","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13146:3639","2:13147:59875","2:13148:59876","2:13149:59877","2:13150:59879","2:13151:59878","2:13152:59880"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13526:32209":{"id":"2:13526:32209","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16010:2164"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49841:3934","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13499:1790":{"id":"2:13499:1790","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:167:1966":{"id":"0:167:1966","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1198,4],"end":[1198,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"T"}]}}},"a:2:3310:2272-0:112:1659":{"id":"a:2:3310:2272-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13500:61190":{"id":"2:13500:61190","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:160:181":{"id":"0:160:181","crate_id":0,"name":"Output","span":{"filename":"src/lib.rs","begin":[1176,4],"end":[1176,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:3310:2272-0:277:1643":{"id":"a:2:3310:2272-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:2577-0:94:1652":{"id":"a:2:9340:2577-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3516:1775":{"id":"2:3516:1775","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9340:2577-0:107:1657":{"id":"a:2:9340:2577-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13508:304":{"id":"2:13508:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:16021:2173","str::as_mut_ptr":"1:16010:2164"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4748:3211":{"id":"1:4748:3211","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:54670","1:4750:54671","1:4751:54673","1:4753:3210","1:4754:54672","1:4756:54674","1:4757:4393"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:3190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3372:3108":{"id":"2:3372:3108","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:45:2114":{"id":"b:2:3213-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12581:2899":{"id":"2:12581:2899","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12582:1966","2:12583:60344"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:102:793":{"id":"0:102:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[186,4],"end":[186,14]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:123:1718":{"id":"0:123:1718","crate_id":0,"name":"reserve_exact","span":{"filename":"src/lib.rs","begin":[361,4],"end":[367,5]},"visibility":"public","docs":"Reserve the minimum capacity required to store exactly `additional`\nmore values.\n\n`reserve_exact` does nothing if the slab already has sufficient capacity\nfor `additional` more values. If more capacity is required, a new segment\nof memory will be allocated and all existing values will be copied into\nit.  As such, if the slab is already very large, a call to `reserve` can\nend up being expensive.\n\nNote that the allocator may give the slab more space than it requests.\nTherefore capacity can not be relied upon to be precisely minimal.\nPrefer `reserve` if future insertions are expected.\n\n# Panics\n\nPanics if the new capacity overflows `usize`.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nslab.insert(\"hello\");\nslab.reserve_exact(10);\nassert!(slab.capacity() >= 11);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:244:793":{"id":"0:244:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1551,4],"end":[1553,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249:1966":{"id":"0:249:1966","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1561,4],"end":[1561,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:3411:3113":{"id":"2:3411:3113","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1594,0],"end":[1598,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8548:2000","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:257:793"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:2194:2105":{"id":"20:2194:2105","crate_id":20,"name":"SerializeMap","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2195:175","20:2196:127","20:2197:2112","20:2199:2113","20:2201:2751","20:2204:599"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:116:793":{"id":"0:116:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[207,4],"end":[207,14]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:5:787-0:277:1643":{"id":"b:5:787-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:2849","5:790:2850","5:791:2851"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10389:189":{"id":"2:10389:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10390:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5785:3180":{"id":"1:5785:3180","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5786:54985"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:107:1657":{"id":"a:2:3269:211-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8680:157":{"id":"2:8680:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8681:1966","2:8682:922","2:8683:2796","2:8686:1984","2:8687:495","2:8689:1736","2:8692:2797","2:8693:2798","2:8694:2799","2:8695:2800","2:8697:2416","2:8699:2801","2:8700:2802","2:8702:841","2:8705:2803","2:8712:2804","2:8714:2805","2:8717:1744","2:8718:2806","2:8719:2807","2:8721:2808","2:8723:2809","2:8726:1308","2:8727:2810","2:8728:2811","2:8732:2812","2:8735:2813","2:8736:2814","2:8737:2815","2:8739:2816","2:8740:2380","2:8742:2817","2:8745:2818","2:8747:2819","2:8757:2820","2:8772:2821","2:8774:2822","2:8778:2823","2:8787:2824","2:8790:2825","2:8792:2826","2:8795:276","2:8802:294","2:8809:2827","2:8816:2828","2:8825:2829","2:8835:1014","2:8842:2830","2:8849:2784","2:8850:2785","2:8851:2831","2:8863:2832","2:8870:2833","2:8882:2834","2:8889:1745","2:8890:2835","2:8895:2836","2:8898:2837","2:8901:2838","2:8902:2839","2:8904:2840","2:8906:2841","2:8908:415","2:8911:2842","2:8914:997","2:8917:2843","2:8920:604","2:8923:2844","2:8926:907","2:8928:826","2:8930:792","2:8932:713","2:8934:696","2:8936:2845","2:8937:2846","2:8945:2847"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13550:32076":{"id":"2:13550:32076","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:16004:2159","self::pattern":"2:13134:3636"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12926:2927","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:268:1647":{"id":"b:2:2872-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13533:55319":{"id":"2:13533:55319","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2272-0:94:1652":{"id":"a:2:3310:2272-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3648:2364":{"id":"2:3648:2364","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:59907","2:3651:59908","2:3652:1933"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:173:1966":{"id":"0:173:1966","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1210,4],"end":[1210,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}]}}},"a:2:9340:2577-0:112:1659":{"id":"a:2:9340:2577-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:107:1657":{"id":"0:107:1657","crate_id":0,"name":"IterMut","span":{"filename":"src/lib.rs","begin":[199,0],"end":[202,1]},"visibility":"public","docs":"A mutable iterator over the values stored in the `Slab`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:110:1642","0:111:793"],"impls":["a:2:3310:2272-0:107:1657","a:2:3269:211-0:107:1657","a:2:9340:2577-0:107:1657","a:2:9339:2578-0:107:1657","a:2:3281:220-0:107:1657","b:2:8483-0:107:1657","b:2:3198-0:107:1657","b:2:2872-0:107:1657","b:2:2869-0:107:1657","b:2:4002-0:107:1657","b:2:3202-0:107:1657","b:2:3213-0:107:1657","b:2:3208-0:107:1657","0:195","0:233","0:239","0:242","0:245"]}},"2:13618:55209":{"id":"2:13618:55209","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:241:1999":{"id":"0:241:1999","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1537,4],"end":[1547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:264:922":{"id":"0:264:922","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[140,4],"end":[140,15]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[189,0],"end":[196,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:106:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:153:1928":{"id":"0:153:1928","crate_id":0,"name":"remove","span":{"filename":"src/lib.rs","begin":[1071,4],"end":[1073,5]},"visibility":"public","docs":"Remove and return the value associated with the given key.\n\nThe key is then released and may be associated with future stored\nvalues.\n\n# Panics\n\nPanics if `key` is not associated with a value.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = slab.insert(\"hello\");\n\nassert_eq!(slab.remove(hello), \"hello\");\nassert!(!slab.contains(hello));\n```","links":{},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23020:3143":{"id":"2:23020:3143","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23010:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:205:1650":{"id":"0:205:1650","crate_id":0,"name":"key","span":{"filename":"src/lib.rs","begin":[1421,4],"end":[1423,5]},"visibility":"public","docs":"Return the key associated with this entry.\n\nA value stored in this entry will be associated with this key.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = {\n    let entry = slab.vacant_entry();\n    let key = entry.key();\n\n    entry.insert((key, \"hello\"));\n    key\n};\n\nassert_eq!(hello, slab[hello].0);\nassert_eq!(\"hello\", slab[hello].1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:1743":{"id":"0:140:1743","crate_id":0,"name":"iter_mut","span":{"filename":"src/lib.rs","begin":[665,4],"end":[670,5]},"visibility":"public","docs":"Return an iterator that allows modifying each value.\n\nThis function should generally be **avoided** as it is not efficient.\nIterators must iterate over every slot in the slab even if it is\nvacant. As such, a slab with a capacity of 1 million but only one\nstored value must still iterate the million slots.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet key1 = slab.insert(0);\nlet key2 = slab.insert(1);\n\nfor (key, val) in slab.iter_mut() {\n    if key == key1 {\n        *val += 2;\n    }\n}\n\nassert_eq!(slab[key1], 2);\nassert_eq!(slab[key2], 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:922":{"id":"0:237:922","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1519,4],"end":[1529,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:2117:2104":{"id":"20:2117:2104","crate_id":20,"name":"Serialize","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2118:2107"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:169:768":{"id":"0:169:768","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[1201,4],"end":[1206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:209:922":{"id":"0:209:922","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1431,4],"end":[1441,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10391:2861":{"id":"2:10391:2861","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10392:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:284:1542":{"id":"0:284:1542","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[213,13],"end":[213,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:3401:3110":{"id":"2:3401:3110","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:98:1655":{"id":"0:98:1655","crate_id":0,"name":"Iter","span":{"filename":"src/lib.rs","begin":[184,0],"end":[187,1]},"visibility":"public","docs":"An iterator over the values stored in the `Slab`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:101:1642","0:102:793"],"impls":["a:2:3310:2272-0:98:1655","a:2:3269:211-0:98:1655","a:2:9340:2577-0:98:1655","a:2:9339:2578-0:98:1655","a:2:3281:220-0:98:1655","b:2:8483-0:98:1655","b:2:3198-0:98:1655","b:2:2872-0:98:1655","b:2:2869-0:98:1655","b:2:4002-0:98:1655","b:2:3202-0:98:1655","b:2:3213-0:98:1655","b:2:3208-0:98:1655","b:5:787-0:98:1655","0:103","0:192","0:219","0:225","0:228","0:231"]}},"2:3431:3117":{"id":"2:3431:3117","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6790:3165":{"id":"1:6790:3165","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:7862"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:271:1649":{"id":"0:271:1649","crate_id":0,"name":"slab","span":{"filename":"src/lib.rs","begin":[173,4],"end":[173,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:101:1642":{"id":"0:101:1642","crate_id":0,"name":"entries","span":{"filename":"src/lib.rs","begin":[185,4],"end":[185,55]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"iter::Enumerate","id":"2:46727:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"slice::Iter","id":"2:11194:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:13597:61209":{"id":"2:13597:61209","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6084:61849":{"id":"5:6084:61849","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2309","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2309","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13527:4393":{"id":"2:13527:4393","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49812:3214","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22831:3748":{"id":"2:22831:3748","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22832:3739","2:22833:59753","2:22834:59991","2:22835:59992","2:22836:59993","2:22837:42804","2:22838:59994","2:22839:59995","2:22840:59996","2:22841:59997","2:22842:59998","2:22843:59999","2:22844:60000","2:22845:60001","2:22846:60002","2:22847:60003","2:22848:59825","2:22849:60004","2:22850:60005","2:22851:60006","2:22852:60007","2:22853:59754","2:22854:59755","2:22855:59756","2:22856:59757"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22920:3750":{"id":"2:22920:3750","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22921:59753","2:22922:1227","2:22923:1228","2:22924:59754","2:22925:59755","2:22926:59756","2:22927:59757","2:22928:59758","2:22929:59759","2:22930:59760"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[130,9],"end":[130,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:267:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:94:1652":{"id":"b:2:2872-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1580,0],"end":[1592,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:254:1999"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13530:1933":{"id":"2:13530:1933","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13512:1820":{"id":"2:13512:1820","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1492,0],"end":[1504,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:227:1999"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13510:1779":{"id":"2:13510:1779","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13524:3326":{"id":"2:13524:3326","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49544:3212","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:200:660":{"id":"0:200:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1361,4],"end":[1363,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13507:61193":{"id":"2:13507:61193","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:98:1655":{"id":"b:2:3213-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:161:753":{"id":"0:161:753","crate_id":0,"name":"index","span":{"filename":"src/lib.rs","begin":[1179,4],"end":[1184,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:53:2117":{"id":"0:53:2117","crate_id":0,"name":"expecting","span":{"filename":"src/serde.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:52:2116":{"id":"0:52:2116","crate_id":0,"name":"Value","span":{"filename":"src/serde.rs","begin":[32,4],"end":[32,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:10655:2310":{"id":"2:10655:2310","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10656:146","2:10657:33526","2:10658:57580"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:2272-0:45:2114":{"id":"a:2:3310:2272-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13556:61196":{"id":"2:13556:61196","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"1:16010:2164","prim@char":"1:16004:2159","self::pattern":"2:13134:3636","`DoubleEndedIterator`":"2:8523:120","str::rsplit_terminator":"1:16010:2164"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49608:3923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1600,0],"end":[1600,41]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8960:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8967:2412":{"id":"2:8967:2412","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8003:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:1736:2101":{"id":"20:1736:2101","crate_id":20,"name":"MapAccess","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1738:127","20:1739:2719","20:1741:2720","20:1743:2721","20:1746:2722","20:1748:2723","20:1750:2122","20:1753:1984"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:2272-0:107:1657":{"id":"a:2:3310:2272-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4723:2311":{"id":"1:4723:2311","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:2118","1:4725:59170","1:4727:59171","1:4728:4316","1:4729:59172","1:4730:59173","1:4731:2509","1:4740:2816"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:2188:2336":{"id":"20:2188:2336","crate_id":20,"name":"SerializeTupleVariant","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2189:175","20:2190:127","20:2191:62432","20:2193:599"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22957:3749":{"id":"2:22957:3749","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22958:3739","2:22959:1247","2:22960:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:184:684":{"id":"0:184:684","crate_id":0,"name":"from_iter","span":{"filename":"src/lib.rs","begin":[1258,4],"end":[1308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"T"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110:1642":{"id":"0:110:1642","crate_id":0,"name":"entries","span":{"filename":"src/lib.rs","begin":[200,4],"end":[200,58]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"iter::Enumerate","id":"2:46727:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"slice::IterMut","id":"2:11218:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:3376:3106":{"id":"2:3376:3106","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9340:2577-0:260:1640":{"id":"a:2:9340:2577-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:268:1647":{"id":"0:268:1647","crate_id":0,"name":"VacantEntry","span":{"filename":"src/lib.rs","begin":[172,0],"end":[175,1]},"visibility":"public","docs":"A handle to a vacant entry in a `Slab`.\n\n`VacantEntry` allows constructing values with the key that they will be\nassigned to.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = {\n    let entry = slab.vacant_entry();\n    let key = entry.key();\n\n    entry.insert((key, \"hello\"));\n    key\n};\n\nassert_eq!(hello, slab[hello].0);\nassert_eq!(\"hello\", slab[hello].1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:271:1649","0:272:1650"],"impls":["0:201","a:2:3310:2272-0:268:1647","a:2:3269:211-0:268:1647","a:2:9340:2577-0:268:1647","a:2:9339:2578-0:268:1647","a:2:3281:220-0:268:1647","b:2:3198-0:268:1647","b:2:2872-0:268:1647","b:2:2869-0:268:1647","b:2:4002-0:268:1647","b:2:3202-0:268:1647","b:2:3213-0:268:1647","b:2:3208-0:268:1647","0:273"]}},"0:188:660":{"id":"0:188:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1315,4],"end":[1324,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6557:3271":{"id":"1:6557:3271","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6558:57707","1:6559:57708"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6106:55208":{"id":"5:6106:55208","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16010:2164"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4666:3190":{"id":"1:4666:3190","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:3461","1:4668:57022","1:4670:57023","1:4671:57024","1:4672:3205","1:4673:57021","1:4674:57020","1:4676:57025","1:4677:2816","1:4678:3326","1:4679:2800","1:4681:2810"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:191:660":{"id":"0:191:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1331,4],"end":[1335,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3384:3107":{"id":"2:3384:3107","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:119:920":{"id":"0:119:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[231,4],"end":[237,5]},"visibility":"public","docs":"Construct a new, empty `Slab`.\n\nThe function does not allocate and the returned slab will have no\ncapacity until `insert` is called or capacity is explicitly reserved.\n\nThis is `const fn` on Rust 1.39+.\n\n# Examples\n\n```\n# use slab::*;\nlet slab: Slab<i32> = Slab::new();\n```","links":{},"attrs":["#[cfg(not(slab_no_const_vec_new))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13509:1867":{"id":"2:13509:1867","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16021:2173"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8442:2414":{"id":"2:8442:2414","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8444:2841"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:268:1647":{"id":"b:2:4002-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:2577-0:45:2114":{"id":"a:2:9340:2577-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:279:1661":{"id":"0:279:1661","crate_id":0,"name":"Vacant","span":{"filename":"src/lib.rs","begin":[212,4],"end":[212,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"}]}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1197,0],"end":[1207,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:167:1966","0:168:1652","0:169:768"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:268:1647":{"id":"a:2:3281:220-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:260:1640":{"id":"b:2:4002-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"20:1569:660":{"id":"20:1569:660","crate_id":20,"name":"fmt","span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.143/src/de/mod.rs","begin":[481,4],"end":[481,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8483-0:107:1657":{"id":"b:2:8483-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8485:1966","2:8486:1652","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3347:3100":{"id":"2:3347:3100","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:115:1660":{"id":"0:115:1660","crate_id":0,"name":"inner","span":{"filename":"src/lib.rs","begin":[206,4],"end":[206,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"vec::Drain","id":"5:7212:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:10379:119":{"id":"2:10379:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10380:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13498:793":{"id":"2:13498:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:277:1643":{"id":"b:2:2869-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13609:61211":{"id":"2:13609:61211","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16004:2159","self::pattern":"2:13134:3636"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8438:2415":{"id":"2:8438:2415","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8440:2840"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3396:3109":{"id":"2:3396:3109","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:1564:2296":{"id":"20:1564:2296","crate_id":20,"name":"Expected","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1565:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:112:1659":{"id":"0:112:1659","crate_id":0,"name":"Drain","span":{"filename":"src/lib.rs","begin":[205,0],"end":[208,1]},"visibility":"public","docs":"A draining iterator for `Slab`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:115:1660","0:116:793"],"impls":["a:2:3310:2272-0:112:1659","a:2:3269:211-0:112:1659","a:2:9340:2577-0:112:1659","a:2:9339:2578-0:112:1659","a:2:3281:220-0:112:1659","b:2:8483-0:112:1659","b:2:3198-0:112:1659","b:2:2872-0:112:1659","b:2:2869-0:112:1659","b:2:4002-0:112:1659","b:2:3202-0:112:1659","b:2:3213-0:112:1659","b:2:3208-0:112:1659","0:198","0:247","0:252","0:255","0:258"]}},"b:2:2872-0:112:1659":{"id":"b:2:2872-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:94:1652":{"id":"a:2:3281:220-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:223:922":{"id":"0:223:922","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1475,4],"end":[1485,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5741:3146":{"id":"1:5741:3146","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:6807","1:5743:54985","1:5744:5320","1:5745:59010","1:5746:3525","1:5747:3526","1:5748:59011","1:5749:1304","1:5750:59012","1:5751:59013","1:5752:59014","1:5753:59015","1:5754:59016","1:5755:59017","1:5756:59018","1:5757:59019"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13862:150":{"id":"2:13862:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13863:181","2:13864:150","2:13865:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6105:2404":{"id":"5:6105:2404","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10385:2859":{"id":"2:10385:2859","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10386:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:107:1657":{"id":"b:2:3213-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3337:3098":{"id":"2:3337:3098","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8483-0:98:1655":{"id":"b:2:8483-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8485:1966","2:8486:1652","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:10372:109":{"id":"2:10372:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10373:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:94:1652":{"id":"b:2:3202-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1257,0],"end":[1309,1]},"visibility":"crate","docs":"Create a slab from an iterator of key-value pairs.\n\nIf the iterator produces duplicate keys, the previous value is replaced with the later one.\nThe keys does not need to be sorted beforehand, and this function always\ntakes O(n) time.\nNote that the returned slab will use space proportional to the largest key,\nso don't use `Slab` with untrusted keys.\n\n# Examples\n\n```\n# use slab::*;\n\nlet vec = vec![(2,'a'), (6,'b'), (7,'c')];\nlet slab = vec.into_iter().collect::<Slab<char>>();\nassert_eq!(slab.len(), 3);\nassert!(slab.capacity() >= 8);\nassert_eq!(slab[2], 'a');\n```\n\nWith duplicate and unsorted keys:\n\n```\n# use slab::*;\n\nlet vec = vec![(20,'a'), (10,'b'), (11,'c'), (10,'d')];\nlet slab = vec.into_iter().collect::<Slab<char>>();\nassert_eq!(slab.len(), 3);\nassert_eq!(slab[10], 'd');\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8475:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"T"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:184:684"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10393:2862":{"id":"2:10393:2862","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10394:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:125:1738":{"id":"0:125:1738","crate_id":0,"name":"recreate_vacant_list","span":{"filename":"src/lib.rs","begin":[439,4],"end":[456,5]},"visibility":"crate","docs":"Iterate through all entries to recreate and repair the vacant list.\nself.len must be correct and is not modified.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10387:2860":{"id":"2:10387:2860","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10388:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6107:55207":{"id":"5:6107:55207","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16010:2164"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13612:61212":{"id":"2:13612:61212","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16004:2159","self::pattern":"2:13134:3636"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:2205:2337":{"id":"20:2205:2337","crate_id":20,"name":"SerializeStruct","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2206:175","20:2207:127","20:2208:62432","20:2210:62433","20:2211:599"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38888:3154","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4:1552":{"id":"0:4:1552","crate_id":0,"name":"serde","span":{"filename":"src/serde.rs","begin":[1,0],"end":[101,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"serde\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:45:2114"],"is_stripped":false}},"0:213:1999":{"id":"0:213:1999","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1449,4],"end":[1459,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:1966":{"id":"0:208:1966","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1429,4],"end":[1429,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"T"}]}}},"0:144:1851":{"id":"0:144:1851","crate_id":0,"name":"get_unchecked","span":{"filename":"src/lib.rs","begin":[787,4],"end":[792,5]},"visibility":"public","docs":"Return a reference to the value associated with the given key without\nperforming bounds checking.\n\nFor a safe alternative see [`get`](Slab::get).\n\nThis function should be used with care.\n\n# Safety\n\nThe key must be within bounds.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nlet key = slab.insert(2);\n\nunsafe {\n    assert_eq!(slab.get_unchecked(key), &2);\n}\n```","links":{"Slab::get":"0:260:1640"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3505:3044":{"id":"2:3505:3044","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9340:2577-0:268:1647":{"id":"a:2:9340:2577-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13520:55642":{"id":"2:13520:55642","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16010:2164"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:260:1640":{"id":"b:5:787-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:2849","5:790:2850","5:791:2851"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3417:3114":{"id":"2:3417:3114","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:2176:2334":{"id":"20:2176:2334","crate_id":20,"name":"SerializeTuple","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2177:175","20:2178:127","20:2179:62387","20:2181:599"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:2784","2:2960:2785","2:2961:2786"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13164:3635":{"id":"2:13164:3635","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1428,0],"end":[1446,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","take","filter","nth","cmp","eq","product","is_sorted_by_key","unzip","enumerate","try_find","try_for_each","try_collect","scan","ge","filter_map","count","step_by","any","__iterator_get_unchecked","cmp_by","all","rev","rposition","copied","fold","collect_into","flat_map","peekable","position","chain","zip","partial_cmp_by","cloned","max_by_key","collect","reduce","partition","size_hint","flatten","lt","skip_while","intersperse","partial_cmp","skip","eq_by","cycle","max_by","try_reduce","partition_in_place","fuse","take_while","intersperse_with","next_chunk","max","is_sorted","array_chunks","min_by_key","find","last","is_partitioned","ne","inspect","map_while","for_each","advance_by","min","is_sorted_by","sum","le","min_by","find_map","map","try_fold","gt"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:208:1966","0:209:922","0:210:1984"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1556,0],"end":[1556,43]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8960:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3310:2272":{"id":"2:3310:2272","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9340:2577-0:277:1643":{"id":"a:2:9340:2577-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:277:1643":{"id":"0:277:1643","crate_id":0,"name":"Entry","span":{"filename":"src/lib.rs","begin":[211,0],"end":[214,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:279:1661","0:282:1662"],"impls":["a:2:3310:2272-0:277:1643","a:2:3269:211-0:277:1643","a:2:9340:2577-0:277:1643","a:2:9339:2578-0:277:1643","a:2:3281:220-0:277:1643","b:2:3198-0:277:1643","b:2:2872-0:277:1643","b:2:2869-0:277:1643","b:2:4002-0:277:1643","b:2:3202-0:277:1643","b:2:3213-0:277:1643","b:2:3208-0:277:1643","b:5:787-0:277:1643","0:285"]}},"5:6091:61851":{"id":"5:6091:61851","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:260:1640":{"id":"0:260:1640","crate_id":0,"name":"Slab","span":{"filename":"src/lib.rs","begin":[131,0],"end":[141,1]},"visibility":"public","docs":"Pre-allocated storage for a uniform data type\n\nSee the [module documentation] for more details.\n\n[module documentation]: index.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:262:1642","0:263:793","0:264:922"],"impls":["0:117","a:2:3310:2272-0:260:1640","a:2:3269:211-0:260:1640","a:2:9340:2577-0:260:1640","a:2:9339:2578-0:260:1640","a:2:3281:220-0:260:1640","b:2:3198-0:260:1640","b:2:2872-0:260:1640","b:2:2869-0:260:1640","b:2:4002-0:260:1640","b:2:3202-0:260:1640","b:2:3213-0:260:1640","b:2:3208-0:260:1640","b:5:787-0:260:1640","b:20:1584-0:260:1640","0:41","0:56","0:265","0:91","0:158","0:162","0:165","0:170","0:176","0:182","0:186"]}},"0:120:1684":{"id":"0:120:1684","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[280,4],"end":[286,5]},"visibility":"public","docs":"Construct a new, empty `Slab` with the specified capacity.\n\nThe returned slab will be able to store exactly `capacity` without\nreallocating. If `capacity` is 0, the slab will not allocate.\n\nIt is important to note that this function does not specify the *length*\nof the returned slab, but only the capacity. For an explanation of the\ndifference between length and capacity, see [Capacity and\nreallocation](index.html#capacity-and-reallocation).\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::with_capacity(10);\n\n// The slab contains no values, even though it has capacity for more\nassert_eq!(slab.len(), 0);\n\n// These are all done without reallocating...\nfor i in 0..10 {\n    slab.insert(i);\n}\n\n// ...but this may make the slab reallocate\nslab.insert(11);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23550:16270":{"id":"2:23550:16270","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23551:60006","2:23552:60005","2:23553:60007"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23545:3740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:0:1649":{"id":"0:0:1649","crate_id":0,"name":"slab","span":{"filename":"src/lib.rs","begin":[1,0],"end":[1600,41]},"visibility":"public","docs":"Pre-allocated storage for a uniform data type.\n\n`Slab` provides pre-allocated storage for a single data type. If many values\nof a single type are being allocated, it can be more efficient to\npre-allocate the necessary storage. Since the size of the type is uniform,\nmemory fragmentation can be avoided. Storing, clearing, and lookup\noperations become very cheap.\n\nWhile `Slab` may look like other Rust collections, it is not intended to be\nused as a general purpose collection. The primary difference between `Slab`\nand `Vec` is that `Slab` returns the key when storing the value.\n\nIt is important to note that keys may be reused. In other words, once a\nvalue associated with a given key is removed from a slab, that key may be\nreturned from future calls to `insert`.\n\n# Examples\n\nBasic storing and retrieval.\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = slab.insert(\"hello\");\nlet world = slab.insert(\"world\");\n\nassert_eq!(slab[hello], \"hello\");\nassert_eq!(slab[world], \"world\");\n\nslab[world] = \"earth\";\nassert_eq!(slab[world], \"earth\");\n```\n\nSometimes it is useful to be able to associate the key with the value being\ninserted in the slab. This can be done with the `vacant_entry` API as such:\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nlet hello = {\n    let entry = slab.vacant_entry();\n    let key = entry.key();\n\n    entry.insert((key, \"hello\"));\n    key\n};\n\nassert_eq!(hello, slab[hello].0);\nassert_eq!(\"hello\", slab[hello].1);\n```\n\nIt is generally a good idea to specify the desired capacity of a slab at\ncreation time. Note that `Slab` will grow the internal capacity when\nattempting to insert a new value once the existing capacity has been reached.\nTo avoid this, add a check.\n\n```\n# use slab::*;\nlet mut slab = Slab::with_capacity(1024);\n\n// ... use the slab\n\nif slab.len() == slab.capacity() {\n    panic!(\"slab full\");\n}\n\nslab.insert(\"the slab is not at capacity yet\");\n```\n\n# Capacity and reallocation\n\nThe capacity of a slab is the amount of space allocated for any future\nvalues that will be inserted in the slab. This is not to be confused with\nthe *length* of the slab, which specifies the number of actual values\ncurrently being inserted. If a slab's length is equal to its capacity, the\nnext value inserted into the slab will require growing the slab by\nreallocating.\n\nFor example, a slab with capacity 10 and length 0 would be an empty slab\nwith space for 10 more stored values. Storing 10 or fewer elements into the\nslab will not change its capacity or cause reallocation to occur. However,\nif the slab length is increased to 11 (due to another `insert`), it will\nhave to reallocate, which can be slow. For this reason, it is recommended to\nuse [`Slab::with_capacity`] whenever possible to specify how many values the\nslab is expected to store.\n\n# Implementation\n\n`Slab` is backed by a `Vec` of slots. Each slot is either occupied or\nvacant. `Slab` maintains a stack of vacant slots using a linked list. To\nfind a vacant slot, the stack is popped. When a slot is released, it is\npushed onto the stack.\n\nIf there are no more available slots in the stack, then `Vec::reserve(1)` is\ncalled and a new slot is created.\n\n[`Slab::with_capacity`]: struct.Slab.html#with_capacity","links":{},"attrs":["#![warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms), allow(dead_code, unused_variables))))]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:4:1552","0:260:1640","0:268:1647","0:94:1652","0:98:1655","0:107:1657","0:112:1659","0:277:1643"],"is_stripped":false}},"0:251:1984":{"id":"0:251:1984","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1575,4],"end":[1577,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3812:3127":{"id":"2:3812:3127","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:222:1966":{"id":"0:222:1966","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1473,4],"end":[1473,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}]}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1468,0],"end":[1468,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8960:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3423:3115":{"id":"2:3423:3115","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:260:1640":{"id":"b:2:3198-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13562:55653":{"id":"2:13562:55653","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:16004:2159","str::rsplitn":"1:16010:2164","self::pattern":"2:13134:3636"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49662:2913","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:1966":{"id":"0:179:1966","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1219,4],"end":[1219,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}]}}},"2:23854:3721":{"id":"2:23854:3721","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23855:3739"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23850:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8485:1966":{"id":"2:8485:1966","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"5:791:2851":{"id":"5:791:2851","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2578-0:98:1655":{"id":"a:2:9339:2578-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6459:3168":{"id":"1:6459:3168","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:57610","1:6461:7230","1:6462:57611","1:6463:57612","1:6464:57613","1:6465:57614"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:107:1657":{"id":"b:2:3198-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"20:8978:127":{"id":"20:8978:127","crate_id":20,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:8979:62464","20:8981:62498","20:8982:62499","20:8983:62500","20:8984:62501","20:8985:62502","20:8986:54009","20:8987:62503"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:2120:2106":{"id":"20:2120:2106","crate_id":20,"name":"Serializer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2121:175","20:2122:127","20:2123:2333","20:2124:2334","20:2125:2335","20:2126:2336","20:2127:2105","20:2128:2337","20:2129:2338","20:2130:2752","20:2131:2753","20:2132:2754","20:2133:2755","20:2134:2756","20:9596:2757","20:2135:2758","20:2136:2759","20:2137:2760","20:2138:2761","20:9597:2762","20:2139:2763","20:2140:2764","20:2141:2765","20:2142:2766","20:2143:2767","20:2144:2768","20:2145:2769","20:2147:2770","20:2148:2771","20:2149:2772","20:2150:2773","20:2152:2774","20:2154:2775","20:2155:2776","20:2156:2777","20:2157:2778","20:2158:2111","20:2159:2779","20:2160:2780","20:2161:2781","20:2163:2782","20:2167:2783","20:2169:2717"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:143:1832":{"id":"0:143:1832","crate_id":0,"name":"get2_mut","span":{"filename":"src/lib.rs","begin":[741,4],"end":[763,5]},"visibility":"public","docs":"Return two mutable references to the values associated with the two\ngiven keys simultaneously.\n\nIf any one of the given keys is not associated with a value, then `None`\nis returned.\n\nThis function can be used to get two mutable references out of one slab,\nso that you can manipulate both of them at the same time, eg. swap them.\n\n# Examples\n\n```\n# use slab::*;\nuse std::mem;\n\nlet mut slab = Slab::new();\nlet key1 = slab.insert(1);\nlet key2 = slab.insert(2);\nlet (value1, value2) = slab.get2_mut(key1, key2).unwrap();\nmem::swap(value1, value2);\nassert_eq!(slab[key1], 2);\nassert_eq!(slab[key2], 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key1",{"kind":"primitive","inner":"usize"}],["key2",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:2182:2335":{"id":"20:2182:2335","crate_id":20,"name":"SerializeTupleStruct","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2183:175","20:2184:127","20:2185:62432","20:2187:599"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:98:1655":{"id":"a:2:3269:211-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5797:3183":{"id":"1:5797:3183","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:5320"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5837:4094":{"id":"5:5837:4094","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:33282"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:11014:214":{"id":"2:11014:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11016:181","2:11017:1779","2:11018:1820","2:11019:1851","2:11020:1858","2:11021:753","2:11022:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11005:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:45:2114":{"id":"b:2:4002-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:268:1647":{"id":"b:2:3208-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13519:61194":{"id":"2:13519:61194","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:16010:2164","crate::ops::IndexMut":"2:3581:1965","str::slice_unchecked":"1:16010:2164"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13620:55205":{"id":"2:13620:55205","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164:754":{"id":"0:164:754","crate_id":0,"name":"index_mut","span":{"filename":"src/lib.rs","begin":[1189,4],"end":[1194,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:98:1655":{"id":"b:2:2872-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1218,0],"end":[1225,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:179:1966","0:180:1652","0:181:768"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:61849","5:6085:1923","5:6088:61850","5:6091:61851","5:6103:61852","5:6104:61853","5:6105:2404","5:6106:55208","5:6107:55207"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1516,0],"end":[1534,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","take","filter","nth","cmp","eq","product","is_sorted_by_key","unzip","enumerate","try_find","try_for_each","try_collect","scan","ge","filter_map","count","step_by","any","__iterator_get_unchecked","cmp_by","all","rev","rposition","copied","fold","collect_into","flat_map","peekable","position","chain","zip","partial_cmp_by","cloned","max_by_key","collect","reduce","partition","size_hint","flatten","lt","skip_while","intersperse","partial_cmp","skip","eq_by","cycle","max_by","try_reduce","partition_in_place","fuse","take_while","intersperse_with","next_chunk","max","is_sorted","array_chunks","min_by_key","find","last","is_partitioned","ne","inspect","map_while","for_each","advance_by","min","is_sorted_by","sum","le","min_by","find_map","map","try_fold","gt"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:236:1966","0:237:922","0:238:1984"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:277:1643":{"id":"b:2:3202-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:260:1640":{"id":"b:2:2872-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1550,0],"end":[1554,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8548:2000","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:244:793"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6104:61853":{"id":"5:6104:61853","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8368:216","`Box<str>`":"5:432:2309"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2309","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13600:14767":{"id":"2:13600:14767","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:16004:2159","self::pattern":"2:13134:3636"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:111:793":{"id":"0:111:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[201,4],"end":[201,14]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:3213-0:94:1652":{"id":"b:2:3213-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3581:1965":{"id":"2:3581:1965","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:1964","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:8483-0:94:1652":{"id":"b:2:8483-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8485:1966","2:8486:1652","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:236:1966":{"id":"0:236:1966","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1517,4],"end":[1517,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}]}}},"b:20:1584-0:260:1640":{"id":"b:20:1584-0:260:1640","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.143/src/de/mod.rs","begin":[605,0],"end":[605,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Deserialize","id":"20:1576:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"generic_params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"DeserializeOwned","id":"20:1582:2297","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:277:1643":{"id":"b:2:2872-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:2578-0:45:2114":{"id":"a:2:9339:2578-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10322:2311":{"id":"2:10322:2311","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10323:1533","2:10324:57530","2:10326:2509"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:260:1640":{"id":"b:2:3213-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:94:1652":{"id":"b:2:2869-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:54:2120":{"id":"0:54:2120","crate_id":0,"name":"visit_map","span":{"filename":"src/serde.rs","begin":[38,4],"end":[88,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["map",{"kind":"generic","inner":"A"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Value","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"20:1662:2102","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"20:1736:2101","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"MapAccess","id":"20:1736:2101","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:45:2114":{"id":"a:2:3281:220-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:277:1643":{"id":"b:2:4002-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:238:1984":{"id":"0:238:1984","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1531,4],"end":[1533,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10383:2858":{"id":"2:10383:2858","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10384:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:107:1657":{"id":"b:2:3202-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"20:2170:2333":{"id":"20:2170:2333","crate_id":20,"name":"SerializeSeq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2171:175","20:2172:127","20:2173:62387","20:2175:599"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13547:54674":{"id":"2:13547:54674","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"1:16010:2164","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2159","str::split_whitespace":"1:16010:2164","self::pattern":"2:13134:3636"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49558:2911","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49":{"id":"0:49","crate_id":0,"name":null,"span":{"filename":"src/serde.rs","begin":[28,0],"end":[89,1]},"visibility":{"restricted":{"parent":"0:4:1552","path":"::serde"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Deserialize","id":"20:1576:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["visit_enum","visit_unit","visit_byte_buf","visit_string","visit_char","visit_u128","visit_u16","visit_i64","visit_i8","visit_map","visit_seq","visit_some","visit_borrowed_bytes","visit_borrowed_str","visit_f64","visit_u64","visit_u8","visit_i32","visit_bool","__private_visit_untagged_option","visit_newtype_struct","visit_none","visit_bytes","visit_str","visit_f32","visit_u32","visit_i128","visit_i16"],"trait":{"name":"Visitor","id":"20:1662:2102","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:52:2116","0:53:2117","0:54:2120"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:98:1655":{"id":"a:2:3281:220-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:136:1784":{"id":"0:136:1784","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[569,4],"end":[573,5]},"visibility":"public","docs":"Clear the slab of all values.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nfor i in 0..3 {\n    slab.insert(i);\n}\n\nslab.clear();\nassert!(slab.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13593:61207":{"id":"2:13593:61207","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:107:1657":{"id":"b:2:3208-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:96:1642":{"id":"0:96:1642","crate_id":0,"name":"entries","span":{"filename":"src/lib.rs","begin":[179,4],"end":[179,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"iter::Enumerate","id":"2:46727:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"vec::IntoIter","id":"5:7379:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1536,0],"end":[1548,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:241:1999"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:2272-0:98:1655":{"id":"a:2:3310:2272-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:138:1790":{"id":"0:138:1790","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[605,4],"end":[607,5]},"visibility":"public","docs":"Return `true` if there are no values stored in the slab.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nassert!(slab.is_empty());\n\nslab.insert(1);\nassert!(!slab.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/serde.rs","begin":[9,0],"end":[24,1]},"visibility":{"restricted":{"parent":"0:4:1552","path":"::serde"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Serialize","id":"20:2117:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Serialize","id":"20:2117:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:43:2107"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13539:2827":{"id":"2:13539:2827","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:16004:2159","`None`":"2:47591:176","self::pattern":"2:13134:3636"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:1924"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9339:2578-0:94:1652":{"id":"a:2:9339:2578-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:106:408":{"id":"0:106:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[190,4],"end":[195,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13590:61205":{"id":"2:13590:61205","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:149:1909":{"id":"0:149:1909","crate_id":0,"name":"vacant_key","span":{"filename":"src/lib.rs","begin":[964,4],"end":[966,5]},"visibility":"public","docs":"Returns the key of the next vacant entry.\n\nThis function returns the key of the vacant entry which  will be used\nfor the next insertion. This is equivalent to\n`slab.vacant_entry().key()`, but it doesn't require mutable access.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nassert_eq!(slab.vacant_key(), 0);\n\nslab.insert(0);\nassert_eq!(slab.vacant_key(), 1);\n\nslab.insert(1);\nslab.remove(0);\nassert_eq!(slab.vacant_key(), 0);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8479:151":{"id":"2:8479:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8480:1966","2:8481:1652","2:8482:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:268:1647":{"id":"b:2:3198-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:2578-0:107:1657":{"id":"a:2:9339:2578-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:5719:3176":{"id":"1:5719:3176","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720:55143","1:5721:55145","1:5722:55144","1:5723:55146"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9340:2577":{"id":"2:9340:2577","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13518:3321":{"id":"2:13518:3321","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:16010:2164","crate::ops::Index":"2:3577:1964","str::slice_mut_unchecked":"1:16010:2164"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3364:3101":{"id":"2:3364:3101","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13568:61198":{"id":"2:13568:61198","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13583:61202":{"id":"2:13583:61202","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:16010:2164","self::pattern":"2:13134:3636","prim@char":"1:16004:2159","`DoubleEndedIterator`":"2:8523:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49726:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8475:136":{"id":"2:8475:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8477:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13159:3640":{"id":"2:13159:3640","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13161:1999","2:13162:60579","2:13163:60580"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13153:3639","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5789:3181":{"id":"1:5789:3181","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:57699"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:9343:3141":{"id":"1:9343:3141","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9344:58969","1:9345:58970","1:9346:58971","1:9347:58972","1:9348:58973","1:9349:39405","1:9350:58968"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:146:1865":{"id":"0:146:1865","crate_id":0,"name":"get2_unchecked_mut","span":{"filename":"src/lib.rs","begin":[853,4],"end":[864,5]},"visibility":"public","docs":"Return two mutable references to the values associated with the two\ngiven keys simultaneously without performing bounds checking and safety\ncondition checking.\n\nFor a safe alternative see [`get2_mut`](Slab::get2_mut).\n\nThis function should be used with care.\n\n# Safety\n\n- Both keys must be within bounds.\n- The condition `key1 != key2` must hold.\n\n# Examples\n\n```\n# use slab::*;\nuse std::mem;\n\nlet mut slab = Slab::new();\nlet key1 = slab.insert(1);\nlet key2 = slab.insert(2);\nlet (value1, value2) = unsafe { slab.get2_unchecked_mut(key1, key2) };\nmem::swap(value1, value2);\nassert_eq!(slab[key1], 2);\nassert_eq!(slab[key2], 1);\n```","links":{"Slab::get2_mut":"0:260:1640"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key1",{"kind":"primitive","inner":"usize"}],["key2",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:168:1652":{"id":"0:168:1652","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[1199,4],"end":[1199,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"1:6959:3170":{"id":"1:6959:3170","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6960:57633"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3389:3112":{"id":"2:3389:3112","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3201:1924":{"id":"2:3201:1924","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2578-0:260:1640":{"id":"a:2:9339:2578-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:2578-0:112:1659":{"id":"a:2:9339:2578-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:45:2114":{"id":"b:2:3208-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:98:1655":{"id":"b:2:3208-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[143,0],"end":[147,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:93:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9339:2578":{"id":"2:9339:2578","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:260:1640":{"id":"a:2:3281:220-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:22884:3735":{"id":"2:22884:3735","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22885:3739","2:22886:59753","2:22887:1227","2:22888:1228","2:22889:42804","2:22890:59821","2:22891:59822","2:22892:59823","2:22893:59824","2:22894:59825","2:22895:59754","2:22896:59755","2:22897:59756","2:22898:59757","2:22899:59758","2:22900:59759","2:22901:59760"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2872-0:107:1657":{"id":"b:2:2872-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3696","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:54668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:43:2107":{"id":"0:43:2107","crate_id":0,"name":"serialize","span":{"filename":"src/serde.rs","begin":[13,4],"end":[23,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["serializer",{"kind":"generic","inner":"S"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Ok","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"name":"","id":"20:2120:2106","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"name":"","id":"20:2120:2106","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Serializer","id":"20:2120:2106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4051:3158":{"id":"2:4051:3158","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:58988"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2871:2229":{"id":"2:2871:2229","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97:793":{"id":"0:97:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[180,4],"end":[180,14]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:4002-0:107:1657":{"id":"b:2:4002-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3352:3099":{"id":"2:3352:3099","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1472,0],"end":[1490,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","take","filter","nth","cmp","eq","product","is_sorted_by_key","unzip","enumerate","try_find","try_for_each","try_collect","scan","ge","filter_map","count","step_by","any","__iterator_get_unchecked","cmp_by","all","rev","rposition","copied","fold","collect_into","flat_map","peekable","position","chain","zip","partial_cmp_by","cloned","max_by_key","collect","reduce","partition","size_hint","flatten","lt","skip_while","intersperse","partial_cmp","skip","eq_by","cycle","max_by","try_reduce","partition_in_place","fuse","take_while","intersperse_with","next_chunk","max","is_sorted","array_chunks","min_by_key","find","last","is_partitioned","ne","inspect","map_while","for_each","advance_by","min","is_sorted_by","sum","le","min_by","find_map","map","try_fold","gt"],"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:222:1966","0:223:922","0:224:1984"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:277:1643":{"id":"b:2:3198-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1311,0],"end":[1325,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:188:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:94:1652":{"id":"b:2:4002-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:287:408":{"id":"0:287:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[210,9],"end":[210,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13603:55657":{"id":"2:13603:55657","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145:1858":{"id":"0:145:1858","crate_id":0,"name":"get_unchecked_mut","span":{"filename":"src/lib.rs","begin":[819,4],"end":[824,5]},"visibility":"public","docs":"Return a mutable reference to the value associated with the given key\nwithout performing bounds checking.\n\nFor a safe alternative see [`get_mut`](Slab::get_mut).\n\nThis function should be used with care.\n\n# Safety\n\nThe key must be within bounds.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nlet key = slab.insert(2);\n\nunsafe {\n    let val = slab.get_unchecked_mut(key);\n    *val = 13;\n}\n\nassert_eq!(slab[key], 13);\n```","links":{"Slab::get_mut":"0:260:1640"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:151:1901":{"id":"0:151:1901","crate_id":0,"name":"insert_at","span":{"filename":"src/lib.rs","begin":[998,4],"end":[1011,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}],["val",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:94:1652":{"id":"b:2:3198-0:94:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3559:3124":{"id":"2:3559:3124","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:60158"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13588:61204":{"id":"2:13588:61204","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147:1888":{"id":"0:147:1888","crate_id":0,"name":"key_of","span":{"filename":"src/lib.rs","begin":[902,4],"end":[916,5]},"visibility":"public","docs":"Get the key for an element in the slab.\n\nThe reference must point to an element owned by the slab.\nOtherwise this function will panic.\nThis is a constant-time operation because the key can be calculated\nfrom the reference with pointer arithmetic.\n\n# Panics\n\nThis function will panic if the reference does not point to an element\nof the slab.\n\n# Examples\n\n```\n# use slab::*;\n\nlet mut slab = Slab::new();\nlet key = slab.insert(String::from(\"foo\"));\nlet value = &slab[key];\nassert_eq!(slab.key_of(value), key);\n```\n\nValues are not compared, so passing a reference to a different location\nwill result in a panic:\n\n```should_panic\n# use slab::*;\n\nlet mut slab = Slab::new();\nlet key = slab.insert(0);\nlet bad = &0;\nslab.key_of(bad); // this will panic\nunreachable!();\n```","links":{},"attrs":["#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["present_element",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13623:3150":{"id":"2:13623:3150","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16004:2159"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49866:3151","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:112:1659":{"id":"a:2:3269:211-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:2577-0:98:1655":{"id":"a:2:9340:2577-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13536:55321":{"id":"2:13536:55321","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227:1999":{"id":"0:227:1999","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1493,4],"end":[1503,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:268:1647":{"id":"a:2:3269:211-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:45:2114":{"id":"b:2:3202-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1338,0],"end":[1347,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:194:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:2849","5:785:2850","5:786:2851"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6685:3146":{"id":"1:6685:3146","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6686:57650","1:6687:7153","1:6688:7154","1:6689:7156","1:6690:7155","1:6691:7157","1:6692:7158","1:6693:7160","1:6694:5362","1:6695:7163","1:6696:7164","1:6697:7165","1:6698:7166","1:6699:7167","1:6700:7168","1:6701:7161","1:6702:7162"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:137:793":{"id":"0:137:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[589,4],"end":[591,5]},"visibility":"public","docs":"Return the number of stored values.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nfor i in 0..3 {\n    slab.insert(i);\n}\n\nassert_eq!(3, slab.len());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:3148":{"id":"1:1075:3148","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:2849","1:1077:4086","1:1078:55208","1:1079:55207","1:1080:55209","1:1081:55206","1:1082:55205"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6437:3165":{"id":"1:6437:3165","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6438:3525","1:6439:3526","1:6440:7861","1:6441:54860","1:6443:54864","1:6445:54861","1:6446:54862","1:6448:54863"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:112:1659":{"id":"b:2:3198-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:180:1652":{"id":"0:180:1652","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[1220,4],"end":[1220,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"20:1774:2300":{"id":"20:1774:2300","crate_id":20,"name":"EnumAccess","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1776:127","20:1777:62393","20:1778:62394","20:1780:54560"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8963:2411":{"id":"2:8963:2411","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10381:2857":{"id":"2:10381:2857","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10382:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13153:3639":{"id":"2:13153:3639","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13155:3658","2:13156:922","2:13157:60207","2:13158:60208"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:277:1643":{"id":"a:2:3269:211-0:277:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13553:55651":{"id":"2:13553:55651","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13134:3636","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2159","str::split":"1:16010:2164"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49576:2915","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13497":{"id":"2:13497","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12594:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13498:793","2:13499:1790","2:13500:61190","2:13501:61191","2:13503:61192","2:13506:56988","2:13507:61193","2:13508:304","2:13509:1867","2:13510:1779","2:13512:1820","2:13514:1851","2:13516:1858","2:13518:3321","2:13519:61194","2:13520:55642","2:13521:1839","2:13522:3954","2:13523:3665","2:13524:3326","2:13525:32219","2:13526:32209","2:13527:4393","2:13528:61195","2:13529:32204","2:13530:1933","2:13533:55319","2:13536:55321","2:13539:2827","2:13543:2792","2:13547:54674","2:13550:32076","2:13553:55651","2:13556:61196","2:13559:61197","2:13562:55653","2:13565:55655","2:13568:61198","2:13571:61199","2:13574:2241","2:13577:61200","2:13580:61201","2:13583:61202","2:13586:61203","2:13588:61204","2:13590:61205","2:13592:61206","2:13593:61207","2:13594:61208","2:13597:61209","2:13600:14767","2:13603:55657","2:13606:61210","2:13609:61211","2:13612:61212","2:13615:3838","2:13617:4086","2:13618:55209","2:13619:55206","2:13620:55205","2:13621:61213","2:13623:3150","2:13624:61214"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1448,0],"end":[1460,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8523:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:94:1652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:213:1999"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:59:2123":{"id":"0:59:2123","crate_id":0,"name":"deserialize","span":{"filename":"src/serde.rs","begin":[95,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["deserializer",{"kind":"generic","inner":"D"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"20:1598:2100","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Deserializer","id":"20:1598:2100","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:2787"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:254:1999":{"id":"0:254:1999","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1581,4],"end":[1591,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13559:61197":{"id":"2:13559:61197","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:16004:2159","self::pattern":"2:13134:3636","str::split":"1:16010:2164","str::split_terminator":"1:16010:2164"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49626:3924","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:1794:2302":{"id":"20:1794:2302","crate_id":20,"name":"IntoDeserializer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:1797:2100","20:1798:62458"],"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"20:3815:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"20:8978:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:2869-0:45:2114":{"id":"b:2:2869-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8483-0:112:1659":{"id":"b:2:8483-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8485:1966","2:8486:1652","2:8487:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:285":{"id":"0:285","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[210,9],"end":[210,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:277:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:287:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13847:138":{"id":"2:13847:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13848:181","2:13849:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:2272-0:260:1640":{"id":"a:2:3310:2272-0:260:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5735:3178":{"id":"1:5735:3178","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5736:5320","1:5737:7610"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5653:3248":{"id":"1:5653:3248","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5654:4857","1:5655:56988"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:268:1647":{"id":"b:2:3213-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13523:3665":{"id":"2:13523:3665","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49534:3919","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48:1542":{"id":"0:48:1542","crate_id":0,"name":"0","span":{"filename":"src/serde.rs","begin":[26,22],"end":[26,36]},"visibility":{"restricted":{"parent":"0:4:1552","path":"::serde"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PhantomData","id":"2:3287:2097","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},"2:13521:1839":{"id":"2:13521:1839","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16010:2164"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:250:922":{"id":"0:250:922","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1563,4],"end":[1573,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8680:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6859:3133":{"id":"1:6859:3133","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6860:56784"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:272:1650":{"id":"0:272:1650","crate_id":0,"name":"key","span":{"filename":"src/lib.rs","begin":[174,4],"end":[174,14]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1209,0],"end":[1216,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8479:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Slab","id":"0:260:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:173:1966","0:174:1652","0:175:768"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:268:1647":{"id":"b:2:2869-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5647:3250":{"id":"1:5647:3250","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5648:57010","1:5649:4136"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1506,0],"end":[1510,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8548:2000","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:230:793"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:2272-0:268:1647":{"id":"a:2:3310:2272-0:268:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:98:1655":{"id":"b:2:3202-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1360,0],"end":[1364,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:200:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:142:1820":{"id":"0:142:1820","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[711,4],"end":[716,5]},"visibility":"public","docs":"Return a mutable reference to the value associated with the given key.\n\nIf the given key is not associated with a value, then `None` is\nreturned.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nlet key = slab.insert(\"hello\");\n\n*slab.get_mut(key).unwrap() = \"world\";\n\nassert_eq!(slab[key], \"world\");\nassert_eq!(slab.get_mut(123), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:45:2114":{"id":"b:2:3198-0:45:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:20:1566-0:45:2114":{"id":"b:20:1566-0:45:2114","crate_id":0,"name":null,"span":{"filename":"/home/predrag/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.143/src/de/mod.rs","begin":[477,0],"end":[477,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'de","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Visitor","id":"20:1662:2102","args":{"angle_bracketed":{"args":[{"lifetime":"'de"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Expected","id":"20:1564:2296","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SlabVisitor","id":"0:45:2114","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["20:1569:660"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13594:61208":{"id":"2:13594:61208","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13164:3635","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14246:141":{"id":"2:14246:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14247:277","2:14248:518","2:14249:280","2:14250:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:139:779":{"id":"0:139:779","crate_id":0,"name":"iter","span":{"filename":"src/lib.rs","begin":[633,4],"end":[638,5]},"visibility":"public","docs":"Return an iterator over the slab.\n\nThis function should generally be **avoided** as it is not efficient.\nIterators must iterate over every slot in the slab even if it is\nvacant. As such, a slab with a capacity of 1 million but only one\nstored value must still iterate the million slots.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\n\nfor i in 0..3 {\n    slab.insert(i);\n}\n\nlet mut iterator = slab.iter();\n\nassert_eq!(iterator.next(), Some((0, &0)));\nassert_eq!(iterator.next(), Some((1, &1)));\nassert_eq!(iterator.next(), Some((2, &2)));\nassert_eq!(iterator.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13586:61203":{"id":"2:13586:61203","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8488:2413":{"id":"2:8488:2413","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8490:2793","2:8492:2794","2:8493:2795"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:197:660":{"id":"0:197:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1353,4],"end":[1357,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:2212:2338":{"id":"20:2212:2338","crate_id":20,"name":"SerializeStructVariant","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:2213:175","20:2214:127","20:2215:62432","20:2217:62433","20:2218:599"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:194:660":{"id":"0:194:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1342,4],"end":[1346,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:107:1657":{"id":"b:2:2869-0:107:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:107:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2229"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:98:1655":{"id":"b:2:3198-0:98:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:1924"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:141:1779":{"id":"0:141:1779","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[687,4],"end":[692,5]},"visibility":"public","docs":"Return a reference to the value associated with the given key.\n\nIf the given key is not associated with a value, then `None` is\nreturned.\n\n# Examples\n\n```\n# use slab::*;\nlet mut slab = Slab::new();\nlet key = slab.insert(\"hello\");\n\nassert_eq!(slab.get(key), Some(&\"hello\"));\nassert_eq!(slab.get(123), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13619:55206":{"id":"2:13619:55206","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1368,0],"end":[1424,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:268:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:204:1900","0:205:1650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13073:3336":{"id":"2:13073:3336","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13074:126","2:13075:57516"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13617:4086":{"id":"2:13617:4086","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13621:61213":{"id":"2:13621:61213","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16004:2159"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49857:3936","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8548:2000":{"id":"2:8548:2000","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8549:793","2:8550:1790"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:281:1542":{"id":"0:281:1542","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[212,11],"end":[212,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"1:7795:3379":{"id":"1:7795:3379","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7796:59004"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:8106","1:2575:59460","1:2576:59461","1:2577:58988"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3740:3121":{"id":"2:3740:3121","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:58408"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13580:61201":{"id":"2:13580:61201","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13134:3636","prim@char":"1:16004:2159","`DoubleEndedIterator`":"2:8523:120","str::rmatch_indices":"1:16010:2164"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49708:3927","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23217:3752":{"id":"2:23217:3752","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23854:3721","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23208:3144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13506:56988":{"id":"2:13506:56988","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12605:4053"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:112:1659":{"id":"b:2:3202-0:112:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:112:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13543:2792":{"id":"2:13543:2792","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47591:176","self::pattern":"2:13134:3636","prim@char":"1:16004:2159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:3637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8960:1635":{"id":"2:8960:1635","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1512,0],"end":[1512,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8960:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:98:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"2:49467:2920":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"12:2280:1647":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:9332:4775":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:1459:3389":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:23010:3144":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:3200:3205":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:3743:4847":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:4995:6029":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:16007:2161":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"20:6224:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"16:7174:4597":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:49457:2922":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:48594:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:1235:4146":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:5030:2307":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:49726:3928":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:9440:5247":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:9296:5244":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"20:6422:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"1:1190:10927":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"20:1564:2296":{"crate_id":20,"path":["serde","de","Expected"],"kind":"trait"},"17:12494:5543":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:3740:3121":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:10584:4853":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:46816:2435":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"20:1576:2099":{"crate_id":20,"path":["serde","de","Deserialize"],"kind":"trait"},"2:50282:3950":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"20:1064:8326":{"crate_id":20,"path":["serde","de","impls","StrVisitor"],"kind":"struct"},"12:1238:4346":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:1704:6587":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:12725:5582":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:48907:3619":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"20:2893:62392":{"crate_id":20,"path":["serde","__private","de","content","EnumRefDeserializer"],"kind":"struct"},"1:5376:3504":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:6999:4593":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"12:777:1652":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:9340:2577":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:51691:3777":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:8138:4182":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"20:6266:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"5:1607:1657":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:2397:7845":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"12:750:1655":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:9133:46969":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:24783:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:696:3424":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:10866:3482":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:9649:7743":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"20:1587:2298":{"crate_id":20,"path":["serde","de","DeserializeSeed"],"kind":"trait"},"2:45956:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:12195:5479":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:11714:5386":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:46408:3806":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:3389:3112":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:13627:5870":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:11231:4821":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:16010:2164":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"9:749:4214":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:8481:3298":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:4670:3197":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:11354:3505":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13924:5969":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:48645:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:46898:2442":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:3195:4707":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:1472:1659":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:4614:6017":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:9264:5242":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"20:2490:8346":{"crate_id":20,"path":["serde","__private","de","content","TagOrContentVisitor"],"kind":"struct"},"20:8573:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"2:46787:2443":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:11499:5342":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:2754:4451":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:5101:3870":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12095:5463":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:46686:2427":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"20:3009:8354":{"crate_id":20,"path":["serde","__private","de","content","UntaggedUnitVisitor"],"kind":"struct"},"2:8442:2414":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"1:9627:55112":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:51588:3785":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:3883:6616":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:3758:3713":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:539:6409":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:14643:59059":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"20:3813:1641":{"crate_id":20,"path":["serde","actually_private","T"],"kind":"struct"},"17:11981:5444":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"20:2953:62428":{"crate_id":20,"path":["serde","__private","de","content","MapRefDeserializer"],"kind":"struct"},"2:23014:3142":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:6640:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:10623:7768":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:50144:3653":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:47069:2399":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:46553:3997":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:11847:5422":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:15032:3375":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:4734:6021":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"20:2205:2337":{"crate_id":20,"path":["serde","ser","SerializeStruct"],"kind":"trait"},"20:6695:8357":{"crate_id":20,"path":["serde","de","impls","deserialize","SeqVisitor"],"kind":"struct"},"17:13180:5755":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"20:4574:5108":{"crate_id":20,"path":["serde","de","value","U64Deserializer"],"kind":"struct"},"16:2733:4452":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:6949:4745":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:533:6407":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:22933:3144":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"5:8344:4135":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"14:47:7811":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:14936:5051":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:6893:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:10804:3458":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"20:1522:8342":{"crate_id":20,"path":["serde","de","impls","FromStrVisitor"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:46370:7411":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:5423:7059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:681:5316":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:1041:3274":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"18:611:4901":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:52534:3755":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"18:850:4895":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"20:3216:54041":{"crate_id":20,"path":["serde","__private","ser","TaggedSerializer"],"kind":"struct"},"1:8132:3449":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:50450:7440":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:4510:3228":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:4643:5000":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:11616:5368":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:13192:5760":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"5:8362:7304":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"20:633:5097":{"crate_id":20,"path":["serde","de","value","MapDeserializer"],"kind":"struct"},"20:1137:8330":{"crate_id":20,"path":["serde","de","impls","PhantomDataVisitor"],"kind":"struct"},"1:9343:3141":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:8391:4088":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:7226:4602":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:2991:4714":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:7295:4547":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:6965:2444":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:1215:4145":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:52342:3778":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:1619:1643":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:1651:3399":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:11696:5385":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:22884:3735":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:2155:1655":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:24302:4029":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:12182:5478":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:994:4180":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:12773:7857":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"6:545:6412":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:46379:3803":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:7212:1659":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"20:3582:2338":{"crate_id":20,"path":["serde","__private","ser","content","SerializeStructVariant"],"kind":"struct"},"6:1558:6484":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:13394:5809":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:9280:5243":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:820:5044":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"17:13386:5807":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:47701:2651":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"20:8300:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"5:3370:3279":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:14958:5053":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:4641:6018":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"20:2182:2335":{"crate_id":20,"path":["serde","ser","SerializeTupleStruct"],"kind":"trait"},"1:11409:3572":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:15498:4374":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:3218:4708":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:9088:46968":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"18:886:4898":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"20:9593:127":{"crate_id":20,"path":["serde","ser","Error"],"kind":"trait"},"1:3682:3215":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:3440:3119":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"20:6677:8358":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","SeqInPlaceVisitor"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:13590:5862":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:1551:6481":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:46191:3823":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:7514:4550":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:14149:3727":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:12783:5592":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"20:7792:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"16:7870:4536":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:8380:3449":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:10882:3223":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:10874:3221":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:6491:4584":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:5672:4431":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:23756:60248":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:51412:3764":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"20:5619:5120":{"crate_id":20,"path":["serde","de","value","SeqDeserializer"],"kind":"struct"},"2:46471:3151":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:6964:2574":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"5:5875:5004":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:7663:3370":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:49296:3917":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:49422:2417":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:6117:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8690:3532":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:10448:4793":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:47812:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"18:858:4896":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:47692:2575":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:9574:4786":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:3877:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:7392:4535":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"20:3798:54024":{"crate_id":20,"path":["serde","seed","InPlaceSeed"],"kind":"struct"},"12:979:3397":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:6937:3138":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:7507:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:3392:4717":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"20:8784:8362":{"crate_id":20,"path":["serde","de","impls","deserialize","MapVisitor"],"kind":"struct"},"2:23073:3739":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:12073:5462":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"20:1421:8339":{"crate_id":20,"path":["serde","de","impls","range","RangeVisitor"],"kind":"struct"},"6:5328:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"12:114:8097":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:5257:6970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:5285:6982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"18:830:4894":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:12875:3926":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:12982:5652":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"12:432:4348":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:10809:3188":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:10211:7756":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"18:713:2315":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:23545:3740":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:6265:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:10128:4875":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:50547:3155":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:49866:3151":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:13422:3518":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:45940:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:3920:6643":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:2912:4702":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:6014:4573":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:11479:3171":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"20:8674:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"18:645:4903":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:8298:4133":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"20:1249:8335":{"crate_id":20,"path":["serde","de","impls","PathBufVisitor"],"kind":"struct"},"20:8173:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"1:3197:3461":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:12053:3376":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:47076:2401":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:37707:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:10887:5295":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:8027:3449":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"1:6959:3170":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:10420:4827":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:9461:3637":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:47624:1966":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:49857:3936":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2508:3726":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:5979:7124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:11668:1655":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"12:940:3394":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:4965:2306":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:8388:3350":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:22663:60343":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"20:526:5118":{"crate_id":20,"path":["serde","de","value","BytesDeserializer"],"kind":"struct"},"17:12771:5589":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:9971:62372":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"20:8978:127":{"crate_id":20,"path":["serde","de","Error"],"kind":"trait"},"20:2734:62481":{"crate_id":20,"path":["serde","__private","de","content","VariantDeserializer"],"kind":"struct"},"2:3103:3144":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:52102:3798":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:53561:7508":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:12252:3408":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:15483:54977":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:10041:7751":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:12480:5541":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:4110:6748":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"20:841:62490":{"crate_id":20,"path":["serde","de","value","private","SeedStructVariant"],"kind":"struct"},"2:5605:3742":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:6718:4737":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:13402:5811":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:10611:7767":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"20:8883:62418":{"crate_id":20,"path":["serde","de","impls","OsStringKind"],"kind":"enum"},"16:3522:5171":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"12:971:3396":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"20:8143:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"6:6202:7235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:49501:4003":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:5647:3250":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:3406:3111":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:5475:7073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4256:6781":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:1428:1657":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:8488:2413":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:15122:7614":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"20:2421:8345":{"crate_id":20,"path":["serde","__private","de","content","ContentVisitor"],"kind":"struct"},"17:10149:7747":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:5837:4094":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"20:2716:54021":{"crate_id":20,"path":["serde","__private","de","content","EnumDeserializer"],"kind":"struct"},"5:6688:4121":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3488:2370":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:3907:6633":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:51381:3776":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:52228:3790":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"20:3324:54047":{"crate_id":20,"path":["serde","__private","ser","content","SerializeStructVariantAsMapValue"],"kind":"struct"},"1:11137:3212":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:13554:5853":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:4454:6868":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:11297:7577":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:3417:3114":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:5584:10929":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:53351:3756":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:4048:6716":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"13:232:6302":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:3882:3223":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:10618:3057":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:5444:7065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:46717:2428":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:8330:4134":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13637:5875":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:4921:3863":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:10516:4797":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"12:895:4335":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:14575:3188":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:13348:5799":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:13134:3636":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:32414:2363":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:1653:3390":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:13620:5868":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:14570:7605":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"12:869:1659":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:5544:7087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:50055:3649":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:49396:2924":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:9729:62379":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"20:1116:8329":{"crate_id":20,"path":["serde","de","impls","OptionVisitor"],"kind":"struct"},"5:3839:4995":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:13429:5815":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:5244:6961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:11575:3350":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:52421:3766":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:7629:3368":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"5:5536:4109":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"20:7696:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"1:4732:57529":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:51642:3792":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"5:2777:4150":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"20:1794:2302":{"crate_id":20,"path":["serde","de","IntoDeserializer"],"kind":"trait"},"17:9162:4820":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:4448:6013":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"9:809:3350":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"7:85:44643":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:1526:6471":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"14:244:6255":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:50007:3648":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:6247:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"12:1703:4358":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"20:2170:2333":{"crate_id":20,"path":["serde","ser","SerializeSeq"],"kind":"trait"},"20:1336:62412":{"crate_id":20,"path":["serde","de","impls","deserialize","Field"],"kind":"enum"},"12:1256:3399":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:3772:1657":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:11506:2661":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:1669:6562":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:9733:3498":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:12234:5484":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"5:1597:1655":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10502:5257":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10071:4878":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:3396:3109":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:11615:3352":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:5175:6929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:2159:1652":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:49477:2921":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:1488:3390":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:12168:5266":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:4304:6009":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:49385:2918":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:6126:7183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11100:4823":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:12037:2926":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:11436:2916":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"20:4402:5106":{"crate_id":20,"path":["serde","de","value","U8Deserializer"],"kind":"struct"},"2:51619:3789":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"20:6665:8357":{"crate_id":20,"path":["serde","de","impls","deserialize","SeqVisitor"],"kind":"struct"},"2:9341:2576":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:10587:3433":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:49142:2936":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5146:6905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"20:7810:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"12:2404:62366":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:7933:3699":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"20:453:5095":{"crate_id":20,"path":["serde","de","value","StringDeserializer"],"kind":"struct"},"20:0:1552":{"crate_id":20,"path":["serde"],"kind":"module"},"14:231:4090":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:49990:3647":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"20:6162:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"17:12741:5584":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:2843:4700":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:13973:7829":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:24295:7336":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:10353:4834":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:6013:7143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:11685:3356":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:50278:3946":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:5231:6031":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:46835:2437":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:3287:2097":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:47718:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"20:1402:62412":{"crate_id":20,"path":["serde","de","impls","range","Field"],"kind":"enum"},"18:775:5154":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"12:1103:1643":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:4051:3158":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:1912:41083":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:7117:2660":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:15201:3316":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:4432:3230":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"20:1439:62412":{"crate_id":20,"path":["serde","de","impls","deserialize","Field"],"kind":"enum"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:1524:3396":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:8193:5026":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"1:10377:7864":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:10844:4795":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:22644:60244":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"16:3506:4712":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:49850:3935":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:11026:7784":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:13331:5794":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:15353:3503":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:53288:3791":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:10599:7766":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:6928:7288":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:521:6401":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:13370:5804":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:10140:4795":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:6087:4527":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:9065:46967":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:2194:2953":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:13205:5765":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:3339:3469":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"20:983:8321":{"crate_id":20,"path":["serde","de","impls","UnitVisitor"],"kind":"struct"},"20:6120:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"20:6802:8358":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","SeqInPlaceVisitor"],"kind":"struct"},"16:5505:4424":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:12282:2313":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"20:2626:54019":{"crate_id":20,"path":["serde","__private","de","content","ContentDeserializer"],"kind":"struct"},"2:47085:2403":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"20:2612:8351":{"crate_id":20,"path":["serde","__private","de","content","TagContentOtherFieldVisitor"],"kind":"struct"},"16:6176:4576":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:53146:3787":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:11402:3254":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"12:952:3395":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12598:5560":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:3320:4764":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:11077:3235":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:46514:4077":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"12:2072:3282":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:51493:7445":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:0:2136":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:12327:5498":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:2484:47055":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:13465:5829":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"18:740:7735":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"12:399:4349":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4434:6859":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"0:4:1552":{"crate_id":0,"path":["slab","serde"],"kind":"module"},"2:38951:2273":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:15072:7613":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:4506:6015":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"20:3972:5101":{"crate_id":20,"path":["serde","de","value","I8Deserializer"],"kind":"struct"},"2:51865:3758":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"20:6545:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"2:2283:3703":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:7195:4599":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:7677:3371":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"15:0:2135":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:11156:3254":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"16:5927:4445":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:2310:4191":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:56499:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:3933:6653":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:3516:1775":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:1438:1652":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:3297:2271":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:10938:7777":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:16021:2173":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:47641:1657":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:48657:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:11505:2914":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:7119:4459":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:5373:3503":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"20:6504:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"2:28134:2308":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"20:1013:8323":{"crate_id":20,"path":["serde","de","impls","CharVisitor"],"kind":"struct"},"2:46423:4078":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:5472:4422":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:11794:5408":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"5:1472:3398":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:3411:3113":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:11767:5399":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:5237:6957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:9005:46965":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:8313:3998":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:48064:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:22682:60342":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:1626:6528":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"20:6276:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"17:4157:4854":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:13258:5777":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:24817:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:14000:5985":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:49435:2923":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:52021:7455":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:5430:7060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:10236:4788":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:10975:7780":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:5029:6030":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:24249:39122":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:52685:3779":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11678:5376":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:4748:3211":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:8255:2400":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:12004:3372":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:10799:3147":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"20:3679:54045":{"crate_id":20,"path":["serde","__private","ser","FlatMapSerializeStructVariantAsMapValue"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:13942:5975":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:8479:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:10566:3425":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:51243:3763":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"20:7911:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"1:7792:3377":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:6111:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:14322:2366":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:299:7738":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:4028:6707":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:9034:46966":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:13377:5806":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"20:8219:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"2:51454:7444":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"20:5689:5121":{"crate_id":20,"path":["serde","de","value","SeqAccessDeserializer"],"kind":"struct"},"2:46454:4073":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"20:1345:8337":{"crate_id":20,"path":["serde","de","impls","deserialize","deserialize","FieldVisitor"],"kind":"struct"},"1:15986:54969":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:4208:6777":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"20:6006:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"12:787:3391":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:5960:4447":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:4379:6837":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:6510:2431":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:10543:5298":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:6577:4587":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"20:552:5119":{"crate_id":20,"path":["serde","de","value","BorrowedBytesDeserializer"],"kind":"struct"},"1:7649:3369":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7216:4601":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:16022:2174":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"18:745:62384":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:49976:3644":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:6475:1659":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:6861:3136":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"20:8856:8364":{"crate_id":20,"path":["serde","de","impls","deserialize","deserialize","KindVisitor"],"kind":"struct"},"20:7945:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"1:6319:3522":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:8738:3540":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:50266:3942":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"16:6807:4592":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"18:705:5154":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"12:2040:1659":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"20:2330:8343":{"crate_id":20,"path":["serde","__private","de","borrow_cow_str","CowStrVisitor"],"kind":"struct"},"20:719:53592":{"crate_id":20,"path":["serde","de","value","PairVisitor"],"kind":"struct"},"20:8846:62416":{"crate_id":20,"path":["serde","de","impls","deserialize","SocketAddrKind"],"kind":"enum"},"2:24093:7313":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:5960:3574":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:6366:4363":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:5727:3177":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:1152:7839":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:7927:3448":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"20:3083:54013":{"crate_id":20,"path":["serde","__private","de","FlatMapDeserializer"],"kind":"struct"},"1:13961:3373":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:3358:3102":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:47103:2407":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:9639:55119":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"12:815:3392":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:4425:6853":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:10635:5259":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:0:2137":{"crate_id":17,"path":["object"],"kind":"module"},"17:13788:5932":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"20:6474:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"2:46507:4076":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:11098:3209":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"20:6535:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"16:7185:4598":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"12:466:8098":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:13054:5711":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:24851:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:13144:3637":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:15509:4374":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:4538:6901":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"20:1095:8328":{"crate_id":20,"path":["serde","de","impls","CStringVisitor"],"kind":"struct"},"2:51541:3797":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:12385:5524":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:12275:5490":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:1501:3393":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:6199:3521":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:7236:4603":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"20:3570:2337":{"crate_id":20,"path":["serde","__private","ser","content","SerializeStruct"],"kind":"struct"},"2:48022:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:5165:2872":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:10321:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:10332:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:46493:3936":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"5:7642:2376":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10279:4767":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"20:7751:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"2:51330:3788":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"20:4230:5104":{"crate_id":20,"path":["serde","de","value","I64Deserializer"],"kind":"struct"},"20:2772:5097":{"crate_id":20,"path":["serde","__private","de","content","MapDeserializer"],"kind":"struct"},"2:22661:60340":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:51738:3765":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"20:6770:8358":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","SeqInPlaceVisitor"],"kind":"struct"},"2:48627:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"20:2561:8347":{"crate_id":20,"path":["serde","__private","de","content","TaggedContentVisitor"],"kind":"struct"},"1:9861:5044":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:46641:7833":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"20:831:62494":{"crate_id":20,"path":["serde","de","value","private","SeedTupleVariant"],"kind":"struct"},"5:4515:4168":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"6:5226:6949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"20:6790:8357":{"crate_id":20,"path":["serde","de","impls","deserialize","SeqVisitor"],"kind":"struct"},"17:11970:5441":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:8379:4087":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:4160:6774":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:10701:7856":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:32420:2955":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:9339:2578":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:4512:3229":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"14:216:45317":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:12132:1652":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:3423:3115":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:6211:7238":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:2183:3281":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"14:11:7811":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"20:3339:54018":{"crate_id":20,"path":["serde","__private","ser","content","Content"],"kind":"enum"},"17:8849:4817":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:14550:3277":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:4397:3489":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"0:0:1649":{"crate_id":0,"path":["slab"],"kind":"module"},"6:4446:6863":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:510:7739":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:8182:2397":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:11268:3311":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:14821:3376":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:12917:5601":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:5753:4438":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:7441:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"5:4306:1657":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:3091:4763":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:7042:4749":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:6518:4585":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:2866:3696":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:9476:5248":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:13532:5848":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:13164:3635":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:7264:4545":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:618:6457":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:10926:7776":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:4270:3523":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:10179:5256":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:4373:6834":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:4671:6019":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:12521:5547":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:46737:2429":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:51220:3775":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:11243:2911":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:5201:6944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:49534:3919":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:11120:2427":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"18:897:4899":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46071:2316":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:10788:7769":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:1075:3148":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:6240:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"20:1774:2300":{"crate_id":20,"path":["serde","de","EnumAccess"],"kind":"trait"},"1:7615:3367":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:37731:2315":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"20:9658:54018":{"crate_id":20,"path":["serde","__private","de","content","Content"],"kind":"enum"},"20:6725:8357":{"crate_id":20,"path":["serde","de","impls","deserialize","SeqVisitor"],"kind":"struct"},"6:6934:7289":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"20:1598:2100":{"crate_id":20,"path":["serde","de","Deserializer"],"kind":"trait"},"1:4666:3190":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:6032:4458":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:8929:46964":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"20:8032:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"13:120:45283":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:601:6449":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:5889:5007":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"20:2909:62482":{"crate_id":20,"path":["serde","__private","de","content","VariantRefDeserializer"],"kind":"struct"},"6:4509:6888":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:24173:3840":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:9139:2312":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:12582:5556":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:6911:7283":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:47114:2409":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:46566:3998":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:2945:4725":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"20:6214:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"18:730:62383":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:4400:3490":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:1531:6473":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:3352:3099":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:9839:4795":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:1694:6581":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:16019:2171":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"20:7889:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"16:6391:4582":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"20:6068:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"2:52468:3770":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:49608:3923":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:13296:5784":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"20:6110:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"1:5930:3571":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:9896:62376":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:7111:5009":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"9:1020:4279":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:5707:4432":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:12208:5481":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:14043:60111":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:1748:6604":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:3064:4762":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:11653:5374":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:4081:6732":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"20:1321:8338":{"crate_id":20,"path":["serde","de","impls","deserialize","DurationVisitor"],"kind":"struct"},"2:11286:2927":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:2262:4148":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:1195:8103":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:11304:46973":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:51147:7442":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:3380:3105":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:5314:5242":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:51349:7443":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:49544:3212":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:51917:7452":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:4088:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"12:1666:4356":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:6252:4579":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:10962:3224":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:11434:5322":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:4684:3206":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:2218:4128":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:6181:7221":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:11491:2909":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:12116:1655":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:24186:3841":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:6437:3165":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"20:5090:5114":{"crate_id":20,"path":["serde","de","value","U128Deserializer"],"kind":"struct"},"2:48232:4002":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:5039:3865":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:50517:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:3310:2272":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:13547:5852":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:11482:5337":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"20:7767:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"2:2269:3700":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:13923:3371":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:9060:3538":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:14588:7611":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:3488:4713":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:6150:7195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12307:5497":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"20:8386:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"17:9809:62377":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"9:1075:4280":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4198:6776":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"9:41:4262":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:3435:3118":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:5995:7136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:3775:3126":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:672:40109":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"18:755:62382":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4410:6849":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"9:686:4210":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:2793:3153":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:2889:4720":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:49832:3933":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:11822:5418":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:6940:7290":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:13733:5913":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:5797:3183":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:10200:7755":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:4277:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:46446:3937":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:2292:3704":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:11993:5446":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:49375:2917":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:4296:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:24201:7323":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:22957:3749":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"5:5833:4092":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:5213:6948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:32580:60252":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"1:14808:3251":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:12712:5581":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:4740:3745":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:1518:3395":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:9245:4774":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:9634:5041":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"1:14626:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:5271:6981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:10667:3285":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:5522:4425":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:11328:5589":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:5815:4441":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:50154:3654":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:8963:2411":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:7250:4604":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:23550:16270":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:2456:7847":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:46708:2420":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:12659:5575":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:11524:3340":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"20:3505:2333":{"crate_id":20,"path":["serde","__private","ser","content","SerializeSeq"],"kind":"struct"},"2:23208:3144":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:50274:3947":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:3104:3676":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"20:5954:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"6:5298:6988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:50167:7834":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"6:3966:6677":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:49138:4084":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:4471:3232":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:7738:4606":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:7804:4539":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:5488:4423":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:16016:2168":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:7894:4566":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:3987:6686":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:586:6441":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:46104:3120":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:6853:7279":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:13540:5851":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:3338:4449":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"12:856:3389":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"20:6737:8358":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","SeqInPlaceVisitor"],"kind":"struct"},"20:2188:2336":{"crate_id":20,"path":["serde","ser","SerializeTupleVariant"],"kind":"trait"},"17:12946:5621":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"5:7453:4995":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:11130:2440":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:12038:3375":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:11337:4779":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:15754:5054":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:5156:3871":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:48375:2860":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:7477:4552":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:1634:6533":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"20:8716:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"5:8463:2371":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:10660:3618":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:11005:3144":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"20:1481:62412":{"crate_id":20,"path":["serde","de","impls","deserialize","Field"],"kind":"enum"},"17:2543:4789":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:5735:3178":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:9659:62375":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:634:6467":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:8973:3339":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:5436:7063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:45864:3043":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"0:107:1657":{"crate_id":0,"path":["slab","IterMut"],"kind":"struct"},"17:12795:5599":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:50119:3651":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:2062:3197":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:3772:6005":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"18:668:4905":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"12:2036:1652":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"0:98:1655":{"crate_id":0,"path":["slab","Iter"],"kind":"struct"},"17:10331:4795":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:24227:39130":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10266:4830":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:6219:4578":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:14210:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:48361:2857":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:4790:6023":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:5717:4434":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:5968:3576":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:3714:6004":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:24715:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:4098:6742":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"9:603:7666":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:5416:7057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:6682:4543":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:4386:6011":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:12158:3301":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:12187:3303":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:12373:5522":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:13359:7828":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"16:6136:4569":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:9766:5042":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:12408:5533":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6054:7170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:3342:3103":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:13884:5958":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:49516:3601":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:4230:6779":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:12685:5577":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:49365:2907":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:5580:4428":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:16020:2172":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"15:230:4365":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"9:927:44740":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:11779:5402":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:4885:3862":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:8475:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:14159:3958":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"0:268:1647":{"crate_id":0,"path":["slab","VacantEntry"],"kind":"struct"},"2:48106:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"20:8838:8363":{"crate_id":20,"path":["serde","de","impls","deserialize","EnumVisitor"],"kind":"struct"},"2:10527:7827":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"20:425:5117":{"crate_id":20,"path":["serde","de","value","BorrowedStrDeserializer"],"kind":"struct"},"2:3401:3110":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:4728:3744":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:8646:3531":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:49762:3930":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"5:7620:2375":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13520:5845":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:5183:6931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:24148:7318":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:3365:4450":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:3264:4710":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:3577:1964":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:48928:3350":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"20:3309:54048":{"crate_id":20,"path":["serde","__private","ser","content","SerializeTupleVariantAsMapValue"],"kind":"struct"},"20:7838:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"2:10381:2857":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:4340:6815":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:4315:6802":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:14565:7603":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"20:7969:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"18:661:4904":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:1718:2299":{"crate_id":20,"path":["serde","de","SeqAccess"],"kind":"trait"},"16:2816:4719":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:6780:4591":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"9:234:4237":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"20:1160:8331":{"crate_id":20,"path":["serde","de","impls","deserialize","VecVisitor"],"kind":"struct"},"18:637:5154":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"20:8798:8363":{"crate_id":20,"path":["serde","de","impls","deserialize","EnumVisitor"],"kind":"struct"},"17:542:4462":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:50302:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:7824:5009":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:15045:59063":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:5766:4439":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:1486:3399":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:5034:3864":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:14034:3372":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:4464:6874":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"20:2312:62429":{"crate_id":20,"path":["serde","__private","de","missing_field","MissingFieldDeserializer"],"kind":"struct"},"2:25323:3853":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:57774:7521":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:23854:3721":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:10840:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:48715:2856":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"20:1799:2303":{"crate_id":20,"path":["serde","de","OneOf"],"kind":"struct"},"20:3052:5117":{"crate_id":20,"path":["serde","__private","de","BorrowedStrDeserializer"],"kind":"struct"},"17:13986:5982":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:7928:2116":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"20:5964:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"1:15053:2313":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:6964:7295":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:45892:3125":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:10858:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"20:10135:127":{"crate_id":20,"path":["serde","__private","doc","Error"],"kind":"struct"},"20:995:8322":{"crate_id":20,"path":["serde","de","impls","BoolVisitor"],"kind":"struct"},"17:13240:5769":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:10377:4832":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"20:736:53593":{"crate_id":20,"path":["serde","de","value","ExpectedInMap"],"kind":"struct"},"5:8115:1652":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:3648:3220":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:7732:3373":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:4783:3725":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:11045:46971":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13564:5856":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:12227:3537":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:7823:4541":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:15474:7617":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:49875:3937":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:49841:3934":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:1727:6597":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"20:1269:8336":{"crate_id":20,"path":["serde","de","impls","OsStringVisitor"],"kind":"struct"},"1:5653:3248":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"12:1162:4343":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:6557:3271":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:52181:3786":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:15185:3315":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"20:4144:5103":{"crate_id":20,"path":["serde","de","value","I32Deserializer"],"kind":"struct"},"1:894:3428":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6605:4544":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:5952:3573":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"20:2045:2340":{"crate_id":20,"path":["serde","ser","impossible","Impossible"],"kind":"struct"},"5:1618:1652":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:10383:2858":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:4012:6702":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:46146:2871":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:11150:3214":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:5595:4429":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:49626:3924":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:3341:4125":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"20:2120:2106":{"crate_id":20,"path":["serde","ser","Serializer"],"kind":"trait"},"17:10095:4872":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:5421:4417":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:11193:3256":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"2:53691:7514":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:50286:3948":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:3396:3282":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:5855:4442":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:5456:4419":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:2395:7844":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"20:1782:2301":{"crate_id":20,"path":["serde","de","VariantAccess"],"kind":"trait"},"5:1441:1643":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:11555:5357":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:6620:4732":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:10864:5294":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:11186:5310":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:15970:7676":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"20:3117:54015":{"crate_id":20,"path":["serde","__private","de","FlatMapAccess"],"kind":"struct"},"2:46132:2116":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:16005:2160":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:9771:5043":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:16023:2175":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:47094:2405":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:7073:4594":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:11539:5353":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:12537:5549":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11726:5389":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:13497:5837":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:51474:3753":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:7795:3379":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"20:6172:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"2:24749:2903":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:5981:3577":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"12:880:2370":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:5363:7032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"20:1172:8332":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","VecInPlaceVisitor"],"kind":"struct"},"1:10565:3144":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:16028:2180":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:1733:3517":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4493:6883":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:50298:3944":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:46727:1653":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:6976:7297":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"12:2269:3398":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"18:721:5156":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:4362:6826":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"18:651:4900":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"20:3648:54043":{"crate_id":20,"path":["serde","__private","ser","FlatMapSerializeMap"],"kind":"struct"},"1:11414:3575":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:2968:4703":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:46857:2439":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:3505:3044":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"20:2176:2334":{"crate_id":20,"path":["serde","ser","SerializeTuple"],"kind":"trait"},"16:2794:4453":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"20:4058:5102":{"crate_id":20,"path":["serde","de","value","I16Deserializer"],"kind":"struct"},"20:2212:2338":{"crate_id":20,"path":["serde","ser","SerializeStructVariant"],"kind":"trait"},"17:10407:4828":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:24919:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:14103:5050":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:13453:5823":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:15391:3504":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:3041:4705":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:47980:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:49708:3927":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:8474:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:5207:6947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:24885:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:4308:6801":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:46878:2440":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:9799:7746":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:4332:6811":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:3048:61042":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"20:6756:8357":{"crate_id":20,"path":["serde","de","impls","deserialize","SeqVisitor"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:2773:4726":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:13772:5928":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:5295:45388":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:5789:3181":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:3040:7300":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:9551:4818":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:56434:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:32776:2956":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:9467:56905":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:49558:2911":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:1663:3391":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:53535:7506":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:48946:7436":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:13272:5782":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:2171:3279":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:46025:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:53437:3794":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"20:1185:8333":{"crate_id":20,"path":["serde","de","impls","ArrayVisitor"],"kind":"struct"},"17:12247:5486":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:5736:4435":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:5395:7045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:50535:3156":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:8925:3550":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"6:4386:6839":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11001:7782":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:4055:6719":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:16009:2163":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:607:7740":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:10705:4154":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:8488:3299":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:6922:7287":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"20:3223:7564":{"crate_id":20,"path":["serde","__private","ser","Unsupported"],"kind":"enum"},"1:10710:2427":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"17:12155:5474":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:4417:6012":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"12:0:2133":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:53629:7512":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"12:2052:3279":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:32379:2362":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:3364:3101":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:7303:4605":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"2:23020:3143":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:12735:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:23951:3968":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:3759:1655":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:5485:7075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:10379:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:4148:6765":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:7420:4551":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"6:4321:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:10001:47017":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:47770:1657":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:13865:5953":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:6973:1502":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"6:6031:7152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:8410:4139":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"1:8803:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:9759:7745":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:6744:4739":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:15092:3309":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:12010:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:10950:7778":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"20:2117:2104":{"crate_id":20,"path":["serde","ser","Serialize"],"kind":"trait"},"20:389:5116":{"crate_id":20,"path":["serde","de","value","StrDeserializer"],"kind":"struct"},"20:1490:8337":{"crate_id":20,"path":["serde","de","impls","deserialize","deserialize","FieldVisitor"],"kind":"struct"},"1:1507:3394":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:47649:1652":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:12040:5452":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:3287:4711":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:8250:2368":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:22616:2315":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"20:3596:54042":{"crate_id":20,"path":["serde","__private","ser","FlatMapSerializer"],"kind":"struct"},"2:11014:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:1944:1636":{"crate_id":2,"path":["core","mem"],"kind":"module"},"6:607:6452":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:16004:2159":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:48148:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"12:1121:3398":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:5360:4414":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"20:699:53591":{"crate_id":20,"path":["serde","de","value","PairDeserializer"],"kind":"struct"},"6:4067:6724":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"20:2797:54020":{"crate_id":20,"path":["serde","__private","de","content","ContentRefDeserializer"],"kind":"struct"},"20:8334:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"12:183:4351":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:6021:4699":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"20:7715:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"17:12552:5553":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:5561:4427":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:1011:1655":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:9849:62373":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:1311:4879":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:13098:5743":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:11015:7783":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"20:3516:2334":{"crate_id":20,"path":["serde","__private","ser","content","SerializeTuple"],"kind":"struct"},"17:10489:4796":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:5579:7112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:4378:1652":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:4699:5000":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:16003:2158":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:12645:5574":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"20:4488:5107":{"crate_id":20,"path":["serde","de","value","U16Deserializer"],"kind":"struct"},"6:4116:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12028:5450":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:5408:4070":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:7146:4595":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:4032:3334":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:12405:7847":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:4061:6721":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"4:0:2128":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"20:3040:5116":{"crate_id":20,"path":["serde","__private","de","StrDeserializer"],"kind":"struct"},"1:11453:3275":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:50458:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:6685:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:56460:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3951:2370":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:13041:5704":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"14:56:5337":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"20:875:3251":{"crate_id":20,"path":["serde","de","format","Buf"],"kind":"struct"},"17:13488:5834":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:5975:4571":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"12:2059:3280":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:16015:2167":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:47762:1655":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:23850:3144":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:49680:2909":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:1236:7741":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11915:5424":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:14246:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:47778:1652":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:50503:3957":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:10081:4767":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:10610:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:11962:5439":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:9063:3411":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:5790:4440":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"5:3039:61040":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:53398:3774":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:13477:5830":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10571:7764":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:4230:6008":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:13153:3639":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:4704:6020":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:7279:4750":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:1157:10926":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:9848:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:5788:4995":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:3323:3464":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:11398:2915":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:51997:7454":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:49448:2919":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:12926:2927":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:10912:7772":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12343:5503":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:13933:5973":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:1537:6476":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:48938:7435":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:3329:1655":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:50294:3943":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:7379:1652":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:8446:2370":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"20:8251:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"20:2750:5120":{"crate_id":20,"path":["serde","__private","de","content","SeqDeserializer"],"kind":"struct"},"17:10224:7757":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"12:2066:3281":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:13939:55122":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:513:6396":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:12083:7600":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"16:3018:4704":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"18:838:3639":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:12023:3374":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:6077:7171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:46826:2436":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"20:1027:8324":{"crate_id":20,"path":["serde","de","impls","StringVisitor"],"kind":"struct"},"1:2166:2370":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:7975:5026":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"17:9368:5245":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:1740:6600":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:16027:2179":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"20:3666:54044":{"crate_id":20,"path":["serde","__private","ser","FlatMapSerializeStruct"],"kind":"struct"},"2:52499:3773":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:46477:4074":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"16:6110:4568":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:10558:7761":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:48731:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:5111:2871":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:8967:2412":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:6257:2375":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:10826:3189":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:15216:3317":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:1132:3160":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:3368:3104":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:4179:6775":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:50440:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:4356:6823":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13163:5753":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:3427:3116":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:2458:7848":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:5452:7067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:24613:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:4440:6860":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:593:6444":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:10684:11934":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:5538:7086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:7549:4538":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:294:7737":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:56486:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:16018:2170":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"20:4316:5105":{"crate_id":20,"path":["serde","de","value","IsizeDeserializer"],"kind":"struct"},"2:51840:3757":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"20:2591:8349":{"crate_id":20,"path":["serde","__private","de","content","TagOrContentFieldVisitor"],"kind":"struct"},"20:798:62396":{"crate_id":20,"path":["serde","de","value","private","UnitOnly"],"kind":"struct"},"2:22920:3750":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:8160:1652":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:11218:1657":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:46699:2419":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"18:802:4891":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:22684:60338":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:15235:3324":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"20:1502:8341":{"crate_id":20,"path":["serde","de","impls","deserialize","ResultVisitor"],"kind":"struct"},"17:12431:5534":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:53550:7507":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"7:38:44636":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:10458:5204":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:9843:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"12:1183:4344":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4346:6817":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"20:2353:8344":{"crate_id":20,"path":["serde","__private","de","borrow_cow_bytes","CowBytesVisitor"],"kind":"struct"},"1:1633:3398":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"20:8816:8364":{"crate_id":20,"path":["serde","de","impls","deserialize","deserialize","KindVisitor"],"kind":"struct"},"2:46548:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"20:6370:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"5:8121:4181":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:3561:3219":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:13306:5785":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:24317:3987":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:6644:4589":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:1662:6558":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"20:4660:5109":{"crate_id":20,"path":["serde","de","value","UsizeDeserializer"],"kind":"struct"},"20:3886:5100":{"crate_id":20,"path":["serde","de","value","BoolDeserializer"],"kind":"struct"},"16:6569:4734":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"0:279:1661":{"crate_id":0,"path":["slab","Entry","Vacant"],"kind":"variant"},"1:7932:55123":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"18:812:4892":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:432:2309":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:11365:3507":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:51126:7441":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:11640:5372":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:14601:3460":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:14:2118":{"crate_id":2,"path":["core","write"],"kind":"macro"},"20:8765:8362":{"crate_id":20,"path":["serde","de","impls","deserialize","MapVisitor"],"kind":"struct"},"1:15130:3383":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:9528:3212":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"0:277:1643":{"crate_id":0,"path":["slab","Entry"],"kind":"enum"},"2:3337:3098":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:10387:2860":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:46778:2433":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:11208:3258":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"6:4516:6891":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:12744:5049":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:5384:4415":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:23217:3752":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:46746:2430":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:8203:1652":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:3604:5175":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:12262:5489":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:12605:4053":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:2314:4833":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:1764:6609":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:7257:4995":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:14239:3232":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:9594:5040":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:4242:6780":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:11254:4819":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13446:5822":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"9:157:4229":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:22831:3748":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:11434:3524":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:13506:5838":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:12242:3416":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:10957:3332":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:6357:4581":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:51817:3754":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:13963:5978":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:3648:2364":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"5:7849:5014":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"12:1203:4345":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:5387:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"18:136:8091":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:3384:3107":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:12061:7599":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"20:1299:62412":{"crate_id":20,"path":["serde","de","impls","deserialize","Field"],"kind":"enum"},"16:3118:4716":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:3241:4709":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:12257:3409":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:46661:2417":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:5500:3511":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:46807:2422":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:8239:8104":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:50324:3420":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"17:11604:5365":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:53225:3771":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:4823:6024":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:46769:2432":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:53035:3767":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"12:1682:4357":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:46631:5016":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"20:8422:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"2:3347:3100":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"20:3553:2105":{"crate_id":20,"path":["serde","__private","ser","content","SerializeMap"],"kind":"struct"},"0:112:1659":{"crate_id":0,"path":["slab","Drain"],"kind":"struct"},"17:10477:4791":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:1621:6526":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:11519:5352":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:13862:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:10317:4773":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:13786:3381":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:52259:3793":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:11118:46972":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:900:3429":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:14952:5052":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:8003:2395":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:14804:7856":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:11250:3260":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"6:4218:6778":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:9719:7744":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:12568:5554":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:10816:3460":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:3993:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:3981:6684":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:580:6438":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:6166:4575":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"20:6380:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"17:12699:5580":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:6459:3168":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:1576:6495":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:6424:4583":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:1415:1655":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:10435:7758":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:8438:2415":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:46533:3808":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:48612:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:10577:54976":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:161:39777":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:8839:7851":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:13119:5748":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:1482:2370":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:6668:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:13842:5952":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:13356:5802":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:7406:4533":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:56447:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:764:1657":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"20:1411:8337":{"crate_id":20,"path":["serde","de","impls","range","deserialize","FieldVisitor"],"kind":"struct"},"2:50082:3650":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:3431:3117":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:10052:7752":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:4066:3157":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:14242:3228":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:5719:3176":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:9933:7748":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"0:45:2114":{"crate_id":0,"path":["slab","serde","SlabVisitor"],"kind":"struct"},"1:4300:3236":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"2:24115:3845":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:5433:4418":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:49780:3931":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:10391:2861":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:69:2369":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"0:260:1640":{"crate_id":0,"path":["slab","Slab"],"kind":"struct"},"1:1530:3397":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:6672:4109":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:3972:6679":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"18:821:4893":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:56063:3717":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:11665:5375":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:10452:5047":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:49822:3932":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:15019:3374":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:5971:7119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:1606:6514":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"18:621:5153":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:4955:6028":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:11180:3255":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"17:13062:5713":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:2751:3152":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:13282:5783":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:4607:2405":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"20:8477:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"17:12610:5562":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:4005:6698":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:46798:2434":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:1457:1647":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:50494:3956":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:46755:7421":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:4135:6761":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:16025:2177":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:7467:4531":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:11232:3259":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:1017:3449":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"0:282:1662":{"crate_id":0,"path":["slab","Entry","Occupied"],"kind":"variant"},"2:47787:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:4762:6022":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"20:1462:8340":{"crate_id":20,"path":["serde","de","impls","deserialize","BoundVisitor"],"kind":"struct"},"14:189:7811":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:3375:4126":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:10393:2862":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:8289:3449":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"17:11809:5414":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:13318:5788":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"20:4832:5111":{"crate_id":20,"path":["serde","de","value","F64Deserializer"],"kind":"struct"},"9:1056:4272":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:49938:3638":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:5008:3252":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5407:4416":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:3372:3108":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"5:3336:3280":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"20:1736:2101":{"crate_id":20,"path":["serde","de","MapAccess"],"kind":"trait"},"1:6859:3133":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:5346:4528":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:11199:5312":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:12221:5482":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"20:4918:5112":{"crate_id":20,"path":["serde","de","value","CharDeserializer"],"kind":"struct"},"16:7856:4609":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:4723:2311":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:12137:5022":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:24681:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:7286:7850":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:3376:3106":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:5273:4456":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:7024:4748":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:12065:55111":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:11477:2913":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:10726:1309":{"crate_id":2,"path":["core","slice"],"kind":"module"},"6:4532:6898":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"9:692:4212":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:5741:3146":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:46847:2438":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:5858:3568":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"17:11082:4784":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"18:695:4906":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:4477:6014":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:5402:7046":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:12138:3300":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:5564:7101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:1674:3392":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:4526:6896":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:12076:57187":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"16:7761:4607":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:7332:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"12:2392:6306":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:6951:7294":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"20:1233:8334":{"crate_id":20,"path":["serde","de","impls","PathVisitor"],"kind":"struct"},"17:11932:5430":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"20:8100:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"2:53476:3759":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:49347:2908":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:9600:62381":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"20:3457:54046":{"crate_id":20,"path":["serde","__private","ser","content","ContentSerializer"],"kind":"struct"},"1:16026:2178":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:11358:4778":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:10366:5316":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"12:2032:1655":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:12891:3929":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:4038:6713":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:5185:2276":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"20:1188:8359":{"crate_id":20,"path":["serde","de","impls","ArrayInPlaceVisitor"],"kind":"struct"},"2:45981:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:3044:61039":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:32428:60251":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"17:9943:62374":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12456:5538":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:24953:3973":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"5:6954:4098":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:10375:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:51769:3769":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:2433:7846":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:6899:7281":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:4485:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:8960:1635":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:51195:3783":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:50133:3652":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"20:1080:8327":{"crate_id":20,"path":["serde","de","impls","BytesVisitor"],"kind":"struct"},"2:49662:2913":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:6152:4529":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:157:39776":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"20:8006:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"17:11159:5309":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:6583:2421":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:10646:10923":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:10427:5045":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:527:6404":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:10028:7750":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13760:5925":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:1642:1647":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:11428:3505":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:10389:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:6695:7163":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:9404:5246":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"20:1029:8325":{"crate_id":20,"path":["serde","de","impls","StringInPlaceVisitor"],"kind":"struct"},"12:1147:1647":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:7333:4549":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:10117:4874":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:11835:5419":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"5:3894:4140":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:6863:3137":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:6591:4588":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:3335:963":{"crate_id":2,"path":["core","ops"],"kind":"module"},"2:56473:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11406:5318":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:24132:7315":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:10801:7771":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:12467:5539":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13799:5936":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:6905:7282":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"12:472:8099":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:5308:6995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:2594:7849":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:10620:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"9:776:4259":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:2177:3280":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:11325:2912":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:7453:4530":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:11143:2911":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:12671:5576":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:12004:2925":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:16017:2169":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:14609:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:50290:3949":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:6699:7167":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:7342:4563":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"20:6432:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"1:1446:3388":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:46139:3695":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:3746:3123":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"10:0:2131":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"11:54:4333":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"16:6768:4741":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:7571:4526":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:1567:6489":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:6072:4548":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:3274:2267":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:11588:5364":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:9718:3497":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"20:6328:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"2:56421:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"20:8515:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"1:6685:3146":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:11363:2928":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:16002:2157":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:4535:6016":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:13159:3640":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"12:379:4350":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:49576:2915":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"20:2927:62427":{"crate_id":20,"path":["serde","__private","de","content","SeqRefDeserializer"],"kind":"struct"},"2:53495:7502":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"18:791:4890":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:2866:4701":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:57795:7522":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:12203:3304":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:3275:2268":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:6004:7142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"12:843:3388":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:13154:5749":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:3362:3281":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"12:928:3390":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:1635:3388":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:11378:4777":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:11086:3207":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:11628:5369":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:10655:2310":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:13938:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:13582:5860":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"18:0:2138":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:8639:3529":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:4474:6875":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:9210:46970":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:1843:4995":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"20:3138:54016":{"crate_id":20,"path":["serde","__private","de","FlatStructAccess"],"kind":"struct"},"1:6697:7165":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:3559:3124":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:53652:7513":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:49812:3214":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:7884:4537":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"14:0:2134":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:1149:7837":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:46048:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:7843:4608":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:48368:2859":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:24209:7324":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:50270:3945":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:13898:5960":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:46392:3804":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:48899:7431":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:6226:7245":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:24579:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:16024:2176":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:5785:3180":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"5:5415:3197":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"20:8988:2295":{"crate_id":20,"path":["serde","de","Unexpected"],"kind":"enum"},"6:571:6432":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:6024:7148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:46867:2424":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:11340:7583":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"15:248:4366":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"20:2194:2105":{"crate_id":20,"path":["serde","ser","SerializeMap"],"kind":"trait"},"6:4020:6704":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:8523:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:12010:5449":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:4434:3231":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:8902:46963":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"16:6554:4586":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:2188:3282":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:4639:3197":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:15331:3262":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:3549:6003":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:6101:4525":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:53504:7503":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:4599:4998":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:10160:5254":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:46433:4079":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:10827:4851":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"14:194:45311":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"20:6595:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"2:48891:3404":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:48190:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"11:0:2132":{"crate_id":11,"path":["adler"],"kind":"module"},"2:11519:2910":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"20:8072:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"2:13210:3643":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:4890:6026":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:3194:3459":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:4350:6010":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:46500:4075":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:46364:3151":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:12124:3297":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:10962:7779":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:47854:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:13364:8105":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"9:0:2130":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:5632:4430":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:8548:2000":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:783:5044":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:47633:1655":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:6636:4546":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:1680:6570":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:12051:5453":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:3658:5024":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:11572:5359":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"20:815:62400":{"crate_id":20,"path":["serde","de","value","private","MapAsEnum"],"kind":"struct"},"17:10304:4770":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:10253:4831":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:53599:7510":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:12815:3922":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:47896:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:15412:3511":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:12852:3925":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"9:996:4278":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:12742:3458":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:4473:3233":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:7742:2416":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"12:2045:2370":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"20:359:5115":{"crate_id":20,"path":["serde","de","value","U32Deserializer"],"kind":"struct"},"16:3939:6007":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:2553:4151":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:46888:2441":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:6790:3165":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:10592:3447":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:13780:5931":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6126:4574":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:7205:4600":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:10322:2311":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:12442:5536":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:24647:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:6094:7173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12632:5573":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11147:5308":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11738:5390":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:38888:3154":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:10673:47155":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"20:6707:8358":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","SeqInPlaceVisitor"],"kind":"struct"},"16:5996:4572":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:11658:3353":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:11070:2397":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"5:8197:1652":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:23169:16251":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:14236:3230":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:46002:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:16008:2162":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"9:469:7656":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:1721:6594":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:11598:3351":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:10656:5261":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"20:1308:8337":{"crate_id":20,"path":["serde","de","impls","deserialize","deserialize","FieldVisitor"],"kind":"struct"},"20:3527:2335":{"crate_id":20,"path":["serde","__private","ser","content","SerializeTupleStruct"],"kind":"struct"},"1:3736:3222":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:3960:6676":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:32480:60254":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"20:5937:2304":{"crate_id":20,"path":["serde","de","ignored_any","IgnoredAny"],"kind":"struct"},"2:51435:3768":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:10372:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:13568:7846":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"5:4215:1659":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:11317:54978":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:12262:3309":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:3581:1965":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:3325:3465":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:49356:2906":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:11458:5336":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:3351:3475":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:12287:5491":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:23219:3739":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"12:2398:6307":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:547:4436":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:32239:4024":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:53524:7505":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"20:3815:127":{"crate_id":20,"path":["serde","de","value","Error"],"kind":"struct"},"20:7684:8360":{"crate_id":20,"path":["serde","de","impls","deserialize","TupleVisitor"],"kind":"struct"},"2:49961:3641":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:8176:4103":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:4008:7742":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:53515:7504":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:1588:6504":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"9:900:6363":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:3038:2849":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:8106:2367":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:2162:1659":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:47710:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:51792:3772":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:52892:3799":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:11420:3516":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:24022:3970":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:1544:6479":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:7378:4534":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"11:46:6312":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:12171:3302":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"12:162:4347":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"20:7729:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"17:13685:5912":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:3172:4706":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:2330:4147":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"5:4443:1655":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:11750:5391":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"20:6058:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"17:10106:4873":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13598:5863":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:6764:3197":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:14317:3057":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"20:850:62424":{"crate_id":20,"path":["serde","de","value","private","Pair"],"kind":"trait"},"6:1712:6588":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:3717:2904":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"18:783:5154":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"20:596:53590":{"crate_id":20,"path":["serde","de","value","ExpectedInSeq"],"kind":"struct"},"12:353:6303":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"20:8893:8364":{"crate_id":20,"path":["serde","de","impls","deserialize","KindVisitor"],"kind":"struct"},"20:3161:54017":{"crate_id":20,"path":["serde","__private","de","FlatInternallyTaggedAccess"],"kind":"struct"},"1:3341:3470":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:13978:5979":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:4287:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:9999:660":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:9174:7851":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"12:2412:6309":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:24330:3986":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:565:6429":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:13073:3336":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:13819:5939":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:3429:4454":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:11277:5313":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:10403:4794":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:9689:62380":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:4741:3208":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:51172:3795":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:4852:6025":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:7786:4540":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:7828:2426":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:13172:5754":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:4394:3488":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:2397:2365":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:12507:5544":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:12247:3542":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"20:341:5099":{"crate_id":20,"path":["serde","de","value","UnitDeserializer"],"kind":"struct"},"6:612:6454":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:13912:5967":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:53576:7509":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:24265:39131":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:53614:7511":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:12142:5471":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:10054:3903":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:4392:6842":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:6691:4590":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:16029:2181":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:3896:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:13574:5859":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:1694:4143":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:8146:61011":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:4142:6763":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:1091:4995":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:23162:3144":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"20:5004:5113":{"crate_id":20,"path":["serde","de","value","I128Deserializer"],"kind":"struct"},"1:10661:10925":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:51307:3784":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:9961:7749":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"20:1358:8338":{"crate_id":20,"path":["serde","de","impls","deserialize","DurationVisitor"],"kind":"struct"},"16:4922:6027":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:16011:2165":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:6787:3276":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:923:4179":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:11457:7152":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"9:27:4261":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"16:6208:4577":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:10468:4792":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:10952:3331":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"18:152:8092":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:6464:4542":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:12756:5588":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:48618:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"6:4416:6850":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:47591:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:48354:2858":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:23744:2905":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:1493:3391":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"20:6605:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"17:9769:62378":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:1939:2370":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"21:0:2277":{"crate_id":21,"path":["serde_derive"],"kind":"module"},"20:8806:62404":{"crate_id":20,"path":["serde","de","impls","deserialize","IpAddrKind"],"kind":"enum"},"2:47938:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:4242:4995":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:13810:5937":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:3970:4995":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:6082:3513":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:5290:6983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:13897:60110":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"14:250:6257":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:1497:3392":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:8954:4785":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:8130:1659":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:4127:6756":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:3812:3127":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:4402:6845":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:12302:3419":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:15229:3323":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:5330:5243":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:13609:5867":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:10529:5258":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"9:722:4213":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"9:963:4277":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:2512:4829":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:1600:6512":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:3800:6006":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:8908:2401":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"12:2419:2368":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:12118:5469":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:6132:7184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"5:2200:4997":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:46583:3999":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:50337:4012":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:5775:3179":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:15975:10928":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:13847:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:10061:7753":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:16014:2166":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:5375:7037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:47658:2574":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:6238:4532":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:3145:4715":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:13587:8107":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:9886:7747":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:14633:3207":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:6413:4362":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:10385:2859":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"20:1450:8337":{"crate_id":20,"path":["serde","de","impls","deserialize","deserialize","FieldVisitor"],"kind":"struct"},"20:1662:2102":{"crate_id":20,"path":["serde","de","Visitor"],"kind":"trait"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4075:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:22629:60244":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"0:94:1652":{"crate_id":0,"path":["slab","IntoIter"],"kind":"struct"},"1:7255:7850":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"20:7858:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"13:0:2127":{"crate_id":13,"path":["std_detect"],"kind":"module"},"15:269:4370":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"20:6318:8355":{"crate_id":20,"path":["serde","de","impls","deserialize","NonZeroVisitor"],"kind":"struct"},"19:117:5149":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:13659:3337":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:8680:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:6731:4738":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:6706:60430":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:10677:3400":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"5:1644:3389":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"12:933:3393":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:13221:5768":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"20:3539:2336":{"crate_id":20,"path":["serde","__private","ser","content","SerializeTupleVariant"],"kind":"struct"},"12:2253:1643":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:626:6462":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:10814:4850":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:6269:4580":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"8:0:2129":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:11194:1655":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"18:767:5165":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:6662:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:51965:7453":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:49528:3918":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:7158:4596":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"20:8613:8361":{"crate_id":20,"path":["serde","de","impls","deserialize_in_place","TupleInPlaceVisitor"],"kind":"struct"},"12:1784:4993":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"20:2993:8352":{"crate_id":20,"path":["serde","__private","de","content","InternallyTaggedUnitVisitor"],"kind":"struct"},"2:5208:2873":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:9186:4783":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"20:1582:2297":{"crate_id":20,"path":["serde","de","DeserializeOwned"],"kind":"trait"},"2:46111:3159":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"5:8263:3403":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:374:4132":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"18:867:4897":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"20:6016:8356":{"crate_id":20,"path":["serde","de","impls","deserialize","PrimitiveVisitor"],"kind":"struct"},"17:11947:5434":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:51276:3796":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:11360:3506":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"20:486:5096":{"crate_id":20,"path":["serde","de","value","CowStrDeserializer"],"kind":"struct"},"2:12581:2899":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:10059:3904":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:11674:3355":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:48916:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:88:39710":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"20:4746:5110":{"crate_id":20,"path":["serde","de","value","F32Deserializer"],"kind":"struct"},"2:46677:2418":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"18:169:8095":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"20:5870:5123":{"crate_id":20,"path":["serde","de","value","MapAccessDeserializer"],"kind":"struct"},"17:10988:7781":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:48679:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:13746:5919":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"}},"external_crates":{"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"serde_derive","html_root_url":"https://docs.rs/serde_derive/1.0.143/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"serde","html_root_url":"https://docs.rs/serde/1.0.143/"}},"format_version":18}