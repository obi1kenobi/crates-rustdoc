{"root":"0:0:1601","crate_version":"0.8.11","includes_private":true,"index":{"2:13574:2215":{"id":"2:13574:2215","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132","`DoubleEndedIterator`":"2:8523:120","str::matches":"1:16010:2137"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49762:4993","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13577:60342":{"id":"2:13577:60342","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:16004:2132","`DoubleEndedIterator`":"2:8523:120","self::pattern":"2:13134:4719","str::matches":"1:16010:2137"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49780:4994","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:617:2562":{"id":"0:617:2562","crate_id":0,"name":"NUM_SHARDS","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[16,0],"end":[16,28]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"The number of shards per sharded lock. Must be a power of two.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"8","value":"8usize","is_literal":true}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6863:4320":{"id":"1:6863:4320","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:58539"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:159:1915":{"id":"b:2:3213-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:640:2612":{"id":"0:640:2612","crate_id":0,"name":"is_poisoned","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Returns `true` if the lock is poisoned.\n\nIf another thread can still access the lock, it may become poisoned at any time. A `false`\nresult should not be trusted without additional synchronization.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\nuse std::sync::Arc;\nuse std::thread;\n\nlet lock = Arc::new(ShardedLock::new(0));\nlet c_lock = lock.clone();\n\nlet _ = thread::spawn(move || {\n    let _lock = c_lock.write().unwrap();\n    panic!(); // the lock gets poisoned\n}).join();\nassert_eq!(lock.is_poisoned(), true);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134:578":{"id":"0:134:578","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[312,4],"end":[322,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22920:4827":{"id":"2:22920:4827","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22921:58901","2:22922:1227","2:22923:1228","2:22924:58902","2:22925:58903","2:22926:58904","2:22927:58905","2:22928:58906","2:22929:58907","2:22930:58908"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3202-0:618:2564":{"id":"b:2:3202-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:403:1855":{"id":"0:403:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:729:2506":{"id":"a:2:9339:1713-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:818:2849":{"id":"0:818:2849","crate_id":0,"name":"builder","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[270,4],"end":[275,5]},"visibility":"public","docs":"Creates a builder that can configure a thread before spawning.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.builder()\n        .spawn(|_| println!(\"A child thread is running\"))\n        .unwrap();\n}).unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'scope","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:826:2884":{"id":"0:826:2884","crate_id":0,"name":"stack_size","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[369,4],"end":[372,5]},"visibility":"public","docs":"Sets the size of the stack for the new thread.\n\nThe stack size is measured in bytes.\n\nFor more information about the stack size for threads, see [here][stack-size].\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.builder()\n        .stack_size(32 * 1024)\n        .spawn(|_| println!(\"Running a child thread\"))\n        .unwrap();\n}).unwrap();\n```\n\n[stack-size]: std::thread#stack-size","links":{"std::thread#stack-size":"1:610:1391"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:349:1843":{"id":"0:349:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:618:2564":{"id":"b:2:3208-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:727:2478":{"id":"b:5:787-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:3199","5:790:3200","5:791:3201"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23550:17286":{"id":"2:23550:17286","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23551:59154","2:23552:59153","2:23553:59155"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23545:4817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13507:60335":{"id":"2:13507:60335","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:442:1967":{"id":"0:442:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[75,0],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:473:907":{"id":"0:473:907","crate_id":0,"name":"ne","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,37],"end":[61,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:860":{"id":"0:860","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[316,9],"end":[316,14]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["0:863:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:648:660":{"id":"0:648:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[445,4],"end":[467,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3205-0:453:1597":{"id":"b:2:3205-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"never"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3207:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13536:54489":{"id":"2:13536:54489","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:806:2813":{"id":"b:2:2869-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6861:4319":{"id":"1:6861:4319","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6862:56647"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:242:1599":{"id":"b:2:2872-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:305:1843":{"id":"0:305:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:430:1967":{"id":"0:430:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[71,0],"end":[71,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:811":{"id":"0:811","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[205,0],"end":[205,33]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13600:16134":{"id":"2:13600:16134","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8967:4758":{"id":"2:8967:4758","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8003:4759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:339:1847":{"id":"0:339:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:618:2564":{"id":"b:2:3198-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2202"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:353:1859":{"id":"0:353:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3740:2402":{"id":"2:3740:2402","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:57557"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[61,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:515:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:447:1954":{"id":"0:447:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[78,0],"end":[78,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u64"}}},"0:480:2470":{"id":"0:480:2470","crate_id":0,"name":"parker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[1,0],"end":[413,1]},"visibility":{"restricted":{"parent":"0:479:1360","path":"::sync"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:510:2473","0:526:2474","0:538:2507","0:539:2549","0:540:2550","0:541:2506"],"is_stripped":false}},"0:165:426":{"id":"0:165:426","crate_id":0,"name":"compare_exchange_weak","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[928,4],"end":[936,5]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_current",{"kind":"tuple","inner":[]}],["_new",{"kind":"tuple","inner":[]}],["_success",{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:47787:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_failure",{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:47787:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8960:3629":{"id":"2:8960:3629","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6685:4328":{"id":"1:6685:4328","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6686:56814","1:6687:9155","1:6688:9156","1:6689:9158","1:6690:9157","1:6691:9159","1:6692:9160","1:6693:9162","1:6694:7129","1:6695:9165","1:6696:9166","1:6697:9167","1:6698:9168","1:6699:9169","1:6700:9170","1:6701:9163","1:6702:9164"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13159:4723":{"id":"2:13159:4723","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13161:3138","2:13162:59724","2:13163:59725"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13153:4722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3310:2445-0:277:1714":{"id":"a:2:3310:2445-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:143:59":{"id":"0:143:59","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[843,4],"end":[845,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13525:33205":{"id":"2:13525:33205","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16010:2137"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49832:4996","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3352:2375":{"id":"2:3352:2375","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:382:1843":{"id":"0:382:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:1712-0:541:2506":{"id":"a:2:9340:1712-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:398:1830":{"id":"0:398:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:621:2475":{"id":"a:2:3310:2445-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4723:3372":{"id":"1:4723:3372","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:1833","1:4725:58316","1:4727:58317","1:4728:5385","1:4729:58318","1:4730:58319","1:4731:56695","1:4740:3170"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8680:157":{"id":"2:8680:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8681:3147","2:8682:922","2:8683:3149","2:8686:3150","2:8687:495","2:8689:3151","2:8692:3152","2:8693:3153","2:8694:3154","2:8695:3155","2:8697:3156","2:8699:3157","2:8700:3158","2:8702:841","2:8705:3159","2:8712:3160","2:8714:2818","2:8717:2665","2:8718:3161","2:8719:3162","2:8721:3163","2:8723:3164","2:8726:1308","2:8727:1786","2:8728:3165","2:8732:3166","2:8735:3167","2:8736:3168","2:8737:3169","2:8739:3170","2:8740:2452","2:8742:3171","2:8745:3172","2:8747:3173","2:8757:3174","2:8772:3175","2:8774:3176","2:8778:3177","2:8787:3178","2:8790:3179","2:8792:3180","2:8795:276","2:8802:294","2:8809:3181","2:8816:3182","2:8825:3183","2:8835:1014","2:8842:3184","2:8849:1860","2:8850:1864","2:8851:3132","2:8863:3131","2:8870:3130","2:8882:3129","2:8889:2667","2:8890:3185","2:8895:3186","2:8898:3187","2:8901:3188","2:8902:3189","2:8904:3190","2:8906:3191","2:8908:415","2:8911:3192","2:8914:997","2:8917:3193","2:8920:604","2:8923:3194","2:8926:907","2:8928:826","2:8930:792","2:8932:713","2:8934:696","2:8936:3195","2:8937:3196","2:8945:3197"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[917,0],"end":[937,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:814","0:163:1339","0:164:1772","0:165:426"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:3136"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10389:189":{"id":"2:10389:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10390:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9340:1712-0:159:1915":{"id":"a:2:9340:1712-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3342:2379":{"id":"2:3342:2379","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13523:4748":{"id":"2:13523:4748","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49534:4982","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13580:60343":{"id":"2:13580:60343","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2132","self::pattern":"2:13134:4719","str::rmatch_indices":"1:16010:2137"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49708:4990","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3423:2391":{"id":"2:3423:2391","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13543:3143":{"id":"2:13543:3143","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:16004:2132","self::pattern":"2:13134:4719","`None`":"2:47591:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:727:2478":{"id":"b:2:3208-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13620:54373":{"id":"2:13620:54373","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:708:2698":{"id":"b:2:3213-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[311,0],"end":[323,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3516:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:134:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:524":{"id":"0:524","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[208,0],"end":[212,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:525:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:175:1805":{"id":"0:175:1805","crate_id":0,"name":"atomic_compare_exchange_weak","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[1072,0],"end":[1121,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"Atomically compares data at `dst` to `current` and, if equal byte-for-byte, exchanges data at\n`dst` with `new`.\n\nReturns the old value on success, or the current value at `dst` on failure.\n\nThis operation uses the `AcqRel` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":["#[allow(clippy :: let_unit_value)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["dst",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}}],["current",{"kind":"generic","inner":"T"}],["new",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"0:344:1863":{"id":"0:344:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:455:1735":{"id":"0:455:1735","crate_id":0,"name":"value","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[129,4],"end":[129,12]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:326:1839":{"id":"0:326:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3368:2380":{"id":"2:3368:2380","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:510:2473":{"id":"b:2:3208-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:526:2474":{"id":"b:2:3198-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:391:1843":{"id":"0:391:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4051:4340":{"id":"2:4051:4340","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:58137"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:537:408":{"id":"0:537:408","crate_id":0,"name":"clone","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[301,4],"end":[305,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:618:2564":{"id":"b:2:2869-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[223,0],"end":[307,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:128:424","0:129:425","0:130:642"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:806:2813":{"id":"b:2:3202-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:431":{"id":"0:431","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[72,0],"end":[72,26]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicI8","id":"2:47812:84","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:432:1954","0:433:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23545:4817":{"id":"2:23545:4817","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23546:1270","2:23547:1269","2:23548:1267","2:23549:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:22957:4826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:385:1855":{"id":"0:385:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:314:1830":{"id":"0:314:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3435:2394":{"id":"2:3435:2394","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:711":{"id":"0:711","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[602,0],"end":[608,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3516:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:712:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:510:2473":{"id":"b:2:4002-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5008:4373":{"id":"1:5008:4373","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:3627","1:5010:56668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:284:2434":{"id":"b:2:3202-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,31],"end":[61,35]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10610:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:466:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:809:2472":{"id":"0:809:2472","crate_id":0,"name":"wait_group","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[199,4],"end":[199,25]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":"Used to wait until all subscopes all dropped.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:739":{"id":"0:739","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[130,0],"end":[139,1]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:740:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5797:4362":{"id":"1:5797:4362","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:7093"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:645:1833":{"id":"0:645:1833","crate_id":0,"name":"write","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[408,4],"end":[441,5]},"visibility":"public","docs":"Locks with exclusive write access, blocking the current thread until it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which hold the lock.\nThere may be other readers currently inside the lock when this method returns. This method\ndoes not provide any guarantees with respect to the ordering of whether contentious readers\nor writers will acquire the lock first.\n\nReturns a guard which will release the exclusive access when dropped.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Panics\n\nThis method might panic when called if the lock is already held by the current thread.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(1);\n\nlet mut n = lock.write().unwrap();\n*n = 2;\n\nassert!(lock.try_read().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LockResult","id":"1:9070:2290","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:277:1714":{"id":"b:2:2869-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:708:2698":{"id":"b:2:2872-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3310:2445":{"id":"2:3310:2445","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:642:2638":{"id":"0:642:2638","crate_id":0,"name":"try_read","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[224,4],"end":[246,5]},"visibility":"public","docs":"Attempts to acquire this lock with shared read access.\n\nIf the access could not be granted at this time, an error is returned. Otherwise, a guard\nis returned which will release the shared access when it is dropped. This method does not\nprovide any guarantees with respect to the ordering of whether contentious readers or\nwriters will acquire the lock first.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(1);\n\nmatch lock.try_read() {\n    Ok(n) => assert_eq!(*n, 1),\n    Err(_) => unreachable!(),\n};\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TryLockResult","id":"1:9072:2293","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:534":{"id":"0:534","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[294,0],"end":[298,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:535:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:727:2478":{"id":"b:2:2869-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:285:1832":{"id":"0:285:1832","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[69,4],"end":[69,26]},"visibility":{"restricted":{"parent":"0:260:1700","path":"::atomic::seq_lock"}},"docs":"The parent lock.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:681:2304":{"id":"0:681:2304","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[516,4],"end":[516,49]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PhantomData","id":"2:3287:2322","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RwLockWriteGuard","id":"1:12257:2296","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:331:1859":{"id":"0:331:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:643:1748":{"id":"0:643:1748","crate_id":0,"name":"read","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[284,4],"end":[302,5]},"visibility":"public","docs":"Locks with shared read access, blocking the current thread until it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which hold the lock.\nThere may be other readers currently inside the lock when this method returns. This method\ndoes not provide any guarantees with respect to the ordering of whether contentious readers\nor writers will acquire the lock first.\n\nReturns a guard which will release the shared access when dropped.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Panics\n\nThis method might panic when called if the lock is already held by the current thread.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\nuse std::sync::Arc;\nuse std::thread;\n\nlet lock = Arc::new(ShardedLock::new(1));\nlet c_lock = lock.clone();\n\nlet n = lock.read().unwrap();\nassert_eq!(*n, 1);\n\nthread::spawn(move || {\n    let r = c_lock.read();\n    assert!(r.is_ok());\n}).join().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LockResult","id":"1:9070:2290","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:1712-0:659:2476":{"id":"a:2:9340:1712-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6085:1942":{"id":"5:6085:1942","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58:1702":{"id":"0:58:1702","crate_id":0,"name":"atomic_cell","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[2,0],"end":[1121,1]},"visibility":{"restricted":{"parent":"0:57:330","path":"::atomic"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic_cas))]","#[cfg(not(crossbeam_loom))]","#![allow(clippy :: unit_arg)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:101:1704","0:135:1822","0:150:1865","0:153:1832","0:159:1915","0:166:330","0:167:1767","0:169:1788","0:171:1773","0:173:1776","0:175:1805"],"is_stripped":false}},"0:656":{"id":"0:656","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[476,0],"end":[480,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:658:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6103:60994":{"id":"5:6103:60994","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:741":{"id":"0:741","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[141,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:742:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:525:660":{"id":"0:525:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[209,4],"end":[211,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:663:1831":{"id":"0:663:1831","crate_id":0,"name":"_guard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[485,4],"end":[485,35]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"RwLockReadGuard","id":"1:12252:2295","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}},"b:2:4002-0:242:1599":{"id":"b:2:4002-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:835:2848":{"id":"b:2:3202-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:401:1847":{"id":"0:401:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:300:1863":{"id":"0:300:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:814:2846":{"id":"0:814:2846","crate_id":0,"name":"spawn","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[246,4],"end":[255,5]},"visibility":"public","docs":"Spawns a scoped thread.\n\nThis method is similar to the [`spawn`] function in Rust's standard library. The difference\nis that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,\nallowing it to reference variables outside the scope.\n\nThe scoped thread is passed a reference to this scope as an argument, which can be used for\nspawning nested threads.\n\nThe returned [handle](ScopedJoinHandle) can be used to manually\n[join](ScopedJoinHandle::join) the thread before the scope exits.\n\nThis will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the\nstack size or the name of the thread, use this API instead.\n\n[`spawn`]: std::thread::spawn\n\n# Panics\n\nPanics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]\nto recover from such errors.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle = s.spawn(|_| {\n        println!(\"A child thread is running\");\n        42\n    });\n\n    // Join the thread and retrieve its result.\n    let res = handle.join().unwrap();\n    assert_eq!(res, 42);\n}).unwrap();\n```","links":{"`ScopedThreadBuilder`":"0:855:2855","ScopedJoinHandle":"0:835:2848","std::thread::spawn":"1:984:2846","`ScopedThreadBuilder::spawn`":"0:855:2855","ScopedJoinHandle::join":"0:835:2848"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'scope","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:510:2473":{"id":"b:2:3198-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:173:1776":{"id":"0:173:1776","crate_id":0,"name":"atomic_swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[1048,0],"end":[1062,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"Atomically swaps data at `dst` with `val`.\n\nThis operation uses the `AcqRel` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["dst",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}}],["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"b:2:3198-0:806:2813":{"id":"b:2:3198-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:316:1843":{"id":"0:316:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:747":{"id":"0:747","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[12,31],"end":[12,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parker::Unparker","name":"Unparker","id":"0:526:2474","glob":false}},"5:6415:1397":{"id":"5:6415:1397","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:740:408":{"id":"0:740:408","crate_id":0,"name":"clone","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[131,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:251:660":{"id":"0:251:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[284,4],"end":[289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"a:2:3269:211-0:242:1599":{"id":"a:2:3269:211-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:359:1839":{"id":"0:359:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:677:2477":{"id":"b:2:2872-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:541:2506":{"id":"0:541:2506","crate_id":0,"name":"Inner","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[312,0],"end":[316,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:542:1326","0:543:1832","0:544:2300"],"impls":["0:545","a:2:3310:2445-0:541:2506","a:2:3269:211-0:541:2506","a:2:9340:1712-0:541:2506","a:2:9339:1713-0:541:2506","a:2:3281:220-0:541:2506","b:2:3198-0:541:2506","b:2:2872-0:541:2506","b:2:2869-0:541:2506","b:2:4002-0:541:2506","b:2:3202-0:541:2506","b:2:3213-0:541:2506","b:2:3208-0:541:2506"]}},"0:184:1968":{"id":"0:184:1968","crate_id":0,"name":"impl_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[44,0],"end":[51,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]","#[cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))]"],"deprecation":null,"kind":"macro","inner":"macro_rules! impl_consume {\n    () => { ... };\n}"},"0:426:1954":{"id":"0:426:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[70,0],"end":[70,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"isize"}}},"2:23169:17267":{"id":"2:23169:17267","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23170:8395","2:23171:58876","2:23172:58877"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23162:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3516:1821":{"id":"2:3516:1821","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[84,0],"end":[281,1]},"visibility":{"restricted":{"parent":"0:230:1598","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:245:920","0:246:2063","0:247:2072","0:248:2093","0:249:2100"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3427:2392":{"id":"2:3427:2392","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:729:2506":{"id":"b:2:4002-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:523:2533":{"id":"0:523:2533","crate_id":0,"name":"from_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[200,4],"end":[205,5]},"visibility":"public","docs":"Converts a raw pointer into a `Parker`.\n\n# Safety\n\nThis method is safe to use only with pointers returned by [`Parker::into_raw`].\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet raw = Parker::into_raw(p);\nlet p = unsafe { Parker::from_raw(raw) };\n```","links":{"`Parker::into_raw`":"0:510:2473"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["ptr",{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"tuple","inner":[]}}}]],"output":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:742:660":{"id":"0:742:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[142,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:621:2475":{"id":"b:2:3202-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:682":{"id":"0:682","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[519,0],"end":[519,70]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[53,0],"end":[53,39]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:116:1766":{"id":"0:116:1766","crate_id":0,"name":"is_lock_free","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[126,4],"end":[128,5]},"visibility":"public","docs":"Returns `true` if operations on values of this type are lock-free.\n\nIf the compiler or the platform doesn't support the necessary atomic instructions,\n`AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\n// This type is internally represented as `AtomicUsize` so we can just use atomic\n// operations provided by it.\nassert_eq!(AtomicCell::<usize>::is_lock_free(), true);\n\n// A wrapper struct around `isize`.\nstruct Foo {\n    bar: isize,\n}\n// `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.\nassert_eq!(AtomicCell::<Foo>::is_lock_free(), true);\n\n// Operations on zero-sized types are always lock-free.\nassert_eq!(AtomicCell::<()>::is_lock_free(), true);\n\n// Very large types cannot be represented as any of the standard atomic types, so atomic\n// operations on them will have to use global locks for synchronization.\nassert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:295:1847":{"id":"0:295:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:153:1832":{"id":"0:153:1832","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[879,0],"end":[910,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"Returns a reference to the global lock associated with the `AtomicCell` at address `addr`.\n\nThis function is used to protect atomic data which doesn't fit into any of the primitive atomic\ntypes in `std::sync::atomic`. Operations on such atomics must therefore use a global lock.\n\nHowever, there is not only one global lock but an array of many locks, and one of them is\npicked based on the given address. Having many locks reduces contention and improves\nscalability.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6790:4345":{"id":"1:6790:4345","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:8294"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8488:2447":{"id":"2:8488:2447","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8490:3144","2:8492:3145","2:8493:3146"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:659:2476":{"id":"b:5:6413-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:513":{"id":"0:513","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[59,0],"end":[59,30]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:243:2058":{"id":"0:243:2058","crate_id":0,"name":"step","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[81,4],"end":[81,19]},"visibility":{"restricted":{"parent":"0:230:1598","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Cell","id":"2:4965:2017","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:213:1746":{"id":"0:213:1746","crate_id":0,"name":"into_inner","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Returns the inner value.\n\n# Examples\n\n```\nuse crossbeam_utils::CachePadded;\n\nlet padded_value = CachePadded::new(7);\nlet value = padded_value.into_inner();\nassert_eq!(value, 7);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:729:2506":{"id":"b:2:3202-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:677:2477":{"id":"b:2:3213-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:337:1839":{"id":"0:337:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:732":{"id":"0:732","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[58,0],"end":[67,1]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:733:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8003:4759":{"id":"2:8003:4759","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8004:60011","2:8005:60012","2:8006:60016","2:8007:60014","2:8008:60013","2:8009:60017","2:8010:60015"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:855:2855":{"id":"a:2:3269:211-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:242:1599":{"id":"b:2:3202-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:677:2477":{"id":"b:2:3202-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:433:1967":{"id":"0:433:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[72,0],"end":[72,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13164:4718":{"id":"2:13164:4718","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:512:2304":{"id":"0:512:2304","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[56,4],"end":[56,35]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PhantomData","id":"2:3287:2322","args":{"angle_bracketed":{"args":[{"type":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"tuple","inner":[]}}}}],"bindings":[]}}}}},"0:850:2684":{"id":"0:850:2684","crate_id":0,"name":"REGISTRATION","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[610,0],"end":[630,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"$crate::thread::LocalKey","id":"1:696:3023","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:631":{"id":"0:631","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[88,0],"end":[88,51]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:351:1851":{"id":"0:351:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"items":["0:336:1830","0:337:1839","0:338:1843","0:339:1847","0:340:1851","0:341:1855","0:342:1859","0:344:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:182:1954":{"id":"0:182:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[9,4],"end":[9,13]},"visibility":"default","docs":"Type returned by `load_consume`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:9340:1712-0:284:2434":{"id":"a:2:9340:1712-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:2445-0:835:2848":{"id":"a:2:3310:2445-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13562:54824":{"id":"2:13562:54824","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132","str::rsplitn":"1:16010:2137"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49662:4960","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:130:642":{"id":"0:130:642","crate_id":0,"name":"fetch_update","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[294,4],"end":[306,5]},"visibility":"public","docs":"Fetches the value, and applies a function to it that returns an optional\nnew value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n`Err(previous_value)`.\n\nNote: This may call the function multiple times if the value has been changed from other threads in\nthe meantime, as long as the function returns `Some(_)`, but the function will have been applied\nonly once to the stored value.\n\n# Examples\n\n```rust\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\nassert_eq!(a.fetch_update(|_| None), Err(7));\nassert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));\nassert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:676:660":{"id":"0:676:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[508,4],"end":[510,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10383:3378":{"id":"2:10383:3378","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10384:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,22],"end":[61,29]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::default::Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:463:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:2445-0:284:2434":{"id":"a:2:3310:2445-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:424:1967":{"id":"0:424:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[69,0],"end":[69,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:319:1855":{"id":"0:319:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3389:2388":{"id":"2:3389:2388","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13516:54792":{"id":"2:13516:54792","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:677:2477":{"id":"0:677:2477","crate_id":0,"name":"ShardedLockWriteGuard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[514,0],"end":[517,1]},"visibility":"public","docs":"A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","links":{"`ShardedLock`":"0:621:2475"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:680:1832","0:681:2304"],"impls":["a:2:3310:2445-0:677:2477","a:2:3269:211-0:677:2477","a:2:9340:1712-0:677:2477","a:2:9339:1713-0:677:2477","b:2:3198-0:677:2477","b:2:2872-0:677:2477","b:2:2869-0:677:2477","b:2:4002-0:677:2477","b:2:3202-0:677:2477","b:2:3213-0:677:2477","b:2:3208-0:677:2477","b:5:6413-0:677:2477","0:682","0:684","0:687","0:690","0:693","0:697"]}},"0:241:2019":{"id":"0:241:2019","crate_id":0,"name":"YIELD_LIMIT","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[6,0],"end":[6,28]},"visibility":{"restricted":{"parent":"0:230:1598","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u32"},"expr":"10","value":"10u32","is_literal":true}},"2:3577:2396":{"id":"2:3577:2396","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3358:2378":{"id":"2:3358:2378","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13550:33062":{"id":"2:13550:33062","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12926:4954","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:841:2304":{"id":"0:841:2304","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[488,4],"end":[488,36]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":"Borrows the parent scope with lifetime `'scope`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PhantomData","id":"2:3287:2322","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'scope","mutable":false,"type":{"kind":"tuple","inner":[]}}}}],"bindings":[]}}}}},"0:540:2550":{"id":"0:540:2550","crate_id":0,"name":"NOTIFIED","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[310,0],"end":[310,26]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"2","value":"2usize","is_literal":true}},"0:5:330":{"id":"0:5:330","crate_id":0,"name":"atomic","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[67,8],"end":[67,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:529":{"id":"0:529","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[220,0],"end":[220,32]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:101:1704":{"id":"b:2:3213-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:618:2564":{"id":"a:2:3269:211-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3775:2324":{"id":"2:3775:2324","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:338:1843":{"id":"0:338:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:357":{"id":"0:357","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"items":["0:358:1830","0:359:1839","0:360:1843","0:361:1847","0:362:1851","0:363:1855","0:364:1859","0:366:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:664:2304":{"id":"0:664:2304","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[486,4],"end":[486,48]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PhantomData","id":"2:3287:2322","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RwLockReadGuard","id":"1:12252:2295","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:12581:5132":{"id":"2:12581:5132","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12582:3147","2:12583:9970"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:662:1832":{"id":"0:662:1832","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[484,4],"end":[484,28]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:2869-0:526:2474":{"id":"b:2:2869-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3411:2389":{"id":"2:3411:2389","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8963:3630":{"id":"2:8963:3630","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:317:1847":{"id":"0:317:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[179,0],"end":[185,1]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:223:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:342:1859":{"id":"0:342:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:341:1855":{"id":"0:341:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:242:1599":{"id":"b:2:3208-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:839:1113":{"id":"0:839:1113","crate_id":0,"name":"result","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[482,4],"end":[482,27]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":"Holds the result of the inner closure.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:3269:211-0:806:2813":{"id":"a:2:3269:211-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3406:2387":{"id":"2:3406:2387","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:101:1704":{"id":"b:2:3208-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:377:1863":{"id":"0:377:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:738:578":{"id":"0:738:578","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[120,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:729:2506":{"id":"a:2:3269:211-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[132,0],"end":[132,47]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:2445-0:708:2698":{"id":"a:2:3310:2445-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8442:4681":{"id":"2:8442:4681","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8444:3191"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:101:1704":{"id":"b:2:2869-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10379:119":{"id":"2:10379:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10380:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:510:2473":{"id":"b:2:2869-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13609:60353":{"id":"2:13609:60353","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i8"}}],"bindings":[]}}}},"items":["0:303:1830","0:304:1839","0:305:1843","0:306:1847","0:307:1851","0:308:1855","0:309:1859","0:311:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6459:4348":{"id":"1:6459:4348","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:2533","1:6461:9231","1:6462:56776","1:6463:56777","1:6464:56778","1:6465:2528"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:659:2476":{"id":"b:2:4002-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:159:1915":{"id":"a:2:3269:211-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:355:1863":{"id":"0:355:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[83,0],"end":[86,1]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicPtr","id":"2:9848:86","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:188:1954","0:452:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:384:1851":{"id":"0:384:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5735:4357":{"id":"1:5735:4357","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5736:7093","1:5737:8300"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:2445-0:453:1597":{"id":"a:2:3310:2445-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:277:1714":{"id":"0:277:1714","crate_id":0,"name":"SeqLock","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[7,0],"end":[13,1]},"visibility":"crate","docs":"A simple stamped lock.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:278:1326"],"impls":["0:279","a:2:3310:2445-0:277:1714","a:2:3269:211-0:277:1714","a:2:9340:1712-0:277:1714","a:2:9339:1713-0:277:1714","a:2:3281:220-0:277:1714","b:2:3198-0:277:1714","b:2:2872-0:277:1714","b:2:2869-0:277:1714","b:2:4002-0:277:1714","b:2:3202-0:277:1714","b:2:3213-0:277:1714","b:2:3208-0:277:1714"]}},"a:2:9339:1713-0:242:1599":{"id":"a:2:9339:1713-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:700:2639":{"id":"0:700:2639","crate_id":0,"name":"current_index","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[570,0],"end":[572,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"Returns a `usize` that identifies the current thread.\n\nEach thread is associated with an 'index'. While there are no particular guarantees, indices\nusually tend to be consecutive numbers between 0 and the number of running threads.\n\nSince this function accesses TLS, `None` might be returned if the current thread's TLS is\ntearing down.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:684":{"id":"0:684","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[521,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3516:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:686:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:226:681":{"id":"0:226:681","crate_id":0,"name":"from","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[188,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:702:2688":{"id":"b:2:2869-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:183:1967":{"id":"0:183:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[26,4],"end":[26,40]},"visibility":"default","docs":"Loads a value from the atomic using a \"consume\" memory ordering.\n\nThis is similar to the \"acquire\" ordering, except that an ordering is\nonly guaranteed with operations that \"depend on\" the result of the load.\nHowever consume loads are usually much faster than acquire loads on\narchitectures with a weak memory model since they don't require memory\nfence instructions.\n\nThe exact definition of \"depend on\" is a bit vague, but it works as you\nwould expect in practice since a lot of software, especially the Linux\nkernel, rely on this behavior.\n\nThis is currently only implemented on ARM and AArch64, where a fence\ncan be avoided. On other architectures this will fall back to a simple\n`load(Ordering::Acquire)`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:806:2813":{"id":"b:2:3213-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:693":{"id":"0:693","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[548,0],"end":[554,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:695:221","0:696:543"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[753,0],"end":[840,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"bool"}}],"bindings":[]}}}},"items":["0:137:1843","0:138:1847","0:139:1851","0:140:1855"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:1713-0:284:2434":{"id":"a:2:9339:1713-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:646":{"id":"0:646","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[444,0],"end":[468,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:648:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:806:2813":{"id":"b:2:2872-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:304:1839":{"id":"0:304:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:1712-0:855:2855":{"id":"a:2:9340:1712-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:789:3199":{"id":"5:789:3199","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:412:1847":{"id":"0:412:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3201:3137":{"id":"2:3201:3137","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[87,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:260:1700","path":"::atomic::seq_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3516:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:290:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:532:2528":{"id":"0:532:2528","crate_id":0,"name":"into_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[266,4],"end":[268,5]},"visibility":"public","docs":"Converts an `Unparker` into a raw pointer.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::{Parker, Unparker};\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\nlet raw = Unparker::into_raw(u);\n# let _ = unsafe { Unparker::from_raw(raw) };\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["this",{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"tuple","inner":[]}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:1712-0:727:2478":{"id":"a:2:9340:1712-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:129:425":{"id":"0:129:425","crate_id":0,"name":"compare_exchange","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[270,4],"end":[272,5]},"visibility":"public","docs":"If the current value equals `current`, stores `new` into the atomic cell.\n\nThe return value is a result indicating whether the new value was written and containing\nthe previous value. On success this value is guaranteed to be equal to `current`.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(1);\n\nassert_eq!(a.compare_exchange(2, 3), Err(1));\nassert_eq!(a.load(), 1);\n\nassert_eq!(a.compare_exchange(1, 2), Ok(1));\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["current",{"kind":"generic","inner":"T"}],["new",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:511:2505":{"id":"0:511:2505","crate_id":0,"name":"unparker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[55,4],"end":[55,22]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:453:1597":{"id":"b:2:3208-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:115:1746":{"id":"0:115:1746","crate_id":0,"name":"into_inner","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[88,4],"end":[96,5]},"visibility":"public","docs":"Consumes the atomic and returns the contained value.\n\nThis is safe because passing `self` by value guarantees that no other threads are\nconcurrently accessing the atomic data.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\nlet v = a.into_inner();\n\nassert_eq!(v, 7);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13514:54791":{"id":"2:13514:54791","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:4330":{"id":"1:1075:4330","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:3199","1:1077:5139","1:1078:54376","1:1079:54375","1:1080:54377","1:1081:54374","1:1082:54373"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:472:604":{"id":"0:472:604","crate_id":0,"name":"eq","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,37],"end":[61,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13603:54829":{"id":"2:13603:54829","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:404:1859":{"id":"0:404:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13500:60332":{"id":"2:13500:60332","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i16"}}],"bindings":[]}}}},"items":["0:325:1830","0:326:1839","0:327:1843","0:328:1847","0:329:1851","0:330:1855","0:331:1859","0:333:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:510:2473":{"id":"0:510:2473","crate_id":0,"name":"Parker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[54,0],"end":[57,1]},"visibility":"public","docs":"A thread parking primitive.\n\nConceptually, each `Parker` has an associated token which is initially not present:\n\n* The [`park`] method blocks the current thread unless or until the token is available, at\n  which point it automatically consumes the token.\n\n* The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for\n  a specified maximum time.\n\n* The [`unpark`] method atomically makes the token available if it wasn't already. Because the\n  token is initially absent, [`unpark`] followed by [`park`] will result in the second call\n  returning immediately.\n\nIn other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using\n[`park`] and [`unpark`].\n\n# Examples\n\n```\nuse std::thread;\nuse std::time::Duration;\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\n// Make the token available.\nu.unpark();\n// Wakes up immediately and consumes the token.\np.park();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(500));\n    u.unpark();\n});\n\n// Wakes up when `u.unpark()` provides the token.\np.park();\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`park`]: Parker::park\n[`park_timeout`]: Parker::park_timeout\n[`park_deadline`]: Parker::park_deadline\n[`unpark`]: Unparker::unpark","links":{"Parker::park":"0:510:2473","Parker::park_deadline":"0:510:2473","Parker::park_timeout":"0:510:2473","Unparker::unpark":"0:526:2474"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:511:2505","0:512:2304"],"impls":["0:516","a:2:3310:2445-0:510:2473","a:2:9340:1712-0:510:2473","a:2:9339:1713-0:510:2473","a:2:3281:220-0:510:2473","b:2:3198-0:510:2473","b:2:2872-0:510:2473","b:2:2869-0:510:2473","b:2:4002-0:510:2473","b:2:3202-0:510:2473","b:2:3213-0:510:2473","b:2:3208-0:510:2473","0:513","0:514","0:524"]}},"0:838:2819":{"id":"0:838:2819","crate_id":0,"name":"handle","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[479,4],"end":[479,48]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":"A join handle to the spawned thread.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"thread::JoinHandle","id":"1:1041:2824","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:3380:2381":{"id":"2:3380:2381","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:456":{"id":"0:456","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,9],"end":[61,14]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:458:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:844:2820":{"id":"0:844:2820","crate_id":0,"name":"join","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[520,4],"end":[529,5]},"visibility":"public","docs":"Waits for the thread to finish and returns its result.\n\nIf the child thread panics, an error is returned. Note that if panics are implemented by\naborting the process, no error is returned; see the notes of [std::panic::catch_unwind].\n\n# Panics\n\nThis function may panic on some platforms if a thread attempts to join itself or otherwise\nmay create a deadlock with joining threads.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));\n    let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));\n\n    // Join the first thread and verify that it succeeded.\n    let res = handle1.join();\n    assert!(res.is_ok());\n\n    // Join the second thread and verify that it panicked.\n    let res = handle2.join();\n    assert!(res.is_err());\n}).unwrap();\n```","links":{"std::panic::catch_unwind":"1:7113:2350"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"thread::Result","id":"1:1015:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:618:2564":{"id":"a:2:3281:220-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:799:2810":{"id":"0:799:2810","crate_id":0,"name":"scope","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[149,0],"end":[191,1]},"visibility":"public","docs":"Creates a new scope for spawning threads.\n\nAll child threads that haven't been manually joined will be automatically joined just before\nthis function invocation ends. If all joined threads have successfully completed, `Ok` is\nreturned with the return value of `f`. If any of the joined threads has panicked, an `Err` is\nreturned containing errors from panicked threads. Note that if panics are implemented by\naborting the process, no error is returned; see the notes of [std::panic::catch_unwind].\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nlet var = vec![1, 2, 3];\n\nthread::scope(|s| {\n    s.spawn(|_| {\n        println!(\"A child thread borrowing `var`: {:?}\", var);\n    });\n}).unwrap();\n```","links":{"std::panic::catch_unwind":"1:7113:2350"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"thread::Result","id":"1:1015:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:451:1967":{"id":"0:451:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[80,0],"end":[80,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:284:2434":{"id":"b:2:2872-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9340:1712":{"id":"2:9340:1712","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:402:1851":{"id":"0:402:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:835:2848":{"id":"0:835:2848","crate_id":0,"name":"ScopedJoinHandle","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[477,0],"end":[489,1]},"visibility":"public","docs":"A handle that can be used to join its scoped thread.\n\nThis struct is created by the [`Scope::spawn`] method and the\n[`ScopedThreadBuilder::spawn`] method.","links":{"`ScopedThreadBuilder::spawn`":"0:855:2855","`Scope::spawn`":"0:806:2813"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:838:2819","0:839:1113","0:840:1391","0:841:2304"],"impls":["0:842","a:2:3310:2445-0:835:2848","a:2:9340:1712-0:835:2848","a:2:9339:1713-0:835:2848","b:2:3198-0:835:2848","b:2:2872-0:835:2848","b:2:2869-0:835:2848","b:2:4002-0:835:2848","b:2:3202-0:835:2848","b:2:3213-0:835:2848","b:2:3208-0:835:2848","0:831","0:833","0:871","0:847"]}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/mod.rs","begin":[36,0],"end":[36,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic_cas))]","#[cfg(not(crossbeam_loom))]"],"deprecation":null,"kind":"import","inner":{"source":"self::atomic_cell::AtomicCell","name":"AtomicCell","id":"0:101:1704","glob":false}},"0:517:920":{"id":"0:517:920","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[87,4],"end":[89,5]},"visibility":"public","docs":"Creates a new `Parker`.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\n```\n","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:413:1851":{"id":"0:413:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:621:2475":{"id":"b:2:3198-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13590:60347":{"id":"2:13590:60347","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:352:1855":{"id":"0:352:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[848,0],"end":[853,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:146:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:386:1859":{"id":"0:386:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_max(2), 7);\nassert_eq!(a.load(), 7);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3384:2383":{"id":"2:3384:2383","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13556:60338":{"id":"2:13556:60338","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:16004:2132","`DoubleEndedIterator`":"2:8523:120","str::rsplit_terminator":"1:16010:2137","self::pattern":"2:13134:4719","str::split":"1:16010:2137"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49608:4986","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:539:2549":{"id":"0:539:2549","crate_id":0,"name":"PARKED","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[309,0],"end":[309,24]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"1","value":"1usize","is_literal":true}},"2:13530:54828":{"id":"2:13530:54828","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:16004:2132","self::pattern":"2:13134:4719"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:541:2506":{"id":"b:2:2872-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13612:60354":{"id":"2:13612:60354","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16004:2132","self::pattern":"2:13134:4719"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:729:2506":{"id":"a:2:3281:220-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:702:2688":{"id":"b:2:3208-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:445:1967":{"id":"0:445:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[76,0],"end":[76,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:230:1598":{"id":"0:230:1598","crate_id":0,"name":"backoff","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[1,0],"end":[296,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:240:2018","0:241:2019","0:242:1599"],"is_stripped":false}},"a:2:9340:1712-0:708:2698":{"id":"a:2:9340:1712-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:1713-0:618:2564":{"id":"a:2:9339:1713-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:466:715":{"id":"0:466:715","crate_id":0,"name":"hash","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,31],"end":[61,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10620:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:677:2477":{"id":"b:2:2869-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6106:54376":{"id":"5:6106:54376","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16010:2137"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:290:578":{"id":"0:290:578","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[89,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:427:1967":{"id":"0:427:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[70,0],"end":[70,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:733:59":{"id":"0:733:59","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[59,4],"end":[66,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:510:2473":{"id":"a:2:9339:1713-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:696:543":{"id":"0:696:543","crate_id":0,"name":"deref","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[551,4],"end":[553,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[73,0],"end":[73,28]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicU16","id":"2:47938:88","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:435:1954","0:436:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:689:660":{"id":"0:689:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[535,4],"end":[539,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:727:2478":{"id":"b:2:3198-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13621:60355":{"id":"2:13621:60355","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16004:2132"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49857:4999","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:822":{"id":"0:822","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[322,0],"end":[468,1]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["0:825:899","0:826:2884","0:827:2846"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:855:2855":{"id":"b:2:4002-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13592:60348":{"id":"2:13592:60348","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:360:1843":{"id":"0:360:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3559:2405":{"id":"2:3559:2405","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:59306"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3337:2374":{"id":"2:3337:2374","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:242:1599":{"id":"b:2:2869-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:737":{"id":"0:737","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[119,0],"end":[128,1]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3516:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:738:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:641:2628":{"id":"0:641:2628","crate_id":0,"name":"get_mut","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[189,4],"end":[198,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the lock mutably, no actual locking needs to take place.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet mut lock = ShardedLock::new(0);\n*lock.get_mut().unwrap() = 10;\nassert_eq!(*lock.read().unwrap(), 10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LockResult","id":"1:9070:2290","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:277:1714":{"id":"b:2:3202-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:373:1851":{"id":"0:373:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:806:2813":{"id":"0:806:2813","crate_id":0,"name":"Scope","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[194,0],"end":[203,1]},"visibility":"public","docs":"A scope for spawning threads.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:808:2815","0:809:2472","0:810:2304"],"impls":["0:812","a:2:3310:2445-0:806:2813","a:2:3269:211-0:806:2813","a:2:9340:1712-0:806:2813","a:2:9339:1713-0:806:2813","b:2:3198-0:806:2813","b:2:2872-0:806:2813","b:2:2869-0:806:2813","b:2:4002-0:806:2813","b:2:3202-0:806:2813","b:2:3213-0:806:2813","b:2:3208-0:806:2813","0:811","0:820"]}},"0:117:1339":{"id":"0:117:1339","crate_id":0,"name":"store","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[143,4],"end":[151,5]},"visibility":"public","docs":"Stores `val` into the atomic cell.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n\nassert_eq!(a.load(), 7);\na.store(8);\nassert_eq!(a.load(), 8);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5647:4371":{"id":"1:5647:4371","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5648:56177","1:5649:5207"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6787:4392":{"id":"1:6787:4392","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6788:9271","1:6789:56180"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:644:2662":{"id":"0:644:2662","crate_id":0,"name":"try_write","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[328,4],"end":[376,5]},"visibility":"public","docs":"Attempts to acquire this lock with exclusive write access.\n\nIf the access could not be granted at this time, an error is returned. Otherwise, a guard\nis returned which will release the exclusive access when it is dropped. This method does\nnot provide any guarantees with respect to the ordering of whether contentious readers or\nwriters will acquire the lock first.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(1);\n\nlet n = lock.read().unwrap();\nassert_eq!(*n, 1);\n\nassert!(lock.try_write().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TryLockResult","id":"1:9072:2293","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:390:1839":{"id":"0:390:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:731:495":{"id":"0:731:495","crate_id":0,"name":"count","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[55,4],"end":[55,23]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"2:3440:2395":{"id":"2:3440:2395","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:538:2507":{"id":"0:538:2507","crate_id":0,"name":"EMPTY","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[308,0],"end":[308,23]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"0","value":"0usize","is_literal":true}},"0:394:1855":{"id":"0:394:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188:1954":{"id":"0:188:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[84,4],"end":[84,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"a:2:9340:1712-0:702:2688":{"id":"a:2:9340:1712-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:277:1714":{"id":"b:2:3213-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/lib.rs","begin":[90,0],"end":[90,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::cache_padded::CachePadded","name":"CachePadded","id":"0:453:1597","glob":false}},"0:623:2601":{"id":"0:623:2601","crate_id":0,"name":"shards","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[78,4],"end":[78,37]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"A list of locks protecting the internal data.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2448","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}],"bindings":[]}}}}},"1:6959:4350":{"id":"1:6959:4350","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6960:56797"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:729:2506":{"id":"b:2:2872-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:292:1830":{"id":"0:292:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}},"items":["0:369:1830","0:370:1839","0:371:1843","0:372:1847","0:373:1851","0:374:1855","0:375:1859","0:377:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8475:136":{"id":"2:8475:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8477:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46111:4341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:673:660":{"id":"0:673:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[500,4],"end":[504,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:510:2473":{"id":"a:2:3281:220-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:536":{"id":"0:536","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[300,0],"end":[306,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:537:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:530":{"id":"0:530","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[222,0],"end":[292,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:531:2540","0:532:2528","0:533:2533"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:729:2506":{"id":"b:2:3208-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:547:2540":{"id":"0:547:2540","crate_id":0,"name":"unpark","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[390,4],"end":[412,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:810:2304":{"id":"0:810:2304","crate_id":0,"name":"_marker","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[202,4],"end":[202,44]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":"Borrows data with invariant lifetime `'env`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PhantomData","id":"2:3287:2322","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'env","mutable":true,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'env","mutable":false,"type":{"kind":"tuple","inner":[]}}}}}}],"bindings":[]}}}}},"a:2:3310:2445-0:159:1915":{"id":"a:2:3310:2445-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8523:120":{"id":"2:8523:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8524:3138","2:8525:3139","2:8526:3140","2:8527:3141","2:8531:3142","2:8534:3143"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6091:60993":{"id":"5:6091:60993","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:450:1954":{"id":"0:450:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[80,0],"end":[80,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"i64"}}},"0:531:2540":{"id":"0:531:2540","crate_id":0,"name":"unpark","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Atomically makes the token available if it is not already.\n\nThis method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is\nany.\n\n# Examples\n\n```\nuse std::thread;\nuse std::time::Duration;\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(500));\n    u.unpark();\n});\n\n// Wakes up when `u.unpark()` provides the token.\np.park();\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`park`]: Parker::park\n[`park_timeout`]: Parker::park_timeout","links":{"Parker::park_timeout":"0:510:2473","Parker::park":"0:510:2473"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:727:2478":{"id":"a:2:3310:2445-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:821:660":{"id":"0:821:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[279,4],"end":[281,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:855:2855":{"id":"0:855:2855","crate_id":0,"name":"ScopedThreadBuilder","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[317,0],"end":[320,1]},"visibility":"public","docs":"Configures the properties of a new thread.\n\nThe two configurable properties are:\n\n- [`name`]: Specifies an [associated name for the thread][naming-threads].\n- [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].\n\nThe [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the\nthread handle with the given configuration.\n\nThe [`Scope::spawn`] method uses a builder with default configuration and unwraps its return\nvalue. You may want to use this builder when you want to recover from a failure to launch a\nthread.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.builder()\n        .spawn(|_| println!(\"Running a child thread\"))\n        .unwrap();\n}).unwrap();\n```\n\n[`name`]: ScopedThreadBuilder::name\n[`stack_size`]: ScopedThreadBuilder::stack_size\n[`spawn`]: ScopedThreadBuilder::spawn\n[`io::Result`]: std::io::Result\n[naming-threads]: std::thread#naming-threads\n[stack-size]: std::thread#stack-size","links":{"`Scope::spawn`":"0:806:2813","std::thread#stack-size":"1:610:1391","std::thread#naming-threads":"1:610:1391","ScopedThreadBuilder::name":"0:855:2855","ScopedThreadBuilder::spawn":"0:855:2855","ScopedThreadBuilder::stack_size":"0:855:2855","std::io::Result":"1:4078:205"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:858:2810","0:859:2849"],"impls":["0:822","a:2:3310:2445-0:855:2855","a:2:3269:211-0:855:2855","a:2:9340:1712-0:855:2855","a:2:9339:1713-0:855:2855","a:2:3281:220-0:855:2855","b:2:3198-0:855:2855","b:2:2872-0:855:2855","b:2:2869-0:855:2855","b:2:4002-0:855:2855","b:2:3202-0:855:2855","b:2:3213-0:855:2855","b:2:3208-0:855:2855","0:860"]}},"b:2:3202-0:702:2688":{"id":"b:2:3202-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:150:1865":{"id":"0:150:1865","crate_id":0,"name":"can_transmute","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[864,0],"end":[867,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"Returns `true` if values of type `A` can be transmuted into values of type `B`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"0:149:660":{"id":"0:149:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[856,4],"end":[860,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:855:2855":{"id":"b:2:2869-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:140:1855":{"id":"0:140:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[836,4],"end":[839,5]},"visibility":"public","docs":"Applies logical \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(true);\n\nassert_eq!(a.fetch_xor(false), true);\nassert_eq!(a.load(), true);\n\nassert_eq!(a.fetch_xor(true), true);\nassert_eq!(a.load(), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[70,0],"end":[70,32]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicIsize","id":"2:48148:85","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:426:1954","0:427:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:842":{"id":"0:842","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[491,0],"end":[546,1]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:844:2820","0:846:1391"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:806:2813":{"id":"b:2:4002-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9343:4322":{"id":"1:9343:4322","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9344:58118","1:9345:58119","1:9346:58120","1:9347:58121","1:9348:58122","1:9349:39648","1:9350:58117"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:519:2514":{"id":"0:519:2514","crate_id":0,"name":"park_timeout","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[124,4],"end":[126,5]},"visibility":"public","docs":"Blocks the current thread until the token is made available, but only for a limited time.\n\n# Examples\n\n```\nuse std::time::Duration;\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\n\n// Waits for the token to become available, but will not wait longer than 500 ms.\np.park_timeout(Duration::from_millis(500));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6859:4317":{"id":"1:6859:4317","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6860:55956"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:708:2698":{"id":"b:2:3202-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3417:2390":{"id":"2:3417:2390","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:399:1839":{"id":"0:399:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:727:2478":{"id":"a:2:3269:211-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:330:1855":{"id":"0:330:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8438:4682":{"id":"2:8438:4682","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8440:3190"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13586:60345":{"id":"2:13586:60345","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:453:1597":{"id":"b:2:3213-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13862:150":{"id":"2:13862:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13863:181","2:13864:150","2:13865:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3505:1970":{"id":"2:3505:1970","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[135,0],"end":[163,1]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:212:920","0:213:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:282:1934":{"id":"0:282:1934","crate_id":0,"name":"validate_read","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[40,4],"end":[43,5]},"visibility":"crate","docs":"Returns `true` if the current stamp is equal to `stamp`.\n\nThis method should be called after optimistic reads to check whether they are valid. The\nargument `stamp` should correspond to the one returned by method `optimistic_read`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["stamp",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:286:1326":{"id":"0:286:1326","crate_id":0,"name":"state","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[72,4],"end":[72,16]},"visibility":{"restricted":{"parent":"0:260:1700","path":"::atomic::seq_lock"}},"docs":"The stamp before locking.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:23020:4325":{"id":"2:23020:4325","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23010:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:216:221":{"id":"0:216:221","crate_id":0,"name":"Target","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[166,4],"end":[166,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:3202-0:659:2476":{"id":"b:2:3202-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:159:1915":{"id":"b:2:3202-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:123":{"id":"0:123","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[206,0],"end":[221,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:125:814"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5833:5145":{"id":"5:5833:5145","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3648:2399":{"id":"2:3648:2399","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:59055","2:3651:59056","2:3652:54828"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3207:681":{"id":"2:3207:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"primitive","inner":"never"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2874:53845":{"id":"2:2874:53845","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:380:1830":{"id":"0:380:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13501:60333":{"id":"2:13501:60333","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:873:2921":{"id":"0:873:2921","crate_id":0,"name":"as_pthread_t","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[553,12],"end":[558,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RawPthread","id":"1:6556:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:1712-0:453:1597":{"id":"a:2:9340:1712-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:541:2506":{"id":"b:2:3208-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:284:2434":{"id":"b:2:3208-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/lib.rs","begin":[93,0],"end":[93,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::backoff::Backoff","name":"Backoff","id":"0:242:1599","glob":false}},"0:185:1969":{"id":"0:185:1969","crate_id":0,"name":"impl_atomic","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[53,0],"end":[66,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"macro","inner":"macro_rules! impl_atomic {\n    ($atomic:ident, $val:ty) => { ... };\n}"},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}},"items":["0:292:1830","0:293:1839","0:294:1843","0:295:1847","0:296:1851","0:297:1855","0:298:1859","0:300:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:859:2849":{"id":"0:859:2849","crate_id":0,"name":"builder","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[319,4],"end":[319,28]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"thread::Builder","id":"1:10587:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:10391:3381":{"id":"2:10391:3381","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10392:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9339:1713-0:677:2477":{"id":"a:2:9339:1713-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10322:3372":{"id":"2:10322:3372","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10323:1533","2:10324:56696","2:10326:56695"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:825:899":{"id":"0:825:899","crate_id":0,"name":"name","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[344,4],"end":[347,5]},"visibility":"public","docs":"Sets the name for the new thread.\n\nThe name must not contain null bytes (`\\0`).\n\nFor more information about named threads, see [here][naming-threads].\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\nuse std::thread::current;\n\nthread::scope(|s| {\n    s.builder()\n        .name(\"my thread\".to_string())\n        .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))\n        .unwrap();\n}).unwrap();\n```\n\n[naming-threads]: std::thread#naming-threads","links":{"std::thread#naming-threads":"1:610:1391"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["name",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:677:2477":{"id":"a:2:3310:2445-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:128:424":{"id":"0:128:424","crate_id":0,"name":"compare_and_swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[245,4],"end":[250,5]},"visibility":"public","docs":"If the current value equals `current`, stores `new` into the atomic cell.\n\nThe return value is always the previous value. If it is equal to `current`, then the value\nwas updated.\n\n# Examples\n\n```\n# #![allow(deprecated)]\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(1);\n\nassert_eq!(a.compare_and_swap(2, 3), 1);\nassert_eq!(a.load(), 1);\n\nassert_eq!(a.compare_and_swap(1, 2), 1);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[deprecated(note = \"Use `compare_exchange` instead\")]"],"deprecation":{"since":null,"note":"Use `compare_exchange` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["current",{"kind":"generic","inner":"T"}],["new",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:621:2475":{"id":"b:2:3213-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:665":{"id":"0:665","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[489,0],"end":[489,69]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:736:2555":{"id":"0:736:2555","crate_id":0,"name":"wait","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[104,4],"end":[116,5]},"visibility":"public","docs":"Drops this reference and waits until all other references are dropped.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::WaitGroup;\nuse std::thread;\n\nlet wg = WaitGroup::new();\n\nthread::spawn({\n    let wg = wg.clone();\n    move || {\n        // Block until both threads have reached `wait()`.\n        wg.wait();\n    }\n});\n\n// Block until both threads have reached `wait()`.\nwg.wait();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:820":{"id":"0:820","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[278,0],"end":[282,1]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:821:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:114:920":{"id":"0:114:920","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[67,4],"end":[71,5]},"visibility":"public","docs":"Creates a new atomic cell initialized with `val`.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:855:2855":{"id":"b:2:3198-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:340:1851":{"id":"0:340:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:827:2846":{"id":"0:827:2846","crate_id":0,"name":"spawn","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[411,4],"end":[467,5]},"visibility":"public","docs":"Spawns a scoped thread with this configuration.\n\nThe scoped thread is passed a reference to this scope as an argument, which can be used for\nspawning nested threads.\n\nThe returned handle can be used to manually join the thread before the scope exits.\n\n# Errors\n\nUnlike the [`Scope::spawn`] method, this method yields an\n[`io::Result`] to capture any failure to create the thread at\nthe OS level.\n\n[`io::Result`]: std::io::Result\n\n# Panics\n\nPanics if a thread name was set and it contained null bytes.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle = s.builder()\n        .spawn(|_| {\n            println!(\"A child thread is running\");\n            42\n        })\n        .unwrap();\n\n    // Join the thread and retrieve its result.\n    let res = handle.join().unwrap();\n    assert_eq!(res, 42);\n}).unwrap();\n```","links":{"std::io::Result":"1:4078:205","`Scope::spawn`":"0:806:2813"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'env"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:2402","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:702:2688":{"id":"b:2:3198-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:757":{"id":"0:757","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[14,64],"end":[14,85]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"kind":"import","inner":{"source":"self::sharded_lock::ShardedLockWriteGuard","name":"ShardedLockWriteGuard","id":"0:677:2477","glob":false}},"0:526:2474":{"id":"0:526:2474","crate_id":0,"name":"Unparker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[215,0],"end":[217,1]},"visibility":"public","docs":"Unparks a thread parked by the associated [`Parker`].","links":{"`Parker`":"0:510:2473"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:527:2244"],"impls":["0:530","a:2:3310:2445-0:526:2474","a:2:9340:1712-0:526:2474","a:2:9339:1713-0:526:2474","b:2:3198-0:526:2474","b:2:2872-0:526:2474","b:2:2869-0:526:2474","b:2:4002-0:526:2474","b:2:3202-0:526:2474","b:2:3213-0:526:2474","b:2:3208-0:526:2474","b:5:787-0:526:2474","0:528","0:529","0:534","0:536"]}},"2:13565:54826":{"id":"2:13565:54826","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"1:16010:2137","self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49680:4961","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:669:221":{"id":"0:669:221","crate_id":0,"name":"Target","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[492,4],"end":[492,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:3208-0:277:1714":{"id":"b:2:3208-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:855:2855":{"id":"b:2:2872-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:333:1863":{"id":"0:333:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:280:920":{"id":"0:280:920","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[16,4],"end":[20,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:311:1863":{"id":"0:311:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6437:4345":{"id":"1:6437:4345","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6438:4586","1:6439:4587","1:6440:8293","1:6441:54041","1:6443:54045","1:6445:54042","1:6446:54043","1:6448:54044"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:674":{"id":"0:674","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[507,0],"end":[511,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:676:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:686:578":{"id":"0:686:578","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[522,4],"end":[531,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5785:4359":{"id":"1:5785:4359","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5786:54167"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:101:1704":{"id":"b:2:2872-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:392:1847":{"id":"0:392:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:520:2516":{"id":"0:520:2516","crate_id":0,"name":"park_deadline","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Blocks the current thread until the token is made available, or until a certain deadline.\n\n# Examples\n\n```\nuse std::time::{Duration, Instant};\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet deadline = Instant::now() + Duration::from_millis(500);\n\n// Waits for the token to become available, but will not wait longer than 500 ms.\np.park_deadline(deadline);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["deadline",{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:2479","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13520:54812":{"id":"2:13520:54812","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16010:2137"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:526:2474":{"id":"b:2:3213-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:2445-0:242:1599":{"id":"a:2:3310:2445-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:440":{"id":"0:440","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[75,0],"end":[75,28]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicU32","id":"2:48022:89","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:441:1954","0:442:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:406:1863":{"id":"0:406:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[187,0],"end":[204,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:122:1786"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3401:2386":{"id":"2:3401:2386","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:119:304":{"id":"0:119:304","crate_id":0,"name":"as_ptr","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[182,4],"end":[184,5]},"visibility":"public","docs":"Returns a raw pointer to the underlying data in this atomic cell.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(5);\n\nlet ptr = a.as_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:708:2698":{"id":"0:708:2698","crate_id":0,"name":"Registration","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[597,0],"end":[600,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"A registration of a thread with an index.\n\nWhen dropped, unregisters the thread and frees the reserved index.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:709:753","0:710:2699"],"impls":["a:2:3310:2445-0:708:2698","a:2:3269:211-0:708:2698","a:2:9340:1712-0:708:2698","a:2:9339:1713-0:708:2698","a:2:3281:220-0:708:2698","b:2:3198-0:708:2698","b:2:2872-0:708:2698","b:2:2869-0:708:2698","b:2:4002-0:708:2698","b:2:3202-0:708:2698","b:2:3213-0:708:2698","b:2:3208-0:708:2698","0:711"]}},"1:5719:4355":{"id":"1:5719:4355","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720:54313","1:5721:54315","1:5722:54314","1:5723:54316"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13583:60344":{"id":"2:13583:60344","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13134:4719","str::match_indices":"1:16010:2137","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49726:4991","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:526:2474":{"id":"b:2:3202-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13571:60341":{"id":"2:13571:60341","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:703:2690":{"id":"0:703:2690","crate_id":0,"name":"mapping","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[577,4],"end":[577,37]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"Mapping from `ThreadId` to thread index.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1302:143","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ThreadId","id":"1:10592:2559","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"5:6088:60992":{"id":"5:6088:60992","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3812:2407":{"id":"2:3812:2407","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:277:1714":{"id":"b:2:4002-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:453:1597":{"id":"b:2:4002-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:835:2848":{"id":"b:2:3208-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:510:2473":{"id":"b:2:3202-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:146:681":{"id":"0:146:681","crate_id":0,"name":"from","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[850,4],"end":[852,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:708:2698":{"id":"b:2:4002-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:871":{"id":"0:871","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[552,8],"end":[562,9]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"JoinHandleExt","id":"1:6557:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:873:2921","0:874:2922"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:659:2476":{"id":"b:2:2872-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13497":{"id":"2:13497","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12594:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13498:793","2:13499:2821","2:13500:60332","2:13501:60333","2:13503:60334","2:13506:56155","2:13507:60335","2:13508:304","2:13509:9972","2:13510:1780","2:13512:2628","2:13514:54791","2:13516:54792","2:13518:4436","2:13519:60336","2:13520:54812","2:13521:54813","2:13522:5017","2:13523:4748","2:13524:4441","2:13525:33205","2:13526:33195","2:13527:5462","2:13528:60337","2:13529:33190","2:13530:54828","2:13533:54487","2:13536:54489","2:13539:3181","2:13543:3143","2:13547:53853","2:13550:33062","2:13553:54822","2:13556:60338","2:13559:60339","2:13562:54824","2:13565:54826","2:13568:60340","2:13571:60341","2:13574:2215","2:13577:60342","2:13580:60343","2:13583:60344","2:13586:60345","2:13588:60346","2:13590:60347","2:13592:60348","2:13593:60349","2:13594:60350","2:13597:60351","2:13600:16134","2:13603:54829","2:13606:60352","2:13609:60353","2:13612:60354","2:13615:4917","2:13617:5139","2:13618:54377","2:13619:54374","2:13620:54373","2:13621:60355","2:13623:4332","2:13624:60356"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:729:2506":{"id":"b:2:3213-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:2445-0:659:2476":{"id":"a:2:3310:2445-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3372:2384":{"id":"2:3372:2384","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:441:1954":{"id":"0:441:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[75,0],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u32"}}},"a:2:9340:1712-0:277:1714":{"id":"a:2:9340:1712-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:658:681":{"id":"0:658:681","crate_id":0,"name":"from","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[477,4],"end":[479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:411:1843":{"id":"0:411:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:429:1954":{"id":"0:429:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[71,0],"end":[71,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:320:1859":{"id":"0:320:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:223:660":{"id":"0:223:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[180,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[55,0],"end":[55,42]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:436:1967":{"id":"0:436:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[73,0],"end":[73,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:541:2506":{"id":"b:2:2869-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:2445-0:101:1704":{"id":"a:2:3310:2445-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:734":{"id":"0:734","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[69,0],"end":[117,1]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:735:920","0:736:2555"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13503:60334":{"id":"2:13503:60334","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16010:2137"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4748:3915":{"id":"1:4748:3915","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:53850","1:4750:1703","1:4751:53852","1:4753:3914","1:4754:53851","1:4756:53853","1:4757:5462"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:3908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:835:2848":{"id":"b:2:3213-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13624:60356":{"id":"2:13624:60356","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16004:2132"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49875:5000","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:863:660":{"id":"0:863:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:727:2478":{"id":"b:2:3213-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u128"}}],"bindings":[]}}}},"items":["0:380:1830","0:381:1839","0:382:1843","0:383:1847","0:384:1851","0:385:1855","0:386:1859","0:387:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[187,0],"end":[191,1]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:226:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[283,0],"end":[290,1]},"visibility":{"restricted":{"parent":"0:230:1598","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9339:1713-0:855:2855":{"id":"a:2:9339:1713-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:283:1833":{"id":"0:283:1833","crate_id":0,"name":"write","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[47,4],"end":[63,5]},"visibility":"crate","docs":"Grabs the lock for writing.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:515:59":{"id":"0:515:59","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[62,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:284:2434":{"id":"a:2:3281:220-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9339:1713-0:277:1714":{"id":"a:2:9339:1713-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:437":{"id":"0:437","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[74,0],"end":[74,28]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicI16","id":"2:47896:81","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:438:1954","0:439:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:195:1596":{"id":"0:195:1596","crate_id":0,"name":"cache_padded","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[1,0],"end":[191,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:453:1597"],"is_stripped":false}},"2:22831:4825":{"id":"2:22831:4825","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22832:4816","2:22833:58901","2:22834:59139","2:22835:59140","2:22836:59141","2:22837:43044","2:22838:59142","2:22839:59143","2:22840:59144","2:22841:59145","2:22842:59146","2:22843:59147","2:22844:59148","2:22845:59149","2:22846:59150","2:22847:59151","2:22848:58973","2:22849:59152","2:22850:59153","2:22851:59154","2:22852:59155","2:22853:58902","2:22854:58903","2:22855:58904","2:22856:58905"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:760":{"id":"0:760","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[15,0],"end":[15,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::wait_group::WaitGroup","name":"WaitGroup","id":"0:727:2478","glob":false}},"0:458:408":{"id":"0:458:408","crate_id":0,"name":"clone","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,9],"end":[61,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3274:2340":{"id":"2:3274:2340","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:364:1859":{"id":"0:364:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:702:2688":{"id":"0:702:2688","crate_id":0,"name":"ThreadIndices","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[575,0],"end":[584,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"The global registry keeping track of registered threads and indices.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:703:2690","0:704:2692","0:705:2694"],"impls":["a:2:3310:2445-0:702:2688","a:2:3269:211-0:702:2688","a:2:9340:1712-0:702:2688","a:2:9339:1713-0:702:2688","a:2:3281:220-0:702:2688","b:2:3198-0:702:2688","b:2:2872-0:702:2688","b:2:2869-0:702:2688","b:2:4002-0:702:2688","b:2:3202-0:702:2688","b:2:3213-0:702:2688","b:2:3208-0:702:2688"]}},"2:3347:2376":{"id":"2:3347:2376","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:248:2093":{"id":"0:248:2093","crate_id":0,"name":"snooze","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[209,4],"end":[233,5]},"visibility":"public","docs":"Backs off in a blocking loop.\n\nThis method should be used when we need to wait for another thread to make progress.\n\nThe processor may yield using the *YIELD* or *PAUSE* instruction and the current thread\nmay yield by giving up a timeslice to the OS scheduler.\n\nIn `#[no_std]` environments, this method is equivalent to [`spin`].\n\nIf possible, use [`is_completed`] to check when it is advised to stop using backoff and\nblock the current thread using a different synchronization mechanism instead.\n\n[`spin`]: Backoff::spin\n[`is_completed`]: Backoff::is_completed\n\n# Examples\n\nWaiting for an [`AtomicBool`] to become `true`:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::Arc;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\nuse std::thread;\nuse std::time::Duration;\n\nfn spin_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        backoff.snooze();\n    }\n}\n\nlet ready = Arc::new(AtomicBool::new(false));\nlet ready2 = ready.clone();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(100));\n    ready2.store(true, SeqCst);\n});\n\nassert_eq!(ready.load(SeqCst), false);\nspin_wait(&ready);\nassert_eq!(ready.load(SeqCst), true);\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`AtomicBool`]: std::sync::atomic::AtomicBool","links":{"std::sync::atomic::AtomicBool":"2:9843:79","Backoff::spin":"0:242:1599","Backoff::is_completed":"0:242:1599"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13153:4722":{"id":"2:13153:4722","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13155:4741","2:13156:922","2:13157:59355","2:13158:59356"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:284:2434":{"id":"b:2:3198-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:159:1915":{"id":"b:2:2869-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:54150","1:2575:58606","1:2576:58607","1:2577:58137"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:318:1851":{"id":"0:318:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:423:1954":{"id":"0:423:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[69,0],"end":[69,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:3208-0:677:2477":{"id":"b:2:3208-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:363:1855":{"id":"0:363:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10372:109":{"id":"2:10372:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10373:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:122:1786":{"id":"0:122:1786","crate_id":0,"name":"take","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[201,4],"end":[203,5]},"visibility":"public","docs":"Takes the value of the atomic cell, leaving `Default::default()` in its place.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(5);\nlet five = a.take();\n\nassert_eq!(five, 5);\nassert_eq!(a.into_inner(), 0);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[71,0],"end":[71,26]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicU8","id":"2:47854:91","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:429:1954","0:430:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:284:2434":{"id":"b:2:3213-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:653":{"id":"0:653","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[470,0],"end":[474,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:655:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:389:1830":{"id":"0:389:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:712:578":{"id":"0:712:578","crate_id":0,"name":"drop","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[603,4],"end":[607,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:835:2848":{"id":"b:2:2872-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:744":{"id":"0:744","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[12,23],"end":[12,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parker::Parker","name":"Parker","id":"0:510:2473","glob":false}},"0:521:2505":{"id":"0:521:2505","crate_id":0,"name":"unparker","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Returns a reference to an associated [`Unparker`].\n\nThe returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\n// Make the token available.\nu.unpark();\n// Wakes up immediately and consumes the token.\np.park();\n```\n\n[`park`]: Parker::park\n[`park_timeout`]: Parker::park_timeout","links":{"`Unparker`":"0:526:2474"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:618:2564":{"id":"a:2:3310:2445-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:101:1704":{"id":"b:2:3198-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:695:221":{"id":"0:695:221","crate_id":0,"name":"Target","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[549,4],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:702:2688":{"id":"a:2:3269:211-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:22957:4826":{"id":"2:22957:4826","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22958:4816","2:22959:1247","2:22960:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:541:2506":{"id":"b:2:3202-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10610:142":{"id":"2:10610:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10611:715","2:10613:3593"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:453:1597":{"id":"b:2:3198-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:624:1735":{"id":"0:624:1735","crate_id":0,"name":"value","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[81,4],"end":[81,24]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"The internal data.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"UnsafeCell","id":"2:5185:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:453:1597":{"id":"b:2:3202-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13533:54487":{"id":"2:13533:54487","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:727:2478":{"id":"a:2:9339:1713-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:303:1830":{"id":"0:303:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:1788":{"id":"0:169:1788","crate_id":0,"name":"atomic_load","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[987,0],"end":[1023,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"Atomically reads data from `src`.\n\nThis operation uses the `Acquire` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"a:2:9340:1712-0:729:2506":{"id":"a:2:9340:1712-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3208-0:708:2698":{"id":"b:2:3208-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:446":{"id":"0:446","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[78,0],"end":[78,28]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicU64","id":"2:48106:90","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:447:1954","0:448:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:702:2688":{"id":"b:2:4002-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2871:2202":{"id":"2:2871:2202","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13508:304":{"id":"2:13508:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:16021:2146","str::as_mut_ptr":"1:16010:2137"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:435:1954":{"id":"0:435:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[73,0],"end":[73,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u16"}}},"a:2:9339:1713-0:835:2848":{"id":"a:2:9339:1713-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:212:920":{"id":"0:212:920","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[145,4],"end":[147,5]},"visibility":"public","docs":"Pads and aligns a value to the length of a cache line.\n\n# Examples\n\n```\nuse crossbeam_utils::CachePadded;\n\nlet padded_value = CachePadded::new(1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:414:1855":{"id":"0:414:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:541:2506":{"id":"a:2:9339:1713-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:729:2506":{"id":"0:729:2506","crate_id":0,"name":"Inner","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[53,0],"end":[56,1]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":"Inner state of a `WaitGroup`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:730:2300","0:731:495"],"impls":["a:2:3310:2445-0:729:2506","a:2:3269:211-0:729:2506","a:2:9340:1712-0:729:2506","a:2:9339:1713-0:729:2506","a:2:3281:220-0:729:2506","b:2:3198-0:729:2506","b:2:2872-0:729:2506","b:2:2869-0:729:2506","b:2:4002-0:729:2506","b:2:3202-0:729:2506","b:2:3213-0:729:2506","b:2:3208-0:729:2506"]}},"2:13527:5462":{"id":"2:13527:5462","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49812:3921","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:432:1954":{"id":"0:432:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[72,0],"end":[72,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"i8"}}},"a:2:9340:1712-0:526:2474":{"id":"a:2:9340:1712-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[84,0],"end":[84,56]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:348:1839":{"id":"0:348:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23217:4829":{"id":"2:23217:4829","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23854:4799","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23208:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:369:1830":{"id":"0:369:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:294:1843":{"id":"0:294:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:395:1859":{"id":"0:395:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_max(2), 7);\nassert_eq!(a.load(), 7);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:284:2434":{"id":"a:2:3269:211-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:336:1830":{"id":"0:336:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[726,0],"end":[726,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u32);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13606:60352":{"id":"2:13606:60352","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:518:2510":{"id":"0:518:2510","crate_id":0,"name":"park","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[107,4],"end":[109,5]},"visibility":"public","docs":"Blocks the current thread until the token is made available.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\n// Make the token available.\nu.unpark();\n\n// Wakes up immediately and consumes the token.\np.park();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:277:1714":{"id":"b:2:2872-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:325:1830":{"id":"0:325:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:374:1855":{"id":"0:374:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"isize"}}],"bindings":[]}}}},"items":["0:409:1830","0:410:1839","0:411:1843","0:412:1847","0:413:1851","0:414:1855","0:415:1859","0:417:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:409:1830":{"id":"0:409:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:459":{"id":"0:459","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,16],"end":[61,20]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3364:2377":{"id":"2:3364:2377","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10381:3377":{"id":"2:10381:3377","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10382:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:510:2473":{"id":"b:2:3213-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:2445-0:855:2855":{"id":"a:2:3310:2445-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'env","bounds":[{"outlives":"'scope"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:103:1735":{"id":"0:103:1735","crate_id":0,"name":"value","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[46,4],"end":[46,37]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"The inner value.\n\nIf this value can be transmuted into a primitive atomic type, it will be treated as such.\nOtherwise, all potentially concurrent operations on this data will be protected by a global\nlock.\n\nUsing MaybeUninit to prevent code outside the cell from observing partially initialized state:\n<https://github.com/crossbeam-rs/crossbeam/issues/833>\n\nNote:\n- we'll never store uninitialized `T` due to our API only using initialized `T`.\n- this `MaybeUninit` does *not* fix <https://github.com/crossbeam-rs/crossbeam/issues/315>.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"UnsafeCell","id":"2:5185:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32414:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:13512:2628":{"id":"2:13512:2628","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13519:60336":{"id":"2:13519:60336","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:16010:2137","crate::ops::IndexMut":"2:3581:2397","str::slice_unchecked":"1:16010:2137"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[68,0],"end":[68,30]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicBool","id":"2:9843:79","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:420:1954","0:421:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9339:1713":{"id":"2:9339:1713","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6084:60991":{"id":"5:6084:60991","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2448","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:4080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2448","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:4080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:541:2506":{"id":"a:2:3310:2445-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:677:2477":{"id":"a:2:3269:211-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:708:2698":{"id":"b:2:3198-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3581:2397":{"id":"2:3581:2397","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:2396","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:135:1822":{"id":"0:135:1822","crate_id":0,"name":"impl_arithmetic","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[325,0],"end":[720,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"macro","inner":"macro_rules! impl_arithmetic {\n    ($t:ty, fallback, $example:tt) => { ... };\n    ($t:ty, $atomic:ty, $example:tt) => { ... };\n}"},"0:118:1772":{"id":"0:118:1772","crate_id":0,"name":"swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Stores `val` into the atomic cell and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n\nassert_eq!(a.load(), 7);\nassert_eq!(a.swap(8), 7);\nassert_eq!(a.load(), 8);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:453:1597":{"id":"b:2:2872-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:812":{"id":"0:812","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[207,0],"end":[276,1]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["0:814:2846","0:818:2849"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13847:138":{"id":"2:13847:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13848:181","2:13849:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10655:3588":{"id":"2:10655:3588","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10656:146","2:10657:34355","2:10658:56746"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13615:4917":{"id":"2:13615:4917","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:13073:4451","FromStr::Err":"2:13073:4451"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13073:4451","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:4451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:671":{"id":"0:671","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[499,0],"end":[505,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:673:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:620:2569":{"id":"0:620:2569","crate_id":0,"name":"write_guard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[27,4],"end":[27,66]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"The write-guard keeping this shard locked.\n\nWrite operations will lock each shard and store the guard here. These guards get dropped at\nthe same time the big guard is dropped.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"UnsafeCell","id":"2:5185:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RwLockWriteGuard","id":"1:12257:2296","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:9339:1713-0:702:2688":{"id":"a:2:9339:1713-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:253:59":{"id":"0:253:59","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[293,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:452:1967":{"id":"0:452:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[85,4],"end":[85,19]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:687":{"id":"0:687","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[534,0],"end":[540,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:689:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:638":{"id":"0:638","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[145,0],"end":[442,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:640:2612","0:641:2628","0:642:2638","0:643:1748","0:644:2662","0:645:1833"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[292,0],"end":[296,1]},"visibility":{"restricted":{"parent":"0:230:1598","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:253:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:751":{"id":"0:751","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[14,29],"end":[14,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"kind":"import","inner":{"source":"self::sharded_lock::ShardedLock","name":"ShardedLock","id":"0:621:2475","glob":false}},"b:2:2869-0:729:2506":{"id":"b:2:2869-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:618:2564":{"id":"b:2:2872-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:57:330":{"id":"0:57:330","crate_id":0,"name":"atomic","span":{"filename":"crossbeam-utils/src/atomic/mod.rs","begin":[1,0],"end":[37,37]},"visibility":"public","docs":"Atomic types.\n\n* [`AtomicCell`], a thread-safe mutable memory location.\n* [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","links":{"`AtomicConsume`":"0:181:1705","`AtomicCell`":"0:101:1704"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:260:1700","0:58:1702","0:177:1703","0:189","0:192"],"is_stripped":false}},"0:727:2478":{"id":"0:727:2478","crate_id":0,"name":"WaitGroup","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[48,0],"end":[50,1]},"visibility":"public","docs":"Enables threads to synchronize the beginning or end of some computation.\n\n# Wait groups vs barriers\n\n`WaitGroup` is very similar to [`Barrier`], but there are a few differences:\n\n* [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to\n  register more threads.\n\n* A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`\n  synchronizes threads only once.\n\n* All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose\n  to either wait for other threads or to continue without blocking.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::WaitGroup;\nuse std::thread;\n\n// Create a new wait group.\nlet wg = WaitGroup::new();\n\nfor _ in 0..4 {\n    // Create another reference to the wait group.\n    let wg = wg.clone();\n\n    thread::spawn(move || {\n        // Do some work.\n\n        // Drop the reference to the wait group.\n        drop(wg);\n    });\n}\n\n// Block until all threads have finished their work.\nwg.wait();\n```\n\n[`Barrier`]: std::sync::Barrier","links":{"std::sync::Barrier":"1:8639:2283"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:728:2244"],"impls":["0:734","a:2:3310:2445-0:727:2478","a:2:3269:211-0:727:2478","a:2:9340:1712-0:727:2478","a:2:9339:1713-0:727:2478","a:2:3281:220-0:727:2478","b:2:3198-0:727:2478","b:2:2872-0:727:2478","b:2:2869-0:727:2478","b:2:4002-0:727:2478","b:2:3202-0:727:2478","b:2:3213-0:727:2478","b:2:3208-0:727:2478","b:5:787-0:727:2478","0:732","0:737","0:739","0:741"]}},"0:217:543":{"id":"0:217:543","crate_id":0,"name":"deref","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:702:2688":{"id":"b:2:3213-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:763:1391":{"id":"0:763:1391","crate_id":0,"name":"thread","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[1,0],"end":[587,1]},"visibility":"public","docs":"Threads that can borrow variables from the stack.\n\nCreate a scope when spawned threads need to access variables on the stack:\n\n```\nuse crossbeam_utils::thread;\n\nlet people = vec![\n    \"Alice\".to_string(),\n    \"Bob\".to_string(),\n    \"Carol\".to_string(),\n];\n\nthread::scope(|s| {\n    for person in &people {\n        s.spawn(move |_| {\n            println!(\"Hello, {}!\", person);\n        });\n    }\n}).unwrap();\n```\n\n# Why scoped threads?\n\nSuppose we wanted to re-write the previous example using plain threads:\n\n```compile_fail,E0597\nuse std::thread;\n\nlet people = vec![\n    \"Alice\".to_string(),\n    \"Bob\".to_string(),\n    \"Carol\".to_string(),\n];\n\nlet mut threads = Vec::new();\n\nfor person in &people {\n    threads.push(thread::spawn(move || {\n        println!(\"Hello, {}!\", person);\n    }));\n}\n\nfor thread in threads {\n    thread.join().unwrap();\n}\n```\n\nThis doesn't work because the borrow checker complains about `people` not living long enough:\n\n```text\nerror[E0597]: `people` does not live long enough\n  --> src/main.rs:12:20\n   |\n12 |     for person in &people {\n   |                    ^^^^^^ borrowed value does not live long enough\n...\n21 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n```\n\nThe problem here is that spawned threads are not allowed to borrow variables on stack because\nthe compiler cannot prove they will be joined before `people` is destroyed.\n\nScoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined\nbefore the scope ends.\n\n# How scoped threads work\n\nIf a variable is borrowed by a thread, the thread must complete before the variable is\ndestroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the\n`'static` lifetime because the borrow checker cannot be sure when the thread will complete.\n\nA scope creates a clear boundary between variables outside the scope and threads inside the\nscope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.\nThis way we guarantee to the borrow checker that scoped threads only live within the scope and\ncan safely access variables outside it.\n\n# Nesting scoped threads\n\nSometimes scoped threads need to spawn more threads within the same scope. This is a little\ntricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such\ncannot be borrowed by scoped threads:\n\n```compile_fail,E0373,E0521\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    s.spawn(|_| {\n        // Not going to compile because we're trying to borrow `s`,\n        // which lives *inside* the scope! :(\n        s.spawn(|_| println!(\"nested thread\"));\n    });\n});\n```\n\nFortunately, there is a solution. Every scoped thread is passed a reference to its scope as an\nargument, which can be used for spawning nested threads:\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    // Note the `|s|` here.\n    s.spawn(|s| {\n        // Yay, this works because we're using a fresh argument `s`! :)\n        s.spawn(|_| println!(\"nested thread\"));\n    });\n}).unwrap();\n```","links":{"`std::thread::spawn`":"1:984:2846"},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:795:2800","0:797:2801","0:799:2810","0:806:2813","0:855:2855","0:835:2848"],"is_stripped":false}},"0:181:1705":{"id":"0:181:1705","crate_id":0,"name":"AtomicConsume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[7,0],"end":[27,1]},"visibility":"public","docs":"Trait which allows reading from primitive atomic types with \"consume\" ordering.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:182:1954","0:183:1967"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:419","0:422","0:425","0:428","0:431","0:434","0:437","0:440","0:443","0:446","0:449","0:186"]}},"2:13509:9972":{"id":"2:13509:9972","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16021:2146"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:137:1843":{"id":"0:137:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[770,4],"end":[773,5]},"visibility":"public","docs":"Applies logical \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(true);\n\nassert_eq!(a.fetch_and(true), true);\nassert_eq!(a.load(), true);\n\nassert_eq!(a.fetch_and(false), true);\nassert_eq!(a.load(), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13618:54377":{"id":"2:13618:54377","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:637:1746":{"id":"0:637:1746","crate_id":0,"name":"into_inner","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[133,4],"end":[142,5]},"visibility":"public","docs":"Consumes this lock, returning the underlying data.\n\n# Errors\n\nThis method will return an error if the lock is poisoned. A lock gets poisoned when a write\noperation panics.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(String::new());\n{\n    let mut s = lock.write().unwrap();\n    *s = \"modified\".to_owned();\n}\nassert_eq!(lock.into_inner().unwrap(), \"modified\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"LockResult","id":"1:9070:2290","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:727:2478":{"id":"b:2:2872-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:347:1830":{"id":"0:347:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:847":{"id":"0:847","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[583,0],"end":[587,1]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:849:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:708:2698":{"id":"a:2:3281:220-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5837:5147":{"id":"5:5837:5147","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:2820"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13528:60337":{"id":"2:13528:60337","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49822:4995","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:1860","2:2960:1864","2:2961:3135"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13506:56155":{"id":"2:13506:56155","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12605:5095"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:362:1851":{"id":"0:362:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:541:2506":{"id":"a:2:3281:220-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13498:793":{"id":"2:13498:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:526:2474":{"id":"b:5:787-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:3199","5:790:3200","5:791:3201"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10387:3380":{"id":"2:10387:3380","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10388:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:393:1851":{"id":"0:393:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3205-0:621:2475":{"id":"b:2:3205-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"never"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3207:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:1713-0:453:1597":{"id":"a:2:9339:1713-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:516":{"id":"0:516","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[76,0],"end":[206,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:517:920","0:518:2510","0:519:2514","0:520:2516","0:521:2505","0:522:2528","0:523:2533"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13144:4720":{"id":"2:13144:4720","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13146:4722","2:13147:59023","2:13148:59024","2:13149:59025","2:13150:59027","2:13151:59026","2:13152:59028"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:2445-0:729:2506":{"id":"a:2:3310:2445-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13499:2821":{"id":"2:13499:2821","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:400:1843":{"id":"0:400:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7usize);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:422":{"id":"0:422","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[69,0],"end":[69,32]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicUsize","id":"2:48190:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:423:1954","0:424:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22884:4812":{"id":"2:22884:4812","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22885:4816","2:22886:58901","2:22887:1227","2:22888:1228","2:22889:43044","2:22890:58969","2:22891:58970","2:22892:58971","2:22893:58972","2:22894:58973","2:22895:58902","2:22896:58903","2:22897:58904","2:22898:58905","2:22899:58906","2:22900:58907","2:22901:58908"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:706:2695":{"id":"0:706:2695","crate_id":0,"name":"THREAD_INDICES","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[586,0],"end":[592,3]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"static","inner":{"type":{"kind":"resolved_path","inner":{"name":"Lazy","id":"21:279:2560","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"mutable":false,"expr":"_"}},"0:709:753":{"id":"0:709:753","crate_id":0,"name":"index","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[598,4],"end":[598,16]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"a:2:3310:2445-0:526:2474":{"id":"a:2:3310:2445-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:410:1839":{"id":"0:410:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:242:1599":{"id":"b:2:3213-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:874:2922":{"id":"0:874:2922","crate_id":0,"name":"into_pthread_t","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[559,12],"end":[561,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"RawPthread","id":"1:6556:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:619:1832":{"id":"0:619:1832","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[21,4],"end":[21,20]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"The inner reader-writer lock.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"RwLock","id":"1:9139:2294","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[133,0],"end":[133,47]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:139:1851":{"id":"0:139:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[815,4],"end":[818,5]},"visibility":"public","docs":"Applies logical \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(false);\n\nassert_eq!(a.fetch_or(false), false);\nassert_eq!(a.load(), false);\n\nassert_eq!(a.fetch_or(true), false);\nassert_eq!(a.load(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13521:54813":{"id":"2:13521:54813","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16010:2137"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:1712-0:835:2848":{"id":"a:2:9340:1712-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2866:4782":{"id":"2:2866:4782","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:53845"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:322:1863":{"id":"0:322:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:541:2506":{"id":"b:2:4002-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13518:4436":{"id":"2:13518:4436","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3577:2396","`str`":"1:16010:2137","str::slice_mut_unchecked":"1:16010:2137"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:542:1326":{"id":"0:542:1326","crate_id":0,"name":"state","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[313,4],"end":[313,22]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AtomicUsize","id":"2:48190:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:3281:220-0:855:2855":{"id":"a:2:3281:220-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'scope","kind":{"lifetime":{"outlives":[]}}},{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:729:2506":{"id":"b:2:3198-0:729:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:541:2506":{"id":"b:2:3213-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:371:1843":{"id":"0:371:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13617:5139":{"id":"2:13617:5139","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:635:920":{"id":"0:635:920","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[100,4],"end":[112,5]},"visibility":"public","docs":"Creates a new sharded reader-writer lock.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(5);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:307:1851":{"id":"0:307:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:159:1915":{"id":"b:2:3198-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:242:1599":{"id":"a:2:3281:220-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:350:1847":{"id":"0:350:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i32);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:470":{"id":"0:470","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,37],"end":[61,46]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:472:604","0:473:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:366:1863":{"id":"0:366:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:702:2688":{"id":"a:2:3310:2445-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:415:1859":{"id":"0:415:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:439:1967":{"id":"0:439:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[74,0],"end":[74,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3396:2385":{"id":"2:3396:2385","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:438:1954":{"id":"0:438:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[74,0],"end":[74,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"i16"}}},"0:849:660":{"id":"0:849:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[584,4],"end":[586,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249:2100":{"id":"0:249:2100","crate_id":0,"name":"is_completed","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[278,4],"end":[280,5]},"visibility":"public","docs":"Returns `true` if exponential backoff has completed and blocking the thread is advised.\n\n# Examples\n\nWaiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::Arc;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\nuse std::thread;\nuse std::time::Duration;\n\nfn blocking_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        if backoff.is_completed() {\n            thread::park();\n        } else {\n            backoff.snooze();\n        }\n    }\n}\n\nlet ready = Arc::new(AtomicBool::new(false));\nlet ready2 = ready.clone();\nlet waiter = thread::current();\n\nthread::spawn(move || {\n    thread::sleep(Duration::from_millis(100));\n    ready2.store(true, SeqCst);\n    waiter.unpark();\n});\n\nassert_eq!(ready.load(SeqCst), false);\nblocking_wait(&ready);\nassert_eq!(ready.load(SeqCst), true);\n# std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371\n```\n\n[`AtomicBool`]: std::sync::atomic::AtomicBool","links":{"std::sync::atomic::AtomicBool":"2:9843:79"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[173,0],"end":[177,1]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:3505:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:220:545"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[49,0],"end":[49,46]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:159:1915":{"id":"0:159:1915","crate_id":0,"name":"AtomicUnit","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[915,0],"end":[915,18]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"An atomic `()`.\n\nAll operations are noops.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:161","a:2:3310:2445-0:159:1915","a:2:3269:211-0:159:1915","a:2:9340:1712-0:159:1915","a:2:9339:1713-0:159:1915","a:2:3281:220-0:159:1915","b:2:3198-0:159:1915","b:2:2872-0:159:1915","b:2:2869-0:159:1915","b:2:4002-0:159:1915","b:2:3202-0:159:1915","b:2:3213-0:159:1915","b:2:3208-0:159:1915"]}},"2:14246:141":{"id":"2:14246:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14247:277","2:14248:518","2:14249:280","2:14250:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[57,0],"end":[185,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:114:920","0:115:1746","0:116:1766","0:117:1339","0:118:1772","0:119:304"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:242:1599":{"id":"b:2:3198-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:727:2478":{"id":"b:2:4002-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:546:2510":{"id":"0:546:2510","crate_id":0,"name":"park","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[319,4],"end":[388,5]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["deadline",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:2479","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:526:2474":{"id":"a:2:9339:1713-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:7795:4491":{"id":"1:7795:4491","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7796:58153"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:670:543":{"id":"0:670:543","crate_id":0,"name":"deref","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[494,4],"end":[496,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:621:2475":{"id":"b:2:2869-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[15,0],"end":[64,1]},"visibility":{"restricted":{"parent":"0:260:1700","path":"::atomic::seq_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:280:920","0:281:1932","0:282:1934","0:283:1833"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:1712-0:510:2473":{"id":"a:2:9340:1712-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13568:60340":{"id":"2:13568:60340","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6107:54375":{"id":"5:6107:54375","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16010:2137"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:708:2698":{"id":"b:2:2869-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:260:1700":{"id":"0:260:1700","crate_id":0,"name":"seq_lock","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[1,0],"end":[112,1]},"visibility":{"restricted":{"parent":"0:57:330","path":"::atomic"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:277:1714","0:284:2434"],"is_stripped":false}},"0:474":{"id":"0:474","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,48],"end":[61,50]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:835:2848":{"id":"b:2:4002-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:476":{"id":"0:476","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,48],"end":[61,50]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:621:2475":{"id":"0:621:2475","crate_id":0,"name":"ShardedLock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[76,0],"end":[82,1]},"visibility":"public","docs":"A sharded reader-writer lock.\n\nThis lock is equivalent to [`RwLock`], except read operations are faster and write operations\nare slower.\n\nA `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a\nsingle cache line. Read operations will pick one of the shards depending on the current thread\nand lock it. Write operations need to lock all shards in succession.\n\nBy splitting the lock into shards, concurrent read operations will in most cases choose\ndifferent shards and thus update different cache lines, which is good for scalability. However,\nwrite operations need to do more work and are therefore slower than usual.\n\nThe priority policy of the lock is dependent on the underlying operating system's\nimplementation, and this type does not guarantee that any particular policy will be used.\n\n# Poisoning\n\nA `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be\npoisoned if a panic occurs while a write operation is in progress. If a panic occurs in any\nread operation, the lock will not be poisoned.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::ShardedLock;\n\nlet lock = ShardedLock::new(5);\n\n// Any number of read locks can be held at once.\n{\n    let r1 = lock.read().unwrap();\n    let r2 = lock.read().unwrap();\n    assert_eq!(*r1, 5);\n    assert_eq!(*r2, 5);\n} // Read locks are dropped at this point.\n\n// However, only one write lock may be held.\n{\n    let mut w = lock.write().unwrap();\n    *w += 1;\n    assert_eq!(*w, 6);\n} // Write lock is dropped here.\n```\n\n[`RwLock`]: std::sync::RwLock","links":{"std::sync::RwLock":"1:9139:2294"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:623:2601","0:624:1735"],"impls":["0:633","0:638","a:2:3310:2445-0:621:2475","b:2:3198-0:621:2475","b:2:2872-0:621:2475","b:2:2869-0:621:2475","b:2:4002-0:621:2475","b:2:3205-0:621:2475","b:2:3202-0:621:2475","b:2:3213-0:621:2475","b:2:3208-0:621:2475","0:625","0:627","0:629","0:631","0:646","0:653","0:656"]}},"2:13619:54374":{"id":"2:13619:54374","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:633":{"id":"0:633","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[90,0],"end":[143,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:635:920","0:637:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:526:2474":{"id":"b:2:3208-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:159:1915":{"id":"a:2:3281:220-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:162:814":{"id":"0:162:814","crate_id":0,"name":"load","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[919,4],"end":[919,39]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_order",{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:47787:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:527:2244":{"id":"0:527:2244","crate_id":0,"name":"inner","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[216,4],"end":[216,21]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:245:920":{"id":"0:245:920","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[95,4],"end":[97,5]},"visibility":"public","docs":"Creates a new `Backoff`.\n\n# Examples\n\n```\nuse crossbeam_utils::Backoff;\n\nlet backoff = Backoff::new();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[855,0],"end":[861,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:149:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:629":{"id":"0:629","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[87,0],"end":[87,48]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:1712-0:242:1599":{"id":"a:2:9340:1712-0:242:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Backoff","id":"0:242:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:535:660":{"id":"0:535:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[295,4],"end":[297,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:618:2564":{"id":"b:2:3213-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:667":{"id":"0:667","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[491,0],"end":[497,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:669:221","0:670:543"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:220:545":{"id":"0:220:545","crate_id":0,"name":"deref_mut","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[174,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163:1339":{"id":"0:163:1339","crate_id":0,"name":"store","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[922,4],"end":[922,50]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_val",{"kind":"tuple","inner":[]}],["_order",{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:47787:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:159:1915":{"id":"a:2:9339:1713-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:522:2528":{"id":"0:522:2528","crate_id":0,"name":"into_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Converts a `Parker` into a raw pointer.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::Parker;\n\nlet p = Parker::new();\nlet raw = Parker::into_raw(p);\n# let _ = unsafe { Parker::from_raw(raw) };\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["this",{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"tuple","inner":[]}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101:1704":{"id":"0:101:1704","crate_id":0,"name":"AtomicCell","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[33,0],"end":[47,1]},"visibility":"public","docs":"A thread-safe mutable memory location.\n\nThis type is equivalent to [`Cell`], except it can also be shared among multiple threads.\n\nOperations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using\nglobal locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether\natomic instructions or locks will be used.\n\nAtomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.\n\n[`Cell`]: std::cell::Cell\n[`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free\n[`Acquire`]: std::sync::atomic::Ordering::Acquire\n[`Release`]: std::sync::atomic::Ordering::Release","links":{"std::sync::atomic::Ordering::Release":"2:47787:178","AtomicCell::is_lock_free":"0:101:1704","std::cell::Cell":"2:4965:2017","std::sync::atomic::Ordering::Acquire":"2:47787:178"},"attrs":["#[repr(transparent)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:103:1735"],"impls":["0:112","0:120","0:123","0:126","0:291","0:302","0:313","0:324","0:335","0:346","0:357","0:368","0:379","0:388","0:397","0:408","0:136","a:2:3310:2445-0:101:1704","b:2:3198-0:101:1704","b:2:2872-0:101:1704","b:2:2869-0:101:1704","b:2:4002-0:101:1704","b:2:3205-0:101:1704","b:2:3202-0:101:1704","b:2:3213-0:101:1704","b:2:3208-0:101:1704","0:104","0:106","0:108","0:110","0:132","0:141","0:144","0:147"]}},"0:284:2434":{"id":"0:284:2434","crate_id":0,"name":"SeqLockWriteGuard","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[67,0],"end":[73,1]},"visibility":"crate","docs":"An RAII guard that releases the lock and increments the stamp when dropped.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:285:1832","0:286:1326"],"impls":["0:287","a:2:3310:2445-0:284:2434","a:2:3269:211-0:284:2434","a:2:9340:1712-0:284:2434","a:2:9339:1713-0:284:2434","a:2:3281:220-0:284:2434","b:2:3198-0:284:2434","b:2:2872-0:284:2434","b:2:2869-0:284:2434","b:2:4002-0:284:2434","b:2:3202-0:284:2434","b:2:3213-0:284:2434","b:2:3208-0:284:2434","0:289"]}},"0:463:59":{"id":"0:463:59","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,22],"end":[61,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:677:2477":{"id":"b:2:4002-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:702:2688":{"id":"b:2:2872-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:444:1954":{"id":"0:444:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[76,0],"end":[76,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"i32"}}},"0:396:1863":{"id":"0:396:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i128);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i128"}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:833":{"id":"0:833","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[471,0],"end":[471,50]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13539:3181":{"id":"2:13539:3181","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13134:4719","`None`":"2:47591:176","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:680:1832":{"id":"0:680:1832","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[515,4],"end":[515,28]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:704:2692":{"id":"0:704:2692","crate_id":0,"name":"free_list","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[580,4],"end":[580,25]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"A list of free indices.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"0:730:2300":{"id":"0:730:2300","crate_id":0,"name":"cvar","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[54,4],"end":[54,17]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Condvar","id":"1:8690:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"1:5727:4356":{"id":"1:5727:4356","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728:7093","1:5729:56357","1:5730:56358"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4:1360":{"id":"0:4:1360","crate_id":0,"name":"sync","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[66,4],"end":[66,23]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5:330"],"is_stripped":false}},"1:5789:4360":{"id":"1:5789:4360","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:56863"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:453:1597":{"id":"0:453:1597","crate_id":0,"name":"CachePadded","span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[128,0],"end":[130,1]},"visibility":"public","docs":"Pads and aligns a value to the length of a cache line.\n\nIn concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of\ndata are not placed into the same cache line. Updating an atomic value invalidates the whole\ncache line it belongs to, which makes the next access to the same cache line slower for other\nCPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other\ncached data.\n\n# Size and alignment\n\nCache lines are assumed to be N bytes long, depending on the architecture:\n\n* On x86-64, aarch64, and powerpc64, N = 128.\n* On arm, mips, mips64, and riscv64, N = 32.\n* On s390x, N = 256.\n* On all others, N = 64.\n\nNote that N is just a reasonable guess and is not guaranteed to match the actual cache line\nlength of the machine the program is running on. On modern Intel architectures, spatial\nprefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that\ncache lines are 128 bytes long.\n\nThe size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate\na value of type `T`.\n\nThe alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.\n\n# Examples\n\nAlignment and padding:\n\n```\nuse crossbeam_utils::CachePadded;\n\nlet array = [CachePadded::new(1i8), CachePadded::new(2i8)];\nlet addr1 = &*array[0] as *const i8 as usize;\nlet addr2 = &*array[1] as *const i8 as usize;\n\nassert!(addr2 - addr1 >= 64);\nassert_eq!(addr1 % 64, 0);\nassert_eq!(addr2 % 64, 0);\n```\n\nWhen building a concurrent queue with a head and a tail index, it is wise to place them in\ndifferent cache lines so that concurrent threads pushing and popping elements don't invalidate\neach other's cache lines:\n\n```\nuse crossbeam_utils::CachePadded;\nuse std::sync::atomic::AtomicUsize;\n\nstruct Queue<T> {\n    head: CachePadded<AtomicUsize>,\n    tail: CachePadded<AtomicUsize>,\n    buffer: *mut T,\n}\n```","links":{},"attrs":["#[repr(align(128))]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:455:1735"],"impls":["0:210","a:2:3310:2445-0:453:1597","a:2:9340:1712-0:453:1597","a:2:9339:1713-0:453:1597","b:2:3198-0:453:1597","b:2:2872-0:453:1597","b:2:2869-0:453:1597","b:2:4002-0:453:1597","b:2:3205-0:453:1597","b:2:3202-0:453:1597","b:2:3213-0:453:1597","b:2:3208-0:453:1597","b:5:787-0:453:1597","0:456","0:459","0:461","0:464","0:468","0:470","0:474","0:476","0:206","0:208","0:214","0:218","0:221","0:224"]}},"2:13526:33195":{"id":"2:13526:33195","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16010:2137"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49841:4997","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:699:545":{"id":"0:699:545","crate_id":0,"name":"deref_mut","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[557,4],"end":[559,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:533:2533":{"id":"0:533:2533","crate_id":0,"name":"from_raw","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[287,4],"end":[291,5]},"visibility":"public","docs":"Converts a raw pointer into an `Unparker`.\n\n# Safety\n\nThis method is safe to use only with pointers returned by [`Unparker::into_raw`].\n\n# Examples\n\n```\nuse crossbeam_utils::sync::{Parker, Unparker};\n\nlet p = Parker::new();\nlet u = p.unparker().clone();\n\nlet raw = Unparker::into_raw(u);\nlet u = unsafe { Unparker::from_raw(raw) };\n```","links":{"`Unparker::into_raw`":"0:526:2474"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["ptr",{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"tuple","inner":[]}}}]],"output":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:840:1391":{"id":"0:840:1391","crate_id":0,"name":"thread","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[485,4],"end":[485,26]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":"A handle to the the spawned thread.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"thread::Thread","id":"1:10618:2902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"1:6557:2919":{"id":"1:6557:2919","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6558:2921","1:6559:2922"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:710:2699":{"id":"0:710:2699","crate_id":0,"name":"thread_id","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[599,4],"end":[599,23]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ThreadId","id":"1:10592:2559","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:23854:4799":{"id":"2:23854:4799","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23855:4816"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23850:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3:1033":{"id":"0:3:1033","crate_id":0,"name":"primitive","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[65,0],"end":[65,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]","#[allow(unused_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:4:1360"],"is_stripped":false}},"0:0:1601":{"id":"0:0:1601","crate_id":0,"name":"crossbeam_utils","span":{"filename":"crossbeam-utils/src/lib.rs","begin":[1,0],"end":[104,1]},"visibility":"public","docs":"Miscellaneous tools for concurrent programming.\n\n## Atomics\n\n* [`AtomicCell`], a thread-safe mutable memory location.\n* [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.\n\n## Thread synchronization\n\n* [`Parker`], a thread parking primitive.\n* [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.\n* [`WaitGroup`], for synchronizing the beginning or end of some computation.\n\n## Utilities\n\n* [`Backoff`], for exponential backoff in spin loops.\n* [`CachePadded`], for padding and aligning a value to the length of a cache line.\n* [`scope`], for spawning threads that borrow local variables from the stack.\n\n[`AtomicCell`]: atomic::AtomicCell\n[`AtomicConsume`]: atomic::AtomicConsume\n[`Parker`]: sync::Parker\n[`ShardedLock`]: sync::ShardedLock\n[`WaitGroup`]: sync::WaitGroup\n[`scope`]: thread::scope","links":{"sync::ShardedLock":"0:621:2475","sync::WaitGroup":"0:727:2478","thread::scope":"0:799:2810","`CachePadded`":"0:453:1597","`Backoff`":"0:242:1599","atomic::AtomicConsume":"0:181:1705","sync::Parker":"0:510:2473","atomic::AtomicCell":"0:101:1704"},"attrs":["#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms),\nallow(dead_code, unused_assignments, unused_variables))))]","#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:3:1033","0:57:330","0:195:1596","0:230:1598","0:479:1360","0:763:1391","0:227","0:254"],"is_stripped":false}},"2:8548:2446":{"id":"2:8548:2446","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8549:793","2:8550:2821"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:659:2476":{"id":"0:659:2476","crate_id":0,"name":"ShardedLockReadGuard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[483,0],"end":[487,1]},"visibility":"public","docs":"A guard used to release the shared read access of a [`ShardedLock`] when dropped.","links":{"`ShardedLock`":"0:621:2475"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:662:1832","0:663:1831","0:664:2304"],"impls":["a:2:3310:2445-0:659:2476","a:2:3269:211-0:659:2476","a:2:9340:1712-0:659:2476","a:2:9339:1713-0:659:2476","b:2:3198-0:659:2476","b:2:2872-0:659:2476","b:2:2869-0:659:2476","b:2:4002-0:659:2476","b:2:3202-0:659:2476","b:2:3213-0:659:2476","b:2:3208-0:659:2476","b:5:6413-0:659:2476","0:665","0:667","0:671","0:674"]}},"0:361:1847":{"id":"0:361:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:541:2506":{"id":"b:2:3198-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:1712-0:806:2813":{"id":"a:2:9340:1712-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:708:2698":{"id":"a:2:3269:211-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:277:1714":{"id":"a:2:3281:220-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:284:2434":{"id":"b:2:2869-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13593:60349":{"id":"2:13593:60349","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:548:2471":{"id":"0:548:2471","crate_id":0,"name":"sharded_lock","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[1,0],"end":[630,1]},"visibility":{"restricted":{"parent":"0:479:1360","path":"::sync"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:617:2562","0:618:2564","0:621:2475","0:659:2476","0:677:2477","0:700:2639","0:702:2688","0:706:2695","0:708:2698","0:850:2684"],"is_stripped":false}},"b:2:3208-0:621:2475":{"id":"b:2:3208-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:677:2477":{"id":"b:2:3198-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:297:1855":{"id":"0:297:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:327:1843":{"id":"0:327:1843","crate_id":0,"name":"fetch_and","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"and\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_and(3), 7);\nassert_eq!(a.load(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:858:2810":{"id":"0:858:2810","crate_id":0,"name":"scope","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[318,4],"end":[318,30]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'scope","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}}}}},"0:545":{"id":"0:545","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[318,0],"end":[413,1]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:546:2510","0:547:2540"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13623:4332":{"id":"2:13623:4332","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16004:2132"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49866:4333","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:3200":{"id":"5:790:3200","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:448:1967":{"id":"0:448:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[78,0],"end":[78,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11014:214":{"id":"2:11014:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11016:181","2:11017:1780","2:11018:2628","2:11019:54791","2:11020:54792","2:11021:753","2:11022:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11005:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[742,0],"end":[746,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"items":["0:398:1830","0:399:1839","0:400:1843","0:401:1847","0:402:1851","0:403:1855","0:404:1859","0:406:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:277:1714":{"id":"a:2:3269:211-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:60991","5:6085:1942","5:6088:60992","5:6091:60993","5:6103:60994","5:6104:60995","5:6105:3942","5:6106:54376","5:6107:54375"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6104:60995":{"id":"5:6104:60995","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:2448","`String`":"5:8368:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2448","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:4080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3205-0:101:1704":{"id":"b:2:3205-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"never"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3207:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13594:60350":{"id":"2:13594:60350","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:16004:2132","self::pattern":"2:13134:4719"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13164:4718","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:308:1855":{"id":"0:308:1855","crate_id":0,"name":"fetch_xor","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"xor\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_xor(2), 7);\nassert_eq!(a.load(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:791:3201":{"id":"5:791:3201","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:277:1714":{"id":"b:2:3198-0:277:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLock","id":"0:277:1714","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[842,0],"end":[846,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:143:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:702:2688":{"id":"a:2:3281:220-0:702:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadIndices","id":"0:702:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}}}},"items":["0:314:1830","0:315:1839","0:316:1843","0:317:1847","0:318:1851","0:319:1855","0:320:1859","0:322:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5741:4328":{"id":"1:5741:4328","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:8812","1:5743:54167","1:5744:7093","1:5745:58159","1:5746:4586","1:5747:4587","1:5748:58160","1:5749:1304","1:5750:58161","1:5751:58162","1:5752:58163","1:5753:58164","1:5754:58165","1:5755:58166","1:5756:58167","1:5757:58168"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:306:1847":{"id":"0:306:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281:1932":{"id":"0:281:1932","crate_id":0,"name":"optimistic_read","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[26,4],"end":[33,5]},"visibility":"crate","docs":"If not locked, returns the current stamp.\n\nThis method should be called before optimistic reads.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38888:4337","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:3137"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3104:4761":{"id":"2:3104:4761","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3431:2393":{"id":"2:3431:2393","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:298:1859":{"id":"0:298:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5775:4358":{"id":"1:5775:4358","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:56159","1:5777:56160","1:5778:56161","1:5779:56162"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4666:3908":{"id":"1:4666:3908","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:1748","1:4668:56189","1:4670:56190","1:4671:56191","1:4672:3909","1:4673:56188","1:4674:56187","1:4676:56192","1:4677:3170","1:4678:4441","1:4679:3155","1:4681:1786"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13073:4451":{"id":"2:13073:4451","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13074:126","2:13075:56681"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:166:330":{"id":"0:166:330","crate_id":0,"name":"atomic","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[939,0],"end":[967,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"macro","inner":"macro_rules! atomic {\n    (@check, $t:ty, $atomic:ty, $a:ident, $atomic_op:expr) => { ... };\n    ($t:ty, $a:ident, $atomic_op:expr, $fallback_op:expr) => { ... };\n}"},"b:2:3202-0:727:2478":{"id":"b:2:3202-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:544:2300":{"id":"0:544:2300","crate_id":0,"name":"cvar","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[315,4],"end":[315,17]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Condvar","id":"1:8690:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[50,0],"end":[50,46]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10385:3379":{"id":"2:10385:3379","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10386:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:479:1360":{"id":"0:479:1360","crate_id":0,"name":"sync","span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[1,0],"end":[15,36]},"visibility":"public","docs":"Thread synchronization primitives.\n\n* [`Parker`], a thread parking primitive.\n* [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.\n* [`WaitGroup`], for synchronizing the beginning or end of some computation.","links":{"`Parker`":"0:510:2473","`ShardedLock`":"0:621:2475","`WaitGroup`":"0:727:2478"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:480:2470","0:548:2471","0:713:2472","0:744","0:747","0:751","0:754","0:757","0:760"],"is_stripped":false}},"0:421:1967":{"id":"0:421:1967","crate_id":0,"name":"load_consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[68,0],"end":[68,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Val","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:181:1705","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:309:1859":{"id":"0:309:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[723,0],"end":[723,71]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i8);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i8"}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14322:4079":{"id":"2:14322:4079","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14323:56076","2:14324:56077","2:14325:56078","2:14326:56079","2:14327:56080","2:14328:56081","2:14329:3170"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:370:1839":{"id":"0:370:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:659:2476":{"id":"b:2:3213-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:735:920":{"id":"0:735:920","crate_id":0,"name":"new","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[79,4],"end":[81,5]},"visibility":"public","docs":"Creates a new wait group and returns the single reference to it.\n\n# Examples\n\n```\nuse crossbeam_utils::sync::WaitGroup;\n\nlet wg = WaitGroup::new();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[61,37],"end":[61,46]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:296:1851":{"id":"0:296:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[75,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:260:1700","path":"::atomic::seq_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:288:263"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:171:1773":{"id":"0:171:1773","crate_id":0,"name":"atomic_store","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[1029,0],"end":[1042,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"Atomically writes `val` to `dst`.\n\nThis operation uses the `Release` ordering. If possible, an atomic instructions is used, and a\nglobal lock otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["dst",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}}],["val",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[727,0],"end":[727,74]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}},"items":["0:347:1830","0:348:1839","0:349:1843","0:350:1847","0:351:1851","0:352:1855","0:353:1859","0:355:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:246:2063":{"id":"0:246:2063","crate_id":0,"name":"reset","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[110,4],"end":[112,5]},"visibility":"public","docs":"Resets the `Backoff`.\n\n# Examples\n\n```\nuse crossbeam_utils::Backoff;\n\nlet backoff = Backoff::new();\nbackoff.reset();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:159:1915":{"id":"b:2:4002-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:627":{"id":"0:627","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[85,0],"end":[85,63]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:754":{"id":"0:754","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/mod.rs","begin":[14,42],"end":[14,62]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_loom))]"],"deprecation":null,"kind":"import","inner":{"source":"self::sharded_lock::ShardedLockReadGuard","name":"ShardedLockReadGuard","id":"0:659:2476","glob":false}},"5:6105:3942":{"id":"5:6105:3942","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164:1772":{"id":"0:164:1772","crate_id":0,"name":"swap","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[925,4],"end":[925,49]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_val",{"kind":"tuple","inner":[]}],["_order",{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:47787:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:242:1599":{"id":"0:242:1599","crate_id":0,"name":"Backoff","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[80,0],"end":[82,1]},"visibility":"public","docs":"Performs exponential backoff in spin loops.\n\nBacking off in spin loops reduces contention and improves overall performance.\n\nThis primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS\nscheduler, and tell when is a good time to block the thread using a different synchronization\nmechanism. Each step of the back off procedure takes roughly twice as long as the previous\nstep.\n\n# Examples\n\nBacking off in a lock-free loop:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicUsize;\nuse std::sync::atomic::Ordering::SeqCst;\n\nfn fetch_mul(a: &AtomicUsize, b: usize) -> usize {\n    let backoff = Backoff::new();\n    loop {\n        let val = a.load(SeqCst);\n        if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {\n            return val;\n        }\n        backoff.spin();\n    }\n}\n```\n\nWaiting for an [`AtomicBool`] to become `true`:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\n\nfn spin_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        backoff.snooze();\n    }\n}\n```\n\nWaiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.\nNote that whoever sets the atomic variable to `true` must notify the parked thread by calling\n[`unpark()`]:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::atomic::Ordering::SeqCst;\nuse std::thread;\n\nfn blocking_wait(ready: &AtomicBool) {\n    let backoff = Backoff::new();\n    while !ready.load(SeqCst) {\n        if backoff.is_completed() {\n            thread::park();\n        } else {\n            backoff.snooze();\n        }\n    }\n}\n```\n\n[`is_completed`]: Backoff::is_completed\n[`std::thread::park()`]: std::thread::park\n[`Condvar`]: std::sync::Condvar\n[`AtomicBool`]: std::sync::atomic::AtomicBool\n[`unpark()`]: std::thread::Thread::unpark","links":{"std::thread::Thread::unpark":"1:10618:2902","std::sync::atomic::AtomicBool":"2:9843:79"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:243:2058"],"impls":["0:244","a:2:3310:2445-0:242:1599","a:2:3269:211-0:242:1599","a:2:9340:1712-0:242:1599","a:2:9339:1713-0:242:1599","a:2:3281:220-0:242:1599","b:2:3198-0:242:1599","b:2:2872-0:242:1599","b:2:2869-0:242:1599","b:2:4002-0:242:1599","b:2:3202-0:242:1599","b:2:3213-0:242:1599","b:2:3208-0:242:1599","0:250","0:252"]}},"0:705:2694":{"id":"0:705:2694","crate_id":0,"name":"next_index","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[583,4],"end":[583,21]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"The next index to allocate if the free list is empty.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:690":{"id":"0:690","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[542,0],"end":[546,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:692:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:443":{"id":"0:443","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[76,0],"end":[76,28]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicI32","id":"2:47980:82","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:444:1954","0:445:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4783:4803":{"id":"2:4783:4803","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:3147","2:4785:59624","2:4786:3150"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3717:2400":{"id":"2:3717:2400","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:2399","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:383:1847":{"id":"0:383:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3376:2382":{"id":"2:3376:2382","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:835:2848":{"id":"b:2:3198-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:420:1954":{"id":"0:420:1954","crate_id":0,"name":"Val","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[68,0],"end":[68,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"bool"}}},"0:167:1767":{"id":"0:167:1767","crate_id":0,"name":"atomic_is_lock_free","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[970,0],"end":[981,1]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":"Returns `true` if operations on `AtomicCell<T>` are lock-free.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"0:528":{"id":"0:528","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[219,0],"end":[219,32]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:247:2072":{"id":"0:247:2072","crate_id":0,"name":"spin","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[146,4],"end":[157,5]},"visibility":"public","docs":"Backs off in a lock-free loop.\n\nThis method should be used when we need to retry an operation because another thread made\nprogress.\n\nThe processor may yield using the *YIELD* or *PAUSE* instruction.\n\n# Examples\n\nBacking off in a lock-free loop:\n\n```\nuse crossbeam_utils::Backoff;\nuse std::sync::atomic::AtomicUsize;\nuse std::sync::atomic::Ordering::SeqCst;\n\nfn fetch_mul(a: &AtomicUsize, b: usize) -> usize {\n    let backoff = Backoff::new();\n    loop {\n        let val = a.load(SeqCst);\n        if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {\n            return val;\n        }\n        backoff.spin();\n    }\n}\n\nlet a = AtomicUsize::new(7);\nassert_eq!(fetch_mul(&a, 8), 7);\nassert_eq!(a.load(SeqCst), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:713:2472":{"id":"0:713:2472","crate_id":0,"name":"wait_group","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[2,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:479:1360","path":"::sync"}},"docs":null,"links":{},"attrs":["#![allow(clippy :: mutex_atomic)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:727:2478","0:729:2506"],"is_stripped":false}},"0:831":{"id":"0:831","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/thread.rs","begin":[470,0],"end":[470,50]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:697":{"id":"0:697","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[556,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:3505:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:699:545"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:795:2800":{"id":"0:795:2800","crate_id":0,"name":"SharedVec","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[125,0],"end":[125,39]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:655:59":{"id":"0:655:59","crate_id":0,"name":"default","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[471,4],"end":[473,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:541:2506":{"id":"a:2:3269:211-0:541:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:541:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4741:3912":{"id":"1:4741:3912","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:58433","1:4743:40055","1:4744:58434","1:4745:58435"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:621:2475":{"id":"b:2:2872-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:293:1839":{"id":"0:293:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[722,0],"end":[722,71]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u8);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:659:2476":{"id":"a:2:9339:1713-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:315:1839":{"id":"0:315:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[724,0],"end":[724,74]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u16);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:806:2813":{"id":"a:2:3310:2445-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:797:2801":{"id":"0:797:2801","crate_id":0,"name":"SharedOption","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[126,0],"end":[126,45]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:372:1847":{"id":"0:372:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:526:2474":{"id":"b:2:4002-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13588:60346":{"id":"2:13588:60346","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:855:2855":{"id":"b:2:3202-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/cache_padded.rs","begin":[165,0],"end":[171,1]},"visibility":{"restricted":{"parent":"0:195:1596","path":"::cache_padded"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:216:221","0:217:543"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13547:53853":{"id":"2:13547:53853","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8523:120","str::rsplit":"1:16010:2137","str::split_whitespace":"1:16010:2137","self::pattern":"2:13134:4719","prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49558:3920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:728:2244":{"id":"0:728:2244","crate_id":0,"name":"inner","span":{"filename":"crossbeam-utils/src/sync/wait_group.rs","begin":[49,4],"end":[49,21]},"visibility":{"restricted":{"parent":"0:713:2472","path":"::sync::wait_group"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Inner","id":"0:729:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:288:263":{"id":"0:288:263","crate_id":0,"name":"abort","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[78,4],"end":[84,5]},"visibility":"crate","docs":"Releases the lock without incrementing the stamp.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2445-0:510:2473":{"id":"a:2:3310:2445-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:692:660":{"id":"0:692:660","crate_id":0,"name":"fmt","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5653:4369":{"id":"1:5653:4369","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5654:5926","1:5655:56155"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:4326","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13524:4441":{"id":"2:13524:4441","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49544:3918","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13522:5017":{"id":"2:13522:5017","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16004:2132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49528:4981","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13529:33190":{"id":"2:13529:33190","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49850:4998","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:387:1863":{"id":"0:387:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:329:1851":{"id":"0:329:1851","crate_id":0,"name":"fetch_or","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"or\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_or(16), 7);\nassert_eq!(a.load(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:526:2474":{"id":"b:2:2872-0:526:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unparker","id":"0:526:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13559:60339":{"id":"2:13559:60339","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:16010:2137","prim@char":"1:16004:2132","self::pattern":"2:13134:4719","str::split_terminator":"1:16010:2137"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49626:4987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:618:2564":{"id":"0:618:2564","crate_id":0,"name":"Shard","span":{"filename":"crossbeam-utils/src/sync/sharded_lock.rs","begin":[19,0],"end":[28,1]},"visibility":{"restricted":{"parent":"0:548:2471","path":"::sync::sharded_lock"}},"docs":"A shard containing a single reader-writer lock.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:619:1832","0:620:2569"],"impls":["a:2:3310:2445-0:618:2564","a:2:3269:211-0:618:2564","a:2:9340:1712-0:618:2564","a:2:9339:1713-0:618:2564","a:2:3281:220-0:618:2564","b:2:3198-0:618:2564","b:2:2872-0:618:2564","b:2:2869-0:618:2564","b:2:4002-0:618:2564","b:2:3202-0:618:2564","b:2:3213-0:618:2564","b:2:3208-0:618:2564"]}},"0:278:1326":{"id":"0:278:1326","crate_id":0,"name":"state","span":{"filename":"crossbeam-utils/src/atomic/seq_lock.rs","begin":[12,4],"end":[12,22]},"visibility":{"restricted":{"parent":"0:260:1700","path":"::atomic::seq_lock"}},"docs":"The current state of the lock.\n\nAll bits except the least significant one hold the current stamp. When locked, the state\nequals 1 and doesn't contain a valid stamp.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AtomicUsize","id":"2:48190:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:388":{"id":"0:388","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[740,0],"end":[740,67]},"visibility":{"restricted":{"parent":"0:58:1702","path":"::atomic::atomic_cell"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i128"}}],"bindings":[]}}}},"items":["0:389:1830","0:390:1839","0:391:1843","0:392:1847","0:393:1851","0:394:1855","0:395:1859","0:396:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:510:2473":{"id":"b:2:2872-0:510:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parker","id":"0:510:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:1712-0:618:2564":{"id":"a:2:9340:1712-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:125:814":{"id":"0:125:814","crate_id":0,"name":"load","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Loads a value from the atomic cell.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7);\n\nassert_eq!(a.load(), 7);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:808:2815":{"id":"0:808:2815","crate_id":0,"name":"handles","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[196,4],"end":[196,60]},"visibility":{"restricted":{"parent":"0:763:1391","path":"::thread"}},"docs":"The list of the thread join handles.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6652:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"thread::JoinHandle","id":"1:1041:2824","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:3213-0:855:2855":{"id":"b:2:3213-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:1712-0:677:2477":{"id":"a:2:9340:1712-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:453:1597":{"id":"b:2:2869-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:855:2855":{"id":"b:2:3208-0:855:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedThreadBuilder","id":"0:855:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:727:2478":{"id":"a:2:3281:220-0:727:2478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitGroup","id":"0:727:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:453:1597":{"id":"b:5:787-0:453:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachePadded","id":"0:453:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:3199","5:790:3200","5:791:3201"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10620:146":{"id":"2:10620:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10621:652","2:10622:1833","2:10623:54179","2:10624:54180","2:10625:54181","2:10626:54182","2:10627:54183","2:10628:54184","2:10629:54185","2:10630:54186","2:10631:54187","2:10632:54188","2:10633:54189","2:10634:54190","2:10635:54191","2:10636:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:328:1847":{"id":"0:328:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[725,0],"end":[725,74]},"visibility":"public","docs":"Applies bitwise \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i16);\n\nassert_eq!(a.fetch_nand(3), 7);\nassert_eq!(a.load(), !(7 & 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i16"}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:240:2018":{"id":"0:240:2018","crate_id":0,"name":"SPIN_LIMIT","span":{"filename":"crossbeam-utils/src/backoff.rs","begin":[5,0],"end":[5,26]},"visibility":{"restricted":{"parent":"0:230:1598","path":"::backoff"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u32"},"expr":"6","value":"6u32","is_literal":true}},"2:13510:1780":{"id":"2:13510:1780","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:417:1863":{"id":"0:417:1863","crate_id":0,"name":"fetch_min","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[747,0],"end":[751,1]},"visibility":"public","docs":"Compares and sets the minimum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7isize);\n\nassert_eq!(a.fetch_min(2), 7);\nassert_eq!(a.load(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"isize"}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:159:1915":{"id":"b:2:2872-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4782","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:659:2476":{"id":"b:2:2869-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:101:1704":{"id":"b:2:3202-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:806:2813":{"id":"b:2:3208-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:375:1859":{"id":"0:375:1859","crate_id":0,"name":"fetch_max","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[731,0],"end":[731,74]},"visibility":"public","docs":"Compares and sets the maximum of the current value and `val`,\nand returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7i64);\n\nassert_eq!(a.fetch_max(9), 7);\nassert_eq!(a.load(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:1713-0:806:2813":{"id":"a:2:9339:1713-0:806:2813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'env","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Scope","id":"0:806:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'env"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[80,0],"end":[80,28]},"visibility":{"restricted":{"parent":"0:177:1703","path":"::atomic::consume"}},"docs":null,"links":{},"attrs":["#[cfg(not(crossbeam_no_atomic))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicConsume","id":"0:181:1705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"core::sync::atomic::AtomicI64","id":"2:48064:83","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:450:1954","0:451:1967"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13597:60351":{"id":"2:13597:60351","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16004:2132","self::pattern":"2:13134:4719"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13553:54822":{"id":"2:13553:54822","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"1:16010:2137","prim@char":"1:16004:2132","`DoubleEndedIterator`":"2:8523:120","self::pattern":"2:13134:4719"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49576:4957","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6413-0:677:2477":{"id":"b:5:6413-0:677:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockWriteGuard","id":"0:677:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:1713-0:708:2698":{"id":"a:2:9339:1713-0:708:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:1713","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Registration","id":"0:708:2698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:177:1703":{"id":"0:177:1703","crate_id":0,"name":"consume","span":{"filename":"crossbeam-utils/src/atomic/consume.rs","begin":[1,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:57:330","path":"::atomic"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:181:1705","0:184:1968","0:185:1969"],"is_stripped":false}},"2:8479:151":{"id":"2:8479:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8480:3147","2:8481:3148","2:8482:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:659:2476":{"id":"b:2:3198-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:3137"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:381:1839":{"id":"0:381:1839","crate_id":0,"name":"fetch_sub","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[739,0],"end":[739,67]},"visibility":"public","docs":"Decrements the current value by `val` and returns the previous value.\n\nThe subtraction wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u128);\n\nassert_eq!(a.fetch_sub(3), 7);\nassert_eq!(a.load(), 4);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u128"}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:659:2476":{"id":"b:2:3208-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:138:1847":{"id":"0:138:1847","crate_id":0,"name":"fetch_nand","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[794,4],"end":[797,5]},"visibility":"public","docs":"Applies logical \"nand\" to the current value and returns the previous value.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(true);\n\nassert_eq!(a.fetch_nand(false), true);\nassert_eq!(a.load(), true);\n\nassert_eq!(a.fetch_nand(true), true);\nassert_eq!(a.load(), false);\n\nassert_eq!(a.fetch_nand(false), false);\nassert_eq!(a.load(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:101:1704":{"id":"b:2:4002-0:101:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicCell","id":"0:101:1704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"crossbeam-utils/src/atomic/mod.rs","begin":[37,0],"end":[37,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::consume::AtomicConsume","name":"AtomicConsume","id":"0:181:1705","glob":false}},"b:2:3208-0:159:1915":{"id":"b:2:3208-0:159:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUnit","id":"0:159:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:284:2434":{"id":"b:2:4002-0:284:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SeqLockWriteGuard","id":"0:284:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:3199","5:785:3200","5:786:3201"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:621:2475":{"id":"b:2:4002-0:621:2475","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLock","id":"0:621:2475","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:835:2848":{"id":"b:2:2869-0:835:2848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ScopedJoinHandle","id":"0:835:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'scope"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2202"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:358:1830":{"id":"0:358:1830","crate_id":0,"name":"fetch_add","span":{"filename":"crossbeam-utils/src/atomic/atomic_cell.rs","begin":[729,0],"end":[729,74]},"visibility":"public","docs":"Increments the current value by `val` and returns the previous value.\n\nThe addition wraps on overflow.\n\n# Examples\n\n```\nuse crossbeam_utils::atomic::AtomicCell;\n\nlet a = AtomicCell::new(7u64);\n\nassert_eq!(a.fetch_add(3), 7);\nassert_eq!(a.load(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:543:1832":{"id":"0:543:1832","crate_id":0,"name":"lock","span":{"filename":"crossbeam-utils/src/sync/parker.rs","begin":[314,4],"end":[314,19]},"visibility":{"restricted":{"parent":"0:480:2470","path":"::sync::parker"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Mutex","id":"1:8803:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}},"a:2:3269:211-0:659:2476":{"id":"a:2:3269:211-0:659:2476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ShardedLockReadGuard","id":"0:659:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:846:1391":{"id":"0:846:1391","crate_id":0,"name":"thread","span":{"filename":"crossbeam-utils/src/thread.rs","begin":[543,4],"end":[545,5]},"visibility":"public","docs":"Returns a handle to the underlying thread.\n\n# Examples\n\n```\nuse crossbeam_utils::thread;\n\nthread::scope(|s| {\n    let handle = s.spawn(|_| println!(\"A child thread is running\"));\n    println!(\"The child thread ID: {:?}\", handle.thread().id());\n}).unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"thread::Thread","id":"1:10618:2902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10393:3382":{"id":"2:10393:3382","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10394:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:618:2564":{"id":"b:2:4002-0:618:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Shard","id":"0:618:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"1:12083:6392":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"17:542:5531":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"21:410:2327":{"crate_id":21,"path":["once_cell","imp","OnceCell"],"kind":"struct"},"16:6605:5612":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:5960:4618":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:10866:4546":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:3972:8685":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:8146:60156":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:23744:4324":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:11297:6391":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:3364:2377":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"15:248:5435":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11738:7150":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:4160:8779":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:2594:8250":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:2062:3649":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:6269:5648":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:10701:8257":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:7441:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:1075:4330":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:12521:7306":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:696:3023":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:50278:5009":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"5:3329:3627":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"12:2253:4506":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:46132:4780":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"5:4699:6066":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:46533:4885":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:3145:5784":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:7195:5667":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:14043:59259":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"17:9809:61516":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:7477:5620":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:11317:54160":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"9:1020:5348":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:8410:5209":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"16:7549:5606":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"18:651:5969":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:7257:6061":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:32428:59398":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:3658:6088":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:56499:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:11519:4963":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:8380:3102":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:15412:4573":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"0:167:1767":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_is_lock_free"],"kind":"function"},"2:5605:4819":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:11491:4961":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:5175:8933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:7620:5182":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:3488:5782":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:46826:4687":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:9849:61512":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:9886:6995":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:9034:47168":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:5384:5484":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:10489:5865":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:10882:3930":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:10623:7027":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"12:2280:4508":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:10448:5862":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:11457:9154":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:48645:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"5:1663:4499":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"12:2412:8397":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"18:850:5964":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"14:47:8030":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:5858:4612":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"9:722:5282":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:14149:4804":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"12:764:3628":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:3064:5831":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"18:821:5962":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:10:979":{"crate_id":1,"path":["std","panic"],"kind":"macro"},"16:3549:7756":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:4641:7771":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"18:730:61522":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:22920:4827":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:3812:2407":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:1235:5217":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:10041:7003":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:607:8459":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:14159:5021":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:12227:2285":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:0:2110":{"crate_id":17,"path":["object"],"kind":"module"},"6:545:8419":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:15122:6387":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:4179:8780":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:88:39950":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"5:3044:6135":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"19:117:8346":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"17:12712:7339":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"18:775:6890":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:6101:5593":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:12537:7308":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:3038:3199":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:28134:4790":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:1674:4500":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:7286:8251":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:5927:5514":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:13192:7516":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:7303:5673":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:50298:5007":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4340:8819":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:12004:4485":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"5:6475:4394":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:13497:7592":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:32480:59401":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"17:12917:7358":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"16:4477:7767":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11358:5847":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:4116:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:11360:4568":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:5727:4356":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:12773:8288":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"17:11519:7125":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:46433:5121":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"0:479:1360":{"crate_id":0,"path":["crossbeam_utils","sync"],"kind":"module"},"17:13963:7733":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:12118:7228":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:50282:5013":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:9528:3918":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:10912:7066":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:46898:4640":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"12:0:2106":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"0:58:1702":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell"],"kind":"module"},"16:6176:5644":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:4493:8887":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:4306:3628":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:10375:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:22629:59391":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:1190:6204":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"5:8115:3148":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:6636:5614":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:12137:6087":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:14210:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:1459:4497":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:4362:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:3682:3922":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:11194:3627":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:4440:8864":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:50144:4736":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:52421:4843":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:8391:5141":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:15754:6116":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:8106:4080":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:56486:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:3342:2379":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:5790:5509":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"15:230:5434":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:8239:58688":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"9:0:2103":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:1015:205":{"crate_id":1,"path":["std","thread","Result"],"kind":"typedef"},"5:1472:4507":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"18:802:5960":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:9440:6321":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:49528:4981":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:1621:8533":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:13786:4493":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:1619:4506":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:12053:4489":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:5775:4358":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:10660:3589":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"0:538:2507":{"crate_id":0,"path":["crossbeam_utils","sync","parker","EMPTY"],"kind":"constant"},"2:22933:4326":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"12:1256:4509":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:8442:4681":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:16005:2133":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:3091:5832":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"0:169:1788":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_load"],"kind":"function"},"1:900:2848":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:3287:5780":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:6964:2360":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:5421:5486":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:13356:7557":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:15201:4431":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:11981:7203":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:3577:2396":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:7761:5675":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:9771:6105":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"5:6764:3649":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:7146:5663":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:4198:8781":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:432:2448":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:3435:2394":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:161:40017":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:13429:7570":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:9627:6206":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"14:231:5143":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"5:1091:6061":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:9186:5852":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:2283:4785":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"18:661:5973":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:3993:8695":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:10809:4367":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:3427:2392":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:3877:8621":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:10656:7028":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:8176:5156":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:14565:9381":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:49356:4965":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:3287:2322":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"12:379:5419":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"14:250:8037":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:47591:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"12:1703:5427":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"0:548:2471":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock"],"kind":"module"},"2:46548:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:4728:4821":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:24093:8122":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:16016:2141":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:51965:8179":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"13:120:45485":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:6859:4317":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"0:835:2848":{"crate_id":0,"path":["crossbeam_utils","thread","ScopedJoinHandle"],"kind":"struct"},"21:129:2327":{"crate_id":21,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"2:46454:5115":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:46477:5116":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"10:0:2104":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:5488:5492":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:5717:5503":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:13609:7622":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:50517:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:46493:4999":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:2177:4397":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:11409:4616":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:5165:2319":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:4028:8713":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:4379:8841":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:45940:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:7795:4491":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:50337:5071":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"8:0:1600":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:46048:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"18:611:5970":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:4392:8846":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:24201:8124":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"13:232:6342":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"0:242:1599":{"crate_id":0,"path":["crossbeam_utils","backoff","Backoff"],"kind":"struct"},"2:24209:8125":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:6126:5642":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:13119:7504":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:10635:6323":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:14236:3937":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:4055:8725":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:52892:4876":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:6640:9267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:4256:8786":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:2553:5222":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:46631:6081":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:56473:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:13144:4720":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:3380:2381":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:5456:5488":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:24647:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:49812:3921":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:4783:4803":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:6697:9167":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:5244:8963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:12275:7249":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:10684:13419":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:46867:4691":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:6166:5643":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:12742:4524":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"6:6211:9239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:37707:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:5298:8990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:3241:5778":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:10279:5836":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:2171:4396":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:6644:5657":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:10816:4526":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:4790:7776":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:5030:2309":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:580:8445":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"9:157:5298":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"6:6031:9154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:16015:2140":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:12568:7313":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:15353:4565":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:1524:4504":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"18:136:53459":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:16026:2151":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:12671:7334":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:4215:4394":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:16010:2137":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:9634:6103":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"1:1501:4501":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:513:8406":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:10543:7018":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:4723:3372":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:9843:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:49875:5000":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:46364:4333":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4516:8895":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:7379:3148":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"20:4:1600":{"crate_id":20,"path":["cfg_if","cfg_if"],"kind":"macro"},"2:23010:4326":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:5101:2316":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:1633:4507":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:53599:6487":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:547:5505":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:11137:3918":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:52534:4832":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"0:510:2473":{"crate_id":0,"path":["crossbeam_utils","sync","parker","Parker"],"kind":"struct"},"1:1497:4500":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:2292:3459":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"18:668:5974":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:12242:2286":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:10799:4329":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:4304:7762":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:9264:6313":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:4762:7775":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:10332:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:1537:8483":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"0:618:2564":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","Shard"],"kind":"struct"},"2:2916:415":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:50119:4734":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:2155:3627":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:46798:4684":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:510:6909":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12783:7349":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:9133:47171":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:16023:2148":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:13163:7509":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:51642:4869":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:593:8451":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11328:7087":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:12494:7302":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:10468:5861":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:10211:7011":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:3759:3627":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:1912:41323":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:13554:7608":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:12744:6111":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:24022:5032":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:49544:3918":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"5:8330:5205":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:22644:59391":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:1017:3102":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:11325:4955":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12645:7332":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:3411:2389":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:46708:4671":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:7453:5598":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:7250:5672":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:48368:3379":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:14322:4079":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:6620:5801":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:5207:8951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:10393:3382":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:6922:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:6928:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:1635:4496":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"18:721:6891":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:4394:4550":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:1415:3627":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:49448:4971":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:3736:3929":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:11750:7151":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:22663:59490":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:24295:9303":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"18:767:6901":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:5430:9062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:3717:2400":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6391:5650":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:3338:5518":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:11402:4374":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:1438:3148":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:7856:5677":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:11555:6333":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:24186:4920":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:4148:8770":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:49708:4990":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:2310:5260":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:11506:2353":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:12262:2479":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:11100:5892":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:10618:2902":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:612:8461":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:1567:8496":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:46471:4333":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:3041:5774":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:9769:61517":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:3352:2375":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:13180:7511":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:294:6907":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:51307:4861":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:14103:6112":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:10864:7063":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:1694:8587":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:13961:4486":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:13733:7668":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:10452:6109":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:1634:8540":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:11575:4463":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:22831:4825":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:22682:59489":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:2330:5218":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:57795:8239":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:5766:5508":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:5444:9067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"0:795:2800":{"crate_id":0,"path":["crossbeam_utils","thread","SharedVec"],"kind":"typedef"},"1:10366:6912":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:24330:5047":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:9943:61513":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:6780:5659":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"9:234:5306":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"16:3522:6916":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:6662:9268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:10710:3916":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:12735:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:4110:8754":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:12010:7208":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"0:713:2472":{"crate_id":0,"path":["crossbeam_utils","sync","wait_group"],"kind":"module"},"6:5257:8972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:5475:9075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:51195:4860":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"0:57:330":{"crate_id":0,"path":["crossbeam_utils","atomic"],"kind":"module"},"6:4098:8748":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:12010:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:49347:4964":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:46025:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:9476:6322":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:4242:8785":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:11378:5846":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:46888:4692":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:13331:7549":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:4671:7772":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:49396:4969":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:4922:7780":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:9799:6994":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:7828:4638":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:45981:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:13685:7667":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:3325:4529":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"0:150:1865":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","can_transmute"],"kind":"function"},"1:3200:3909":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:3172:5775":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:6181:9222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:6744:5808":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:10840:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"18:812:5961":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:23545:4817":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:6252:5647":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"9:927:44977":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:13041:7461":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:47094:3945":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:6247:9258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:3389:2388":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:374:5203":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:5837:5147":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:53225:4848":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:13221:7524":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:618:8464":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:53614:8228":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:15391:4566":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:8388:4463":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:6787:4392":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:5788:6061":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:14626:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:9759:6993":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:14575:4367":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:13098:7499":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:9766:6104":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"5:7849:6079":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:5330:6314":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4464:8878":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:8313:5059":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:46661:4669":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:13865:7708":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:11304:47175":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:16014:2139":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:24715:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:46699:4670":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:12142:7230":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:6087:5595":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10106:5942":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:5632:5499":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:5855:5511":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:12699:7338":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:6126:9185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11499:7115":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:4417:7765":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:10558:7020":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:5505:5493":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"0:166:330":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic"],"kind":"macro"},"12:2072:4399":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"6:1662:8564":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:6024:9150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:49385:4968":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:14570:9383":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:1843:6061":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:6082:4575":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13282:7538":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:6202:9236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:13547:7607":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:2397:8248":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:49866:4333":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"12:815:4500":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:12507:7303":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:5735:4357":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"21:418:6308":{"crate_id":21,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"17:12741:7342":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:16021:2146":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"0:453:1597":{"crate_id":0,"path":["crossbeam_utils","cache_padded","CachePadded"],"kind":"struct"},"2:13359:8119":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"6:5971:9121":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:3337:2374":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:7738:5674":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:157:40016":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:13590:7617":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:51147:8174":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:13164:4718":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:9139:2294":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:10160:7008":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:12171:4418":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:8902:47165":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:51381:4853":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:46191:4902":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:46071:2398":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:2794:5522":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:2866:4782":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"12:787:4499":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:15235:4439":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:47633:3627":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:3347:2376":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:8255:2278":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:6718:5806":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"0:621:2475":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ShardedLock"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:3423:2391":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:12040:7211":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:3561:3926":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:3907:8639":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:1428:3628":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:6510:4677":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:9060:2291":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:5376:4566":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:4061:8727":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:2793:4336":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:13465:7584":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:7174:5665":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:7823:5609":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:48679:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"5:8203:3148":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:11616:7135":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:32776:2342":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:6110:5636":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:0:2109":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:9339:1713":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"0:185:1969":{"crate_id":0,"path":["crossbeam_utils","atomic","consume","impl_atomic"],"kind":"macro"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"12:432:5417":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13453:7578":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:14958:6115":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:9343:4322":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:4443:3627":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:4230:8784":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:53629:8229":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:10028:7002":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:6964:9296":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:6556:2920":{"crate_id":1,"path":["std","os","unix","thread","RawPthread"],"kind":"typedef"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:8479:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:47649:3148":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"16:7571:5594":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:46787:4679":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:12195:7238":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"18:740:6896":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:9162:5889":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"5:5415:3649":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:672:40349":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:11082:5853":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"12:2398:8395":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:8925:4598":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"1:1642:4508":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:3775:2324":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9861:6106":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"18:169:53461":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:984:2846":{"crate_id":1,"path":["std","thread","spawn"],"kind":"function"},"17:12946:7378":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:9245:5843":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11458:7109":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:9065:47169":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"7:85:44881":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:11588:7131":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:8488:4415":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:6695:9165":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:10887:7064":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:24919:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:50082:4733":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:1493:4499":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:12385:7283":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:4432:3937":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:3366:2118":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:5485:9077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:53288:4868":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:53524:6475":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:6554:5654":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:49662:4960":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:46755:8157":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:13370:7559":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:5295:45590":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:48232:2243":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:13564:7611":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:46139:4781":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:3743:5916":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:8967:4758":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:3320:5833":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:8803:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:4386:8843":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6226:9246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:12073:7221":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:5156:2318":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:5789:4360":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:47641:3628":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:50440:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:14808:4372":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:626:8469":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:5231:7784":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"14:194:45513":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:7042:5818":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:23208:4326":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:10610:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13772:7683":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:5996:5640":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:12187:4419":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"14:216:45519":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:46727:4673":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:47114:8116":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:14317:2902":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"0:806:2813":{"crate_id":0,"path":["crossbeam_utils","thread","Scope"],"kind":"struct"},"0:526:2474":{"crate_id":0,"path":["crossbeam_utils","sync","parker","Unparker"],"kind":"struct"},"16:6357:5649":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:4506:7768":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:9933:6996":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:46379:4880":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:4373:8838":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:11640:6452":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:3506:5781":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:3417:2390":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:7279:5819":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:12004:4975":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"0:850:2684":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","REGISTRATION"],"kind":"constant"},"2:50324:3081":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"5:1939:4395":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:1740:8606":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:8193:6090":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"16:5273:5525":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:11436:4958":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:4885:2326":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:4397:4551":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"0:659:2476":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ShardedLockReadGuard"],"kind":"struct"},"6:6899:9282":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"11:46:8399":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:12247:2288":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:11420:4578":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11628:6456":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:13923:4484":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:12155:7233":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"12:1183:5413":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:9719:6992":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:48148:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:12852:4988":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:11180:4375":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"6:6934:9290":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11250:4380":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"5:2777:5221":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:49296:4959":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:5952:4617":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:53495:6474":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:13172:7510":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:6591:5656":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"12:928:4498":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:12891:4992":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:6004:9144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:7927:2506":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"1:1530:4505":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:1944:1709":{"crate_id":2,"path":["core","mem"],"kind":"module"},"6:6685:9279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:11159:7083":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:48064:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:7786:5608":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:6940:9291":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:4599:6064":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"1:11428:4567":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:5387:9046":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10353:5903":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:24579:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:49516:4651":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:11414:4619":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:4242:6061":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:4434:8863":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:56421:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11653:6458":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"11:54:5402":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:10381:3377":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:3103:4326":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:6199:4583":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:13939:6148":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"18:695:5975":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:8197:3148":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:47770:3628":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:49477:4974":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:9174:2674":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:7226:5670":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:9005:47167":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:51474:4830":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11696:7145":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:13799:7691":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:46816:4686":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:13884:7713":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:521:8411":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:6557:2919":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:4012:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:7933:4784":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13819:7694":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:10874:3928":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:8130:4394":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"12:353:6130":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:49857:4999":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:2773:5795":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:11962:7198":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:1653:4498":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:23854:4799":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:2218:5199":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:52468:4847":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:3740:2402":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:49142:5136":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:3933:8659":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:12307:7256":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:51454:8176":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:1748:8610":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:9280:6314":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:50270:5008":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:1311:5948":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:46500:5117":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:10516:5866":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:2166:4395":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:49422:4669":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:12282:3076":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:7732:4486":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:5564:9103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"12:2392:8394":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:4454:8872":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:22957:4826":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:12552:7312":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:11847:7182":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:7073:5662":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"13:0:2101":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6691:5658":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:49976:4727":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:5797:4362":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"12:1147:4508":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:11014:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:6951:9295":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:12028:7209":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:24249:39363":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:14609:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:820:6106":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"9:692:5281":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:9961:6997":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:51997:8180":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:4473:3940":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:24783:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:16007:2134":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:8132:3102":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:9733:4560":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"18:755:61521":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:3839:6061":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:10387:3380":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"0:540:2550":{"crate_id":0,"path":["crossbeam_utils","sync","parker","NOTIFIED"],"kind":"constant"},"1:16028:2153":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:16004:2132":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:6491:5652":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:7677:4484":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:16003:2131":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:12158:4417":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:12138:4416":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:2188:4399":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:539:8416":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:3370:4396":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:12132:3148":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:3648:2399":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"5:1644:4497":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:299:6908":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:13296:7539":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:14034:4485":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:13386:7562":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:45956:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"0:230:1598":{"crate_id":0,"path":["crossbeam_utils","backoff"],"kind":"module"},"1:4434:3938":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:10236:5857":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:6954:5151":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:8298:5204":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:13574:7614":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:49534:4982":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:7928:4780":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"12:940:4502":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:1600:8519":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:7742:3156":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:5146:8909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:13587:6147":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:16022:2147":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"0:541:2506":{"crate_id":0,"path":["crossbeam_utils","sync","parker","Inner"],"kind":"struct"},"2:50458:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:48715:3376":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:10962:3931":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:10938:7071":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"20:0:1600":{"crate_id":20,"path":["cfg_if"],"kind":"module"},"1:11658:4466":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:52499:4850":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:6976:9298":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:10061:7005":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:11208:4378":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"12:1203:5414":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:6013:9145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:46111:4341":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"12:971:4504":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:10140:5864":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:3488:4395":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:38888:4337":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"12:2032:3627":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:4526:8900":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11254:5888":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"12:2052:4396":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:9729:61518":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:51435:4845":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:5875:6070":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:11434:7095":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:8289:3102":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:10059:4941":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:6905:9283":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:10071:5947":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:10587:2856":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"12:2036:3148":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:6682:5611":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:11268:4426":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:5039:2311":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:10952:4446":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:11026:7078":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"18:0:2111":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:10529:7017":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:10321:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:12095:7222":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:8738:2297":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:6863:4320":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:51840:4834":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:4296:8799":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"12:1103:4506":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:49841:4997":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:11915:7184":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:4308:8806":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:46514:5119":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:53535:6478":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"15:0:2108":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"9:603:6358":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:13659:4452":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:1588:8511":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"14:56:7110":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:11045:47173":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:7884:5605":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:46446:5000":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11779:7162":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:2512:5898":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:6861:4319":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:4965:2017":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:10054:4940":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:12467:7298":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13637:7630":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:10577:54158":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:13394:7564":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:11678:7136":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:10527:8118":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:9368:6319":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:10926:7070":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:8160:3148":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:15032:4488":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"11:0:2105":{"crate_id":11,"path":["adler"],"kind":"module"},"17:12456:7297":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:1733:4579":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:8344:5206":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:23756:59395":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"9:27:5330":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:11231:5890":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:46677:4668":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:11118:47174":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:7420:5619":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"5:4643:6066":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"9:996:5347":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:13073:4451":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"21:171:2560":{"crate_id":21,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"1:12257:2296":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:6240:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:13862:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:11604:7132":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:3195:5776":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:3274:2340":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:5213:8952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:4704:7773":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:3951:4395":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"6:1558:8491":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:11615:4465":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:10667:4402":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:5375:9039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:7295:5615":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:7333:5617":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:5208:2320":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:16029:2154":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:3310:2445":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:4135:8766":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:49938:4721":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:24265:39372":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:3018:5773":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:6959:4350":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:51493:8177":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:46104:2401":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:586:8448":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:1680:8576":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:49832:4996":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:11199:6328":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:9718:4559":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:11477:4960":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:4890:7779":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:49435:4970":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:7117:2352":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:5034:2310":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:3341:4534":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:13746:7674":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:2816:5788":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:47069:8115":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:51220:4852":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:3981:8690":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:4218:8783":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:5360:5483":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:9574:5855":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"0:617:2562":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","NUM_SHARDS"],"kind":"constant"},"2:46408:4883":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:4485:8885":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:6219:5646":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"0:702:2688":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ThreadIndices"],"kind":"struct"},"1:12252:2295":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:994:5251":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:46423:5120":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:13205:7521":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:9088:47170":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:7216:5669":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"18:705:6890":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"18:867:5966":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:48657:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:13488:7589":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:5561:5496":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:15483:54159":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:3758:4791":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:5363:9034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:47076:2287":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:4538:8905":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"12:979:4505":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:3323:3431":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12598:7318":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"21:0:1554":{"crate_id":21,"path":["once_cell"],"kind":"module"},"2:46553:5058":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"0:181:1705":{"crate_id":0,"path":["crossbeam_utils","atomic","consume","AtomicConsume"],"kind":"trait"},"9:749:5283":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:1011:3627":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:1132:4342":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:8680:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"18:645:5972":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:1721:8600":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:14804:8257":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:15975:12546":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:13788:7687":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"12:750:3627":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:4921:2327":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:13810:7692":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:5719:4355":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:13978:7734":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:5373:4565":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:8362:9301":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"5:6688:4069":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:11015:7077":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:50274:5010":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:5975:5639":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:1606:8521":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:10420:5896":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:47854:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:13582:7615":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7119:5528":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:4823:7777":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:48375:3380":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:1526:8478":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:47085:8160":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:4402:8849":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:10377:8302":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:1446:4496":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:49850:4998":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:7792:4490":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:12247:7245":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"5:7212:4394":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:4008:6914":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"5:8138:5253":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:14643:58207":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:533:6536":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:3275:2323":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:601:8456":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:5423:9061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:53550:6486":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"0:700:2639":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","current_index"],"kind":"function"},"17:10081:5836":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:13986:7737":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"5:5536:2282":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:48928:4463":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:6685:4328":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:5833:5145":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:4048:8722":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:32379:1710":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:11668:3627":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:13318:7543":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:9999:660":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:11005:4326":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:8548:2446":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:11218:3628":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:9070:2290":{"crate_id":1,"path":["std","sync","poison","LockResult"],"kind":"typedef"},"17:1236:6913":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:7894:5634":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:25323:4932":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:11674:4468":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:14633:3911":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"12:895:5404":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:14821:4489":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:4157:5923":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:11809:7174":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:53437:4871":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:13842:7707":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:5452:9069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:5436:9065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:52342:4855":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:4005:8704":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:1149:8240":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:24132:6366":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:12405:6138":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:4684:3910":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"12:1784:6059":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:10427:6107":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:11665:6457":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:11932:7190":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:5472:5491":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:3648:3927":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:527:8414":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"7:38:44874":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:13568:8249":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:22684:59485":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:7041:979":{"crate_id":1,"path":["std","panic"],"kind":"module"},"5:1618:3148":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:51792:4849":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11232:4379":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:13540:7606":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:15019:4487":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:52259:4870":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:12327:7257":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:14952:6114":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:53398:4851":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:7467:5599":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:8646:2284":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4270:3124":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"12:856:4497":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:49467:4973":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:8639:2283":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:10379:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:7255:8251":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:9956:1592":{"crate_id":2,"path":["core","sync","atomic","spin_loop_hint"],"kind":"function"},"6:5579:9114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:10655:3588":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:49680:4961":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"0:159:1915":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","AtomicUnit"],"kind":"struct"},"1:4639:3649":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"12:933:4501":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"9:1056:5341":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"0:241:2019":{"crate_id":0,"path":["crossbeam_utils","backoff","YIELD_LIMIT"],"kind":"constant"},"6:4332:8815":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:13306:7540":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:12124:4413":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:11337:5848":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:24953:5034":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:22661:59487":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:6132:9186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"12:952:4503":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:7629:4481":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:9689:61519":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:13258:7533":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:2508:3462":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:6077:9173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"0:184:1968":{"crate_id":0,"path":["crossbeam_utils","atomic","consume","impl_consume"],"kind":"macro"},"2:24749:3106":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:15331:4382":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"12:880:4395":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:5753:5507":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:1041:2824":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:10383:3378":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:13898:7715":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:12431:7293":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4346:8821":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4277:8787":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:10458:6950":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:47701:2942":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:1441:4506":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:4400:4552":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"12:869:4394":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:4748:3915":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:6257:5182":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:47624:3147":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:923:5250":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"0:727:2478":{"crate_id":0,"path":["crossbeam_utils","sync","wait_group","WaitGroup"],"kind":"struct"},"2:51817:4831":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:10224:7012":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:46641:8156":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:5647:4371":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:49961:4724":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:8523:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:6265:9261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:3351:4539":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"18:858:5965":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:8463:5178":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:16025:2150":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:5407:5485":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:3939:7760":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:53476:4836":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"0:260:1700":{"crate_id":0,"path":["crossbeam_utils","atomic","seq_lock"],"kind":"module"},"17:9600:61520":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:3559:2405":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:5183:8935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"12:472:61504":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:5707:5501":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:12632:7331":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:11120:3916":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:13924:7724":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:5029:7783":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:14239:3939":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:3336:4397":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:23217:4829":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:6437:4345":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:13240:7525":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:3297:3072":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:571:8439":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:4088:8741":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:47787:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:11143:3920":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:16009:2136":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:6136:5637":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:1195:61466":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11572:7126":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"0:4:1360":{"crate_id":0,"path":["crossbeam_utils","primitive","sync"],"kind":"module"},"5:8121:5252":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:4734:7774":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:23162:4326":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:9829:330":{"crate_id":2,"path":["core","sync","atomic"],"kind":"module"},"2:13897:59258":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:50302:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:49780:4994":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:11130:3917":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:48361:3377":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:1531:8480":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"21:77:3649":{"crate_id":21,"path":["once_cell","imp","Guard"],"kind":"struct"},"2:51691:4854":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:23550:17286":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:5960:5516":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"14:244:8035":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:4321:8810":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:14550:4393":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:14:1833":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:46847:4689":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"12:843:4496":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:10179:7009":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:48618:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"16:6072:5616":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:5237:8961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:3746:2404":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:11363:4956":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"0:797:2801":{"crate_id":0,"path":["crossbeam_utils","thread","SharedOption"],"kind":"typedef"},"6:6094:9175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:10975:7074":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:10001:47219":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:51126:8173":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:51738:4842":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"12:777:3148":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8839:2674":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"2:10391:3381":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:15072:6539":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:10584:5922":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:3375:5197":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:50167:8168":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:5741:4328":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:6668:9270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:24681:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:10677:4510":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:49457:4972":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"9:41:5331":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:11714:7146":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:4378:3148":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:11479:4351":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:5736:5504":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:3970:6061":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:11505:4962":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:15509:5443":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:11098:3913":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:1626:8535":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:24817:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:24148:6373":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:9332:5844":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:10858:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:10403:5863":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"0:729:2506":{"crate_id":0,"path":["crossbeam_utils","sync","wait_group","Inner"],"kind":"struct"},"12:2419:3091":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6152:5597":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:50133:4735":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:610:1391":{"crate_id":1,"path":["std","thread"],"kind":"module"},"16:4535:7769":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:11077:3946":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:7663:4483":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"18:791:5959":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:49990:4730":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:12182:7237":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:8963:3630":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:7158:5664":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:9594:6102":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:23850:4326":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:10389:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:2991:5783":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:12771:7087":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"18:637:6890":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:5416:9059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:52021:8181":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:5328:9013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:3362:4398":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:7264:5613":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:4020:8710":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:3396:4399":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:49822:4995":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:12815:4985":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:13780:7686":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:48612:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:6893:9281":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:4350:7763":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:3384:2383":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:10804:4524":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:13159:4723":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:6319:4584":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:10566:3110":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:3401:2386":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:2733:5521":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:13153:4722":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:4075:8735":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:6413:5431":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:53576:6479":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:6768:5810":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:7870:5604":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:13847:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:24115:4924":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:3218:5777":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:3368:2380":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:6208:5645":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:6424:5651":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:12287:7250":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"12:2404:61508":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:15130:4494":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:12875:4989":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:607:6911":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:9551:5887":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"0:177:1703":{"crate_id":0,"path":["crossbeam_utils","atomic","consume"],"kind":"module"},"2:3581:2397":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:4446:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:6706:59575":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"6:5308:8997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:24885:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:11406:7091":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:3264:5779":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:2433:8249":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"0:171:1773":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_store"],"kind":"function"},"1:10646:12542":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:5522:5494":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:7113:2350":{"crate_id":1,"path":["std","panic","catch_unwind"],"kind":"function"},"2:50007:4731":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:23020:4325":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:5500:4573":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:8475:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:12116:3627":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:10611:7026":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:47796:212":{"crate_id":2,"path":["core","sync","atomic","Ordering","SeqCst"],"kind":"foreign_type"},"17:12795:7356":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:51276:4873":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:46686:3916":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:46717:4672":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"12:2059:4397":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:48916:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:10661:12544":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:1472:4394":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:10377:5901":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:6577:5655":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:2912:5771":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:12038:4488":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"0:195:1596":{"crate_id":0,"path":["crossbeam_utils","cache_padded"],"kind":"module"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:3772:3628":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:4740:4822":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:51330:4865":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:4995:7782":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:13942:7730":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:52228:4867":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:13760:7680":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:8182:3944":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:11354:4567":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:50503:5020":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:14246:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:9210:47172":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:10592:2559":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:4732:56694":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:8263:3092":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:9839:5864":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:48946:6381":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:24317:5048":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:7649:4482":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:56460:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4081:8738":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:46002:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:15474:6393":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:13938:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:6807:5660":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:6459:4348":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:10322:3372":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:4955:7781":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:2458:6139":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:3376:2382":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:2484:47257":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:2395:8247":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:50154:4737":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:49762:4993":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:3714:7757":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:634:8474":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:23169:17267":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"14:189:8030":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:2200:6063":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:2751:4335":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:8908:2287":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:16011:2138":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:4670:3649":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"6:4410:8853":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:45892:2406":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:6021:5768":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:3197:1748":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:53652:8230":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:51917:8178":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:12926:4954":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:5111:2317":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:13620:7623":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:48190:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:3516:1821":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"6:1669:8568":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:24851:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:13134:4719":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:5981:4621":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:3396:2385":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:15216:4432":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:10827:5920":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:3406:2387":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:47812:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:13402:7566":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:5395:9047":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:32420:2341":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"17:12442:7295":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:7514:5618":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:12023:4487":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:16027:2152":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:12065:54291":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"5:1486:4509":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:3118:5785":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"12:1238:5415":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:1152:8242":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:23073:4816":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:5538:9088":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:15185:4430":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"0:799:2810":{"crate_id":0,"path":["crossbeam_utils","thread","scope"],"kind":"function"},"0:284:2434":{"crate_id":0,"path":["crossbeam_utils","atomic","seq_lock","SeqLockWriteGuard"],"kind":"struct"},"16:7843:5676":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:8973:2298":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:4666:3908":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:13933:7728":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:48938:6380":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:51865:4835":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:2843:5769":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"0:763:1391":{"crate_id":0,"path":["crossbeam_utils","thread"],"kind":"module"},"1:11150:3921":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:12168:7033":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:3920:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:10844:5864":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:9639:6207":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"5:2262:5219":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:11453:4391":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:13532:7603":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"14:11:8030":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:11365:4569":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:4051:4340":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:16008:2135":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:15498:5443":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:53351:4833":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:53504:6477":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:2456:6138":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:53561:6476":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13348:7554":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:5544:9089":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"9:686:5279":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"6:5402:9048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:13912:7722":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:10957:4447":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"5:3894:5210":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:6731:5807":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:8960:3629":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:8481:4414":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:48106:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"12:114:61503":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:7975:6090":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"2:11398:4957":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:9659:61514":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:32414:1711":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"9:963:5346":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:4607:3945":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:10620:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:56063:4795":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"5:3882:3930":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:5968:4620":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:15045:58209":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:13627:7625":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:4512:3936":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:4287:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"21:424:6309":{"crate_id":21,"path":["once_cell","race","OnceBool"],"kind":"struct"},"2:8438:4682":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:10477:5860":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:9340:1712":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:12685:7335":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:6464:5610":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:50494:5019":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:13272:7537":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:1544:8486":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:7342:5631":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:2397:2325":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:48731:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"0:135:1822":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","impl_arithmetic"],"kind":"macro"},"2:38951:3073":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13598:7618":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:7111:6073":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"17:12756:7346":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:12076:56354":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"2:3358:2378":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:8690:1593":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:3392:5786":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:5584:12547":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:1651:4509":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"12:1121:4507":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"12:1666:5425":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:10950:7072":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:11086:3911":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:49626:4987":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:10331:5864":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:23014:4323":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:12605:5095":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:10962:7073":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:3966:8683":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:6366:5432":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:5815:5510":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:11482:7110":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:10317:5842":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:10565:4326":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"5:3039:60183":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:12037:4976":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:15092:2479":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:11767:7159":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"0:855:2855":{"crate_id":0,"path":["crossbeam_utils","thread","ScopedThreadBuilder"],"kind":"struct"},"2:48627:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"16:7185:5666":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:10200:7010":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:50286:5011":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"18:152:53460":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:6117:9182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:2314:5902":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:4416:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:6999:5661":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:46778:4683":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:4300:3947":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"2:45864:2408":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:53691:8231":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:10988:7075":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:10266:5899":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:10435:7014":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4509:8892":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"12:1682:5426":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:16024:2149":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:49576:4957":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:51541:4874":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:11193:4376":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:11726:7149":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:11539:6329":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:6054:9172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:7453:6061":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:6911:9284":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:10372:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:22884:4812":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"0:0:1601":{"crate_id":0,"path":["crossbeam_utils"],"kind":"module"},"6:5226:8953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:11147:6325":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:48907:3590":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:5201:8948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"18:830:5963":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"12:2269:4507":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:47710:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:14000:7740":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:6111:9180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:13210:4726":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:565:8436":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:52685:4856":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:3960:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:10304:5839":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:10599:7025":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:1518:4503":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:1712:8594":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:9971:61511":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:1457:4508":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:3429:5523":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:8929:47166":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:8474:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:51769:4846":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"12:399:5418":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10095:5941":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:6937:4321":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:2194:2337":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:49608:4986":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:9896:61515":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:2162:4394":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:9063:2292":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"12:1162:5412":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:37731:3128":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:6583:4678":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:16002:2130":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:3883:8622":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:4142:8768":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:10826:4368":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:46835:4688":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:1157:12545":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:12610:7320":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:10117:5943":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:3194:4525":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:53515:6485":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:12725:7340":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:50294:5006":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:6150:9196":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:3987:8692":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:7932:6141":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:1488:4498":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:50266:5005":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:49138:5137":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:9461:4720":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10571:7023":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:16017:2142":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:5979:9126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"18:783:6890":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:11947:7194":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:51172:4872":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:6965:4680":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:16020:2145":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:13377:7561":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:50290:5012":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:2945:5794":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:7507:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:13422:4580":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:9848:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:46566:5059":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:11286:4954":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:7024:5817":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:10253:5900":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:11186:6326":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:11070:3944":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:50450:6137":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:1704:8593":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:11434:4585":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:5185:1708":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:4127:8762":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:5433:5487":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"0:3:1033":{"crate_id":0,"path":["crossbeam_utils","primitive"],"kind":"module"},"16:5314:6313":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:47718:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"18:745:61523":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:5930:4615":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:46583:5060":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:1215:5216":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:9404:6320":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:49375:4967":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:783:6106":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"6:5995:9138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:6238:5600":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:4386:7764":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:46392:4881":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:48891:3591":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:3365:5519":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:49726:4991":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:11970:7200":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:6672:2282":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:32580:59399":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"0:539:2549":{"crate_id":0,"path":["crossbeam_utils","sync","parker","PARKED"],"kind":"constant"},"2:50547:4078":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:3341:5196":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:3505:1970":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:46146:2317":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:47692:2361":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:46769:4676":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"0:153:1832":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","lock"],"kind":"function"},"6:4067:8730":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"21:279:2560":{"crate_id":21,"path":["once_cell","sync","Lazy"],"kind":"struct"},"17:12262:7248":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:9947:431":{"crate_id":2,"path":["core","sync","atomic","compiler_fence"],"kind":"function"},"17:10801:7062":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:4230:7761":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"12:2040:4394":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:11277:7084":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"9:776:5328":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:2269:3460":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:4448:7766":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:49365:4966":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:51243:4840":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:3372:2384":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:4315:8807":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:52181:4863":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:15229:4438":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:11598:4464":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:50055:4732":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"5:69:5177":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:53146:4864":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:24227:39371":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"18:713:3128":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:4474:8879":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"12:183:5420":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:12051:7212":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:15986:54151":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:23951:5031":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:9467:9754":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"0:277:1714":{"crate_id":0,"path":["crossbeam_utils","atomic","seq_lock","SeqLock"],"kind":"struct"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:3339:4533":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:14601:4526":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:16019:2144":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:5271:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:10673:47357":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:11243:3920":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:7378:5602":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:10149:6995":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:12302:3077":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:12221:7241":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:8250:3091":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:7332:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"18:897:5968":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46507:5118":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:6518:5653":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"18:621:3119":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"0:173:1776":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_swap"],"kind":"function"},"2:24302:5088":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:7642:5183":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:8003:4759":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:14242:3935":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"9:809:4463":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:12659:7333":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:894:2813":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:24613:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:3604:6920":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:49501:5062":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:47658:2360":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"6:5290:8985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:1727:8603":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:4852:7778":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:32239:5083":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:7406:5601":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:2183:4398":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:5785:4359":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:46878:3917":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:10052:7004":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:3431:2393":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:5653:4369":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"9:900:8400":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:13477:7585":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:46737:4674":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:46746:4675":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:47762:3627":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"5:1694:5214":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"21:380:6057":{"crate_id":21,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"2:47896:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:3048:6136":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:15970:6394":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:5595:5498":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:5346:5596":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:11794:7168":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:12480:7300":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"0:175:1805":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","atomic_compare_exchange_weak"],"kind":"function"},"17:10407:5897":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"9:1075:5349":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:8446:4395":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"17:9649:6991":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:23219:4816":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:51588:4862":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13506:7593":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:5408:5112":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:12234:7243":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:6014:5641":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"0:5:330":{"crate_id":0,"path":["crossbeam_utils","primitive","sync","atomic"],"kind":"module"},"2:52102:4875":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:10788:7060":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:5889:6071":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"1:16018:2143":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:12208:7240":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:5008:4373":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"1:9072:2293":{"crate_id":1,"path":["std","sync","poison","TryLockResult"],"kind":"typedef"},"17:11001:7076":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"15:269:5439":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:13973:8121":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"0:708:2698":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","Registration"],"kind":"struct"},"2:47103:8162":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"0:677:2477":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","ShardedLockWriteGuard"],"kind":"struct"},"2:48594:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"0:706:2695":{"crate_id":0,"path":["crossbeam_utils","sync","sharded_lock","THREAD_INDICES"],"kind":"static"},"2:53035:4844":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:12373:7281":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:56447:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:7824:6073":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:10502:7016":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:7236:5671":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:14588:8301":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:14936:6113":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:11993:7205":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:1551:8488":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:4356:8827":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:49558:3920":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:8488:2447":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:47778:3148":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:22616:3128":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:1507:4502":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"18:886:5967":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:6032:5527":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:12343:7262":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:5580:5497":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"4:0:2102":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:6853:9280":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:4515:5240":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:4471:3939":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:2754:5520":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:51619:4866":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:9296:6318":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:12203:4420":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"12:2066:4398":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:3800:7759":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:6949:5814":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:1597:3627":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"18:838:4722":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:48354:3378":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:4038:8719":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:7392:5603":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:12581:5132":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:56434:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:466:61507":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:2889:5789":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:2543:5858":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"14:0:2107":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:7205:5668":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:3104:4761":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:7615:4480":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:1576:8502":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"0:240:2018":{"crate_id":0,"path":["crossbeam_utils","backoff","SPIN_LIMIT"],"kind":"constant"},"1:10705:5225":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:46807:4685":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"12:162:5416":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"0:480:2470":{"crate_id":0,"path":["crossbeam_utils","sync","parker"],"kind":"module"},"16:6569:5803":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"9:469:6343":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:5285:8984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:5672:5500":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:51349:8175":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:3040:6134":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:46857:4690":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:4614:7770":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:11524:4453":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"21:237:2327":{"crate_id":21,"path":["once_cell","sync","OnceCell"],"kind":"struct"},"2:48022:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:10128:5944":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:11340:8271":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:2159:3148":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:12408:7292":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:9341:2362":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:8954:5854":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:12982:7409":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:2866:5770":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:12061:9380":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"6:4208:8782":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:11685:4469":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:15053:3076":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:47980:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:4032:4449":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:7804:5607":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:46370:8145":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:48899:6379":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:1482:4395":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"0:101:1704":{"crate_id":0,"path":["crossbeam_utils","atomic","atomic_cell","AtomicCell"],"kind":"struct"},"17:8849:5886":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:1607:3628":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:8027:3102":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"6:4532:8902":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13062:7470":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:10385:3379":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:3772:7758":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:6699:9169":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:4510:3935":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:50535:4338":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:6790:4345":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:24173:4919":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10814:5919":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:13520:7600":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:3440:2395":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:13446:7577":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:681:6912":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:13054:7468":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:1764:8615":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:4066:4339":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:11822:7178":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:4425:8857":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12582:7315":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:13154:7505":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:3896:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:2968:5772":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:11156:4374":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"2:13364:39611":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:57774:8238":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:47938:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:8379:5140":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:51412:4841":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:11835:7179":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"12:2045:4395":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:4741:3912":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"}},"external_crates":{"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"once_cell","html_root_url":null},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"}},"format_version":18}